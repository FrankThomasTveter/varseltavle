{"ast":null,"code":"import _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/SeriesCell.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CanvasGraph from './CanvasGraphComponent'; //\ttextAlign: \"center\",\n\nvar styles = function styles(theme) {\n  return {\n    pointer: {\n      textAlign: \"center\",\n      cursor: \"pointer\",\n      padding: 0,\n      overflow: 'hidden',\n      tableLayout: 'fixed'\n    },\n    nopointer: {\n      textAlign: \"center\",\n      padding: 0,\n      overflow: 'hidden',\n      tableLayout: 'fixed'\n    },\n    div: {\n      overflow: 'hidden',\n      tableLayout: 'fixed'\n    },\n    divTableCell: {\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    },\n    divTableCellCursor: {\n      cursor: \"pointer\",\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    }\n  };\n}; //\tpadding: \"0px\";\n//\ttextAlign: \"center\",\n\n\nfunction SeriesCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      onclick = props.onclick,\n      index = props.index,\n      rowindex = props.rowindex,\n      colwhere = props.colwhere,\n      rowwhere = props.rowwhere,\n      colkey = props.colkey,\n      rowkey = props.rowkey,\n      colvalues = props.colvalues,\n      rowval = props.rowval,\n      elements = props.elements,\n      range = props.range,\n      plan = props.plan,\n      key = props.key,\n      layout = props.layout,\n      other = _objectWithoutProperties(props, [\"classes\", \"state\", \"onclick\", \"index\", \"rowindex\", \"colwhere\", \"rowwhere\", \"colkey\", \"rowkey\", \"colvalues\", \"rowval\", \"elements\", \"range\", \"plan\", \"key\", \"layout\"]);\n\n  var style0 = {\n    height: plan.height + \"px\",\n    backgroundColor: '#FFF'\n  };\n  var style1 = {\n    height: plan.height + \"px\",\n    backgroundColor: '#EEE'\n  };\n\n  if (elements === undefined) {\n    if (rowindex % 2 === 1) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.divTableCell,\n        style: style1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.divTableCell,\n        style: style0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      });\n    }\n  }\n\n  ;\n  var info = state.Matrix.getInfo(state, elements); //var cnt=info.cnt;\n\n  var maxlev = info.maxlev; //var minlev=info.minlev;\n\n  var bgcolor = state.Colors.getLevelBgColor(maxlev);\n  var fgcolor = state.Colors.getLevelFgColor(maxlev); //console.log(\"SeriesCell:\",JSON.stringify(elements));\n  //console.log(\"SeriesCell:\",lev,cnt,JSON.stringify(range));\n  //console.log(\"Series Plan:\",JSON.stringify(plan));\n\n  var data = JSON.stringify({\n    rowkey: rowkey,\n    rowval: rowval,\n    colkey: colkey,\n    colvalues: colvalues,\n    index: index,\n    step: plan.step,\n    layout: layout\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: onclick !== undefined ? classes.divTableCellCursor : classes.divTableCell,\n    key: key,\n    style: {\n      color: fgcolor,\n      backgroundColor: bgcolor\n    },\n    onClick: onclick,\n    height: plan.height,\n    width: plan.width,\n    \"data-for\": \"cell\",\n    \"data-tip\": data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(CanvasGraph, Object.assign({}, other, {\n    state: state,\n    range: range,\n    colkey: colkey,\n    colvalues: colvalues,\n    index: index,\n    onclick: onclick,\n    elements: elements,\n    level: maxlev,\n    plan: plan,\n    fgcolor: fgcolor,\n    bgcolor: bgcolor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })));\n}\n\nSeriesCell.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SeriesCell);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/SeriesCell.js"],"names":["React","PropTypes","withStyles","CanvasGraph","styles","theme","pointer","textAlign","cursor","padding","overflow","tableLayout","nopointer","div","divTableCell","border","display","divTableCellCursor","SeriesCell","props","classes","state","onclick","index","rowindex","colwhere","rowwhere","colkey","rowkey","colvalues","rowval","elements","range","plan","key","layout","other","style0","height","backgroundColor","style1","undefined","info","Matrix","getInfo","maxlev","bgcolor","Colors","getLevelBgColor","fgcolor","getLevelFgColor","data","JSON","stringify","step","color","width","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CanvasGraph from './CanvasGraphComponent';\n\n//\ttextAlign: \"center\",\nconst styles = theme => ({\n    pointer: {\n\ttextAlign: \"center\",\n\tcursor:\"pointer\",\n\tpadding: 0,\n\toverflow: 'hidden',\n\ttableLayout: 'fixed',\n    },\n    nopointer: {\n\ttextAlign: \"center\",\n\tpadding: 0,\n\toverflow: 'hidden',\n\ttableLayout: 'fixed',\n    },\n    div: {\n\toverflow: 'hidden',\n\ttableLayout: 'fixed',\n    },\n    divTableCell:{\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableCellCursor:{\n\tcursor: \"pointer\",\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n});\n//\tpadding: \"0px\";\n//\ttextAlign: \"center\",\nfunction SeriesCell(props) {\n    const { classes,state,onclick,index,rowindex,\n\t    colwhere,rowwhere,colkey,rowkey,colvalues,rowval,\n\t    elements,range,plan,key,layout,...other } = props;\n\n    var style0={height:plan.height+\"px\",backgroundColor:'#FFF'};\n    var style1={height:plan.height+\"px\",backgroundColor:'#EEE'};\n    if (elements===undefined) {\n\tif (rowindex%2===1) {\n\t    return <div className={classes.divTableCell} style={style1}/>\n\t} else {\n\t    return <div className={classes.divTableCell} style={style0}/>\n\t}\n    };\n    var info=state.Matrix.getInfo(state,elements);\n    //var cnt=info.cnt;\n    var maxlev=info.maxlev;\n    //var minlev=info.minlev;\n    var bgcolor=state.Colors.getLevelBgColor(maxlev);\n    var fgcolor=state.Colors.getLevelFgColor(maxlev);\n    //console.log(\"SeriesCell:\",JSON.stringify(elements));\n    //console.log(\"SeriesCell:\",lev,cnt,JSON.stringify(range));\n    //console.log(\"Series Plan:\",JSON.stringify(plan));\n    var data=JSON.stringify({rowkey:rowkey,rowval:rowval,colkey:colkey,colvalues:colvalues,index:index,step:plan.step,layout:layout}); \n    return(\n\t    <div className={(onclick !== undefined?classes.divTableCellCursor:classes.divTableCell)} key={key}\n\t         style={{color:fgcolor,backgroundColor:bgcolor}} onClick={onclick} height={plan.height} width={plan.width}\n\t         data-for='cell' data-tip={data}>\n  \t       <CanvasGraph {...other} state={state} range={range} colkey={colkey} colvalues={colvalues} index={index}\n\t          onclick={onclick} elements={elements} level={maxlev} plan={plan} fgcolor={fgcolor} bgcolor={bgcolor}/>  \n\t     </div>\n    );\n}\n\n\n\nSeriesCell.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SeriesCell);\n"]},"metadata":{},"sourceType":"module"}