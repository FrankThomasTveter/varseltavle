{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/ListKeyComponent.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport SelectIcon from '@material-ui/icons/Done';\nimport TableIcon from '@material-ui/icons/Apps';\nimport OtherFullIcon from '@material-ui/icons/HourglassFull';\nimport OtherEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport TrashFullIcon from '@material-ui/icons/Delete';\nimport TrashEmptyIcon from '@material-ui/icons/DeleteOutline';\nimport TrashIgnoreIcon from '@material-ui/icons/DeleteForever';\n\nvar styles = function styles(theme) {\n  return {\n    key: {\n      display: 'inline-block',\n      marginRight: 'auto'\n    },\n    selectchip: {\n      margin: theme.spacing(0),\n      cursor: \"pointer\",\n      color: \"red\",\n      borderColor: \"gray\"\n    },\n    tablechip: {\n      margin: theme.spacing(0),\n      cursor: \"pointer\",\n      color: \"green\",\n      borderColor: \"gray\"\n    },\n    restchip: {\n      margin: theme.spacing(0),\n      cursor: \"pointer\",\n      color: \"blue\",\n      borderColor: \"gray\"\n    },\n    voidchip: {\n      margin: theme.spacing(0),\n      cursor: \"pointer\",\n      color: \"red\",\n      borderColor: \"gray\"\n    },\n    trashchip: {\n      margin: theme.spacing(0),\n      cursor: \"pointer\",\n      color: \"gray\",\n      borderColor: \"gray\"\n    },\n    emptychip: {\n      margin: theme.spacing(0),\n      cursor: \"pointer\",\n      color: \"gray\",\n      borderColor: \"gray\"\n    },\n    ignorechip: {\n      margin: theme.spacing(0),\n      cursor: \"pointer\",\n      color: \"gray\",\n      borderColor: \"gray\"\n    },\n    othchip: {\n      margin: theme.spacing(0),\n      color: \"red\",\n      borderColor: \"gray\"\n    },\n    selectchipvisible: {\n      margin: theme.spacing(0),\n      cursor: \"pointer\",\n      color: \"red\",\n      borderColor: \"blue\"\n    },\n    tablechipvisible: {\n      margin: theme.spacing(0),\n      cursor: \"pointer\",\n      color: \"green\",\n      borderColor: \"blue\"\n    },\n    restchipvisible: {\n      margin: theme.spacing(0),\n      cursor: \"pointer\",\n      color: \"blue\",\n      borderColor: \"blue\"\n    },\n    voidchipvisible: {\n      margin: theme.spacing(0),\n      cursor: \"pointer\",\n      color: \"blue\",\n      borderColor: \"blue\"\n    },\n    trashchipvisible: {\n      margin: theme.spacing(0),\n      cursor: \"pointer\",\n      color: \"gray\",\n      borderColor: \"blue\"\n    },\n    emptychipvisible: {\n      margin: theme.spacing(0),\n      cursor: \"pointer\",\n      color: \"gray\",\n      borderColor: \"blue\"\n    },\n    ignorechipvisible: {\n      margin: theme.spacing(0),\n      cursor: \"pointer\",\n      color: \"gray\",\n      borderColor: \"blue\"\n    },\n    othchipvisible: {\n      margin: theme.spacing(0),\n      color: \"red\",\n      borderColor: \"blue\"\n    }\n  };\n};\n\nfunction getChipClass(classes, keytype, keyactive, visible) {\n  var suff = \"\";\n\n  if (visible) {\n    suff = \"visible\";\n  }\n\n  if (keytype === \"select\") {\n    if (keyactive) {\n      return classes[\"selectchip\" + suff];\n    } else {\n      return classes[\"trashchip\" + suff];\n    }\n\n    ;\n  } else if (keytype === \"otherTable\") {\n    return classes[\"tablechip\" + suff];\n  } else if (keytype === \"otherRest\") {\n    return classes[\"restchip\" + suff];\n  } else if (keytype === \"otherIgnore\") {\n    return classes[\"voidchip\" + suff];\n  } else if (keytype === \"trashFound\") {\n    return classes[\"trashchip\" + suff];\n  } else if (keytype === \"trashRest\") {\n    return classes[\"emptychip\" + suff];\n  } else if (keytype === \"trashIgnore\") {\n    return classes[\"ignorechip\" + suff];\n  } else {\n    return classes[\"othchip\" + suff];\n  }\n\n  ;\n}\n\n;\n\nfunction getChipIcon(keytype) {\n  if (keytype === \"select\") {\n    return /*#__PURE__*/React.createElement(SelectIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    });\n  } else if (keytype === \"otherTable\") {\n    return /*#__PURE__*/React.createElement(TableIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    });\n  } else if (keytype === \"otherRest\") {\n    return /*#__PURE__*/React.createElement(OtherFullIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }); //return null;\n  } else if (keytype === \"otherIgnore\") {\n    return /*#__PURE__*/React.createElement(OtherEmptyIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    });\n  } else if (keytype === \"trashFound\") {\n    return /*#__PURE__*/React.createElement(TrashFullIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    });\n  } else if (keytype === \"trashRest\") {\n    return /*#__PURE__*/React.createElement(TrashEmptyIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    });\n  } else if (keytype === \"trashIgnore\") {\n    return /*#__PURE__*/React.createElement(TrashIgnoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    });\n  } else {\n    return null;\n  }\n\n  ;\n}\n\nvar ListKey = /*#__PURE__*/function (_Component) {\n  _inherits(ListKey, _Component);\n\n  var _super = _createSuper(ListKey);\n\n  function ListKey() {\n    _classCallCheck(this, ListKey);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ListKey, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state,\n          keyitem = _this$props.keyitem,\n          keytype = _this$props.keytype,\n          keyactive = _this$props.keyactive; //console.log(\"Rendering ListKey...\",keyitem,keytype,keyactive);\n\n      var visible = state.Path.isVisible(state, keyitem);\n      var chip = getChipClass(classes, keytype, keyactive, visible);\n      var icon = getChipIcon(keytype);\n\n      var onclick = function onclick() {\n        //console.log(\"Chip:\",keyitem,keytype,keyactive);\n        state.Path.toggleVisibleKeys(state, keyitem);\n      };\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(Chip, {\n        icon: icon,\n        label: keyitem,\n        onClick: onclick,\n        className: chip,\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return ListKey;\n}(Component);\n\nListKey.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ListKey);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/ListKeyComponent.js"],"names":["React","Component","PropTypes","withStyles","Chip","SelectIcon","TableIcon","OtherFullIcon","OtherEmptyIcon","TrashFullIcon","TrashEmptyIcon","TrashIgnoreIcon","styles","theme","key","display","marginRight","selectchip","margin","spacing","cursor","color","borderColor","tablechip","restchip","voidchip","trashchip","emptychip","ignorechip","othchip","selectchipvisible","tablechipvisible","restchipvisible","voidchipvisible","trashchipvisible","emptychipvisible","ignorechipvisible","othchipvisible","getChipClass","classes","keytype","keyactive","visible","suff","getChipIcon","ListKey","props","state","keyitem","Path","isVisible","chip","icon","onclick","toggleVisibleKeys","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport SelectIcon from '@material-ui/icons/Done';\nimport TableIcon from '@material-ui/icons/Apps';\nimport OtherFullIcon from '@material-ui/icons/HourglassFull';\nimport OtherEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport TrashFullIcon from '@material-ui/icons/Delete';\nimport TrashEmptyIcon from '@material-ui/icons/DeleteOutline';\nimport TrashIgnoreIcon from '@material-ui/icons/DeleteForever';\n\nconst styles = theme => ({\n    key: {\n\tdisplay: 'inline-block',\n        marginRight: 'auto',\n    },\n    selectchip: {\n        margin: theme.spacing(0),\n\tcursor: \"pointer\",\n        color:\"red\",\n        borderColor:\"gray\",\n    },\n    tablechip: {\n        margin: theme.spacing(0),\n\tcursor: \"pointer\",\n        color:\"green\",\n        borderColor:\"gray\",\n    },\n    restchip: {\n        margin: theme.spacing(0),\n\tcursor: \"pointer\",\n        color:\"blue\",\n        borderColor:\"gray\",\n    },\n    voidchip: {\n        margin: theme.spacing(0),\n\tcursor: \"pointer\",\n        color:\"red\",\n        borderColor:\"gray\",\n    },\n    trashchip: {\n        margin: theme.spacing(0),\n\tcursor: \"pointer\",\n        color:\"gray\",\n        borderColor:\"gray\",\n    },\n    emptychip: {\n        margin: theme.spacing(0),\n\tcursor: \"pointer\",\n        color:\"gray\",\n        borderColor:\"gray\",\n    },\n    ignorechip: {\n        margin: theme.spacing(0),\n\tcursor: \"pointer\",\n        color:\"gray\",\n        borderColor:\"gray\",\n    },\n    othchip: {\n        margin: theme.spacing(0),\n        color:\"red\",\n        borderColor:\"gray\",\n    },\n    selectchipvisible: {\n        margin: theme.spacing(0),\n\tcursor: \"pointer\",\n        color:\"red\",\n        borderColor:\"blue\",\n    },\n    tablechipvisible: {\n        margin: theme.spacing(0),\n\tcursor: \"pointer\",\n        color:\"green\",\n        borderColor:\"blue\",\n    },\n    restchipvisible: {\n        margin: theme.spacing(0),\n\tcursor: \"pointer\",\n        color:\"blue\",\n        borderColor:\"blue\",\n    },\n    voidchipvisible: {\n        margin: theme.spacing(0),\n\tcursor: \"pointer\",\n        color:\"blue\",\n        borderColor:\"blue\",\n    },\n    trashchipvisible: {\n        margin: theme.spacing(0),\n\tcursor: \"pointer\",\n        color:\"gray\",\n        borderColor:\"blue\",\n    },\n    emptychipvisible: {\n        margin: theme.spacing(0),\n\tcursor: \"pointer\",\n        color:\"gray\",\n        borderColor:\"blue\",\n    },\n    ignorechipvisible: {\n        margin: theme.spacing(0),\n\tcursor: \"pointer\",\n        color:\"gray\",\n        borderColor:\"blue\",\n    },\n    othchipvisible: {\n        margin: theme.spacing(0),\n        color:\"red\",\n        borderColor:\"blue\",\n  },\n});\nfunction getChipClass(classes,keytype,keyactive,visible) {\n    var suff=\"\";\n    if (visible) {suff=\"visible\";}\n    if (keytype === \"select\") {\n\tif (keyactive) {\n\t    return classes[\"selectchip\"+suff];\n\t} else {\n\t    return classes[\"trashchip\"+suff];\n\t};\n    } else if (keytype === \"otherTable\") {\n\treturn classes[\"tablechip\"+suff];\n    } else if (keytype === \"otherRest\") {\n\treturn classes[\"restchip\"+suff];\n    } else if (keytype === \"otherIgnore\") {\n\treturn classes[\"voidchip\"+suff];\n    } else if (keytype === \"trashFound\") {\n\treturn classes[\"trashchip\"+suff];\n    } else if (keytype === \"trashRest\") {\n\treturn classes[\"emptychip\"+suff];\n    } else if (keytype === \"trashIgnore\") {\n\treturn classes[\"ignorechip\"+suff];\n    } else  {\n\treturn classes[\"othchip\"+suff];\n    };\n};\nfunction getChipIcon(keytype) {\n    if (keytype === \"select\") {\n\treturn <SelectIcon/>;\n    } else if (keytype === \"otherTable\") {\n\treturn <TableIcon/>;\n    } else if (keytype === \"otherRest\") {\n\treturn <OtherFullIcon/>;\n\t//return null;\n    } else if (keytype === \"otherIgnore\") {\n\treturn <OtherEmptyIcon/>;\n    } else if (keytype === \"trashFound\") {\n\treturn <TrashFullIcon/>;\n    } else if (keytype === \"trashRest\") {\n\treturn <TrashEmptyIcon/>;\n    } else if (keytype === \"trashIgnore\") {\n\treturn <TrashIgnoreIcon/>;\n    } else  {\n\treturn null;\n    };\n}\n\nclass ListKey extends Component {\n    render() {\n        const { classes, state, keyitem, keytype, keyactive } = this.props;\n\t//console.log(\"Rendering ListKey...\",keyitem,keytype,keyactive);\n\tvar visible=state.Path.isVisible(state,keyitem);\n\tvar chip=getChipClass(classes,keytype,keyactive,visible);\n\tvar icon=getChipIcon(keytype);\n\tvar onclick=() => {\n\t    //console.log(\"Chip:\",keyitem,keytype,keyactive);\n\t    state.Path.toggleVisibleKeys(state,keyitem);\n\t};\n\treturn (\n\t\t<div className={classes.key}>\n\t \t   <Chip\n\t              icon={icon}\n\t              label={keyitem}\n\t              onClick={onclick}\n\t              className={chip}\n\t              variant=\"outlined\"\n\t\t/>\n\t\t</div>\n\t);\n    }\n}\n\nListKey.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ListKey);\n"]},"metadata":{},"sourceType":"module"}