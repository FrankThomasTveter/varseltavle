{"ast":null,"code":"//console.log(\"Loading NavigateLib.js\");\nfunction Navigate() {\n  this.history = {\n    pos: 0,\n    // position of next snapshot\n    track: []\n  };\n  this.home = undefined;\n  this.rank = {}; // key rank\n\n  this.trash = {}; // key trash\n\n  this.maxStore = 1000; // max number of states stored\n\n  this.reset = function (state) {\n    // store state\n    state.Navigate.history = {\n      pos: 0,\n      track: []\n    };\n    this.store(state);\n  };\n\n  this.store = function (state) {\n    // store state\n    var snapshot = state.Path.getSnapshot(state); // remove old data...\n\n    if (state.Navigate.history.track.length > state.Navigate.history.pos + 1) {\n      state.Navigate.history.track.length = state.Navigate.history.pos + 1;\n    } else if (state.Navigate.history.track.length > this.maxStore) {\n      var keep = this.maxStore;\n      state.Navigate.history.track = state.Navigate.history.track.splice(-keep, keep);\n    }\n\n    ;\n\n    if (state.Navigate.history.track.length > 0) {\n      var old = state.Navigate.history.track[state.Navigate.history.track.length - 1];\n\n      if (JSON.stringify(snapshot) === JSON.stringify(old)) {\n        //console.log(\"History:\",JSON.stringify(snapshot),JSON.stringify(state.Navigate.history.track));\n        console.log(\"Ignoring old image.\");\n        return false;\n      }\n    }\n\n    state.Navigate.history.track.push(snapshot);\n    state.Navigate.history.pos = state.Navigate.history.track.length - 1; //console.log(\">>>>>> Stored state...\",JSON.stringify(state.Navigate.history),\n    //\t    this.canUndo(state),this.canRedo(state),\n    //\t    state.Navigate.history.pos,state.Navigate.history.track.length);\n    //console.log(\">>>>> stored state.\",this.snapshotToString(state,snapshot));\n    //this.printSnapshot(state);\n\n    this.refreshHistory(state);\n  };\n\n  this.refreshHistory = function (state) {\n    if (state.React.Config !== undefined) {\n      state.React.Config.show();\n    }\n\n    ;\n  };\n\n  this.canUndoHistory = function (state) {\n    return state.Navigate.history.pos;\n  };\n\n  this.undoHistory = function (state) {\n    //console.log(\">>>>>> Undo:\",this.canUndo(state));\n    state.Navigate.history.pos = state.Navigate.history.pos - 1;\n    var snapshot = state.Navigate.history.track[state.Navigate.history.pos]; //console.log(\"Setting snapshot:\",this.snapshotToString(state,snapshot));\n\n    state.Path.setSnapshot(state, snapshot);\n    this.refreshHistory(state);\n    state.Path.setMapTitle(state, \"\");\n    state.Show.show(state);\n  };\n\n  this.canUndo = function (state) {\n    return this.canUndoHistory(state);\n  };\n\n  this.undo = function (state) {\n    //console.log(\">>>>>> Undo:\",this.canUndo(state));\n    if (this.canUndoHistory(state)) {\n      this.undoHistory(state);\n    }\n\n    ;\n  };\n\n  this.canRedoPath = function (state) {\n    return state.Path.keys.path.length > 0;\n  };\n\n  this.redoPath = function (state) {\n    //console.log(\">>>>>> Undo:\",this.canUndo(state));\n    var len = state.Path.keys.path.length; //console.log(\"Undoing Path:\",len,JSON.stringify(state.Path.keys.path));\n\n    if (len > 0) {\n      var key = state.Path.keys.path[len - 1]; //console.log(\"Undoing:\",key);\n\n      this.onClickPath(state, \"path\", key);\n    }\n  };\n\n  this.canRedoHistory = function (state) {\n    return state.Navigate.history.pos < state.Navigate.history.track.length - 1;\n  };\n\n  this.canRedo = function (state) {\n    return this.canRedoHistory(state) || this.canRedoPath(state);\n  };\n\n  this.redoHistory = function (state) {\n    //console.log(\">>>>>> Redo:\",this.canRedo(state),state.Navigate.history.pos,JSON.stringify(state.Navigate.history.track));\n    state.Navigate.history.pos = state.Navigate.history.pos + 1;\n    var snapshot = state.Navigate.history.track[state.Navigate.history.pos]; //console.log(\"Setting snapshot:\",this.snapshotToString(state,snapshot));\n\n    state.Path.setSnapshot(state, snapshot);\n    this.refreshHistory(state);\n    state.Path.setMapTitle(state, \"\");\n    state.Show.show(state);\n  };\n\n  this.redo = function (state) {\n    //console.log(\">>>>>> Redo:\",this.canRedo(state),state.Navigate.history.pos,JSON.stringify(state.Navigate.history.track));\n    if (this.canRedoHistory(state)) {\n      this.redoHistory(state);\n    } else if (this.canRedoPath(state)) {\n      this.redoPath(state);\n    }\n\n    ;\n  };\n\n  this.onClickTablePath = function (state, skey, tkey) {\n    var reload = false;\n    var sid = state.Path.keys.other.indexOf(skey);\n    var tid = state.Path.keys.other.indexOf(tkey); //console.log(\"Table path: Sid:\",sid,\" tid:\",tid,skey,tkey);\n\n    if (sid !== -1 && tid !== -1) {\n      if (sid > tid) {\n        var src = state.Path.keys.other.splice(sid, 1); // remove from path\n\n        var trg = state.Path.keys.other.splice(tid, 1); // remove from path\n\n        state.Utils.pushKey(state.Path.keys.other, src, tid);\n        state.Utils.pushKey(state.Path.keys.other, trg, sid); //state.Utils.spliceArray(state.Path.keys.other,tid,0,src); // first position (table)\n        //state.Utils.spliceArray(state.Path.keys.other,sid,0,trg); // first position (table)\n\n        state.Path.exportAllKeys(state);\n        reload = true;\n      }\n    }\n\n    state.Html.setFootnote(state, \"Extracting data.\");\n    state.Html.setProgress(state, true);\n    state.Navigate.store(state);\n    state.Path.setMapTitle(state, \"\");\n    state.Show.show(state, reload);\n  };\n\n  this.onClickRestValue = function (state, val, key, where) {\n    //console.log(\"onClickRestValue:\",val,key,JSON.stringify(state.Path.keys));\n    if (state.Auto.selectTableKey(state, key, val, where, 1, true)) {\n      state.Html.setFootnote(state, \"Extracting data.\");\n      state.Html.setProgress(state, true);\n      state.Navigate.store(state);\n      state.Path.setMapTitle(state, \"\");\n      state.Show.show(state);\n    }\n\n    ; //console.log(\"onClickRestValue done:\",val,key,JSON.stringify(state.Path.keys));\n  };\n\n  this.onClickPath = function (state, ttyp, tkey) {\n    var reload = false; // matrix changed?\n\n    var tid, tin, sin, src, tib; //console.log(\"Clicked:\",ttyp,tkey,JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other));\n\n    if (ttyp === \"path\") {\n      // path -> table\n      tid = state.Path.keys.path.indexOf(tkey);\n\n      if (tid !== -1) {\n        var range = state.Path.getRange(state, tkey);\n        src = state.Path.keys.path.splice(tid, 1); // remove from path\n\n        if (range === undefined) {\n          // remove if this is a range (lat/lon)\n          state.Utils.pushKey(state.Path.keys.other, src, 1);\n        }\n\n        ; //state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\n        state.Path.cleanSelect(state);\n        state.Auto.setKeyNumber(state); //state.Auto.reorderKeys(state);\n\n        state.Navigate.store(state);\n        reload = true;\n      }\n    } else if (ttyp === \"table\") {\n      // other -> table\n      tid = state.Path.keys.other.indexOf(tkey); //console.log(\"Tin:\",tin,\" tid:\",tid);\n\n      if (tid !== -1) {\n        src = state.Path.keys.other.splice(tid, 1); // remove from path\n\n        state.Utils.pushKey(state.Path.keys.other, src, 0); //state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\n        state.Auto.reorderKeys(state);\n        state.Path.exportAllKeys(state);\n        state.Navigate.store(state);\n        reload = true;\n      }\n    } else if (ttyp === \"rest\") {\n      // rest -> table\n      tid = state.Path.keys.other.indexOf(tkey);\n\n      if (tid !== -1) {\n        src = state.Path.keys.other.splice(tid, 1); // remove from path\n\n        state.Utils.pushKey(state.Path.keys.trash, src); //state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\n        state.Auto.reorderKeys(state);\n        state.Navigate.store(state);\n        reload = true;\n      }\n\n      ;\n    } else if (ttyp === \"trash\") {\n      tid = state.Path.keys.trash.indexOf(tkey);\n      tin = state.Path.keys.other.indexOf(tkey);\n      sin = state.Path.keys.path.indexOf(tkey);\n      tib = state.Path.other.table.indexOf(tkey);\n      console.log(\"Trashing start:\", JSON.stringify(state.Path.keys.trash), tkey, tid, tin, sin, tib);\n\n      if (tid !== -1) {\n        // trash => other\n        src = state.Path.keys.trash.splice(tid, 1);\n        state.Utils.pushKey(state.Path.keys.other, src); //if ( tin === -1 ) {\n        //    state.Path.keys.other=state.Path.keys.other.concat(src);  // last position\n        //};\n      } else if (tin !== -1 && tib !== -1) {\n        // table => trash\n        src = state.Path.keys.other.splice(tin, 1);\n        state.Utils.pushKey(state.Path.keys.trash, src);\n        state.Auto.reorderKeys(state);\n        reload = true; //state.Path.keys.trash=state.Path.keys.trash.concat(src);            // last position\n      } else if (sin !== -1 && tin === -1) {\n        // select => other\n        state.Utils.pushKey(state.Path.keys.other, tkey); //state.Path.keys.other=state.Path.keys.other.concat(tkey); // last position\n      } else if (sin !== -1 && tin !== -1) {\n        // other => select\n        src = state.Path.keys.other.splice(tin, 1);\n      } else if (sin === -1 && tin !== -1) {\n        // other => trash\n        src = state.Path.keys.other.splice(tin, 1);\n        state.Utils.pushKey(state.Path.keys.trash, src); //state.Path.keys.trash=state.Path.keys.trash.concat(src);            // last position\n      }\n\n      ;\n      state.Path.exportAllKeys(state);\n      state.Navigate.store(state); //console.log(\"Trashed:\",JSON.stringify(state.Path.keys.trash),JSON.stringify(state.Path.keys));\n    }\n\n    state.Html.setFootnote(state, \"Extracting data.\");\n    state.Html.setProgress(state, true); //console.log(\"Showing:\",JSON.stringify(state.Path.other));\n\n    state.Path.setMapTitle(state, \"\");\n    state.Show.show(state, reload);\n  };\n\n  this.onClickAddOther = function (state, ttyp, tkey, active) {\n    // add key to other\n    var ntab = state.Path.other.table.length;\n    var reload = ntab !== 2; // matrix changed?\n\n    var tid, tin, sin, src; //console.log(\"Clicked:\",ttyp,tkey,JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other));\n    //ttyp \"select\", \"rest\", \"trash\"\n    //console.log(\"Adding start:\",tkey,JSON.stringify(state.Path.keys.trash),JSON.stringify(state.Path.keys));\n\n    tid = state.Path.keys.trash.indexOf(tkey);\n    tin = state.Path.keys.other.indexOf(tkey);\n    sin = state.Path.keys.path.indexOf(tkey);\n\n    if (tin === -1) {\n      // add if not already in state.Path.keys.other\n      if (tid !== -1) {\n        // trash => other\n        src = state.Path.keys.trash.splice(tid, 1);\n        state.Utils.pushKey(state.Path.keys.other, src); // last position\n\n        state.Path.exportAllKeys(state);\n        state.Auto.setKeyNumber(state); //if ( tin === -1 ) {\n        //    state.Path.keys.other=state.Path.keys.other.concat(src);  // last position\n        //};\n      } else if (sin !== -1) {\n        // select => other\n        state.Utils.pushKey(state.Path.keys.other, tkey); // last position\n        //state.Path.keys.other=state.Path.keys.other.concat(tkey); // last position\n\n        state.Path.exportAllKeys(state);\n        state.Auto.setKeyNumber(state);\n      } else {\n        // not in trash,select or other, how strange\n        console.log(\"Strange key:\", tkey, JSON.stringify(state.Path.keys.trash), JSON.stringify(state.Path.keys));\n      }\n\n      ;\n    } else {\n      // remove if in state.Path.keys.other\n      if (sin !== -1) {\n        // is already in selected list\n        src = state.Path.keys.other.splice(tin, 1);\n        state.Path.exportAllKeys(state);\n        state.Auto.setKeyNumber(state);\n      } else if (tid === -1) {\n        // move to trash if its not already there\n        src = state.Path.keys.other.splice(tin, 1);\n        state.Utils.pushKey(state.Path.keys.trash, src);\n        state.Path.exportAllKeys(state);\n        state.Auto.setKeyNumber(state);\n      } else {\n        // its already in trash, just delete it\n        src = state.Path.keys.other.splice(tin, 1);\n        state.Path.exportAllKeys(state);\n        state.Auto.setKeyNumber(state);\n      }\n    }\n\n    ;\n    state.Path.exportAllKeys(state);\n    state.Navigate.store(state); //console.log(\"Keys:\",reload,JSON.stringify(state.Path.keys));\n    //console.log(\"Trash:\",reload,JSON.stringify(state.Path.trash));\n    //console.log(\"Other:\",JSON.stringify(state.Path.other));\n\n    state.Path.setMapTitle(state, \"\");\n    state.Show.show(state, reload);\n  };\n\n  this.switchTableKey = function (state, key) {\n    var tid = state.Path.keys.other.indexOf(key);\n\n    if (tid !== -1) {\n      var src = state.Path.keys.other.splice(tid, 1); // remove from path\n\n      state.Path.keys.other = state.Path.keys.other.concat(src); // last position\n      //state.Utils.pushKey(state.Path.keys.other,src,0);       // first position\n      //state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\n      state.Path.exportAllKeys(state);\n      var colkey = state.Path.getColKey(state);\n      var rowkey = state.Path.getRowKey(state);\n      state.Navigate.store(state);\n      var reload = src[0] !== colkey && src[0] !== rowkey; //console.log(\"Switched:\",JSON.stringify(src[0]),colkey,rowkey,reload);\n\n      state.Path.setMapTitle(state, \"\");\n      state.Show.show(state, reload);\n    }\n  };\n\n  this.selectItemRange = function (state, colkey, rowkey, colrange, rowrange, colwhere, rowwhere, colcnt, rowcnt) {\n    var rank = state.Utils.cp(state.Path.keys.other);\n\n    if (this.setKeyRange(state, colkey, colrange, colwhere, colcnt)) {\n      this.rank[colkey] = state.Utils.cp(rank); //this.flip[colkey]=this.getFlip(state);\n\n      if (this.setKeyRange(state, rowkey, rowrange, rowwhere, rowcnt)) {\n        this.rank[rowkey] = state.Utils.cp(rank); //this.last.flip[rowkey]=this.getFlip(state);\n      } //this.trash[colkey]=state.Path.checkTableKeys(state);\n      //console.log(\"state.Path.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n\n    }\n\n    ; //console.log(\"Path:\",JSON.stringify(state.Path))\n\n    state.Html.setFootnote(state, \"Extracting data.\");\n    state.Html.setProgress(state, true);\n    state.Navigate.store(state);\n    state.Path.setMapTitle(state, \"\");\n    state.Show.show(state);\n  };\n\n  this.selectCustom = function (state, layout, colkey, rowkey, colval, rowval, colwhere, rowwhere, colcnt, rowcnt) {\n    //console.log(\"SelectCustom:\",layout,colkey,rowkey,colval,rowval,colwhere,rowwhere,colcnt,rowcnt);\n    var rank = state.Utils.cp(state.Path.keys.other);\n    var criteria = state.Custom.getCriteria(state, layout, colval, rowval);\n\n    if (criteria !== undefined) {\n      var changed = false;\n      var keys = Object.keys(criteria);\n      var lenk = keys.length;\n\n      for (var kk = 0; kk < lenk; kk++) {\n        var key = keys[kk];\n        var vals = criteria[key];\n\n        if (state.Auto.selectTableKey(state, key, vals, colwhere, colcnt)) {\n          //console.log(\"Selected:\",colkey,colval,JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other));\n          this.rank[key] = state.Utils.cp(rank);\n          changed = true;\n        }\n\n        ;\n      }\n\n      ;\n\n      if (changed) {\n        //this.trash[colkey]=state.Path.checkTableKeys(state);\n        //console.log(\"state.Path.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n        state.Html.setFootnote(state, \"Extracting data.\");\n        state.Html.setProgress(state, true);\n        state.Navigate.store(state);\n        state.Path.setMapTitle(state, \"\");\n        state.Show.show(state);\n      } //console.log(\"Found criteria:\",JSON.stringify(criteria));\n\n    } else {\n      this.selectItem(state, colkey, rowkey, colval, rowval, colwhere, rowwhere, colcnt, rowcnt);\n    }\n  };\n\n  this.selectItem = function (state, colkey, rowkey, colval, rowval, colwhere, rowwhere, colcnt, rowcnt) {\n    //console.log(\"Selectitem:\",colkey,rowkey,colval,rowval,colwhere,rowwhere,colcnt,rowcnt);\n    //var colkey=state.Path.getColKey(state);\n    //var rowkey=state.Path.getRowKey(state);\n    var rank = state.Utils.cp(state.Path.keys.other); //console.log(\"SelectItem:\",colkey,\"=\",colval,\"  \",rowkey,\"=\",rowval);\n\n    var changed = false;\n\n    if (state.Auto.selectTableKey(state, colkey, colval, colwhere, colcnt)) {\n      //console.log(\"Selected:\",colkey,colval,JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other));\n      this.rank[colkey] = state.Utils.cp(rank);\n      changed = true;\n    } else if (state.Path.tkeys < 2) {\n      state.Auto.reorderKeys(state);\n    } else {\n      console.log(\"Unable to select:\", colkey, state.Path.tkeys);\n    }\n\n    ;\n\n    if (state.Auto.selectTableKey(state, rowkey, rowval, rowwhere, rowcnt)) {\n      //console.log(\"Selected:\",rowkey,rowval,JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other));\n      this.rank[rowkey] = state.Utils.cp(rank);\n      changed = true;\n    } else if (state.Path.tkeys < 2) {\n      state.Auto.reorderKeys(state);\n    } else {\n      console.log(\"Unable to select:\", rowkey, state.Path.tkeys);\n    }\n\n    if (changed) {\n      //this.trash[colkey]=state.Path.checkTableKeys(state);\n      //console.log(\"state.Path.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n      state.Html.setFootnote(state, \"Extracting data.\");\n      state.Html.setProgress(state, true);\n      state.Navigate.store(state);\n      state.Path.setMapTitle(state, \"\");\n      state.Show.show(state);\n    } //console.log(\"Selectitem Done:\",rowwhere,colwhere);\n\n  };\n\n  this.setKeyRange = function (state, key, range, where, cnt) {\n    // keep abscissa\n    //console.log(\"Table.Selecting:\",key,\"=\",val,\", where=\",where);\n    state.Path.select.range[key] = [range.min, range.max];\n    state.Path.where[key] = where; //console.log(\"setKeyRange:\",key,JSON.stringify(state.Path.select.range[key]));\n\n    if (state.Utils.missing(state.Path.keys.path, key)) {\n      //console.log(\"Adding to path:\",key);\n      state.Utils.pushKey(state.Path.keys.path, key); //state.Path.keys.path=state.Path.keys.path.concat(key); // last path position\n    }\n\n    ;\n    return true;\n  };\n\n  this.selectKeyRange = function (state, key, range, where, cnt) {\n    var rank = state.Utils.cp(state.Path.keys.other);\n\n    if (this.setKeyRange(state, key, range, where, cnt)) {\n      this.rank[key] = state.Utils.cp(rank);\n    }\n\n    state.Html.setFootnote(state, \"Extracting data.\");\n    state.Html.setProgress(state, true);\n    state.Navigate.store(state);\n    state.Path.setMapTitle(state, \"\");\n    state.Show.show(state);\n  };\n\n  this.selectKey = function (state, key, val, where, cnt) {\n    var rank = state.Utils.cp(state.Path.keys.other); //console.log(\"SelecRow: rowkey=\",key,\" val=\",val);\n    //console.log(\"SelectKey:\",key,val,where,cnt);\n\n    if (state.Auto.selectTableKey(state, key, val, where, cnt)) {\n      this.rank[key] = rank; //this.trash[key]=state.Path.checkTableKeys(state);\n      //console.log(\"state.Path.checkTableKeys Done.\",rowkey,JSON.stringify(this.trash[key]));\n\n      state.Html.setFootnote(state, \"Extracting data.\");\n      state.Html.setProgress(state, true);\n      state.Navigate.store(state);\n      state.Path.setMapTitle(state, \"\");\n      state.Show.show(state);\n    } else if (state.Path.tkeys < 2) {\n      state.Auto.reorderKeys(state);\n    } else {\n      console.log(\"Unable to select:\", key, state.Path.tkeys);\n    } //console.log(\"Finally:\",JSON.stringify(state.Path.keys.other));\n\n  };\n\n  this.snapshotToString = function (state, snapshot) {\n    return \"Snapshot: \" + JSON.stringify(snapshot.keys.path);\n  };\n\n  this.printSnapshot = function (state) {\n    var lenv = state.Navigate.history.track.length;\n\n    for (var ii = 0; ii < lenv; ii++) {\n      var snapshot = state.Navigate.history.track[ii];\n\n      if (ii === state.Navigate.history.pos) {\n        console.log(\"@@@@\", ii, \" => \", this.snapshotToString(state, snapshot));\n      } else {\n        console.log(\"    \", ii, \" => \", this.snapshotToString(state, snapshot));\n      }\n    }\n\n    ;\n  };\n}\n\n;\nexport default Navigate;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/NavigateLib.js"],"names":["Navigate","history","pos","track","home","undefined","rank","trash","maxStore","reset","state","store","snapshot","Path","getSnapshot","length","keep","splice","old","JSON","stringify","console","log","push","refreshHistory","React","Config","show","canUndoHistory","undoHistory","setSnapshot","setMapTitle","Show","canUndo","undo","canRedoPath","keys","path","redoPath","len","key","onClickPath","canRedoHistory","canRedo","redoHistory","redo","onClickTablePath","skey","tkey","reload","sid","other","indexOf","tid","src","trg","Utils","pushKey","exportAllKeys","Html","setFootnote","setProgress","onClickRestValue","val","where","Auto","selectTableKey","ttyp","tin","sin","tib","range","getRange","cleanSelect","setKeyNumber","reorderKeys","table","onClickAddOther","active","ntab","switchTableKey","concat","colkey","getColKey","rowkey","getRowKey","selectItemRange","colrange","rowrange","colwhere","rowwhere","colcnt","rowcnt","cp","setKeyRange","selectCustom","layout","colval","rowval","criteria","Custom","getCriteria","changed","Object","lenk","kk","vals","selectItem","tkeys","cnt","select","min","max","missing","selectKeyRange","selectKey","snapshotToString","printSnapshot","lenv","ii"],"mappings":"AAAA;AAEA,SAASA,QAAT,GAAoB;AAChB,OAAKC,OAAL,GAAa;AAACC,IAAAA,GAAG,EAAC,CAAL;AAAQ;AACrBC,IAAAA,KAAK,EAAC;AADO,GAAb;AAGA,OAAKC,IAAL,GAAUC,SAAV;AACA,OAAKC,IAAL,GAAU,EAAV,CALgB,CAKO;;AACvB,OAAKC,KAAL,GAAW,EAAX,CANgB,CAMQ;;AACxB,OAAKC,QAAL,GAAc,IAAd,CAPgB,CAOU;;AAC1B,OAAKC,KAAL,GAAW,UAASC,KAAT,EAAgB;AAAE;AAChCA,IAAAA,KAAK,CAACV,QAAN,CAAeC,OAAf,GAAuB;AAACC,MAAAA,GAAG,EAAC,CAAL;AAAOC,MAAAA,KAAK,EAAC;AAAb,KAAvB;AACA,SAAKQ,KAAL,CAAWD,KAAX;AACI,GAHD;;AAIA,OAAKC,KAAL,GAAW,UAASD,KAAT,EAAgB;AAAE;AAChC,QAAIE,QAAQ,GAACF,KAAK,CAACG,IAAN,CAAWC,WAAX,CAAuBJ,KAAvB,CAAb,CAD8B,CAE9B;;AACA,QAAIA,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBE,KAAvB,CAA6BY,MAA7B,GAAoCL,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBC,GAAvB,GAA2B,CAAnE,EAAsE;AAClEQ,MAAAA,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBE,KAAvB,CAA6BY,MAA7B,GAAoCL,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBC,GAAvB,GAA2B,CAA/D;AACH,KAFD,MAEO,IAAIQ,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBE,KAAvB,CAA6BY,MAA7B,GAAsC,KAAKP,QAA/C,EAAyD;AAC5D,UAAIQ,IAAI,GAAC,KAAKR,QAAd;AACAE,MAAAA,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBE,KAAvB,GAA6BO,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBE,KAAvB,CAA6Bc,MAA7B,CAAoC,CAACD,IAArC,EAA0CA,IAA1C,CAA7B;AACH;;AAAA;;AACD,QAAIN,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBE,KAAvB,CAA6BY,MAA7B,GAAoC,CAAxC,EAA2C;AACvC,UAAIG,GAAG,GAACR,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBE,KAAvB,CAA6BO,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBE,KAAvB,CAA6BY,MAA7B,GAAoC,CAAjE,CAAR;;AACA,UAAII,IAAI,CAACC,SAAL,CAAeR,QAAf,MAA2BO,IAAI,CAACC,SAAL,CAAeF,GAAf,CAA/B,EAAoD;AACvD;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,eAAO,KAAP;AACI;AACJ;;AACDZ,IAAAA,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBE,KAAvB,CAA6BoB,IAA7B,CAAkCX,QAAlC;AACAF,IAAAA,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBC,GAAvB,GAA2BQ,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBE,KAAvB,CAA6BY,MAA7B,GAAoC,CAA/D,CAlB8B,CAmB9B;AACA;AACA;AACA;AACA;;AACA,SAAKS,cAAL,CAAoBd,KAApB;AACI,GAzBD;;AA0BA,OAAKc,cAAL,GAAoB,UAASd,KAAT,EAAgB;AACvC,QAAIA,KAAK,CAACe,KAAN,CAAYC,MAAZ,KAAuBrB,SAA3B,EAAsC;AAClCK,MAAAA,KAAK,CAACe,KAAN,CAAYC,MAAZ,CAAmBC,IAAnB;AACH;;AAAA;AACG,GAJD;;AAKA,OAAKC,cAAL,GAAoB,UAASlB,KAAT,EAAgB;AACvC,WAAQA,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBC,GAA/B;AACI,GAFD;;AAGA,OAAK2B,WAAL,GAAiB,UAASnB,KAAT,EAAgB;AACpC;AACAA,IAAAA,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBC,GAAvB,GAA2BQ,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBC,GAAvB,GAA2B,CAAtD;AACA,QAAIU,QAAQ,GAACF,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBE,KAAvB,CAA6BO,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBC,GAApD,CAAb,CAHoC,CAIpC;;AACAQ,IAAAA,KAAK,CAACG,IAAN,CAAWiB,WAAX,CAAuBpB,KAAvB,EAA6BE,QAA7B;AACA,SAAKY,cAAL,CAAoBd,KAApB;AACAA,IAAAA,KAAK,CAACG,IAAN,CAAWkB,WAAX,CAAuBrB,KAAvB,EAA6B,EAA7B;AACAA,IAAAA,KAAK,CAACsB,IAAN,CAAWL,IAAX,CAAgBjB,KAAhB;AACI,GATD;;AAUA,OAAKuB,OAAL,GAAa,UAASvB,KAAT,EAAgB;AAChC,WAAQ,KAAKkB,cAAL,CAAoBlB,KAApB,CAAR;AACI,GAFD;;AAGA,OAAKwB,IAAL,GAAU,UAASxB,KAAT,EAAgB;AAC7B;AACA,QAAI,KAAKkB,cAAL,CAAoBlB,KAApB,CAAJ,EAAgC;AAC5B,WAAKmB,WAAL,CAAiBnB,KAAjB;AACH;;AAAA;AACG,GALD;;AAMA,OAAKyB,WAAL,GAAiB,UAASzB,KAAT,EAAgB;AACpC,WAAQA,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBC,IAAhB,CAAqBtB,MAArB,GAA8B,CAAtC;AACI,GAFD;;AAGA,OAAKuB,QAAL,GAAc,UAAS5B,KAAT,EAAgB;AACjC;AACA,QAAI6B,GAAG,GAAC7B,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBC,IAAhB,CAAqBtB,MAA7B,CAFiC,CAGjC;;AACA,QAAIwB,GAAG,GAAC,CAAR,EAAW;AACP,UAAIC,GAAG,GAAC9B,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBC,IAAhB,CAAqBE,GAAG,GAAC,CAAzB,CAAR,CADO,CAEP;;AACA,WAAKE,WAAL,CAAiB/B,KAAjB,EAAuB,MAAvB,EAA8B8B,GAA9B;AACH;AACG,GATD;;AAUA,OAAKE,cAAL,GAAoB,UAAShC,KAAT,EAAgB;AACvC,WAAQA,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBC,GAAvB,GAA6BQ,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBE,KAAvB,CAA6BY,MAA7B,GAAoC,CAAzE;AACI,GAFD;;AAGA,OAAK4B,OAAL,GAAa,UAASjC,KAAT,EAAgB;AAChC,WAAQ,KAAKgC,cAAL,CAAoBhC,KAApB,KAA8B,KAAKyB,WAAL,CAAiBzB,KAAjB,CAAtC;AACI,GAFD;;AAGA,OAAKkC,WAAL,GAAiB,UAASlC,KAAT,EAAgB;AACpC;AACAA,IAAAA,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBC,GAAvB,GAA2BQ,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBC,GAAvB,GAA2B,CAAtD;AACA,QAAIU,QAAQ,GAACF,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBE,KAAvB,CAA6BO,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBC,GAApD,CAAb,CAHoC,CAIpC;;AACAQ,IAAAA,KAAK,CAACG,IAAN,CAAWiB,WAAX,CAAuBpB,KAAvB,EAA6BE,QAA7B;AACA,SAAKY,cAAL,CAAoBd,KAApB;AACAA,IAAAA,KAAK,CAACG,IAAN,CAAWkB,WAAX,CAAuBrB,KAAvB,EAA6B,EAA7B;AACAA,IAAAA,KAAK,CAACsB,IAAN,CAAWL,IAAX,CAAgBjB,KAAhB;AACI,GATD;;AAUA,OAAKmC,IAAL,GAAU,UAASnC,KAAT,EAAgB;AAC7B;AACA,QAAI,KAAKgC,cAAL,CAAoBhC,KAApB,CAAJ,EAAgC;AAC5B,WAAKkC,WAAL,CAAiBlC,KAAjB;AACH,KAFD,MAEO,IAAI,KAAKyB,WAAL,CAAiBzB,KAAjB,CAAJ,EAA6B;AAChC,WAAK4B,QAAL,CAAc5B,KAAd;AACH;;AAAA;AACG,GAPD;;AAQA,OAAKoC,gBAAL,GAAsB,UAASpC,KAAT,EAAeqC,IAAf,EAAoBC,IAApB,EAA0B;AACnD,QAAIC,MAAM,GAAC,KAAX;AACA,QAAIC,GAAG,GAACxC,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAAhB,CAAsBC,OAAtB,CAA8BL,IAA9B,CAAR;AACA,QAAIM,GAAG,GAAC3C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAAhB,CAAsBC,OAAtB,CAA8BJ,IAA9B,CAAR,CAHmD,CAInD;;AACA,QAAIE,GAAG,KAAK,CAAC,CAAT,IAAcG,GAAG,KAAK,CAAC,CAA3B,EAA8B;AAC1B,UAAIH,GAAG,GAAGG,GAAV,EAAe;AAClB,YAAIC,GAAG,GAAC5C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAAhB,CAAsBlC,MAAtB,CAA6BiC,GAA7B,EAAkC,CAAlC,CAAR,CADkB,CAC4C;;AAC9D,YAAIK,GAAG,GAAC7C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAAhB,CAAsBlC,MAAtB,CAA6BoC,GAA7B,EAAkC,CAAlC,CAAR,CAFkB,CAE4C;;AAC9D3C,QAAAA,KAAK,CAAC8C,KAAN,CAAYC,OAAZ,CAAoB/C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAApC,EAA0CG,GAA1C,EAA8CD,GAA9C;AACA3C,QAAAA,KAAK,CAAC8C,KAAN,CAAYC,OAAZ,CAAoB/C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAApC,EAA0CI,GAA1C,EAA8CL,GAA9C,EAJkB,CAKlB;AACA;;AACAxC,QAAAA,KAAK,CAACG,IAAN,CAAW6C,aAAX,CAAyBhD,KAAzB;AACAuC,QAAAA,MAAM,GAAC,IAAP;AACI;AACJ;;AACDvC,IAAAA,KAAK,CAACiD,IAAN,CAAWC,WAAX,CAAuBlD,KAAvB,EAA6B,kBAA7B;AACAA,IAAAA,KAAK,CAACiD,IAAN,CAAWE,WAAX,CAAuBnD,KAAvB,EAA8B,IAA9B;AACAA,IAAAA,KAAK,CAACV,QAAN,CAAeW,KAAf,CAAqBD,KAArB;AACAA,IAAAA,KAAK,CAACG,IAAN,CAAWkB,WAAX,CAAuBrB,KAAvB,EAA6B,EAA7B;AACAA,IAAAA,KAAK,CAACsB,IAAN,CAAWL,IAAX,CAAgBjB,KAAhB,EAAsBuC,MAAtB;AACI,GAtBD;;AAuBA,OAAKa,gBAAL,GAAsB,UAASpD,KAAT,EAAeqD,GAAf,EAAmBvB,GAAnB,EAAuBwB,KAAvB,EAA8B;AACvD;AACA,QAAItD,KAAK,CAACuD,IAAN,CAAWC,cAAX,CAA0BxD,KAA1B,EAAgC8B,GAAhC,EAAoCuB,GAApC,EAAwCC,KAAxC,EAA8C,CAA9C,EAAgD,IAAhD,CAAJ,EAA2D;AACvDtD,MAAAA,KAAK,CAACiD,IAAN,CAAWC,WAAX,CAAuBlD,KAAvB,EAA6B,kBAA7B;AACAA,MAAAA,KAAK,CAACiD,IAAN,CAAWE,WAAX,CAAuBnD,KAAvB,EAA8B,IAA9B;AACAA,MAAAA,KAAK,CAACV,QAAN,CAAeW,KAAf,CAAqBD,KAArB;AACAA,MAAAA,KAAK,CAACG,IAAN,CAAWkB,WAAX,CAAuBrB,KAAvB,EAA6B,EAA7B;AACAA,MAAAA,KAAK,CAACsB,IAAN,CAAWL,IAAX,CAAgBjB,KAAhB;AACH;;AAAA,KARsD,CASvD;AACI,GAVD;;AAWA,OAAK+B,WAAL,GAAiB,UAAS/B,KAAT,EAAeyD,IAAf,EAAoBnB,IAApB,EAA0B;AAC9C,QAAIC,MAAM,GAAC,KAAX,CAD8C,CAC5B;;AAClB,QAAII,GAAJ,EAAQe,GAAR,EAAYC,GAAZ,EAAgBf,GAAhB,EAAoBgB,GAApB,CAF8C,CAG9C;;AACA,QAAIH,IAAI,KAAM,MAAd,EAAsB;AAAE;AACpBd,MAAAA,GAAG,GAAC3C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBC,IAAhB,CAAqBe,OAArB,CAA6BJ,IAA7B,CAAJ;;AACA,UAAIK,GAAG,KAAK,CAAC,CAAb,EAAgB;AACnB,YAAIkB,KAAK,GAAC7D,KAAK,CAACG,IAAN,CAAW2D,QAAX,CAAoB9D,KAApB,EAA0BsC,IAA1B,CAAV;AACAM,QAAAA,GAAG,GAAC5C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBC,IAAhB,CAAqBpB,MAArB,CAA4BoC,GAA5B,EAAiC,CAAjC,CAAJ,CAFmB,CAEsC;;AACzD,YAAIkB,KAAK,KAAKlE,SAAd,EAAyB;AAAE;AACvBK,UAAAA,KAAK,CAAC8C,KAAN,CAAYC,OAAZ,CAAoB/C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAApC,EAA0CG,GAA1C,EAA8C,CAA9C;AACH;;AAAA,SALkB,CAMnB;;AACA5C,QAAAA,KAAK,CAACG,IAAN,CAAW4D,WAAX,CAAuB/D,KAAvB;AACAA,QAAAA,KAAK,CAACuD,IAAN,CAAWS,YAAX,CAAwBhE,KAAxB,EARmB,CASnB;;AACAA,QAAAA,KAAK,CAACV,QAAN,CAAeW,KAAf,CAAqBD,KAArB;AACAuC,QAAAA,MAAM,GAAC,IAAP;AACI;AACJ,KAfD,MAeO,IAAIkB,IAAI,KAAM,OAAd,EAAuB;AAAE;AAC5Bd,MAAAA,GAAG,GAAC3C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAAhB,CAAsBC,OAAtB,CAA8BJ,IAA9B,CAAJ,CAD0B,CAE1B;;AACA,UAAIK,GAAG,KAAK,CAAC,CAAb,EAAgB;AACnBC,QAAAA,GAAG,GAAC5C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAAhB,CAAsBlC,MAAtB,CAA6BoC,GAA7B,EAAkC,CAAlC,CAAJ,CADmB,CACuC;;AAC1D3C,QAAAA,KAAK,CAAC8C,KAAN,CAAYC,OAAZ,CAAoB/C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAApC,EAA0CG,GAA1C,EAA8C,CAA9C,EAFmB,CAGnB;;AACA5C,QAAAA,KAAK,CAACuD,IAAN,CAAWU,WAAX,CAAuBjE,KAAvB;AACAA,QAAAA,KAAK,CAACG,IAAN,CAAW6C,aAAX,CAAyBhD,KAAzB;AACAA,QAAAA,KAAK,CAACV,QAAN,CAAeW,KAAf,CAAqBD,KAArB;AACAuC,QAAAA,MAAM,GAAC,IAAP;AACI;AACJ,KAZM,MAYA,IAAIkB,IAAI,KAAK,MAAb,EAAqB;AAAE;AAC1Bd,MAAAA,GAAG,GAAC3C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAAhB,CAAsBC,OAAtB,CAA8BJ,IAA9B,CAAJ;;AACA,UAAIK,GAAG,KAAK,CAAC,CAAb,EAAgB;AACnBC,QAAAA,GAAG,GAAC5C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAAhB,CAAsBlC,MAAtB,CAA6BoC,GAA7B,EAAkC,CAAlC,CAAJ,CADmB,CACuC;;AAC1D3C,QAAAA,KAAK,CAAC8C,KAAN,CAAYC,OAAZ,CAAoB/C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgB7B,KAApC,EAA0C+C,GAA1C,EAFmB,CAGnB;;AACA5C,QAAAA,KAAK,CAACuD,IAAN,CAAWU,WAAX,CAAuBjE,KAAvB;AACAA,QAAAA,KAAK,CAACV,QAAN,CAAeW,KAAf,CAAqBD,KAArB;AACAuC,QAAAA,MAAM,GAAC,IAAP;AACI;;AAAA;AACJ,KAVM,MAUA,IAAIkB,IAAI,KAAK,OAAb,EAAsB;AACzBd,MAAAA,GAAG,GAAC3C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgB7B,KAAhB,CAAsB6C,OAAtB,CAA8BJ,IAA9B,CAAJ;AACAoB,MAAAA,GAAG,GAAC1D,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAAhB,CAAsBC,OAAtB,CAA8BJ,IAA9B,CAAJ;AACAqB,MAAAA,GAAG,GAAC3D,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBC,IAAhB,CAAqBe,OAArB,CAA6BJ,IAA7B,CAAJ;AACAsB,MAAAA,GAAG,GAAC5D,KAAK,CAACG,IAAN,CAAWsC,KAAX,CAAiByB,KAAjB,CAAuBxB,OAAvB,CAA+BJ,IAA/B,CAAJ;AACA3B,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BH,IAAI,CAACC,SAAL,CAAeV,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgB7B,KAA/B,CAA9B,EAAoEyC,IAApE,EAAyEK,GAAzE,EAA6Ee,GAA7E,EAAiFC,GAAjF,EAAqFC,GAArF;;AACA,UAAIjB,GAAG,KAAK,CAAC,CAAb,EAAgB;AAA8C;AACjEC,QAAAA,GAAG,GAAC5C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgB7B,KAAhB,CAAsBU,MAAtB,CAA6BoC,GAA7B,EAAkC,CAAlC,CAAJ;AACA3C,QAAAA,KAAK,CAAC8C,KAAN,CAAYC,OAAZ,CAAoB/C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAApC,EAA0CG,GAA1C,EAFmB,CAGnB;AACA;AACA;AACI,OAND,MAMO,IAAIc,GAAG,KAAK,CAAC,CAAT,IAAcE,GAAG,KAAK,CAAC,CAA3B,EAA8B;AAAyB;AACjEhB,QAAAA,GAAG,GAAC5C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAAhB,CAAsBlC,MAAtB,CAA6BmD,GAA7B,EAAkC,CAAlC,CAAJ;AACA1D,QAAAA,KAAK,CAAC8C,KAAN,CAAYC,OAAZ,CAAoB/C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgB7B,KAApC,EAA0C+C,GAA1C;AACA5C,QAAAA,KAAK,CAACuD,IAAN,CAAWU,WAAX,CAAuBjE,KAAvB;AACAuC,QAAAA,MAAM,GAAC,IAAP,CAJwC,CAKxC;AACI,OANM,MAMA,IAAIoB,GAAG,KAAK,CAAC,CAAT,IAAcD,GAAG,KAAK,CAAC,CAA3B,EAA8B;AAA0B;AAClE1D,QAAAA,KAAK,CAAC8C,KAAN,CAAYC,OAAZ,CAAoB/C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAApC,EAA0CH,IAA1C,EADwC,CAExC;AACI,OAHM,MAGA,IAAIqB,GAAG,KAAK,CAAC,CAAT,IAAcD,GAAG,KAAK,CAAC,CAA3B,EAA8B;AAAyB;AACjEd,QAAAA,GAAG,GAAC5C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAAhB,CAAsBlC,MAAtB,CAA6BmD,GAA7B,EAAkC,CAAlC,CAAJ;AACI,OAFM,MAEA,IAAIC,GAAG,KAAK,CAAC,CAAT,IAAcD,GAAG,KAAK,CAAC,CAA3B,EAA8B;AAAyB;AACjEd,QAAAA,GAAG,GAAC5C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAAhB,CAAsBlC,MAAtB,CAA6BmD,GAA7B,EAAkC,CAAlC,CAAJ;AACA1D,QAAAA,KAAK,CAAC8C,KAAN,CAAYC,OAAZ,CAAoB/C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgB7B,KAApC,EAA0C+C,GAA1C,EAFwC,CAGxC;AACI;;AAAA;AACD5C,MAAAA,KAAK,CAACG,IAAN,CAAW6C,aAAX,CAAyBhD,KAAzB;AACAA,MAAAA,KAAK,CAACV,QAAN,CAAeW,KAAf,CAAqBD,KAArB,EA7ByB,CA8BzB;AACH;;AACDA,IAAAA,KAAK,CAACiD,IAAN,CAAWC,WAAX,CAAuBlD,KAAvB,EAA6B,kBAA7B;AACAA,IAAAA,KAAK,CAACiD,IAAN,CAAWE,WAAX,CAAuBnD,KAAvB,EAA8B,IAA9B,EA1E8C,CA2E9C;;AACAA,IAAAA,KAAK,CAACG,IAAN,CAAWkB,WAAX,CAAuBrB,KAAvB,EAA6B,EAA7B;AACAA,IAAAA,KAAK,CAACsB,IAAN,CAAWL,IAAX,CAAgBjB,KAAhB,EAAsBuC,MAAtB;AACI,GA9ED;;AA+EA,OAAK4B,eAAL,GAAqB,UAASnE,KAAT,EAAeyD,IAAf,EAAoBnB,IAApB,EAAyB8B,MAAzB,EAAiC;AAAE;AAC3D,QAAIC,IAAI,GAACrE,KAAK,CAACG,IAAN,CAAWsC,KAAX,CAAiByB,KAAjB,CAAuB7D,MAAhC;AACA,QAAIkC,MAAM,GAAE8B,IAAI,KAAG,CAAnB,CAFyD,CAElC;;AACvB,QAAI1B,GAAJ,EAAQe,GAAR,EAAYC,GAAZ,EAAgBf,GAAhB,CAHyD,CAIzD;AACA;AACA;;AACAD,IAAAA,GAAG,GAAC3C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgB7B,KAAhB,CAAsB6C,OAAtB,CAA8BJ,IAA9B,CAAJ;AACAoB,IAAAA,GAAG,GAAC1D,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAAhB,CAAsBC,OAAtB,CAA8BJ,IAA9B,CAAJ;AACAqB,IAAAA,GAAG,GAAC3D,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBC,IAAhB,CAAqBe,OAArB,CAA6BJ,IAA7B,CAAJ;;AACA,QAAIoB,GAAG,KAAK,CAAC,CAAb,EAAgB;AAAE;AACd,UAAIf,GAAG,KAAK,CAAC,CAAb,EAAgB;AAAiC;AACpDC,QAAAA,GAAG,GAAC5C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgB7B,KAAhB,CAAsBU,MAAtB,CAA6BoC,GAA7B,EAAkC,CAAlC,CAAJ;AACA3C,QAAAA,KAAK,CAAC8C,KAAN,CAAYC,OAAZ,CAAoB/C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAApC,EAA0CG,GAA1C,EAFmB,CAE6B;;AAChD5C,QAAAA,KAAK,CAACG,IAAN,CAAW6C,aAAX,CAAyBhD,KAAzB;AACAA,QAAAA,KAAK,CAACuD,IAAN,CAAWS,YAAX,CAAwBhE,KAAxB,EAJmB,CAKnB;AACA;AACA;AACI,OARD,MAQO,IAAI2D,GAAG,KAAK,CAAC,CAAb,EAAgB;AAA0B;AACpD3D,QAAAA,KAAK,CAAC8C,KAAN,CAAYC,OAAZ,CAAoB/C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAApC,EAA0CH,IAA1C,EAD0B,CACuB;AACjD;;AACAtC,QAAAA,KAAK,CAACG,IAAN,CAAW6C,aAAX,CAAyBhD,KAAzB;AACAA,QAAAA,KAAK,CAACuD,IAAN,CAAWS,YAAX,CAAwBhE,KAAxB;AACI,OALM,MAKA;AAAE;AACZW,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2B0B,IAA3B,EACK7B,IAAI,CAACC,SAAL,CAAeV,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgB7B,KAA/B,CADL,EAEKY,IAAI,CAACC,SAAL,CAAeV,KAAK,CAACG,IAAN,CAAWuB,IAA1B,CAFL;AAGI;;AAAA;AACJ,KAnBD,MAmBO;AAAE;AACL,UAAIiC,GAAG,KAAK,CAAC,CAAb,EAAgB;AAAE;AACrBf,QAAAA,GAAG,GAAC5C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAAhB,CAAsBlC,MAAtB,CAA6BmD,GAA7B,EAAkC,CAAlC,CAAJ;AACA1D,QAAAA,KAAK,CAACG,IAAN,CAAW6C,aAAX,CAAyBhD,KAAzB;AACAA,QAAAA,KAAK,CAACuD,IAAN,CAAWS,YAAX,CAAwBhE,KAAxB;AACI,OAJD,MAIO,IAAK2C,GAAG,KAAK,CAAC,CAAd,EAAiB;AAAE;AAC7BC,QAAAA,GAAG,GAAC5C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAAhB,CAAsBlC,MAAtB,CAA6BmD,GAA7B,EAAkC,CAAlC,CAAJ;AACA1D,QAAAA,KAAK,CAAC8C,KAAN,CAAYC,OAAZ,CAAoB/C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgB7B,KAApC,EAA0C+C,GAA1C;AACA5C,QAAAA,KAAK,CAACG,IAAN,CAAW6C,aAAX,CAAyBhD,KAAzB;AACAA,QAAAA,KAAK,CAACuD,IAAN,CAAWS,YAAX,CAAwBhE,KAAxB;AACI,OALM,MAKA;AAAE;AACZ4C,QAAAA,GAAG,GAAC5C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAAhB,CAAsBlC,MAAtB,CAA6BmD,GAA7B,EAAkC,CAAlC,CAAJ;AACA1D,QAAAA,KAAK,CAACG,IAAN,CAAW6C,aAAX,CAAyBhD,KAAzB;AACAA,QAAAA,KAAK,CAACuD,IAAN,CAAWS,YAAX,CAAwBhE,KAAxB;AACI;AACJ;;AAAA;AACDA,IAAAA,KAAK,CAACG,IAAN,CAAW6C,aAAX,CAAyBhD,KAAzB;AACAA,IAAAA,KAAK,CAACV,QAAN,CAAeW,KAAf,CAAqBD,KAArB,EA9CyD,CA+CzD;AACA;AACA;;AACAA,IAAAA,KAAK,CAACG,IAAN,CAAWkB,WAAX,CAAuBrB,KAAvB,EAA6B,EAA7B;AACAA,IAAAA,KAAK,CAACsB,IAAN,CAAWL,IAAX,CAAgBjB,KAAhB,EAAsBuC,MAAtB;AACI,GApDD;;AAqDA,OAAK+B,cAAL,GAAoB,UAAStE,KAAT,EAAe8B,GAAf,EAAoB;AAC3C,QAAIa,GAAG,GAAC3C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAAhB,CAAsBC,OAAtB,CAA8BZ,GAA9B,CAAR;;AACA,QAAIa,GAAG,KAAK,CAAC,CAAb,EAAgB;AACZ,UAAIC,GAAG,GAAC5C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAAhB,CAAsBlC,MAAtB,CAA6BoC,GAA7B,EAAkC,CAAlC,CAAR,CADY,CACkD;;AAC9D3C,MAAAA,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAAhB,GAAsBzC,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAAhB,CAAsB8B,MAAtB,CAA6B3B,GAA7B,CAAtB,CAFY,CAE8C;AAC1D;AACA;;AACA5C,MAAAA,KAAK,CAACG,IAAN,CAAW6C,aAAX,CAAyBhD,KAAzB;AACA,UAAIwE,MAAM,GAACxE,KAAK,CAACG,IAAN,CAAWsE,SAAX,CAAqBzE,KAArB,CAAX;AACA,UAAI0E,MAAM,GAAC1E,KAAK,CAACG,IAAN,CAAWwE,SAAX,CAAqB3E,KAArB,CAAX;AACAA,MAAAA,KAAK,CAACV,QAAN,CAAeW,KAAf,CAAqBD,KAArB;AACA,UAAIuC,MAAM,GAAEK,GAAG,CAAC,CAAD,CAAH,KAAS4B,MAAT,IAAmB5B,GAAG,CAAC,CAAD,CAAH,KAAS8B,MAAxC,CATY,CAUZ;;AACA1E,MAAAA,KAAK,CAACG,IAAN,CAAWkB,WAAX,CAAuBrB,KAAvB,EAA6B,EAA7B;AACAA,MAAAA,KAAK,CAACsB,IAAN,CAAWL,IAAX,CAAgBjB,KAAhB,EAAsBuC,MAAtB;AACH;AACG,GAhBD;;AAiBA,OAAKqC,eAAL,GAAqB,UAAS5E,KAAT,EAAewE,MAAf,EAAsBE,MAAtB,EAA6BG,QAA7B,EAAsCC,QAAtC,EAA+CC,QAA/C,EAAwDC,QAAxD,EAAiEC,MAAjE,EAAwEC,MAAxE,EAAgF;AACxG,QAAItF,IAAI,GAACI,KAAK,CAAC8C,KAAN,CAAYqC,EAAZ,CAAenF,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAA/B,CAAT;;AACA,QAAI,KAAK2C,WAAL,CAAiBpF,KAAjB,EAAuBwE,MAAvB,EAA8BK,QAA9B,EAAuCE,QAAvC,EAAgDE,MAAhD,CAAJ,EAA6D;AACzD,WAAKrF,IAAL,CAAU4E,MAAV,IAAkBxE,KAAK,CAAC8C,KAAN,CAAYqC,EAAZ,CAAevF,IAAf,CAAlB,CADyD,CAEzD;;AACA,UAAI,KAAKwF,WAAL,CAAiBpF,KAAjB,EAAuB0E,MAAvB,EAA8BI,QAA9B,EAAuCE,QAAvC,EAAgDE,MAAhD,CAAJ,EAA6D;AAChE,aAAKtF,IAAL,CAAU8E,MAAV,IAAkB1E,KAAK,CAAC8C,KAAN,CAAYqC,EAAZ,CAAevF,IAAf,CAAlB,CADgE,CAEhE;AACI,OANwD,CAOzD;AACA;;AACH;;AAAA,KAXuG,CAYxG;;AACAI,IAAAA,KAAK,CAACiD,IAAN,CAAWC,WAAX,CAAuBlD,KAAvB,EAA6B,kBAA7B;AACAA,IAAAA,KAAK,CAACiD,IAAN,CAAWE,WAAX,CAAuBnD,KAAvB,EAA8B,IAA9B;AACAA,IAAAA,KAAK,CAACV,QAAN,CAAeW,KAAf,CAAqBD,KAArB;AACAA,IAAAA,KAAK,CAACG,IAAN,CAAWkB,WAAX,CAAuBrB,KAAvB,EAA6B,EAA7B;AACAA,IAAAA,KAAK,CAACsB,IAAN,CAAWL,IAAX,CAAgBjB,KAAhB;AACI,GAlBD;;AAmBA,OAAKqF,YAAL,GAAkB,UAASrF,KAAT,EAAesF,MAAf,EAAsBd,MAAtB,EAA6BE,MAA7B,EAAoCa,MAApC,EAA2CC,MAA3C,EAAkDT,QAAlD,EAA2DC,QAA3D,EAAoEC,MAApE,EAA2EC,MAA3E,EAAmF;AACxG;AACA,QAAItF,IAAI,GAACI,KAAK,CAAC8C,KAAN,CAAYqC,EAAZ,CAAenF,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAA/B,CAAT;AACA,QAAIgD,QAAQ,GAACzF,KAAK,CAAC0F,MAAN,CAAaC,WAAb,CAAyB3F,KAAzB,EAA+BsF,MAA/B,EAAsCC,MAAtC,EAA6CC,MAA7C,CAAb;;AACA,QAAIC,QAAQ,KAAK9F,SAAjB,EAA4B;AACxB,UAAIiG,OAAO,GAAC,KAAZ;AACA,UAAIlE,IAAI,GAACmE,MAAM,CAACnE,IAAP,CAAY+D,QAAZ,CAAT;AACA,UAAIK,IAAI,GAACpE,IAAI,CAACrB,MAAd;;AACA,WAAK,IAAI0F,EAAE,GAAC,CAAZ,EAAeA,EAAE,GAAED,IAAnB,EAAyBC,EAAE,EAA3B,EAA+B;AAClC,YAAIjE,GAAG,GAACJ,IAAI,CAACqE,EAAD,CAAZ;AACA,YAAIC,IAAI,GAACP,QAAQ,CAAC3D,GAAD,CAAjB;;AACA,YAAI9B,KAAK,CAACuD,IAAN,CAAWC,cAAX,CAA0BxD,KAA1B,EAAgC8B,GAAhC,EAAoCkE,IAApC,EAAyCjB,QAAzC,EAAkDE,MAAlD,CAAJ,EAA+D;AAC3D;AACA,eAAKrF,IAAL,CAAUkC,GAAV,IAAe9B,KAAK,CAAC8C,KAAN,CAAYqC,EAAZ,CAAevF,IAAf,CAAf;AACAgG,UAAAA,OAAO,GAAC,IAAR;AACH;;AAAA;AACG;;AAAA;;AACD,UAAIA,OAAJ,EAAa;AAChB;AACA;AACA5F,QAAAA,KAAK,CAACiD,IAAN,CAAWC,WAAX,CAAuBlD,KAAvB,EAA6B,kBAA7B;AACAA,QAAAA,KAAK,CAACiD,IAAN,CAAWE,WAAX,CAAuBnD,KAAvB,EAA8B,IAA9B;AACAA,QAAAA,KAAK,CAACV,QAAN,CAAeW,KAAf,CAAqBD,KAArB;AACAA,QAAAA,KAAK,CAACG,IAAN,CAAWkB,WAAX,CAAuBrB,KAAvB,EAA6B,EAA7B;AACAA,QAAAA,KAAK,CAACsB,IAAN,CAAWL,IAAX,CAAgBjB,KAAhB;AACI,OArBuB,CAsBxB;;AACH,KAvBD,MAuBO;AACH,WAAKiG,UAAL,CAAgBjG,KAAhB,EAAsBwE,MAAtB,EAA6BE,MAA7B,EAAoCa,MAApC,EAA2CC,MAA3C,EAAkDT,QAAlD,EAA2DC,QAA3D,EAAoEC,MAApE,EAA2EC,MAA3E;AACH;AACG,GA9BD;;AA+BA,OAAKe,UAAL,GAAgB,UAASjG,KAAT,EAAewE,MAAf,EAAsBE,MAAtB,EAA6Ba,MAA7B,EAAoCC,MAApC,EAA2CT,QAA3C,EAAoDC,QAApD,EAA6DC,MAA7D,EAAoEC,MAApE,EAA4E;AAC/F;AACA;AACA;AACA,QAAItF,IAAI,GAACI,KAAK,CAAC8C,KAAN,CAAYqC,EAAZ,CAAenF,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAA/B,CAAT,CAJ+F,CAK/F;;AACA,QAAImD,OAAO,GAAC,KAAZ;;AACA,QAAI5F,KAAK,CAACuD,IAAN,CAAWC,cAAX,CAA0BxD,KAA1B,EAAgCwE,MAAhC,EAAuCe,MAAvC,EAA8CR,QAA9C,EAAuDE,MAAvD,CAAJ,EAAoE;AAChE;AACA,WAAKrF,IAAL,CAAU4E,MAAV,IAAkBxE,KAAK,CAAC8C,KAAN,CAAYqC,EAAZ,CAAevF,IAAf,CAAlB;AACAgG,MAAAA,OAAO,GAAC,IAAR;AACH,KAJD,MAIO,IAAI5F,KAAK,CAACG,IAAN,CAAW+F,KAAX,GAAmB,CAAvB,EAA0B;AAC7BlG,MAAAA,KAAK,CAACuD,IAAN,CAAWU,WAAX,CAAuBjE,KAAvB;AACH,KAFM,MAEA;AACHW,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgC4D,MAAhC,EAAuCxE,KAAK,CAACG,IAAN,CAAW+F,KAAlD;AACH;;AAAA;;AACD,QAAIlG,KAAK,CAACuD,IAAN,CAAWC,cAAX,CAA0BxD,KAA1B,EAAgC0E,MAAhC,EAAuCc,MAAvC,EAA8CR,QAA9C,EAAuDE,MAAvD,CAAJ,EAAoE;AAChE;AACA,WAAKtF,IAAL,CAAU8E,MAAV,IAAkB1E,KAAK,CAAC8C,KAAN,CAAYqC,EAAZ,CAAevF,IAAf,CAAlB;AACAgG,MAAAA,OAAO,GAAC,IAAR;AACH,KAJD,MAIO,IAAI5F,KAAK,CAACG,IAAN,CAAW+F,KAAX,GAAmB,CAAvB,EAA0B;AAC7BlG,MAAAA,KAAK,CAACuD,IAAN,CAAWU,WAAX,CAAuBjE,KAAvB;AACH,KAFM,MAEA;AACHW,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgC8D,MAAhC,EAAuC1E,KAAK,CAACG,IAAN,CAAW+F,KAAlD;AACH;;AACD,QAAIN,OAAJ,EAAa;AACT;AACA;AACA5F,MAAAA,KAAK,CAACiD,IAAN,CAAWC,WAAX,CAAuBlD,KAAvB,EAA6B,kBAA7B;AACAA,MAAAA,KAAK,CAACiD,IAAN,CAAWE,WAAX,CAAuBnD,KAAvB,EAA8B,IAA9B;AACAA,MAAAA,KAAK,CAACV,QAAN,CAAeW,KAAf,CAAqBD,KAArB;AACAA,MAAAA,KAAK,CAACG,IAAN,CAAWkB,WAAX,CAAuBrB,KAAvB,EAA6B,EAA7B;AACAA,MAAAA,KAAK,CAACsB,IAAN,CAAWL,IAAX,CAAgBjB,KAAhB;AACH,KAjC8F,CAkC/F;;AACI,GAnCD;;AAoCA,OAAKoF,WAAL,GAAiB,UAASpF,KAAT,EAAe8B,GAAf,EAAmB+B,KAAnB,EAAyBP,KAAzB,EAA+B6C,GAA/B,EAAoC;AAAE;AAC1D;AACAnG,IAAAA,KAAK,CAACG,IAAN,CAAWiG,MAAX,CAAkBvC,KAAlB,CAAwB/B,GAAxB,IAA6B,CAAC+B,KAAK,CAACwC,GAAP,EAAWxC,KAAK,CAACyC,GAAjB,CAA7B;AACAtG,IAAAA,KAAK,CAACG,IAAN,CAAWmD,KAAX,CAAiBxB,GAAjB,IAAsBwB,KAAtB,CAHwD,CAIxD;;AACA,QAAItD,KAAK,CAAC8C,KAAN,CAAYyD,OAAZ,CAAoBvG,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBC,IAApC,EAAyCG,GAAzC,CAAJ,EAAmD;AAC/C;AACA9B,MAAAA,KAAK,CAAC8C,KAAN,CAAYC,OAAZ,CAAoB/C,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBC,IAApC,EAAyCG,GAAzC,EAF+C,CAG/C;AACH;;AAAA;AACD,WAAO,IAAP;AACI,GAXD;;AAYA,OAAK0E,cAAL,GAAoB,UAASxG,KAAT,EAAe8B,GAAf,EAAmB+B,KAAnB,EAAyBP,KAAzB,EAA+B6C,GAA/B,EAAoC;AAC3D,QAAIvG,IAAI,GAACI,KAAK,CAAC8C,KAAN,CAAYqC,EAAZ,CAAenF,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAA/B,CAAT;;AACA,QAAI,KAAK2C,WAAL,CAAiBpF,KAAjB,EAAuB8B,GAAvB,EAA2B+B,KAA3B,EAAiCP,KAAjC,EAAuC6C,GAAvC,CAAJ,EAAiD;AAC7C,WAAKvG,IAAL,CAAUkC,GAAV,IAAe9B,KAAK,CAAC8C,KAAN,CAAYqC,EAAZ,CAAevF,IAAf,CAAf;AACH;;AACDI,IAAAA,KAAK,CAACiD,IAAN,CAAWC,WAAX,CAAuBlD,KAAvB,EAA6B,kBAA7B;AACAA,IAAAA,KAAK,CAACiD,IAAN,CAAWE,WAAX,CAAuBnD,KAAvB,EAA8B,IAA9B;AACAA,IAAAA,KAAK,CAACV,QAAN,CAAeW,KAAf,CAAqBD,KAArB;AACAA,IAAAA,KAAK,CAACG,IAAN,CAAWkB,WAAX,CAAuBrB,KAAvB,EAA6B,EAA7B;AACAA,IAAAA,KAAK,CAACsB,IAAN,CAAWL,IAAX,CAAgBjB,KAAhB;AACI,GAVD;;AAWA,OAAKyG,SAAL,GAAe,UAASzG,KAAT,EAAe8B,GAAf,EAAmBuB,GAAnB,EAAuBC,KAAvB,EAA6B6C,GAA7B,EAAkC;AACpD,QAAIvG,IAAI,GAACI,KAAK,CAAC8C,KAAN,CAAYqC,EAAZ,CAAenF,KAAK,CAACG,IAAN,CAAWuB,IAAX,CAAgBe,KAA/B,CAAT,CADoD,CAEpD;AACA;;AACA,QAAIzC,KAAK,CAACuD,IAAN,CAAWC,cAAX,CAA0BxD,KAA1B,EAAgC8B,GAAhC,EAAoCuB,GAApC,EAAwCC,KAAxC,EAA8C6C,GAA9C,CAAJ,EAAwD;AACpD,WAAKvG,IAAL,CAAUkC,GAAV,IAAelC,IAAf,CADoD,CAEpD;AACA;;AACAI,MAAAA,KAAK,CAACiD,IAAN,CAAWC,WAAX,CAAuBlD,KAAvB,EAA6B,kBAA7B;AACAA,MAAAA,KAAK,CAACiD,IAAN,CAAWE,WAAX,CAAuBnD,KAAvB,EAA8B,IAA9B;AACAA,MAAAA,KAAK,CAACV,QAAN,CAAeW,KAAf,CAAqBD,KAArB;AACAA,MAAAA,KAAK,CAACG,IAAN,CAAWkB,WAAX,CAAuBrB,KAAvB,EAA6B,EAA7B;AACAA,MAAAA,KAAK,CAACsB,IAAN,CAAWL,IAAX,CAAgBjB,KAAhB;AACH,KATD,MASO,IAAIA,KAAK,CAACG,IAAN,CAAW+F,KAAX,GAAmB,CAAvB,EAA0B;AAC7BlG,MAAAA,KAAK,CAACuD,IAAN,CAAWU,WAAX,CAAuBjE,KAAvB;AACH,KAFM,MAEA;AACHW,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCkB,GAAhC,EAAoC9B,KAAK,CAACG,IAAN,CAAW+F,KAA/C;AACH,KAjBmD,CAkBpD;;AACI,GAnBD;;AAoBA,OAAKQ,gBAAL,GAAsB,UAAS1G,KAAT,EAAeE,QAAf,EAAyB;AAClD,WAAQ,eAAeO,IAAI,CAACC,SAAL,CAAeR,QAAQ,CAACwB,IAAT,CAAcC,IAA7B,CAAvB;AACI,GAFD;;AAGA,OAAKgF,aAAL,GAAmB,UAAS3G,KAAT,EAAgB;AACtC,QAAI4G,IAAI,GAAC5G,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBE,KAAvB,CAA6BY,MAAtC;;AACA,SAAK,IAAIwG,EAAE,GAAC,CAAZ,EAAcA,EAAE,GAACD,IAAjB,EAAsBC,EAAE,EAAxB,EAA4B;AACxB,UAAI3G,QAAQ,GAACF,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBE,KAAvB,CAA6BoH,EAA7B,CAAb;;AACA,UAAIA,EAAE,KAAG7G,KAAK,CAACV,QAAN,CAAeC,OAAf,CAAuBC,GAAhC,EAAqC;AACxCmB,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBiG,EAAnB,EAAsB,MAAtB,EAA6B,KAAKH,gBAAL,CAAsB1G,KAAtB,EAA4BE,QAA5B,CAA7B;AACI,OAFD,MAEO;AACVS,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBiG,EAAnB,EAAsB,MAAtB,EAA6B,KAAKH,gBAAL,CAAsB1G,KAAtB,EAA4BE,QAA5B,CAA7B;AACI;AACJ;;AAAA;AACG,GAVD;AAWH;;AAAA;AACD,eAAeZ,QAAf","sourcesContent":["//console.log(\"Loading NavigateLib.js\");\n\nfunction Navigate() {\n    this.history={pos:0, // position of next snapshot\n\t\t  track:[]\n\t\t };\n    this.home=undefined;\n    this.rank={};          // key rank\n    this.trash={};          // key trash\n    this.maxStore=1000;       // max number of states stored\n    this.reset=function(state) { // store state\n\tstate.Navigate.history={pos:0,track:[]};\n\tthis.store(state);\n    };\n    this.store=function(state) { // store state\n\tvar snapshot=state.Path.getSnapshot(state)\n\t// remove old data...\n\tif (state.Navigate.history.track.length>state.Navigate.history.pos+1) {\n\t    state.Navigate.history.track.length=state.Navigate.history.pos+1;\n\t} else if (state.Navigate.history.track.length > this.maxStore) {\n\t    var keep=this.maxStore;\n\t    state.Navigate.history.track=state.Navigate.history.track.splice(-keep,keep);\n\t};\n\tif (state.Navigate.history.track.length>0) {\n\t    var old=state.Navigate.history.track[state.Navigate.history.track.length-1];\n\t    if (JSON.stringify(snapshot)===JSON.stringify(old)) {\n\t\t//console.log(\"History:\",JSON.stringify(snapshot),JSON.stringify(state.Navigate.history.track));\n\t\tconsole.log(\"Ignoring old image.\");\n\t\treturn false;\n\t    }\n\t}\n\tstate.Navigate.history.track.push(snapshot);\n\tstate.Navigate.history.pos=state.Navigate.history.track.length-1;\n\t//console.log(\">>>>>> Stored state...\",JSON.stringify(state.Navigate.history),\n\t//\t    this.canUndo(state),this.canRedo(state),\n\t//\t    state.Navigate.history.pos,state.Navigate.history.track.length);\n\t//console.log(\">>>>> stored state.\",this.snapshotToString(state,snapshot));\n\t//this.printSnapshot(state);\n\tthis.refreshHistory(state);\n    };\n    this.refreshHistory=function(state) {\n\tif (state.React.Config !== undefined) {\n\t    state.React.Config.show();\n\t};\n    };\n    this.canUndoHistory=function(state) {\n\treturn (state.Navigate.history.pos);\n    };\n    this.undoHistory=function(state) {\n\t//console.log(\">>>>>> Undo:\",this.canUndo(state));\n\tstate.Navigate.history.pos=state.Navigate.history.pos-1;\n\tvar snapshot=state.Navigate.history.track[state.Navigate.history.pos]\n\t//console.log(\"Setting snapshot:\",this.snapshotToString(state,snapshot));\n\tstate.Path.setSnapshot(state,snapshot);\n\tthis.refreshHistory(state);\n\tstate.Path.setMapTitle(state,\"\");\n\tstate.Show.show(state);\n    };\n    this.canUndo=function(state) {\n\treturn (this.canUndoHistory(state));\n    };\n    this.undo=function(state) {\n\t//console.log(\">>>>>> Undo:\",this.canUndo(state));\n\tif (this.canUndoHistory(state)) {\n\t    this.undoHistory(state);\n\t};\n    };\n    this.canRedoPath=function(state) {\n\treturn (state.Path.keys.path.length > 0);\n    };\n    this.redoPath=function(state) {\n\t//console.log(\">>>>>> Undo:\",this.canUndo(state));\n\tvar len=state.Path.keys.path.length;\n\t//console.log(\"Undoing Path:\",len,JSON.stringify(state.Path.keys.path));\n\tif (len>0) {\n\t    var key=state.Path.keys.path[len-1];\n\t    //console.log(\"Undoing:\",key);\n\t    this.onClickPath(state,\"path\",key);\n\t}\n    }\n    this.canRedoHistory=function(state) {\n\treturn (state.Navigate.history.pos < state.Navigate.history.track.length-1);\n    };\n    this.canRedo=function(state) {\n\treturn (this.canRedoHistory(state) || this.canRedoPath(state));\n    };\n    this.redoHistory=function(state) {\n\t//console.log(\">>>>>> Redo:\",this.canRedo(state),state.Navigate.history.pos,JSON.stringify(state.Navigate.history.track));\n\tstate.Navigate.history.pos=state.Navigate.history.pos+1;\t\n\tvar snapshot=state.Navigate.history.track[state.Navigate.history.pos]\n\t//console.log(\"Setting snapshot:\",this.snapshotToString(state,snapshot));\n\tstate.Path.setSnapshot(state,snapshot);\n\tthis.refreshHistory(state);\n\tstate.Path.setMapTitle(state,\"\");\n\tstate.Show.show(state);\n    };\n    this.redo=function(state) {\n\t//console.log(\">>>>>> Redo:\",this.canRedo(state),state.Navigate.history.pos,JSON.stringify(state.Navigate.history.track));\n\tif (this.canRedoHistory(state)) {\n\t    this.redoHistory(state)\n\t} else if (this.canRedoPath(state)) {\n\t    this.redoPath(state)\n\t};\n    };\n    this.onClickTablePath=function(state,skey,tkey) {\n\tvar reload=false;\n\tvar sid=state.Path.keys.other.indexOf(skey);\n\tvar tid=state.Path.keys.other.indexOf(tkey);\n\t//console.log(\"Table path: Sid:\",sid,\" tid:\",tid,skey,tkey);\n\tif (sid !== -1 && tid !== -1) {\n\t    if (sid > tid) {\n\t\tvar src=state.Path.keys.other.splice(sid, 1);                 // remove from path\n\t\tvar trg=state.Path.keys.other.splice(tid, 1);                 // remove from path\n\t\tstate.Utils.pushKey(state.Path.keys.other,src,tid);\n\t\tstate.Utils.pushKey(state.Path.keys.other,trg,sid);\n\t\t//state.Utils.spliceArray(state.Path.keys.other,tid,0,src); // first position (table)\n\t\t//state.Utils.spliceArray(state.Path.keys.other,sid,0,trg); // first position (table)\n\t\tstate.Path.exportAllKeys(state);\n\t\treload=true;\n\t    }\n\t}\n\tstate.Html.setFootnote(state,\"Extracting data.\");\n\tstate.Html.setProgress(state, true);\n\tstate.Navigate.store(state);\n\tstate.Path.setMapTitle(state,\"\");\n\tstate.Show.show(state,reload);\n    };\n    this.onClickRestValue=function(state,val,key,where) {\n\t//console.log(\"onClickRestValue:\",val,key,JSON.stringify(state.Path.keys));\n\tif (state.Auto.selectTableKey(state,key,val,where,1,true)) {\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    state.Html.setProgress(state, true);\n\t    state.Navigate.store(state);\n\t    state.Path.setMapTitle(state,\"\");\n\t    state.Show.show(state);\n\t};\n\t//console.log(\"onClickRestValue done:\",val,key,JSON.stringify(state.Path.keys));\n    };\n    this.onClickPath=function(state,ttyp,tkey) {\n\tvar reload=false; // matrix changed?\n\tvar tid,tin,sin,src,tib;\n\t//console.log(\"Clicked:\",ttyp,tkey,JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other));\n\tif (ttyp  === \"path\") { // path -> table\n\t    tid=state.Path.keys.path.indexOf(tkey);\n\t    if (tid !== -1) {\n\t\tvar range=state.Path.getRange(state,tkey);\n\t\tsrc=state.Path.keys.path.splice(tid, 1);                 // remove from path\n\t\tif (range === undefined) { // remove if this is a range (lat/lon)\n\t\t    state.Utils.pushKey(state.Path.keys.other,src,1);\n\t\t};\n\t\t//state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\t\tstate.Path.cleanSelect(state);\n\t\tstate.Auto.setKeyNumber(state);\n\t\t//state.Auto.reorderKeys(state);\n\t\tstate.Navigate.store(state);\n\t\treload=true;\n\t    }\n\t} else if (ttyp  === \"table\") { // other -> table\n\t    tid=state.Path.keys.other.indexOf(tkey);\n\t    //console.log(\"Tin:\",tin,\" tid:\",tid);\n\t    if (tid !== -1) {\n\t\tsrc=state.Path.keys.other.splice(tid, 1);                 // remove from path\n\t\tstate.Utils.pushKey(state.Path.keys.other,src,0);\n\t\t//state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\t\tstate.Auto.reorderKeys(state);\n\t\tstate.Path.exportAllKeys(state);\n\t\tstate.Navigate.store(state);\n\t\treload=true;\n\t    }\n\t} else if (ttyp === \"rest\") { // rest -> table\n\t    tid=state.Path.keys.other.indexOf(tkey);\n\t    if (tid !== -1) {\n\t\tsrc=state.Path.keys.other.splice(tid, 1);                 // remove from path\n\t\tstate.Utils.pushKey(state.Path.keys.trash,src);\n\t\t//state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\t\tstate.Auto.reorderKeys(state);\n\t\tstate.Navigate.store(state);\n\t\treload=true;\n\t    };\n\t} else if (ttyp === \"trash\") {\n\t    tid=state.Path.keys.trash.indexOf(tkey);\n\t    tin=state.Path.keys.other.indexOf(tkey);\n\t    sin=state.Path.keys.path.indexOf(tkey);\n\t    tib=state.Path.other.table.indexOf(tkey);\n\t    console.log(\"Trashing start:\",JSON.stringify(state.Path.keys.trash),tkey,tid,tin,sin,tib);\n\t    if (tid !== -1) {                                             // trash => other\n\t\tsrc=state.Path.keys.trash.splice(tid, 1);\n\t\tstate.Utils.pushKey(state.Path.keys.other,src);\n\t\t//if ( tin === -1 ) {\n\t\t//    state.Path.keys.other=state.Path.keys.other.concat(src);  // last position\n\t\t//};\n\t    } else if (tin !== -1 && tib !== -1) {                        // table => trash\n\t\tsrc=state.Path.keys.other.splice(tin, 1);\n\t\tstate.Utils.pushKey(state.Path.keys.trash,src);\n\t\tstate.Auto.reorderKeys(state);\n\t\treload=true;\n\t\t//state.Path.keys.trash=state.Path.keys.trash.concat(src);            // last position\n\t    } else if (sin !== -1 && tin === -1) {                         // select => other\n\t\tstate.Utils.pushKey(state.Path.keys.other,tkey);\n\t\t//state.Path.keys.other=state.Path.keys.other.concat(tkey); // last position\n\t    } else if (sin !== -1 && tin !== -1) {                        // other => select\n\t\tsrc=state.Path.keys.other.splice(tin, 1);\n\t    } else if (sin === -1 && tin !== -1) {                        // other => trash\n\t\tsrc=state.Path.keys.other.splice(tin, 1);\n\t\tstate.Utils.pushKey(state.Path.keys.trash,src);\n\t\t//state.Path.keys.trash=state.Path.keys.trash.concat(src);            // last position\n\t    };\n\t    state.Path.exportAllKeys(state);\n\t    state.Navigate.store(state);\n\t    //console.log(\"Trashed:\",JSON.stringify(state.Path.keys.trash),JSON.stringify(state.Path.keys));\n\t}\n\tstate.Html.setFootnote(state,\"Extracting data.\");\n\tstate.Html.setProgress(state, true);\n\t//console.log(\"Showing:\",JSON.stringify(state.Path.other));\n\tstate.Path.setMapTitle(state,\"\");\n\tstate.Show.show(state,reload);\n    };\n    this.onClickAddOther=function(state,ttyp,tkey,active) { // add key to other\n\tvar ntab=state.Path.other.table.length;\n\tvar reload=(ntab!==2); // matrix changed?\n\tvar tid,tin,sin,src;\n\t//console.log(\"Clicked:\",ttyp,tkey,JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other));\n\t//ttyp \"select\", \"rest\", \"trash\"\n\t//console.log(\"Adding start:\",tkey,JSON.stringify(state.Path.keys.trash),JSON.stringify(state.Path.keys));\n\ttid=state.Path.keys.trash.indexOf(tkey);\n\ttin=state.Path.keys.other.indexOf(tkey);\n\tsin=state.Path.keys.path.indexOf(tkey);\n\tif (tin === -1) { // add if not already in state.Path.keys.other\n\t    if (tid !== -1) {                                // trash => other\n\t\tsrc=state.Path.keys.trash.splice(tid, 1);\n\t\tstate.Utils.pushKey(state.Path.keys.other,src); // last position\n\t\tstate.Path.exportAllKeys(state);\n\t\tstate.Auto.setKeyNumber(state);\n\t\t//if ( tin === -1 ) {\n\t\t//    state.Path.keys.other=state.Path.keys.other.concat(src);  // last position\n\t\t//};\n\t    } else if (sin !== -1) {                         // select => other\n\t\tstate.Utils.pushKey(state.Path.keys.other,tkey); // last position\n\t\t//state.Path.keys.other=state.Path.keys.other.concat(tkey); // last position\n\t\tstate.Path.exportAllKeys(state);\n\t\tstate.Auto.setKeyNumber(state);\n\t    } else { // not in trash,select or other, how strange\n\t\tconsole.log(\"Strange key:\",tkey,\n\t\t\t    JSON.stringify(state.Path.keys.trash),\n\t\t\t    JSON.stringify(state.Path.keys));\n\t    };\n\t} else { // remove if in state.Path.keys.other\n\t    if (sin !== -1) { // is already in selected list\n\t\tsrc=state.Path.keys.other.splice(tin, 1);\n\t\tstate.Path.exportAllKeys(state);\n\t\tstate.Auto.setKeyNumber(state);\n\t    } else if ( tid === -1) { // move to trash if its not already there\n\t\tsrc=state.Path.keys.other.splice(tin, 1);\n\t\tstate.Utils.pushKey(state.Path.keys.trash,src);\n\t\tstate.Path.exportAllKeys(state);\n\t\tstate.Auto.setKeyNumber(state);\n\t    } else { // its already in trash, just delete it\n\t\tsrc=state.Path.keys.other.splice(tin, 1);\n\t\tstate.Path.exportAllKeys(state);\n\t\tstate.Auto.setKeyNumber(state);\n\t    }\n\t};\n\tstate.Path.exportAllKeys(state);\n\tstate.Navigate.store(state);\n\t//console.log(\"Keys:\",reload,JSON.stringify(state.Path.keys));\n\t//console.log(\"Trash:\",reload,JSON.stringify(state.Path.trash));\n\t//console.log(\"Other:\",JSON.stringify(state.Path.other));\n\tstate.Path.setMapTitle(state,\"\");\n\tstate.Show.show(state,reload);\n    };\n    this.switchTableKey=function(state,key) {\n\tvar tid=state.Path.keys.other.indexOf(key);\n\tif (tid !== -1) {\n\t    var src=state.Path.keys.other.splice(tid, 1);                 // remove from path\n\t    state.Path.keys.other=state.Path.keys.other.concat(src);  // last position\n\t    //state.Utils.pushKey(state.Path.keys.other,src,0);       // first position\n\t    //state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\t    state.Path.exportAllKeys(state);\n\t    var colkey=state.Path.getColKey(state);\n\t    var rowkey=state.Path.getRowKey(state);\n\t    state.Navigate.store(state);\n\t    var reload=(src[0]!==colkey && src[0]!==rowkey);\n\t    //console.log(\"Switched:\",JSON.stringify(src[0]),colkey,rowkey,reload);\n\t    state.Path.setMapTitle(state,\"\");\n\t    state.Show.show(state,reload);\n\t}\t\n    };\n    this.selectItemRange=function(state,colkey,rowkey,colrange,rowrange,colwhere,rowwhere,colcnt,rowcnt) {\n\tvar rank=state.Utils.cp(state.Path.keys.other);\n\tif (this.setKeyRange(state,colkey,colrange,colwhere,colcnt)) {\n\t    this.rank[colkey]=state.Utils.cp(rank);\n\t    //this.flip[colkey]=this.getFlip(state);\n\t    if (this.setKeyRange(state,rowkey,rowrange,rowwhere,rowcnt)) {\n\t\tthis.rank[rowkey]=state.Utils.cp(rank);\n\t\t//this.last.flip[rowkey]=this.getFlip(state);\n\t    }\n\t    //this.trash[colkey]=state.Path.checkTableKeys(state);\n\t    //console.log(\"state.Path.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n\t};\n\t//console.log(\"Path:\",JSON.stringify(state.Path))\n\tstate.Html.setFootnote(state,\"Extracting data.\");\n\tstate.Html.setProgress(state, true);\n\tstate.Navigate.store(state);\n\tstate.Path.setMapTitle(state,\"\");\n\tstate.Show.show(state);\t\t\n    };\n    this.selectCustom=function(state,layout,colkey,rowkey,colval,rowval,colwhere,rowwhere,colcnt,rowcnt) {\n\t//console.log(\"SelectCustom:\",layout,colkey,rowkey,colval,rowval,colwhere,rowwhere,colcnt,rowcnt);\n\tvar rank=state.Utils.cp(state.Path.keys.other);\n\tvar criteria=state.Custom.getCriteria(state,layout,colval,rowval);\n\tif (criteria !== undefined) {\n\t    var changed=false;\n\t    var keys=Object.keys(criteria);\n\t    var lenk=keys.length;\n\t    for (var kk=0; kk< lenk; kk++) {\n\t\tvar key=keys[kk];\n\t\tvar vals=criteria[key];\n\t\tif (state.Auto.selectTableKey(state,key,vals,colwhere,colcnt)) {\n\t\t    //console.log(\"Selected:\",colkey,colval,JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other));\n\t\t    this.rank[key]=state.Utils.cp(rank);\n\t\t    changed=true;\n\t\t};\n\t    };\n\t    if (changed) {\n\t\t//this.trash[colkey]=state.Path.checkTableKeys(state);\n\t\t//console.log(\"state.Path.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n\t\tstate.Html.setFootnote(state,\"Extracting data.\");\n\t\tstate.Html.setProgress(state, true);\n\t\tstate.Navigate.store(state);\n\t\tstate.Path.setMapTitle(state,\"\");\n\t\tstate.Show.show(state);\n\t    }\n\t    //console.log(\"Found criteria:\",JSON.stringify(criteria));\n\t} else {\n\t    this.selectItem(state,colkey,rowkey,colval,rowval,colwhere,rowwhere,colcnt,rowcnt);\n\t}\n    };\n    this.selectItem=function(state,colkey,rowkey,colval,rowval,colwhere,rowwhere,colcnt,rowcnt) {\n\t//console.log(\"Selectitem:\",colkey,rowkey,colval,rowval,colwhere,rowwhere,colcnt,rowcnt);\n\t//var colkey=state.Path.getColKey(state);\n\t//var rowkey=state.Path.getRowKey(state);\n\tvar rank=state.Utils.cp(state.Path.keys.other);\n\t//console.log(\"SelectItem:\",colkey,\"=\",colval,\"  \",rowkey,\"=\",rowval);\n\tvar changed=false;\n\tif (state.Auto.selectTableKey(state,colkey,colval,colwhere,colcnt)) {\n\t    //console.log(\"Selected:\",colkey,colval,JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other));\n\t    this.rank[colkey]=state.Utils.cp(rank);\n\t    changed=true;\n\t} else if (state.Path.tkeys < 2) {\n\t    state.Auto.reorderKeys(state);\n\t} else {\n\t    console.log(\"Unable to select:\",colkey,state.Path.tkeys);\n\t};\n\tif (state.Auto.selectTableKey(state,rowkey,rowval,rowwhere,rowcnt)) {\n\t    //console.log(\"Selected:\",rowkey,rowval,JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other));\n\t    this.rank[rowkey]=state.Utils.cp(rank);\n\t    changed=true;\n\t} else if (state.Path.tkeys < 2) {\n\t    state.Auto.reorderKeys(state);\n\t} else {\n\t    console.log(\"Unable to select:\",rowkey,state.Path.tkeys);\n\t}\n\tif (changed) {\n\t    //this.trash[colkey]=state.Path.checkTableKeys(state);\n\t    //console.log(\"state.Path.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    state.Html.setProgress(state, true);\n\t    state.Navigate.store(state);\n\t    state.Path.setMapTitle(state,\"\");\n\t    state.Show.show(state);\n\t}\n\t//console.log(\"Selectitem Done:\",rowwhere,colwhere);\n    };\n    this.setKeyRange=function(state,key,range,where,cnt) { // keep abscissa\n\t//console.log(\"Table.Selecting:\",key,\"=\",val,\", where=\",where);\n\tstate.Path.select.range[key]=[range.min,range.max];\n\tstate.Path.where[key]=where;\n\t//console.log(\"setKeyRange:\",key,JSON.stringify(state.Path.select.range[key]));\n\tif (state.Utils.missing(state.Path.keys.path,key)) {\n\t    //console.log(\"Adding to path:\",key);\n\t    state.Utils.pushKey(state.Path.keys.path,key);\n\t    //state.Path.keys.path=state.Path.keys.path.concat(key); // last path position\n\t};\n\treturn true;\n    };\n    this.selectKeyRange=function(state,key,range,where,cnt) {\n\tvar rank=state.Utils.cp(state.Path.keys.other);\n\tif (this.setKeyRange(state,key,range,where,cnt)) {\n\t    this.rank[key]=state.Utils.cp(rank);\n\t}\n\tstate.Html.setFootnote(state,\"Extracting data.\");\n\tstate.Html.setProgress(state, true);\n\tstate.Navigate.store(state);\n\tstate.Path.setMapTitle(state,\"\");\n\tstate.Show.show(state);\n    };\n    this.selectKey=function(state,key,val,where,cnt) {\n\tvar rank=state.Utils.cp(state.Path.keys.other);\n\t//console.log(\"SelecRow: rowkey=\",key,\" val=\",val);\n\t//console.log(\"SelectKey:\",key,val,where,cnt);\n\tif (state.Auto.selectTableKey(state,key,val,where,cnt)) {\n\t    this.rank[key]=rank;\n\t    //this.trash[key]=state.Path.checkTableKeys(state);\n\t    //console.log(\"state.Path.checkTableKeys Done.\",rowkey,JSON.stringify(this.trash[key]));\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    state.Html.setProgress(state, true);\n\t    state.Navigate.store(state);\n\t    state.Path.setMapTitle(state,\"\");\n\t    state.Show.show(state);\n\t} else if (state.Path.tkeys < 2) {\n\t    state.Auto.reorderKeys(state);\n\t} else {\n\t    console.log(\"Unable to select:\",key,state.Path.tkeys);\n\t}\n\t//console.log(\"Finally:\",JSON.stringify(state.Path.keys.other));\n    };\n    this.snapshotToString=function(state,snapshot) {\n\treturn (\"Snapshot: \" + JSON.stringify(snapshot.keys.path));\n    };\n    this.printSnapshot=function(state) {\n\tvar lenv=state.Navigate.history.track.length;\n\tfor (var ii=0;ii<lenv;ii++) {\n\t    var snapshot=state.Navigate.history.track[ii];\n\t    if (ii===state.Navigate.history.pos) {\n\t\tconsole.log(\"@@@@\",ii,\" => \",this.snapshotToString(state,snapshot));\n\t    } else {\n\t\tconsole.log(\"    \",ii,\" => \",this.snapshotToString(state,snapshot));\n\t    }\n\t};\n    };\n};\nexport default Navigate;\n"]},"metadata":{},"sourceType":"module"}