{"ast":null,"code":"//console.log(\"Loading ThresholdLib.js\");\nfunction Threshold() {\n  this.thrs = undefined; // threshold parameter levels, set by Default\n  //this.imax=0;        // threshold item types\n  //this.ithr=1;\n  //this.ikey=2;\n  //this.ilev=3;\n  //this.ival=4;\n\n  this.init = function (state) {\n    state.Utils.init(\"Threshold\", this);\n  };\n\n  this.getMaxLevel = function (doc) {\n    if (doc._thr !== undefined) {\n      if (doc._thr.max !== undefined) {\n        return doc._thr.max.length;\n      } else if (doc._thr.min !== undefined) {\n        return doc._thr.min.length;\n      }\n    } else {\n      return -1;\n    }\n  };\n\n  this.setThresholds = function (doc, ithrs) {\n    //var debug = (doc.Phenomenon===\"Regn\" && doc.Duration===\"12t\" && doc.Region===\"Innlandet\" && doc.dtg===\"2019-06-26_11\");\n    if (doc._thr !== undefined) {\n      return [];\n    } else {\n      var thrs;\n\n      if (ithrs === undefined) {\n        thrs = this.thrs;\n      } else {\n        thrs = ithrs;\n      }\n\n      ; //if (debug) {console.log(\"Entering with:\",JSON.stringify(doc));};\n      //if (debug) {console.log(\"     --> with:\",JSON.stringify(ithrs));};\n      //if (debug) {console.log(\"      -> with:\",JSON.stringify(thrs));};\n\n      for (var trgkey in thrs) {\n        // loop over thresholds\n        if (doc[trgkey] !== undefined) {\n          var trgval = doc[trgkey]; // trgval-value\n\n          if (thrs[trgkey][trgval] !== undefined) {\n            //if (debug) {console.log(\"Found:\",trgkey,trgval,JSON.stringify(thrs[trgkey][trgval]));};\n            var mlen, jj;\n\n            if (thrs[trgkey][trgval].key === undefined) {\n              // there is another level\n              //if (debug) {console.log(\"   Iterating with:\",JSON.stringify(thrs[trgkey][trgval]));};\n              return this.setThresholds(doc, thrs[trgkey][trgval]);\n            } else if (doc[thrs[trgkey][trgval].key] !== undefined) {\n              var thr = thrs[trgkey][trgval]; //doc.threshold=thr;\n\n              var rank;\n              var val = doc[thr[\"key\"]];\n              var maxs = thr[\">\"];\n              var mins = thr[\"<\"];\n              var doclev = -1; // found thresholds, but will we find a valid level?\n\n              if (maxs !== undefined) {\n                // above thresholds\n                //if (debug) {console.log(\"Thresholds:\",JSON.stringify(maxs),val);};\n                var docmax = Number(val);\n                mlen = maxs.length; // get new level\n\n                for (jj = 0; jj < mlen; jj++) {\n                  if (docmax >= Number(maxs[jj])) {\n                    //if (debug) {console.log(\"Hit:\",docmax,jj,maxs[jj],docmax>=maxs[jj],doclev);}\n                    doclev = jj;\n                  }\n                }\n\n                ;\n                rank = 0; // universal rank\n\n                if (doclev > -1) {\n                  rank = (docmax - Number(maxs[0])) / (Number(maxs[mlen - 1]) - Number(maxs[0]));\n                }\n\n                ; //if (debug) {console.log(\"Level:\",docmax,doclev,JSON.stringify(maxs));}\n\n                doc.level = String(doclev);\n                doc._rank = rank;\n                doc.lat = parseFloat(doc[thr[\"lat\"]]);\n                doc.lon = parseFloat(doc[thr[\"lon\"]]);\n                doc._thr = {};\n                doc._thr.level = doclev;\n                doc._thr.val = docmax;\n                doc._thr.lat = doc[thr[\"lat\"]];\n                doc._thr.lon = doc[thr[\"lon\"]];\n                doc._thr.max = maxs;\n                return [\"level\", \"val\", \"lat\", \"lon\", \"max\"];\n              } else if (mins !== undefined) {\n                // below thresholds\n                //if (debug) {console.log(\"Thresholds:\",JSON.stringify(mins),val);};\n                var docmin = Number(val); // get new level\n\n                mlen = mins.length;\n\n                for (jj = 0; jj < mlen; jj++) {\n                  if (docmin <= Number(mins[jj])) {\n                    doclev = jj;\n                  }\n                }\n\n                rank = 0; // universal rank\n\n                if (doclev > 0) {\n                  rank = (Number(mins[0]) - docmin) / (Number(mins[0]) - Number(mins[mlen - 1]));\n                }\n\n                ;\n                doc.level = doclev;\n                doc._rank = rank;\n                doc.lat = doc[thr[\"lat\"]];\n                doc.lon = doc[thr[\"lon\"]];\n                doc._thr = {};\n                doc._thr.level = doclev;\n                doc._thr.val = docmin;\n                doc._thr.lat = doc[thr[\"lat\"]];\n                doc._thr.lon = doc[thr[\"lon\"]];\n                doc._thr.min = mins;\n                return [\"level\", \"val\", \"lat\", \"lon\", \"min\"];\n              } else {//if (debug) {console.log(\"No Thresholds:\",JSON.stringify(thrs),val);};\n              }\n            }\n          }\n        }\n      }\n\n      doc.lat = 0;\n      doc.lon = 0;\n      doc._thr = {\n        lat: 0,\n        lon: 0,\n        level: -2\n      }; // no thresholds found...\n    }\n\n    return [];\n  }; // call after this.setThresholds\n\n\n  this.getLevel = function (state, doc) {\n    //console.log(\"GetLevel:\",JSON.stringify(doc));\n    if (doc._thr !== undefined) {\n      return doc._thr.level;\n    } else {\n      return -1;\n    }\n  };\n\n  this.getRank = function (state, doc) {\n    if (doc._thr !== undefined) {\n      return doc._rank;\n    } else {\n      return 0;\n    }\n  };\n\n  this.getLat = function (state, doc) {\n    if (doc._thr !== undefined) {\n      return doc._thr.lat;\n    } else {\n      return 0;\n    }\n  };\n\n  this.getLon = function (state, doc) {\n    if (doc._thr !== undefined) {\n      return doc._thr.lon;\n    } else {\n      return 0;\n    }\n  };\n}\n\n;\nexport default Threshold;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/ThresholdLib.js"],"names":["Threshold","thrs","undefined","init","state","Utils","getMaxLevel","doc","_thr","max","length","min","setThresholds","ithrs","trgkey","trgval","mlen","jj","key","thr","rank","val","maxs","mins","doclev","docmax","Number","level","String","_rank","lat","parseFloat","lon","docmin","getLevel","getRank","getLat","getLon"],"mappings":"AAAA;AAEA,SAASA,SAAT,GAAqB;AACjB,OAAKC,IAAL,GAAUC,SAAV,CADiB,CACI;AACrB;AACA;AACA;AACA;AACA;;AACA,OAAKC,IAAL,GAAU,UAASC,KAAT,EAAe;AAC5BA,IAAAA,KAAK,CAACC,KAAN,CAAYF,IAAZ,CAAiB,WAAjB,EAA6B,IAA7B;AACI,GAFD;;AAGA,OAAKG,WAAL,GAAiB,UAASC,GAAT,EAAc;AAClC,QAAIA,GAAG,CAACC,IAAJ,KAAaN,SAAjB,EAA4B;AACxB,UAAIK,GAAG,CAACC,IAAJ,CAASC,GAAT,KAAiBP,SAArB,EAAgC;AACnC,eAAOK,GAAG,CAACC,IAAJ,CAASC,GAAT,CAAaC,MAApB;AACI,OAFD,MAEO,IAAIH,GAAG,CAACC,IAAJ,CAASG,GAAT,KAAiBT,SAArB,EAAgC;AAC1C,eAAOK,GAAG,CAACC,IAAJ,CAASG,GAAT,CAAaD,MAApB;AACI;AACJ,KAND,MAMO;AACH,aAAO,CAAC,CAAR;AACH;AACG,GAVD;;AAWA,OAAKE,aAAL,GAAmB,UAASL,GAAT,EAAaM,KAAb,EAAoB;AAC1C;AACA,QAAIN,GAAG,CAACC,IAAJ,KAAaN,SAAjB,EAA4B;AACxB,aAAO,EAAP;AACH,KAFD,MAEO;AACH,UAAID,IAAJ;;AACA,UAAIY,KAAK,KAAKX,SAAd,EAAyB;AAC5BD,QAAAA,IAAI,GAAC,KAAKA,IAAV;AACI,OAFD,MAEO;AACVA,QAAAA,IAAI,GAACY,KAAL;AACI;;AAAA,OANE,CAOH;AACA;AACA;;AACA,WAAK,IAAIC,MAAT,IAAmBb,IAAnB,EAAyB;AAAE;AAC9B,YAAIM,GAAG,CAACO,MAAD,CAAH,KAAgBZ,SAApB,EAA+B;AAC3B,cAAIa,MAAM,GAACR,GAAG,CAACO,MAAD,CAAd,CAD2B,CACH;;AACxB,cAAIb,IAAI,CAACa,MAAD,CAAJ,CAAaC,MAAb,MAAyBb,SAA7B,EAAwC;AAC3C;AACA,gBAAIc,IAAJ,EAASC,EAAT;;AACA,gBAAIhB,IAAI,CAACa,MAAD,CAAJ,CAAaC,MAAb,EAAqBG,GAArB,KAA6BhB,SAAjC,EAA4C;AAAE;AAC1C;AACA,qBAAO,KAAKU,aAAL,CAAmBL,GAAnB,EAAuBN,IAAI,CAACa,MAAD,CAAJ,CAAaC,MAAb,CAAvB,CAAP;AACH,aAHD,MAGO,IAAIR,GAAG,CAACN,IAAI,CAACa,MAAD,CAAJ,CAAaC,MAAb,EAAqBG,GAAtB,CAAH,KAAkChB,SAAtC,EAAiD;AACpD,kBAAIiB,GAAG,GAAGlB,IAAI,CAACa,MAAD,CAAJ,CAAaC,MAAb,CAAV,CADoD,CAEpD;;AACA,kBAAIK,IAAJ;AACA,kBAAIC,GAAG,GAAGd,GAAG,CAACY,GAAG,CAAC,KAAD,CAAJ,CAAb;AACA,kBAAIG,IAAI,GAAGH,GAAG,CAAC,GAAD,CAAd;AACA,kBAAII,IAAI,GAAGJ,GAAG,CAAC,GAAD,CAAd;AACA,kBAAIK,MAAM,GAAC,CAAC,CAAZ,CAPoD,CAOrC;;AACf,kBAAIF,IAAI,KAAKpB,SAAb,EAAwB;AAAE;AAC7B;AACA,oBAAIuB,MAAM,GAACC,MAAM,CAACL,GAAD,CAAjB;AACAL,gBAAAA,IAAI,GAACM,IAAI,CAACZ,MAAV,CAH2B,CAI3B;;AACA,qBAAKO,EAAE,GAAG,CAAV,EAAaA,EAAE,GAAGD,IAAlB,EAAwBC,EAAE,EAA1B,EAA8B;AAC1B,sBAAIQ,MAAM,IAAIC,MAAM,CAACJ,IAAI,CAACL,EAAD,CAAL,CAApB,EAAgC;AACnC;AACAO,oBAAAA,MAAM,GAACP,EAAP;AACI;AACJ;;AAAA;AACDG,gBAAAA,IAAI,GAAC,CAAL,CAX2B,CAWnB;;AACR,oBAAII,MAAM,GAAG,CAAC,CAAd,EAAiB;AAACJ,kBAAAA,IAAI,GAAE,CAACK,MAAM,GAACC,MAAM,CAACJ,IAAI,CAAC,CAAD,CAAL,CAAd,KAA0BI,MAAM,CAACJ,IAAI,CAACN,IAAI,GAAC,CAAN,CAAL,CAAN,GAAqBU,MAAM,CAACJ,IAAI,CAAC,CAAD,CAAL,CAArD,CAAN;AAAuE;;AAAA,iBAZ9D,CAa3B;;AACAf,gBAAAA,GAAG,CAACoB,KAAJ,GAAUC,MAAM,CAACJ,MAAD,CAAhB;AACAjB,gBAAAA,GAAG,CAACsB,KAAJ,GAAUT,IAAV;AACAb,gBAAAA,GAAG,CAACuB,GAAJ,GAAQC,UAAU,CAACxB,GAAG,CAACY,GAAG,CAAC,KAAD,CAAJ,CAAJ,CAAlB;AACAZ,gBAAAA,GAAG,CAACyB,GAAJ,GAAQD,UAAU,CAACxB,GAAG,CAACY,GAAG,CAAC,KAAD,CAAJ,CAAJ,CAAlB;AACAZ,gBAAAA,GAAG,CAACC,IAAJ,GAAS,EAAT;AACAD,gBAAAA,GAAG,CAACC,IAAJ,CAASmB,KAAT,GAAeH,MAAf;AACAjB,gBAAAA,GAAG,CAACC,IAAJ,CAASa,GAAT,GAAaI,MAAb;AACAlB,gBAAAA,GAAG,CAACC,IAAJ,CAASsB,GAAT,GAAavB,GAAG,CAACY,GAAG,CAAC,KAAD,CAAJ,CAAhB;AACAZ,gBAAAA,GAAG,CAACC,IAAJ,CAASwB,GAAT,GAAazB,GAAG,CAACY,GAAG,CAAC,KAAD,CAAJ,CAAhB;AACAZ,gBAAAA,GAAG,CAACC,IAAJ,CAASC,GAAT,GAAaa,IAAb;AACA,uBAAO,CAAC,OAAD,EAAS,KAAT,EAAe,KAAf,EAAqB,KAArB,EAA2B,KAA3B,CAAP;AACI,eAzBD,MAyBO,IAAIC,IAAI,KAAKrB,SAAb,EAAwB;AAAE;AACpC;AACA,oBAAI+B,MAAM,GAACP,MAAM,CAACL,GAAD,CAAjB,CAFkC,CAGlC;;AACAL,gBAAAA,IAAI,GAACO,IAAI,CAACb,MAAV;;AACA,qBAAKO,EAAE,GAAG,CAAV,EAAaA,EAAE,GAAGD,IAAlB,EAAwBC,EAAE,EAA1B,EAA8B;AAC1B,sBAAIgB,MAAM,IAAIP,MAAM,CAACH,IAAI,CAACN,EAAD,CAAL,CAApB,EAAgC;AACnCO,oBAAAA,MAAM,GAACP,EAAP;AACI;AACJ;;AACDG,gBAAAA,IAAI,GAAC,CAAL,CAVkC,CAU1B;;AACR,oBAAII,MAAM,GAAG,CAAb,EAAgB;AAACJ,kBAAAA,IAAI,GAAC,CAACM,MAAM,CAACH,IAAI,CAAC,CAAD,CAAL,CAAN,GAAgBU,MAAjB,KAA0BP,MAAM,CAACH,IAAI,CAAC,CAAD,CAAL,CAAN,GAAgBG,MAAM,CAACH,IAAI,CAACP,IAAI,GAAC,CAAN,CAAL,CAAhD,CAAL;AAAsE;;AAAA;AACvFT,gBAAAA,GAAG,CAACoB,KAAJ,GAAUH,MAAV;AACAjB,gBAAAA,GAAG,CAACsB,KAAJ,GAAUT,IAAV;AACAb,gBAAAA,GAAG,CAACuB,GAAJ,GAAQvB,GAAG,CAACY,GAAG,CAAC,KAAD,CAAJ,CAAX;AACAZ,gBAAAA,GAAG,CAACyB,GAAJ,GAAQzB,GAAG,CAACY,GAAG,CAAC,KAAD,CAAJ,CAAX;AACAZ,gBAAAA,GAAG,CAACC,IAAJ,GAAS,EAAT;AACAD,gBAAAA,GAAG,CAACC,IAAJ,CAASmB,KAAT,GAAeH,MAAf;AACAjB,gBAAAA,GAAG,CAACC,IAAJ,CAASa,GAAT,GAAaY,MAAb;AACA1B,gBAAAA,GAAG,CAACC,IAAJ,CAASsB,GAAT,GAAavB,GAAG,CAACY,GAAG,CAAC,KAAD,CAAJ,CAAhB;AACAZ,gBAAAA,GAAG,CAACC,IAAJ,CAASwB,GAAT,GAAazB,GAAG,CAACY,GAAG,CAAC,KAAD,CAAJ,CAAhB;AACAZ,gBAAAA,GAAG,CAACC,IAAJ,CAASG,GAAT,GAAaY,IAAb;AACA,uBAAO,CAAC,OAAD,EAAS,KAAT,EAAe,KAAf,EAAqB,KAArB,EAA2B,KAA3B,CAAP;AACI,eAvBM,MAuBA,CACV;AACI;AACJ;AACG;AACJ;AACG;;AACDhB,MAAAA,GAAG,CAACuB,GAAJ,GAAQ,CAAR;AACAvB,MAAAA,GAAG,CAACyB,GAAJ,GAAQ,CAAR;AACAzB,MAAAA,GAAG,CAACC,IAAJ,GAAS;AAACsB,QAAAA,GAAG,EAAC,CAAL;AAAOE,QAAAA,GAAG,EAAC,CAAX;AAAaL,QAAAA,KAAK,EAAC,CAAC;AAApB,OAAT,CApFG,CAoF6B;AACnC;;AACD,WAAO,EAAP;AACI,GA3FD,CArBiB,CAiHjB;;;AACA,OAAKO,QAAL,GAAc,UAAS9B,KAAT,EAAeG,GAAf,EAAoB;AACrC;AACA,QAAIA,GAAG,CAACC,IAAJ,KAAaN,SAAjB,EAA4B;AACxB,aAAOK,GAAG,CAACC,IAAJ,CAASmB,KAAhB;AACH,KAFD,MAEO;AACH,aAAO,CAAC,CAAR;AACH;AACG,GAPD;;AAQA,OAAKQ,OAAL,GAAa,UAAS/B,KAAT,EAAeG,GAAf,EAAoB;AACpC,QAAIA,GAAG,CAACC,IAAJ,KAAaN,SAAjB,EAA4B;AACxB,aAAOK,GAAG,CAACsB,KAAX;AACH,KAFD,MAEO;AACH,aAAO,CAAP;AACH;AACG,GAND;;AAOA,OAAKO,MAAL,GAAY,UAAShC,KAAT,EAAeG,GAAf,EAAoB;AACnC,QAAIA,GAAG,CAACC,IAAJ,KAAaN,SAAjB,EAA4B;AACxB,aAAOK,GAAG,CAACC,IAAJ,CAASsB,GAAhB;AACH,KAFD,MAEO;AACH,aAAO,CAAP;AACH;AACG,GAND;;AAOA,OAAKO,MAAL,GAAY,UAASjC,KAAT,EAAeG,GAAf,EAAoB;AACnC,QAAIA,GAAG,CAACC,IAAJ,KAAaN,SAAjB,EAA4B;AACxB,aAAOK,GAAG,CAACC,IAAJ,CAASwB,GAAhB;AACH,KAFD,MAEO;AACH,aAAO,CAAP;AACH;AACG,GAND;AAOH;;AAAA;AACD,eAAehC,SAAf","sourcesContent":["//console.log(\"Loading ThresholdLib.js\");\n\nfunction Threshold() {\n    this.thrs=undefined; // threshold parameter levels, set by Default\n    //this.imax=0;        // threshold item types\n    //this.ithr=1;\n    //this.ikey=2;\n    //this.ilev=3;\n    //this.ival=4;\n    this.init=function(state){\n\tstate.Utils.init(\"Threshold\",this);\n    };\n    this.getMaxLevel=function(doc) {\n\tif (doc._thr !== undefined) {\n\t    if (doc._thr.max !== undefined) {\n\t\treturn doc._thr.max.length;\n\t    } else if (doc._thr.min !== undefined) {\n\t\treturn doc._thr.min.length;\n\t    }\n\t} else {\n\t    return -1;\n\t}\n    };\n    this.setThresholds=function(doc,ithrs) {\n\t//var debug = (doc.Phenomenon===\"Regn\" && doc.Duration===\"12t\" && doc.Region===\"Innlandet\" && doc.dtg===\"2019-06-26_11\");\n\tif (doc._thr !== undefined) {\n\t    return [];\n\t} else {\n\t    var thrs;\n\t    if (ithrs === undefined) {\n\t\tthrs=this.thrs;\n\t    } else {\n\t\tthrs=ithrs;\n\t    };\n\t    //if (debug) {console.log(\"Entering with:\",JSON.stringify(doc));};\n\t    //if (debug) {console.log(\"     --> with:\",JSON.stringify(ithrs));};\n\t    //if (debug) {console.log(\"      -> with:\",JSON.stringify(thrs));};\n\t    for (var trgkey in thrs) { // loop over thresholds\n\t\tif (doc[trgkey] !== undefined) {\n\t\t    var trgval=doc[trgkey]; // trgval-value\n\t\t    if (thrs[trgkey][trgval] !== undefined) {\n\t\t\t//if (debug) {console.log(\"Found:\",trgkey,trgval,JSON.stringify(thrs[trgkey][trgval]));};\n\t\t\tvar mlen,jj;\n\t\t\tif (thrs[trgkey][trgval].key === undefined) { // there is another level\n\t\t\t    //if (debug) {console.log(\"   Iterating with:\",JSON.stringify(thrs[trgkey][trgval]));};\n\t\t\t    return this.setThresholds(doc,thrs[trgkey][trgval]);\n\t\t\t} else if (doc[thrs[trgkey][trgval].key] !== undefined) {\n\t\t\t    var thr = thrs[trgkey][trgval]\n\t\t\t    //doc.threshold=thr;\n\t\t\t    var rank;\n\t\t\t    var val = doc[thr[\"key\"]];\n\t\t\t    var maxs = thr[\">\"];\n\t\t\t    var mins = thr[\"<\"];\n\t\t\t    var doclev=-1; // found thresholds, but will we find a valid level?\n\t\t\t    if (maxs !== undefined) { // above thresholds\n\t\t\t\t//if (debug) {console.log(\"Thresholds:\",JSON.stringify(maxs),val);};\n\t\t\t\tvar docmax=Number(val);\n\t\t\t\tmlen=maxs.length;\n\t\t\t\t// get new level\n\t\t\t\tfor (jj = 0; jj < mlen; jj++) {\n\t\t\t\t    if (docmax >= Number(maxs[jj])) {\n\t\t\t\t\t//if (debug) {console.log(\"Hit:\",docmax,jj,maxs[jj],docmax>=maxs[jj],doclev);}\n\t\t\t\t\tdoclev=jj;\n\t\t\t\t    }\n\t\t\t\t};\n\t\t\t\trank=0; // universal rank\n\t\t\t\tif (doclev > -1) {rank= (docmax-Number(maxs[0]))/(Number(maxs[mlen-1])-Number(maxs[0]));};\n\t\t\t\t//if (debug) {console.log(\"Level:\",docmax,doclev,JSON.stringify(maxs));}\n\t\t\t\tdoc.level=String(doclev);\n\t\t\t\tdoc._rank=rank;\n\t\t\t\tdoc.lat=parseFloat(doc[thr[\"lat\"]]);\n\t\t\t\tdoc.lon=parseFloat(doc[thr[\"lon\"]]);\n\t\t\t\tdoc._thr={};\n\t\t\t\tdoc._thr.level=doclev;\n\t\t\t\tdoc._thr.val=docmax\n\t\t\t\tdoc._thr.lat=doc[thr[\"lat\"]];\n\t\t\t\tdoc._thr.lon=doc[thr[\"lon\"]];\n\t\t\t\tdoc._thr.max=maxs;\n\t\t\t\treturn [\"level\",\"val\",\"lat\",\"lon\",\"max\"];\n\t\t\t    } else if (mins !== undefined) { // below thresholds\n\t\t\t\t//if (debug) {console.log(\"Thresholds:\",JSON.stringify(mins),val);};\n\t\t\t\tvar docmin=Number(val);\n\t\t\t\t// get new level\n\t\t\t\tmlen=mins.length;\n\t\t\t\tfor (jj = 0; jj < mlen; jj++) {\n\t\t\t\t    if (docmin <= Number(mins[jj])) {\n\t\t\t\t\tdoclev=jj;\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\trank=0; // universal rank\n\t\t\t\tif (doclev > 0) {rank=(Number(mins[0])-docmin)/(Number(mins[0])-Number(mins[mlen-1]));};\n\t\t\t\tdoc.level=doclev;\n\t\t\t\tdoc._rank=rank;\n\t\t\t\tdoc.lat=doc[thr[\"lat\"]];\n\t\t\t\tdoc.lon=doc[thr[\"lon\"]];\n\t\t\t\tdoc._thr={};\n\t\t\t\tdoc._thr.level=doclev;\n\t\t\t\tdoc._thr.val=docmin\n\t\t\t\tdoc._thr.lat=doc[thr[\"lat\"]];\n\t\t\t\tdoc._thr.lon=doc[thr[\"lon\"]];\n\t\t\t\tdoc._thr.min=mins;\n\t\t\t\treturn [\"level\",\"val\",\"lat\",\"lon\",\"min\"];\n\t\t\t    } else {\n\t\t\t\t//if (debug) {console.log(\"No Thresholds:\",JSON.stringify(thrs),val);};\n\t\t\t    }\n\t\t\t}\n\t\t    }\n\t\t}\n\t    }\n\t    doc.lat=0;\n\t    doc.lon=0;\n\t    doc._thr={lat:0,lon:0,level:-2};// no thresholds found...\n\t}\n\treturn [];\n    };\n    // call after this.setThresholds\n    this.getLevel=function(state,doc) {\n\t//console.log(\"GetLevel:\",JSON.stringify(doc));\n\tif (doc._thr !== undefined) {\n\t    return doc._thr.level;\n\t} else {\n\t    return -1;\n\t}\n    }\n    this.getRank=function(state,doc) {\n\tif (doc._thr !== undefined) {\n\t    return doc._rank;\n\t} else {\n\t    return 0;\n\t}\n    };\n    this.getLat=function(state,doc) {\n\tif (doc._thr !== undefined) {\n\t    return doc._thr.lat;\n\t} else {\n\t    return 0;\n\t}\n    }\n    this.getLon=function(state,doc) {\n\tif (doc._thr !== undefined) {\n\t    return doc._thr.lon;\n\t} else {\n\t    return 0;\n\t}\n    };\n};\nexport default Threshold;\n"]},"metadata":{},"sourceType":"module"}