{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/franktt/react/varseltavle_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/franktt/react/varseltavle_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle_new/src/react/ViewComponent.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ViewPathIcon from '@material-ui/icons/Explore';\nimport NoViewPathIcon from '@material-ui/icons/ExploreOff'; //import ViewPathIcon from '@material-ui/icons/Visibility';\n//import NoViewPathIcon from '@material-ui/icons/VisibilityOff';\n\nvar styles = function styles(theme) {\n  return {\n    view: {\n      marginLeft: 'auto'\n    },\n    button: {\n      color: 'white'\n    },\n    buttonInvisible: {\n      color: 'gray'\n    }\n  };\n};\n\nfunction ViewPathIconMode(props) {\n  var state = props.state;\n  var mode = state.Layout.state.viewMode;\n\n  if (mode === state.Layout.modes.view.path) {\n    return /*#__PURE__*/React.createElement(ViewPathIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(NoViewPathIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 10\n      }\n    });\n  }\n}\n\n;\n\nvar View = /*#__PURE__*/function (_Component) {\n  _inherits(View, _Component);\n\n  var _super = _createSuper(View);\n\n  function View() {\n    _classCallCheck(this, View);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(View, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state,\n          visible = _this$props.visible;\n      var onclick, title;\n\n      if (visible !== undefined && !visible && state.Settings.isInvisible(state, \"Path\")) {\n        return null;\n      } else if (visible !== undefined) {\n        onclick = function onclick() {\n          return state.Layout.toggleView(state);\n        };\n\n        title = \"Show path\";\n        return /*#__PURE__*/React.createElement(Button, {\n          className: classes.button,\n          onClick: onclick,\n          title: title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 3\n          }\n        }, /*#__PURE__*/React.createElement(ViewPathIconMode, {\n          state: state,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 10\n          }\n        }));\n      } else {\n        onclick = function onclick() {\n          state.Settings.toggle(state, \"Path\");\n        };\n\n        title = \"Show View\";\n\n        if (state.Settings.isInvisible(state, \"Path\")) {\n          return /*#__PURE__*/React.createElement(Button, {\n            className: classes.buttonInvisible,\n            onClick: onclick,\n            title: title,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(ViewPathIconMode, {\n            state: state,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 7\n            }\n          }));\n        } else {\n          return /*#__PURE__*/React.createElement(Button, {\n            className: classes.button,\n            onClick: onclick,\n            title: title,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(ViewPathIconMode, {\n            state: state,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 7\n            }\n          }));\n        }\n      }\n    }\n  }]);\n\n  return View;\n}(Component);\n\nView.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(View);","map":{"version":3,"sources":["/home/franktt/react/varseltavle_new/src/react/ViewComponent.js"],"names":["React","Component","PropTypes","withStyles","Button","ViewPathIcon","NoViewPathIcon","styles","theme","view","marginLeft","button","color","buttonInvisible","ViewPathIconMode","props","state","mode","Layout","viewMode","modes","path","View","classes","visible","onclick","title","undefined","Settings","isInvisible","toggleView","toggle","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport ViewPathIcon from '@material-ui/icons/Explore';\nimport NoViewPathIcon from '@material-ui/icons/ExploreOff';\n//import ViewPathIcon from '@material-ui/icons/Visibility';\n//import NoViewPathIcon from '@material-ui/icons/VisibilityOff';\n\nconst styles = theme => ({\n    view: {\n        marginLeft: 'auto',\n    },\n    button:{\n\tcolor:'white'\n    },\n    buttonInvisible:{\n\tcolor:'gray'\n    },\n});\nfunction ViewPathIconMode (props) {\n    const {state} = props;\n    var mode=state.Layout.state.viewMode;\n    if (mode === state.Layout.modes.view.path) {\n\treturn (<ViewPathIcon/>);\n    } else {\n\treturn (<NoViewPathIcon/>);\n    }\n};\nclass View extends Component {\n    render() {\n\tconst {classes, state, visible}=this.props;\n\tvar onclick, title;\n\tif (visible !== undefined && ! visible && state.Settings.isInvisible(state,\"Path\")) {\n\t    return null;\n\t} else if (visible !== undefined) {\n\t    onclick= () => state.Layout.toggleView(state);\n\t    title=\"Show path\";\n\t    return (\n\t\t<Button\n\t           className={classes.button}\n                   onClick={onclick}\n\t           title={title}\n\t\t >\n\t  \t    {<ViewPathIconMode state={state}/>}\n                 </Button>\n\t    );\n\t} else {\n\t    onclick=() => {state.Settings.toggle(state,\"Path\");};\n\t    title=\"Show View\";\n\t    if (state.Settings.isInvisible(state,\"Path\")) {\n\t\treturn (<Button\n\t\t\tclassName={classes.buttonInvisible}\n\t\t\tonClick={onclick}\n\t\t\ttitle={title}\n\t\t\t>\n\t  \t\t{<ViewPathIconMode state={state}/>}\n\t\t\t</Button>\n\t\t       );\n\t    } else {\n\t\treturn (<Button\n\t\t\tclassName={classes.button}\n\t\t\tonClick={onclick}\n\t\t\ttitle={title}\n\t\t\t>\n\t  \t\t{<ViewPathIconMode state={state}/>}\n\t\t\t</Button>\n\t\t       );\n\t    }\n\t}\n    }\n}\n\nView.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(View);\n"]},"metadata":{},"sourceType":"module"}