{"ast":null,"code":"//console.log(\"Loading DatabaseLib.js\");\n//import {alasql} from \"alasql\";\n//const alasql = window.alasql;\nvar alasql = require('alasql'); //const alasql = window.alasql;\n\n\nfunction Database() {\n  this.bdeb = false;\n  this.processing = false;\n  var ret;\n  this.files = [\"1.json\"]; // json data file\n\n  this.loaded = \"\";\n  this.index = 0;\n  this.cnt = 0;\n  this.keyCnt = {};\n  this.values = {};\n  this.epoch0 = 0;\n  this.jsonOrg = {};\n  this.data = \"data\";\n  this.regfile = \"register\"; // register file (shows current datfile)\n\n  this.arrayConstructor = [].constructor;\n  this.objectConstructor = {}.constructor;\n  this.casc = 0; // key is sorted ascending\n\n  this.cdes = 1; // key is sorted descending\n\n  this.nasc = 2; // key is sorted ascending\n\n  this.ndes = 3; // key is sorted descending\n\n  this.delay = 10 * 1000; // polling period in ms (film + server-polling loop)\n\n  this.step = 60; // server-polling step\n\n  this.stepCnt = 0; // current step count\n\n  this.ready = true; // can we poll server or is another poll running\n\n  this.log = \"\";\n  this.mod = \"\";\n  this.keytrg = {\n    Missing: -1,\n    Null: 0,\n    Value: 1,\n    Min: 2,\n    Max: 3\n  };\n  this.db = null;\n\n  this.newDb = function () {\n    this.db = new alasql.Database();\n    console.log(\"Alasql:\", JSON.stringify(this.db));\n  };\n\n  this.init = function (state, response, callbacks) {\n    state.Colors.init(state);\n    state.Path.init(state);\n    state.Layout.init(state);\n    state.Threshold.init(state);\n    state.Custom.init(state);\n    state.Settings.init(state);\n    state.Utils.init(\"Database\", this);\n    console.log(\"Data location:\", this.data);\n    state.File.next(state, response, callbacks);\n  }.bind(this);\n\n  this.updateLoop = function (state) {\n    //console.log(\"Updating database...\");\n    this.setTime(state);\n\n    if (this.stepCnt % this.step === 0) {\n      this.load(state);\n    } else {\n      state.Path.nextFilm(state);\n    }\n\n    ;\n    this.stepCnt = (this.stepCnt + 1) % this.step;\n    setTimeout(function () {\n      state.Database.updateLoop(state);\n    }, state.Database.delay); //state.Database.delay\n  }.bind(this);\n\n  this.load = function (state) {\n    console.log(\"Database load number:\", ++this.cnt);\n\n    if (state.Database.index === 0) {\n      state.Database.loadRegister(state, \"\", [state.Database.processRegister, state.Database.loadData, state.Database.processData]);\n    }\n\n    ;\n  };\n\n  this.loadRegister = function (state, response, callbacks) {\n    var prefix = (state.Database.data || \"data\") + \"/\"; //console.log(\"Using register-prefix:\",prefix);\n\n    var path = prefix + state.Database.regfile;\n    console.log(\"Database loadRegister:\", path);\n    state.File.load(state, path, callbacks);\n  };\n\n  this.processRegister = function (state, response, callbacks) {\n    var files = response.split('\\n');\n    var file = files[Math.min(files.length - 1, state.Database.index)]; // register-respo\n\n    state.Database.files = files;\n    state.Database.index = Math.min(files.length - 1, state.Database.index || 0);\n    state.File.next(state, file, callbacks);\n  };\n\n  this.loadData = function (state, file, callbacks) {\n    //console.log(\"Database loadData:\",JSON.stringify(file));\n    if (file !== state.Database.loaded) {\n      // load new data\n      state.Database.setLoaded(state, file); // console.log(\"Files:\",JSON.stringify(state.Database.files));\n\n      var prefix = (state.Database.data || \"data\") + \"/\"; //console.log(\"Using data-prefix:\",prefix);\n\n      var path = prefix + file; //console.log(\"Database loadPath:\",JSON.stringify(path));\n\n      state.File.load(state, path, callbacks);\n    } else {\n      //console.log(\"Setting footer...\");\n      state.Path.nextFilm(state);\n      state.Html.setFootnote(state);\n    }\n  };\n\n  this.processData = function (state, response, callbacks) {\n    //console.log(\"Database processData.\");\n    setTimeout(function () {\n      try {\n        state.Database.json = JSON.parse(response);\n      } catch (e) {\n        alert(\"Data '\" + state.Database.files[state.Database.index || 0] + \"' contains Invalid JSON:\" + e.name + \":\" + e.message);\n      }\n\n      if (state.Database.json !== undefined) {\n        state.Database.processJson(state, state.Database.json, callbacks);\n      }\n    }, 0.1);\n  };\n\n  this.processJson = function (state, json, callbacks) {\n    state.Database.dbInsert(state, json);\n    state.Html.setFootnote(state, \"Extracting data.\");\n    setTimeout(function () {\n      state.Database.makeWhere(state); // update where-expressions...\n\n      state.Show.showAll(state);\n      state.Html.setFootnote(state);\n      state.File.next(state, \"\", callbacks);\n    }, 0.1);\n  };\n\n  this.resetSetup = function (state) {\n    if (state.Database.json !== undefined) {\n      state.Database.processJson(state, state.Database.json);\n    }\n  };\n\n  this.saveDb = function (state) {\n    state.Utils.save(state.Utils.prettyJson(this.jsonOrg), this.loaded, \"json\");\n  };\n\n  this.resetDb = function (state, response, callbacks) {\n    state.Database.index = -1;\n    state.Database.processData(state, response, callbacks);\n  };\n\n  this.setLoaded = function (state, loaded) {\n    this.loaded = loaded;\n  };\n\n  this.selectIndex = function (state, item, index) {\n    //console.log(\"Setting file index:\",index,item);\n    state.Database.index = Math.max(0, Math.min(index, state.Database.files.length - 1));\n    state.Database.loadData(state, item, [state.Database.processData]);\n  };\n\n  this.getTime = function (state, s) {\n    var nn = s.match(/\\d+/g).map(Number);\n    var date0 = new Date(Date.UTC(nn[0], nn[1] - 1, nn[2], nn[3], nn[4], nn[5], ((nn[6] || '') + '000').slice(0, 3))); // modification time\n    //console.log(\"Gettime:\",s,JSON.stringify(nn));\n\n    return date0.getTime();\n  };\n\n  this.setTime = function (state) {\n    var d = new Date();\n    var epoch = d.getTime(); //console.log(\"Times:\",epoch,this.epoch0);\n\n    if (this.epoch0 !== undefined) {\n      var age = epoch - this.epoch0;\n      this.mod = this.getTimeDiff(state, age);\n\n      if (state.React !== undefined && state.React.Status !== undefined) {\n        state.React.Status.setAge(state, this.mod); //console.log(\"Age:\",epoch,this.epoch0,age);\n      }\n    }\n  };\n\n  this.getKeyValues = function (state, key) {\n    //console.log(\"Database:\",JSON.stringify(state.Database.values));\n    var vals = state.Database.values[key];\n\n    if (vals !== undefined) {\n      return vals;\n    } else {\n      return [];\n    }\n  };\n\n  this.getKeytrg = function (state, key, val) {\n    if (Array.isArray(val)) {\n      //console.log(\">>>Is array:\",key,JSON.stringify(val));\n      ret = this.keytrg.Missing;\n      var lenv = val.length;\n\n      for (var ii = 0; ii < lenv; ii++) {\n        ret = Math.max(ret, this.getKeytrg(state, key, val[ii]));\n      } //console.log(\">>>return:\",key,ret);\n\n    } else {\n      if (val === \"null\") {\n        ret = this.keytrg.Null;\n      } else if (val === \"MIN(\" + key + \")\") {\n        // this is a function\n        ret = this.keytrg.Min;\n      } else if (val === \"MAX(\" + key + \")\") {\n        // this is a function\n        ret = this.keytrg.Max;\n      } else if (val === undefined) {\n        ret = this.keytrg.Missing;\n      } else if (val === null) {\n        ret = this.keytrg.Null;\n      } else {\n        ret = this.keytrg.Value;\n      }\n\n      ; //console.log(\"---return:\",key,ret);\n    }\n\n    ;\n    return ret;\n  };\n\n  this.makeKeytrg = function (state, key, keytrg, val) {\n    if (keytrg === this.keytrg.Missing) {\n      return \"missing\";\n    } else if (keytrg === this.keytrg.Null) {\n      return \"null\";\n    } else if (keytrg === this.keytrg.Min) {\n      return \"MIN(\" + key + \")\";\n    } else if (keytrg === this.keytrg.Max) {\n      return \"MAX(\" + key + \")\";\n    } else {\n      return val;\n    }\n\n    ;\n  };\n\n  this.dbInsert = function (state, json) {\n    var ii, key;\n\n    try {\n      // set home\n      var len = json.data.length;\n\n      for (ii = 0; ii < len; ii++) {\n        json.data[ii][\"cnt\"] = ii;\n      } // get modified date\n      //console.log(\"Setting time.\");\n\n\n      this.jsonOrg = state.Utils.cp(json);\n      this.epoch0 = this.getTime(state, json.epoch); // data file time\n\n      this.setTime(state); // data file time\n\n      this.newDb(); // make database for raw data\n\n      this.makeTable(state); // reset key counts and range\n\n      this.cnt = 0;\n      this.keyCnt = {}; // reset key-count\n      // put data into databse\n      //console.log(\"inserting\");\n\n      var data = [];\n      var home = state.Path.home.val;\n      var hkeys = state.Path.home.path; //Object.keys(home);\n\n      var homeKeys = [];\n      var delayKeys = [];\n      var lenh = hkeys.length;\n\n      for (ii = 0; ii < lenh; ii++) {\n        key = hkeys[ii];\n        var keytrg = this.getKeytrg(state, key, home[key]); //console.log(\"Keytrg:\",key,keytrg,JSON.stringify(home[key]));\n\n        if (keytrg <= this.keytrg.Value) {\n          homeKeys.push(key);\n        } else {\n          delayKeys.push(key);\n        }\n      } //console.log(\"Home keys:\",JSON.stringify(homeKeys),\" delayed:\",JSON.stringify(delayKeys));\n      // extract data from json-file and insert into data-array...\n\n\n      var rcnt = this.extractData(state, data, {}, \"\", json.data, homeKeys, home);\n      console.log(\"Count:\", rcnt); //console.log(\"Data:\",JSON.stringify(data));\n      // put data-array into database...\n\n      this.dataToDb(state, data); //var nrec=this.sanityCheck(state)\t    // sanity check\n      //console.log(\"Initially:\",data.length,\" Extracted:\",rcnt,' Database:',nrec);\n\n      this.postProcess(state); // update distinct Database.values[key]\n      //console.log(\"Delay keys:\",JSON.stringify(delayKeys));\n\n      if (delayKeys.length > 0) {\n        // delayed home selection (MAX() and MIN())\n        this.makeWhere(state, delayKeys, home);\n        var where = this.getWhere(state, delayKeys, home);\n        var docs = this.getDocs(state, where);\n        this.dataToDb(state, docs);\n        this.postProcess(state); // update distinct Database.values[key]\n      }\n\n      ; //console.log(\"Make path...\");\n\n      state.Path.makePath(state); // initialise path\n      //console.log(\"Indexing and cleaning up.\");\n\n      this.dbindex(state, state.Path.other.table); // make indexes\n\n      this.dbindex(state, state.Path.other.rest); // make indexes\n      //state.Path.checkTableKeys(state);\n\n      state.Html.broadcast(state, \"Database is ready.\"); //console.log(\"Database is ready.\");\n    } catch (e) {\n      alert(\"Db-insert error:\" + e);\n    }\n\n    ;\n  };\n\n  this.updateKeyCnt = function (state, key, val) {\n    if (this.keyCnt[key] === undefined) {\n      this.keyCnt[key] = {\n        cnt: 0,\n        type: \"string\",\n        order: this.nasc\n      };\n    }\n\n    this.keyCnt[key].cnt = this.keyCnt[key].cnt + 1;\n\n    if (this.keyCnt[key].type === \"string\" && isNaN(val)) {\n      this.keyCnt[key].type = \"nan\";\n      this.keyCnt[key].order = this.casc;\n    }\n  };\n\n  this.postProcess = function (state) {\n    // update meta-data\n    var keys = Object.keys(state.Database.keyCnt); //console.log(\"Entering postProcess.\", JSON.stringify(keys));\n\n    var lenk = keys.length;\n\n    for (var ii = 0; ii < lenk; ii++) {\n      var key = keys[ii]; // make list of values in Database for each key\n\n      state.Database.values[key] = [];\n      var sql = \"select DISTINCT \" + key + \" AS \" + key + \" FROM alarm\";\n      var dd0 = this.query(sql);\n      var lend = dd0.length;\n\n      for (var jj = 0; jj < lend; jj++) {\n        var doc = dd0[jj];\n        state.Database.values[key].push(doc[key]);\n      }\n\n      ;\n    }\n\n    ; //console.log(\"Done postProcess.\");\n  };\n\n  this.extractData = function (state, data, parent, key, raw, hkeys, home) {\n    // insert records into db (recursive)\n    var rcnt = 0;\n    var kk, ii, kii, child, dkey; //console.log(\"Processing {\",state.Utils.toString(parent),\"} '\",key,\"' (\",state.Utils.toString(raw),\")\");\n\n    var wii = this.whatIsIt(raw);\n\n    if (wii === \"Object\" && key === \"\") {\n      //console.log(\"Found object (\",state.Utils.toString(parent),\")\");\n      child = state.Utils.cp(parent); // loop over plain values first\n\n      for (kk in raw) {\n        kii = this.whatIsIt(raw[kk]);\n\n        if (kii === \"value\") {\n          child[kk] = raw[kk];\n        }\n      } // loop over sub-objects\n\n\n      var nn = 0;\n\n      for (kk in raw) {\n        kii = this.whatIsIt(raw[kk]);\n\n        if (kii !== \"value\") {\n          nn = nn + 1;\n          rcnt = rcnt + this.extractData(state, data, child, kk, raw[kk], hkeys, home);\n        }\n      }\n\n      if (nn === 0) {\n        // insert \n        //console.log(\"Object was empty.\");\n        rcnt = rcnt + this.extractData(state, data, child, null, null, hkeys, home);\n      }\n    } else if (wii === \"Object\" && key !== \"\") {\n      //console.log(\"Found object key '\",key,\"' (\",state.Utils.toString(parent),\")\");\n      child = state.Utils.cp(parent); // loop over plain values first\n\n      for (kk in raw) {\n        child[key] = kk;\n        rcnt = rcnt + this.extractData(state, data, child, \"\", raw[kk], hkeys, home);\n      }\n    } else if (wii === \"Array\") {\n      //console.log(\"Found array key '\",key,\"' (\",state.Utils.toString(parent),\")\");\n      var dlen = raw.length;\n\n      for (ii = 0; ii < dlen; ii++) {\n        rcnt = rcnt + this.extractData(state, data, parent, key, raw[ii], hkeys, home);\n      }\n    } else {\n      //console.log(\"Found key '\",key,\"' \",wii,\" (\",state.Utils.toString(parent),\")\");\n      var keep = true;\n      var doc = state.Utils.cp(parent);\n\n      if (raw !== null) {\n        if (key === \"\") {\n          doc.value = raw;\n        } else {\n          doc[key] = raw;\n        }\n      } // check if home criteria is met\n\n\n      var lenh = hkeys.length;\n\n      for (ii = 0; ii < lenh; ii++) {\n        key = hkeys[ii];\n        var vals = home[key];\n        var lenv = vals.length;\n        var found = false;\n\n        for (var jj = 0; jj < lenv; jj++) {\n          if (vals[jj] === doc[key] || vals[jj] === \"\" && doc[key] === undefined) {\n            found = true;\n          }\n        }\n\n        if (!found) {\n          keep = false;\n        }\n\n        ;\n      }\n\n      if (keep) {\n        //console.log(\"Updating internal raw structure\",JSON.stringify(setup));\n        for (dkey in doc) {\n          var val = doc[dkey];\n          this.updateKeyCnt(state, dkey, val); //// this takes too much time...\n          //if (this.values[dkey]  === undefined) {\n          //\tthis.values[dkey]=[];\n          //  };\n          ////console.log(\"Setup:\",JSON.stringify(setup));\n          ////console.log(\"Key:\",key,JSON.stringify(this.values));\n          //if (this.values[dkey].indexOf(val)  === -1 ) { // value not in range\n          //    this.values[dkey].push(val); // add value to range\n          //};\n        }\n\n        ; //console.log(\">>> Inserting:\",state.Utils.toString(doc));\n\n        rcnt = rcnt + 1;\n        this.cnt = this.cnt + 1;\n        state.Threshold.setThresholds(doc);\n        doc._title = state.Layout.makeDocTitle(state, doc); //if (this.cnt < 10) { // debug purposes\n        //for (key in keys) {\n        //this.updateKeyCnt(state,key,doc[key]);\n        //};\n\n        data.push(doc); //} else {\n        //console.log(\"Ignoring:\",lenh,JSON.stringify(hkeys),JSON.stringify(home),JSON.stringify(doc));\n      }\n    }\n\n    return rcnt;\n  };\n\n  this.dbextract = function (state, showFunc) {\n    // extract data from db and show\n    this.bdeb = false; // extract data from db and insert into data-array\n    // var parent={};//{test:{$exists:false}};\n\n    if (this.processing) {\n      return;\n    }\n\n    ;\n    var where = this.getWhere(state); //console.log(\"dbextract Path:\",JSON.stringify(state.Path.keys));\n    //console.log(\"dbextract Where:\",where)\n\n    var cntDocs0 = this.getDocsCnt(state, where);\n    var nrec = cntDocs0.length === 0 ? 0 : cntDocs0[0].cnt;\n    var m = {};\n    state.Matrix.cnt = nrec;\n\n    if (nrec > state.Matrix.popSeries) {\n      // maintain keyCnt\n      state.Matrix.initKeyCnt(state);\n      state.Matrix.makeKeyCntMapAreaSql(state, where, nrec);\n      state.Path.exportAllKeys(state); // can not export keys before we have a keyCnt\n\n      state.Matrix.sortKeyValues(state);\n\n      if (this.bdeb) {\n        console.log(\"Count:\", JSON.stringify(cntDocs0));\n      } // add \"undefined\" range of keys that are not present in every doc...\n\n\n      state.Matrix.addMapAreaKeys(state, this.db.tables.alarm.data); // add lat_/lon_\n\n      var colkey = state.Path.getColKey(state);\n      var rowkey = state.Path.getRowKey(state);\n      var svgkey = state.Svg.getKey(state);\n      var cntDocs = state.Database.getDocsCnt(state, where, [colkey, rowkey, svgkey]);\n\n      if (this.bdeb) {\n        console.log(\"dbextract cntDocs:\", JSON.stringify(cntDocs));\n      }\n\n      state.Matrix.makeMatrixCntMap(state, cntDocs, m);\n      state.Matrix.makeMapRange(state);\n\n      if (this.bdeb) {\n        console.log(\"dbextract maprange:\", JSON.stringify(state.Matrix.values[\"_lon\"]), JSON.stringify(state.Matrix.values[\"_lat\"]));\n      }\n\n      ;\n\n      if (this.bdeb) {\n        console.log(\"dbextract matrix:\", JSON.stringify(m));\n      }\n\n      ; //var docs=this.getDocs(state,where); // get all docs\n      //console.log(\"Docs:\",JSON.stringify(this.db.tables.alarm.data));\n    } else {\n      // maintain map data and keyCnt...\n      //console.log(\"Database where:\",where);\n      var docs = this.getDocs(state, where); // get all docs\n      //console.log(\">>>Extraction key (where='\",where,\"') Docs:\",docs.length);\n\n      state.Matrix.initKeyCnt(state);\n      state.Matrix.makeKeyCntMapArea(state, docs); // makes mapArea\n\n      state.Matrix.makeMapRange(state);\n      state.Matrix.addUndefinedKeyCnt(state, docs); // add \"undefined\"\n\n      state.Matrix.addUndefinedKeyCntValues(state);\n      state.Matrix.addMapAreaKeys(state, docs); // add lat_/lon_\n\n      state.Path.exportAllKeys(state); // can not export keys before we have a keyCnt\n\n      state.Matrix.sortKeyValues(state);\n      state.Matrix.makeMatrix(state, docs, m); //console.log (\"Matrix:\",JSON.stringify(m));\n    }\n\n    this.processing = false;\n    showFunc(state, m);\n  };\n\n  this.dbindex = function (state, ks) {\n    // make indexes on all keys\n    var s = \"\";\n    var klen = ks.length;\n\n    for (var ii = 0; ii < klen; ii++) {\n      //this.query(\"CREATE INDEX ? ON TABLE alarm.?\",ks[ii],ks[ii]);\n      s = s + \" \" + ks[ii];\n    }\n\n    ; //console.log(\"Indexes:\",s);\n  };\n\n  this.getTitleDynamic = function (state, key, val) {\n    var ret, parse;\n\n    if (state.Database.values[key] === undefined) {\n      ret = val;\n    } else {\n      var keytrg = this.getKeytrg(state, key, val);\n\n      if (val === \"null\") {\n        ret = key + \" is NULL\";\n      } else if (keytrg === this.keytrg.Max) {\n        // this is a function\n        parse = state.Utils.getMax(state.Database.values[key]);\n\n        if (parse === undefined) {\n          ret = key + \" is NULL\";\n        } else {\n          ret = parse;\n        }\n\n        ;\n      } else if (keytrg === this.keytrg.Min) {\n        // this is a function\n        parse = state.Utils.getMin(state.Database.values[key]);\n\n        if (parse === undefined) {\n          ret = key + \" is NULL\";\n        } else {\n          ret = parse;\n        }\n\n        ;\n      } else {\n        ret = val;\n      }\n\n      ;\n    }\n\n    ;\n    return ret;\n  };\n\n  this.getWhereDynamic = function (state, key, val) {\n    var ret, parse;\n\n    if (state.Database.values[key] === undefined) {\n      ret = state.Database.getWhereNull(key);\n    } else {\n      var keytrg = this.getKeytrg(state, key, val); //console.log(\"parseWhere:\",key,JSON.stringify(val),keytrg);\n\n      if (keytrg === this.keytrg.Max) {\n        // this is a function\n        parse = state.Utils.getMax(state.Database.values[key]); //console.log(\"parseWhere:\",key,parse,JSON.stringify(state.Database.values[key]));\n\n        if (parse === undefined) {\n          ret = key + \" is NULL\";\n        } else {\n          ret = key + \"='\" + parse + \"'\";\n        }\n\n        ;\n      } else if (keytrg === this.keytrg.Min) {\n        // this is a function\n        parse = state.Utils.getMin(state.Database.values[key]);\n\n        if (parse === undefined) {\n          ret = key + \" is NULL\";\n        } else {\n          ret = key + \"='\" + parse + \"'\";\n        }\n\n        ;\n      } else if (keytrg !== undefined && val !== \"\") {\n        //console.log(\"Key trg:\",keytrg,key,val);\n        ret = state.Database.getWhereValue(key, val);\n      } else {\n        ret = state.Database.getWhereNull(key);\n      }\n    }\n\n    ; //console.log(\"GetWhere:\",key,val,ret);\n\n    return ret;\n  };\n\n  this.getWhereRange = function (key, range) {\n    if (range !== undefined || range !== null || range !== \"\") {\n      //console.log(\"getWhereRange:\",key,JSON.stringify(range),range[0],range[2]);\n      return key + ' >= ' + range[0] + ' AND ' + key + ' < ' + range[1] + '';\n    } else {\n      return;\n    }\n\n    ;\n  };\n\n  this.getWhereValue = function (key, val) {\n    if (val !== undefined || val !== null || val !== \"\") {\n      return key + '=\"' + val + '\"';\n    } else {\n      return;\n    }\n\n    ;\n  };\n\n  this.getWhereNull = function (key) {\n    return '\"' + key + '\" is NULL';\n  };\n\n  this.getWhere = function (state, keys, vals, ranges) {\n    var where = \"\"; //console.log(\"Path:\",JSON.stringify(state.Path.keys));\n\n    if (keys === undefined) {\n      keys = state.Path.keys.path;\n      vals = state.Path.select.val;\n      ranges = state.Path.select.range; //console.log(\"getWhere ranges:\",JSON.stringify(ranges));\n    }\n\n    ;\n\n    if (vals === undefined) {\n      vals = [];\n    }\n\n    ;\n\n    if (ranges === undefined) {\n      ranges = [];\n    }\n\n    ;\n\n    if (keys !== undefined) {\n      var plen = keys.length;\n\n      for (var ii = 0; ii < plen; ii++) {\n        var key = keys[ii];\n        var whereKey = state.Database.parseWhere(state, key, vals[key], ranges[key]); //console.log(\"Wherekey:\",ii,key,JSON.stringify(vals),\n        //\t    JSON.stringify(vals[key]),JSON.stringify(ranges[key]),\"'\"+whereKey+\"'\");\n\n        if (whereKey === undefined || whereKey === null || whereKey === \"\") {\n          if (where !== \"\") {\n            where = where + ' AND ';\n          }\n\n          ;\n          where = where + key + ' is NULL';\n        } else {\n          if (where !== \"\") {\n            where = where + ' AND ';\n          }\n\n          ;\n          where = where + \"(\" + whereKey + \")\";\n        }\n      }\n\n      ;\n\n      if (where !== \"\") {\n        where = \" WHERE \" + where;\n      }\n    }\n\n    ; //console.log(\"Where=|\"+where+\"|\")\n\n    return where;\n  };\n\n  this.addWhere = function (iwhere, whereKey) {\n    var where = iwhere;\n\n    if (whereKey !== undefined && whereKey !== null && whereKey !== \"\") {\n      if (where !== \"\") {\n        where = where + \" AND (\" + whereKey + \")\";\n      } else {\n        where = \" WHERE (\" + whereKey + \")\";\n      }\n    }\n\n    return where;\n  };\n\n  this.getColWhere = function (key, values, index, step) {\n    var clen = values.length;\n    var where = \"\";\n\n    for (var kk = index; kk < Math.min(clen, index + step); kk++) {\n      if (where !== \"\") {\n        where = where + \" or \";\n      }\n\n      where = where + this.getWhereValue(key, values[kk]);\n    }\n\n    ;\n    return where;\n  };\n\n  this.makeWhere = function (state, keys, vals) {\n    //console.log(\"Make where:\",JSON.stringify(keys),JSON.stringify(vals));\n    if (keys === undefined) {\n      state.Path.keys.path.forEach(function (item, index) {\n        this.setWhere(state, item, state.Path.select.val[item]);\n      }.bind(this));\n    } else {\n      keys.forEach(function (item, index) {\n        this.setWhere(state, item, vals[item]);\n      }.bind(this));\n    }\n  };\n\n  this.setWhere = function (state, key, vals, range) {\n    //console.log(\"Setting where:\",key,JSON.stringify(vals));\n    var where = this.parseWhere(state, key, vals, range); //console.log(\"Setting where:\",key,JSON.stringify(vals),\"'\"+where+\"'\");\n\n    state.Path.where[key] = where;\n  };\n\n  this.parseWhere = function (state, key, vals, range) {\n    var where = \"\";\n\n    if (vals === undefined) {\n      vals = [];\n    }\n\n    ;\n    var lenv = vals.length;\n\n    for (var ii = 0; ii < lenv; ii++) {\n      var val = vals[ii];\n\n      if (where !== \"\") {\n        where = where + \" OR \";\n      }\n\n      ;\n      where = where + state.Database.getWhereDynamic(state, key, val); //console.log(\"From getWhereDynamic:\",key,\":\",val,\":\",where);\n    }\n\n    ;\n\n    if (range !== undefined) {\n      if (where !== \"\") {\n        where = where + \" OR \";\n      }\n\n      ;\n      where = where + state.Database.getWhereRange(key, range);\n    }\n\n    return where;\n  };\n\n  this.getGroup = function (keys) {\n    var group = \"\";\n    var plen = keys.length;\n\n    for (var ii = 0; ii < plen; ii++) {\n      var key = keys[ii];\n\n      if (group !== \"\") {\n        group = group + ',';\n      }\n\n      ;\n      group = group + key;\n    }\n\n    ;\n\n    if (group !== \"\") {\n      group = \" GROUP BY \" + group;\n    }\n\n    return group;\n  };\n\n  this.getCols = function (ikeys) {\n    var onlyUnique = function onlyUnique(value, index, self) {\n      return self.indexOf(value) === index;\n    };\n\n    var keys = ikeys.filter(onlyUnique);\n    var cols = \"\";\n    var plen = keys.length;\n\n    for (var ii = 0; ii < plen; ii++) {\n      var key = keys[ii];\n      cols = cols + key;\n\n      if (cols !== \"\") {\n        cols = cols + ',';\n      }\n\n      ;\n    }\n\n    ;\n    return cols;\n  };\n\n  this.getAll = function (state) {\n    var cols = \"\";\n    var plen = state.Path.keys.other.length;\n\n    for (var ii = 0; ii < plen; ii++) {\n      var key = state.Path.keys.other[ii];\n      cols = cols + key;\n\n      if (cols !== \"\") {\n        cols = cols + ',';\n      }\n\n      ;\n    }\n\n    ;\n    return cols;\n  };\n\n  this.getDocsRank = function (state, where, keys, maxrank) {\n    var dd;\n    dd = this.query(\"select * FROM alarm\" + where);\n    return dd === undefined ? [] : dd;\n  };\n\n  this.getRankCnt = function (state, where, keys, maxrank) {\n    where = this.addWhere(where, \"rank='\" + maxrank.toString() + \"'\");\n    var sql, dd;\n    var body = \"* FROM alarm\";\n\n    if (keys === undefined) {\n      sql = \"select \" + body + where; //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\n      dd = this.query(sql); //console.log(\"initial count:\",dd[0].cnt,JSON.stringify(dd0));\n      //console.log(\"Cnt:\",JSON.stringify(dd));\n    } else {\n      var cols = this.getCols(keys);\n      var group = this.getGroup(keys);\n      sql = \"select \" + cols + body + where + group; //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\n      dd = this.query(sql); //console.log(\"Cnt:\",JSON.stringify(dd),JSON.stringify(keys));\n    }\n\n    return dd === undefined ? [] : dd;\n  };\n\n  this.getDocsCnt = function (state, where, keys) {\n    var sql, dd; //console.log(\"Docs:\",JSON.stringify(this.db.tables.alarm.data));\n\n    var body = 'count(*) AS cnt, max(level) AS maxlev, max(rank) AS maxrank, min(level) AS minlev, max(lat) AS maxlat, min(lat) AS minlat, max(lon) AS maxlon, min(lon) AS minlon FROM alarm';\n\n    if (keys === undefined) {\n      sql = \"select \" + body + where; //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\n      dd = this.query(sql); //console.log(\"initial count:\",dd[0].cnt,JSON.stringify(dd0));\n      //console.log(\"Cnt-A:\",JSON.stringify(dd));\n    } else {\n      var cols = this.getCols(keys);\n      var group = this.getGroup(keys);\n      sql = \"select \" + cols + body + where + group; //console.log(\"SQL:\",sql);\n      //console.log(\"Body:\",body,\":\",where,\",group:\",group,\",keys:\",JSON.stringify(keys));\n\n      dd = this.query(sql); //console.log(\"Cnt-B:\",JSON.stringify(dd),\",keys:\",JSON.stringify(keys));\n    }\n\n    return dd === undefined ? [] : dd;\n  };\n\n  this.getDocs = function (state, where) {\n    var query = \"select * FROM alarm\" + where; //query=\"select * FROM alarm WHERE (_lat=69.00631578947369) AND (_lon=17.206315789473685)\";\n\n    var dd = this.query(query); //console.log(\"getDocs q:\",query,JSON.stringify(dd));\n\n    return dd === undefined ? [] : dd;\n  };\n\n  this.makeTable = function (state) {\n    this.query('DROP TABLE IF EXISTS alarm; CREATE TABLE alarm;');\n  };\n\n  this.dataToDb = function (state, data) {\n    this.db.tables.alarm.data = data;\n  };\n\n  this.getKeyCnt = function (state, key, where) {\n    var sql = \"select \" + key + \",count(*) AS cnt FROM alarm\" + where + \" GROUP BY \" + key;\n    return this.query(sql);\n  };\n\n  this.whatIsIt = function (object) {\n    // determine object type\n    if (object === null) {\n      return \"null\";\n    } else if (object.constructor === this.arrayConstructor) {\n      return \"Array\";\n    } else if (object.constructor === this.objectConstructor) {\n      return \"Object\";\n    } else {\n      return \"value\";\n    }\n  };\n\n  this.getTimeDiff = function (state, dt) {\n    var s = \"\";\n\n    if (dt === undefined || isNaN(state, dt)) {\n      return s;\n    }\n\n    ;\n    var msec = Math.abs(state, dt);\n    var dd = Math.floor(state, (state, msec / 1000 / 60) / 60 / 24);\n    msec -= dd * 1000 * 60 * 60 * 24;\n    var hh = Math.floor(state, (state, msec / 1000) / 60 / 60);\n    msec -= hh * 1000 * 60 * 60;\n    var mm = Math.floor(state, msec / 1000 / 60);\n    msec -= mm * 1000 * 60;\n    var ss = Math.floor(state, msec / 1000);\n    msec -= ss * 1000;\n\n    if (dt < 0) {\n      s = \"-\";\n    } else if (dt > 0) {\n      s = \"+\";\n    } else {\n      s = \"0\";\n    }\n\n    if (dd !== 0) s = s + \" \" + state.Utils.numberWithCommas(dd) + \"d\";\n    if (hh !== 0) s = s + \" \" + hh + \"h\";\n    if (mm !== 0) s = s + \" \" + mm + \"m\"; //if (ss !== 0) s=s+\" \"+ss+\"s\";\n\n    return s;\n  };\n\n  this.sanityCheck = function (state) {\n    var sql = 'select count(*) AS cnt, max(level) AS lev FROM alarm';\n    var dd0 = this.query(sql);\n    var nrec = dd0[0].cnt;\n    return nrec;\n  };\n\n  this.query = function (sql) {\n    try {\n      return this.db.exec(sql);\n    } catch (e) {\n      alert(sql + \":\" + e);\n    }\n\n    ;\n  };\n}\n\n;\nexport default Database;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/DatabaseLib.js"],"names":["alasql","require","Database","bdeb","processing","ret","files","loaded","index","cnt","keyCnt","values","epoch0","jsonOrg","data","regfile","arrayConstructor","constructor","objectConstructor","casc","cdes","nasc","ndes","delay","step","stepCnt","ready","log","mod","keytrg","Missing","Null","Value","Min","Max","db","newDb","console","JSON","stringify","init","state","response","callbacks","Colors","Path","Layout","Threshold","Custom","Settings","Utils","File","next","bind","updateLoop","setTime","load","nextFilm","setTimeout","loadRegister","processRegister","loadData","processData","prefix","path","split","file","Math","min","length","setLoaded","Html","setFootnote","json","parse","e","alert","name","message","undefined","processJson","dbInsert","makeWhere","Show","showAll","resetSetup","saveDb","save","prettyJson","resetDb","selectIndex","item","max","getTime","s","nn","match","map","Number","date0","Date","UTC","slice","d","epoch","age","getTimeDiff","React","Status","setAge","getKeyValues","key","vals","getKeytrg","val","Array","isArray","lenv","ii","makeKeytrg","len","cp","makeTable","home","hkeys","homeKeys","delayKeys","lenh","push","rcnt","extractData","dataToDb","postProcess","where","getWhere","docs","getDocs","makePath","dbindex","other","table","rest","broadcast","updateKeyCnt","type","order","isNaN","keys","Object","lenk","sql","dd0","query","lend","jj","doc","parent","raw","kk","kii","child","dkey","wii","whatIsIt","dlen","keep","value","found","setThresholds","_title","makeDocTitle","dbextract","showFunc","cntDocs0","getDocsCnt","nrec","m","Matrix","popSeries","initKeyCnt","makeKeyCntMapAreaSql","exportAllKeys","sortKeyValues","addMapAreaKeys","tables","alarm","colkey","getColKey","rowkey","getRowKey","svgkey","Svg","getKey","cntDocs","makeMatrixCntMap","makeMapRange","makeKeyCntMapArea","addUndefinedKeyCnt","addUndefinedKeyCntValues","makeMatrix","ks","klen","getTitleDynamic","getMax","getMin","getWhereDynamic","getWhereNull","getWhereValue","getWhereRange","range","ranges","select","plen","whereKey","parseWhere","addWhere","iwhere","getColWhere","clen","forEach","setWhere","getGroup","group","getCols","ikeys","onlyUnique","self","indexOf","filter","cols","getAll","getDocsRank","maxrank","dd","getRankCnt","toString","body","getKeyCnt","object","dt","msec","abs","floor","hh","mm","ss","numberWithCommas","sanityCheck","exec"],"mappings":"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","sourcesContent":["//console.log(\"Loading DatabaseLib.js\");\n\n//import {alasql} from \"alasql\";\n\n//const alasql = window.alasql;\nconst alasql = require('alasql');\n//const alasql = window.alasql;\n\nfunction Database() {\n    this.bdeb=false;\n    this.processing=false;\n    var ret;\n    this.files=[\"1.json\"];                  // json data file\n    this.loaded=\"\";\n    this.index=0;\n    this.cnt=0;\n    this.keyCnt={};\n    this.values= {};\n    this.epoch0=0;\n    this.jsonOrg={};\n    this.data=\"data\";\n    this.regfile=\"register\";      // register file (shows current datfile)\n    this.arrayConstructor=[].constructor;\n    this.objectConstructor={}.constructor;\n    this.casc=0; // key is sorted ascending\n    this.cdes=1; // key is sorted descending\n    this.nasc=2; // key is sorted ascending\n    this.ndes=3; // key is sorted descending\n    this.delay=10*1000;  // polling period in ms (film + server-polling loop)\n    this.step=60;        // server-polling step\n    this.stepCnt=0;      // current step count\n    this.ready=true;     // can we poll server or is another poll running\n    this.log=\"\";\n    this.mod=\"\";\n    this.keytrg={Missing:-1,\n\t\t Null:0,\n\t\t Value:1,\n\t\t Min:2,\n\t\t Max:3\n\t\t};\n    this.db=null;\n    this.newDb=function() {\n\tthis.db=new alasql.Database();\n\tconsole.log(\"Alasql:\",JSON.stringify(this.db));\n    };\n    this.init=function(state,response,callbacks){\n        state.Colors.init(state);\n        state.Path.init(state);\n        state.Layout.init(state);\n        state.Threshold.init(state);\n        state.Custom.init(state);\n        state.Settings.init(state);\n\tstate.Utils.init(\"Database\",this);\n\tconsole.log(\"Data location:\",this.data);\n\tstate.File.next(state,response,callbacks);\n    }.bind(this);\n    this.updateLoop=function(state) {\n\t//console.log(\"Updating database...\");\n\tthis.setTime(state);\n\tif (this.stepCnt%this.step===0) {\n\t    this.load(state);\n\t} else {\n\t    state.Path.nextFilm(state);\n\t};\n\tthis.stepCnt=(this.stepCnt+1)%this.step;\n\tsetTimeout(function() {\n\t    state.Database.updateLoop(state)\n\t},state.Database.delay); //state.Database.delay\n    }.bind(this);\n    this.load=function(state) {\n\tconsole.log(\"Database load number:\",++this.cnt);\n\tif (state.Database.index === 0) {\n\t    state.Database.loadRegister(state,\"\",\n\t\t\t\t\t       [state.Database.processRegister,\n\t\t\t\t\t\tstate.Database.loadData,\n\t\t\t\t\t\tstate.Database.processData\n\t\t\t\t\t       ]);\n\t};\n    };\n    this.loadRegister=function(state, response, callbacks ) {\n\tvar prefix=(state.Database.data||\"data\") + \"/\";\n\t//console.log(\"Using register-prefix:\",prefix);\n\tvar path=prefix + state.Database.regfile;\n\tconsole.log(\"Database loadRegister:\",path);\n\tstate.File.load(state,path,callbacks);\n    };\n    this.processRegister=function(state,response,callbacks) {\n\tvar files=response.split('\\n');\n\tvar file=files[Math.min(files.length-1,state.Database.index)]; // register-respo\n\tstate.Database.files=files;\n\tstate.Database.index=Math.min(files.length-1,(state.Database.index||0))\n\tstate.File.next(state,file,callbacks);\n    };\t\n    this.loadData=function(state, file, callbacks ) {\n\t//console.log(\"Database loadData:\",JSON.stringify(file));\n\tif (file !== state.Database.loaded) { // load new data\n\t    state.Database.setLoaded(state,file);\n\t    // console.log(\"Files:\",JSON.stringify(state.Database.files));\n\t    var prefix=(state.Database.data||\"data\") + \"/\";\n\t    //console.log(\"Using data-prefix:\",prefix);\n\t    var path=prefix + file;\n\t    //console.log(\"Database loadPath:\",JSON.stringify(path));\n\t    state.File.load(state,path,callbacks);\n\t} else {\n\t    //console.log(\"Setting footer...\");\n\t    state.Path.nextFilm(state);\n\t    state.Html.setFootnote(state);\n\t}\n    };\n    this.processData=function(state,response,callbacks) {\n\t//console.log(\"Database processData.\");\n\tsetTimeout(function() {\n\t    try {\n\t\tstate.Database.json=JSON.parse(response);\n\t    } catch (e) {\n\t\talert(\"Data '\"+state.Database.files[(state.Database.index||0)]+\"' contains Invalid JSON:\"+e.name+\":\"+e.message);\n\t    }\n\t    if (state.Database.json !== undefined) {\n\t\tstate.Database.processJson(state,state.Database.json,callbacks);\n\t    }\n\t},0.1);\n    };\n    this.processJson=function(state,json,callbacks) {\n\tstate.Database.dbInsert(state,json);\n\tstate.Html.setFootnote(state,\"Extracting data.\");\n\tsetTimeout(function() {\n\t    state.Database.makeWhere(state); // update where-expressions...\n\t    state.Show.showAll(state);\n\t    state.Html.setFootnote(state);\n\t    state.File.next(state,\"\",callbacks);\n\t},0.1);\n    };\n    this.resetSetup=function(state) {\n\tif (state.Database.json !== undefined) {\n\t    state.Database.processJson(state,state.Database.json);\n\t}\n    };\n    this.saveDb=function(state) {\n\tstate.Utils.save(state.Utils.prettyJson(this.jsonOrg),this.loaded,\"json\");\n    };\n    this.resetDb=function(state,response,callbacks) {\n\tstate.Database.index=-1;\n\tstate.Database.processData(state,response,callbacks);\n    };\n    this.setLoaded=function(state,loaded) {\n\tthis.loaded=loaded;\n    };\n    this.selectIndex=function(state,item,index) {\n\t//console.log(\"Setting file index:\",index,item);\n\tstate.Database.index=Math.max(0,Math.min(index,state.Database.files.length-1));\n\tstate.Database.loadData(state,item,[state.Database.processData]);\n    };\n    this.getTime=function(state,s) {\n\tvar nn = s.match(/\\d+/g).map(Number);\n\tvar date0 = new Date(Date.UTC(nn[0],nn[1]-1,nn[2],nn[3],nn[4],nn[5],\n\t\t\t\t      ((nn[6]||'')+'000').slice(0,3))); // modification time\n\t//console.log(\"Gettime:\",s,JSON.stringify(nn));\n\treturn date0.getTime();\n    };\n    this.setTime=function(state) {\n\tvar d = new Date();\n\tvar epoch=d.getTime();\n\t//console.log(\"Times:\",epoch,this.epoch0);\n\tif (this.epoch0 !== undefined) {\n\t    var age = epoch - this.epoch0;\n\t    this.mod=this.getTimeDiff(state,age);\n\t    if (state.React !== undefined && state.React.Status !== undefined) {\n\t\tstate.React.Status.setAge(state,this.mod);\n\t\t//console.log(\"Age:\",epoch,this.epoch0,age);\n\t    }\n\t}\n    };\n    this.getKeyValues=function(state, key) {\n\t//console.log(\"Database:\",JSON.stringify(state.Database.values));\n\tvar vals=state.Database.values[key];\n\tif (vals !== undefined) {\n\t    return vals;\n\t} else {\n\t    return [];\n\t}\n    };\n    this.getKeytrg=function(state,key,val) {\n\tif (Array.isArray(val)) {\n\t    //console.log(\">>>Is array:\",key,JSON.stringify(val));\n\t    ret=this.keytrg.Missing;\n\t    var lenv=val.length;\n            for (var ii=0;ii<lenv;ii++) {\n\t\tret=Math.max(ret,this.getKeytrg(state,key,val[ii]));\n            }\n\t    //console.log(\">>>return:\",key,ret);\n\t} else { \n\t    if (val === \"null\") {\n\t\tret=this.keytrg.Null;\n\t    } else if (val===\"MIN(\"+key+\")\") { // this is a function\n\t\tret=this.keytrg.Min;\n\t    } else if (val===\"MAX(\"+key+\")\") { // this is a function\n\t\tret=this.keytrg.Max;\n\t    } else if (val === undefined) {\n\t\tret=this.keytrg.Missing;\n\t    } else if (val === null) {\n\t\tret=this.keytrg.Null;\n\t    } else {\n\t\tret=this.keytrg.Value;\n\t    };\n\t    //console.log(\"---return:\",key,ret);\n\t};\n\treturn ret;\n    };\n    this.makeKeytrg=function(state,key,keytrg,val) {\n\tif (keytrg === this.keytrg.Missing) {\n\t    return \"missing\";\n\t} else if (keytrg === this.keytrg.Null) {\n\t    return \"null\";\n\t} else if (keytrg === this.keytrg.Min) {\n\t    return \"MIN(\"+key+\")\"\n\t} else if (keytrg === this.keytrg.Max) {\n\t    return \"MAX(\"+key+\")\"\n\t} else {\n\t    return val;\n\t};\n    };\n    this.dbInsert=function(state,json) {\n\tvar ii,key;\n\ttry {\n\t    // set home\n\t    var len=json.data.length\n\t    for (ii=0;ii<len;ii++) {\n\t\tjson.data[ii][\"cnt\"]=ii\n\t    }\n\t    // get modified date\n\t    //console.log(\"Setting time.\");\n\t    this.jsonOrg=state.Utils.cp(json);\n\t    this.epoch0=this.getTime(state,json.epoch);     // data file time\n\t    this.setTime(state);     // data file time\n\t    this.newDb();\n\t    // make database for raw data\n\t    this.makeTable(state);\n\t    // reset key counts and range\n\t    this.cnt=0;\n\t    this.keyCnt={}; // reset key-count\n\t    // put data into databse\n\t    //console.log(\"inserting\");\n\t    var data=[];\n\t    var home=state.Path.home.val;\n\t    var hkeys=state.Path.home.path;//Object.keys(home);\n\t    var homeKeys=[];\n\t    var delayKeys=[];\n\t    var lenh=hkeys.length;\n            for (ii=0;ii<lenh;ii++) {\n\t\tkey=hkeys[ii];\n\t\tvar keytrg=this.getKeytrg(state,key,home[key]);\n\t\t//console.log(\"Keytrg:\",key,keytrg,JSON.stringify(home[key]));\n\t\tif (keytrg <= this.keytrg.Value) {\n\t\t    homeKeys.push(key);\n\t\t} else {\n\t\t    delayKeys.push(key);\n\t\t}\n            }\n\t    //console.log(\"Home keys:\",JSON.stringify(homeKeys),\" delayed:\",JSON.stringify(delayKeys));\n\t    // extract data from json-file and insert into data-array...\n\t    var rcnt=this.extractData(state,data,{},\"\",json.data,homeKeys,home);\n\t    console.log(\"Count:\",rcnt);\n\t    //console.log(\"Data:\",JSON.stringify(data));\n\t    // put data-array into database...\n\t    this.dataToDb(state,data);\n\t    //var nrec=this.sanityCheck(state)\t    // sanity check\n\t    //console.log(\"Initially:\",data.length,\" Extracted:\",rcnt,' Database:',nrec);\n\t    this.postProcess(state); // update distinct Database.values[key]\n\t    //console.log(\"Delay keys:\",JSON.stringify(delayKeys));\n\t    if (delayKeys.length > 0) {// delayed home selection (MAX() and MIN())\n\t\tthis.makeWhere(state,delayKeys,home);\n\t\tvar where=this.getWhere(state,delayKeys,home);\n\t\tvar docs=this.getDocs(state,where);\n\t\tthis.dataToDb(state,docs)\n\t\tthis.postProcess(state); // update distinct Database.values[key]\n\t    };\n\t    //console.log(\"Make path...\");\n\t    state.Path.makePath(state); // initialise path\n\t    //console.log(\"Indexing and cleaning up.\");\n\t    this.dbindex(state,state.Path.other.table); // make indexes\n\t    this.dbindex(state,state.Path.other.rest); // make indexes\n\t    //state.Path.checkTableKeys(state);\n\t    state.Html.broadcast(state,\"Database is ready.\");\n\t    //console.log(\"Database is ready.\");\n\t} catch (e) {\n\t    alert(\"Db-insert error:\"+e);\n\t};\n    };\n    this.updateKeyCnt=function(state,key,val) {\n\tif (this.keyCnt[key] === undefined) {\n\t    this.keyCnt[key]={cnt:0,type:\"string\",order:this.nasc};\n\t}\n\tthis.keyCnt[key].cnt=(this.keyCnt[key].cnt)+1;\n\tif (this.keyCnt[key].type  === \"string\" && isNaN(val)) {\n\t    this.keyCnt[key].type=\"nan\";\n\t    this.keyCnt[key].order=this.casc;\n\t}\n    };\n    this.postProcess=function(state) { // update meta-data\n\tvar keys=Object.keys(state.Database.keyCnt);\n\t//console.log(\"Entering postProcess.\", JSON.stringify(keys));\n\tvar lenk=keys.length;\n\tfor (var ii=0;ii<lenk;ii++) {\n\t    var key=keys[ii];\n\t    // make list of values in Database for each key\n\t    state.Database.values[key]=[];\n\t    var sql=\"select DISTINCT \"+key+\" AS \"+key+\" FROM alarm\";\n\t    var dd0=this.query(sql);\n\t    var lend=dd0.length;\n\t    for (var jj=0;jj<lend;jj++) {\n\t\tvar doc=dd0[jj];\n\t\tstate.Database.values[key].push(doc[key]);\n\t    };\n\t};\n\t//console.log(\"Done postProcess.\");\n    };\n    this.extractData=function(state,data,parent,key,raw,hkeys,home) { // insert records into db (recursive)\n\tvar rcnt=0;\n\tvar kk,ii,kii,child,dkey;\n\t//console.log(\"Processing {\",state.Utils.toString(parent),\"} '\",key,\"' (\",state.Utils.toString(raw),\")\");\n\tvar wii=this.whatIsIt(raw);\n\tif (wii  === \"Object\" && key  === \"\") {\n\t    //console.log(\"Found object (\",state.Utils.toString(parent),\")\");\n\t    child=state.Utils.cp(parent);\n\t    // loop over plain values first\n\t    for (kk in raw) {\n\t\tkii=this.whatIsIt(raw[kk]);\n\t\tif (kii  === \"value\") {\n\t\t    child[kk]=raw[kk];\n\t\t}\n\t    }\n\t    // loop over sub-objects\n\t    var nn=0;\n\t    for (kk in raw) {\n\t\tkii=this.whatIsIt(raw[kk]);\n\t\tif (kii !== \"value\") {\n\t\t    nn=nn+1;\n\t\t    rcnt=rcnt+this.extractData(state,data,child,kk,raw[kk],hkeys,home);\n\t\t}\n\t    }\n\t    if (nn  === 0) { // insert \n\t\t//console.log(\"Object was empty.\");\n\t\trcnt=rcnt+this.extractData(state,data,child,null,null,hkeys,home);\n\t    }\n\t} else if (wii  === \"Object\" && key !== \"\") {\n\t    //console.log(\"Found object key '\",key,\"' (\",state.Utils.toString(parent),\")\");\n\t    child=state.Utils.cp(parent);\n\t    // loop over plain values first\n\t    for (kk in raw) {\n\t\tchild[key]=kk;\n\t\trcnt=rcnt+this.extractData(state,data,child,\"\",raw[kk],hkeys,home);\n\t    }\n\t} else if (wii  === \"Array\") {\n\t    //console.log(\"Found array key '\",key,\"' (\",state.Utils.toString(parent),\")\");\n\t    var dlen = raw.length;\n\t    for (ii = 0; ii < dlen; ii++) {\n\t\trcnt=rcnt+this.extractData(state,data,parent,key,raw[ii],hkeys,home);\n\t    }\n\t} else {\n\t    //console.log(\"Found key '\",key,\"' \",wii,\" (\",state.Utils.toString(parent),\")\");\n\t    var keep=true;\n\t    var doc=state.Utils.cp(parent);\n\t    if (raw !== null) {\n\t\tif (key  === \"\") {\n\t\t    doc.value=raw;\n\t\t} else {\n\t\t    doc[key]=raw;\n\t\t}\n\t    }\n\t    // check if home criteria is met\n\t    var lenh=hkeys.length;\n\t    for (ii=0;ii<lenh;ii++) {\n\t\tkey=hkeys[ii];\n\t\tvar vals=home[key];\n\t\tvar lenv=vals.length;\n\t\tvar found=false;\n\t\tfor (var jj=0;jj<lenv;jj++){\n\t\t    if (vals[jj]===doc[key] || (vals[jj]===\"\" && doc[key]===undefined)) {\n\t\t\tfound=true;\n\t\t    }\n\t\t}\n\t\tif (!found) {\n\t\t    keep=false;\n\t\t};\n\t    }\n\t    if (keep) {\n\t\t//console.log(\"Updating internal raw structure\",JSON.stringify(setup));\n\t\tfor (dkey in doc) {\n\t\t    var val=doc[dkey];\n\t\t    this.updateKeyCnt(state,dkey,val);\n\t\t    //// this takes too much time...\n\t\t    //if (this.values[dkey]  === undefined) {\n\t\t    //\tthis.values[dkey]=[];\n\t\t    //  };\n\t\t    ////console.log(\"Setup:\",JSON.stringify(setup));\n\t\t    ////console.log(\"Key:\",key,JSON.stringify(this.values));\n    \t\t    //if (this.values[dkey].indexOf(val)  === -1 ) { // value not in range\n\t\t    //    this.values[dkey].push(val); // add value to range\n\t\t    //};\n\t\t};\n\t\t//console.log(\">>> Inserting:\",state.Utils.toString(doc));\n\t\trcnt=rcnt+1;\n\t\tthis.cnt=this.cnt+1;\n\t\tstate.Threshold.setThresholds(doc);\n\t\tdoc._title=state.Layout.makeDocTitle(state,doc);\n\t\t//if (this.cnt < 10) { // debug purposes\n\t\t//for (key in keys) {\n\t\t//this.updateKeyCnt(state,key,doc[key]);\n\t\t//};\n\t\tdata.push(doc);\n\t    //} else {\n\t\t//console.log(\"Ignoring:\",lenh,JSON.stringify(hkeys),JSON.stringify(home),JSON.stringify(doc));\n\t    }\n\t}\n\treturn rcnt;\n    };\n    this.dbextract=function(state,showFunc) { // extract data from db and show\n\tthis.bdeb=false;\n\t// extract data from db and insert into data-array\n\t// var parent={};//{test:{$exists:false}};\n\tif (this.processing) {return};\n\tvar where = this.getWhere(state);\n\t//console.log(\"dbextract Path:\",JSON.stringify(state.Path.keys));\n\t//console.log(\"dbextract Where:\",where)\n\tvar cntDocs0=this.getDocsCnt(state,where);\n\tvar nrec= (cntDocs0.length===0?0:cntDocs0[0].cnt);\n\tvar m={};\n\tstate.Matrix.cnt=nrec;\n\tif (nrec > state.Matrix.popSeries) { // maintain keyCnt\n\t    state.Matrix.initKeyCnt(state);\n\t    state.Matrix.makeKeyCntMapAreaSql(state,where,nrec);\n\t    state.Path.exportAllKeys(state); // can not export keys before we have a keyCnt\n\t    state.Matrix.sortKeyValues(state);\n\t    if (this.bdeb) {console.log(\"Count:\",JSON.stringify(cntDocs0));}\n\t    // add \"undefined\" range of keys that are not present in every doc...\n\t    state.Matrix.addMapAreaKeys(state,this.db.tables.alarm.data); // add lat_/lon_\n\t    var colkey=state.Path.getColKey(state);\n\t    var rowkey=state.Path.getRowKey(state);\n\t    var svgkey=state.Svg.getKey(state);\n\t    var cntDocs=state.Database.getDocsCnt(state,where,[colkey,rowkey,svgkey]);\n\t    if (this.bdeb) {console.log(\"dbextract cntDocs:\",JSON.stringify(cntDocs));}\n\t    state.Matrix.makeMatrixCntMap(state,cntDocs,m);\n\t    state.Matrix.makeMapRange(state);\n\t    if (this.bdeb) {console.log(\"dbextract maprange:\",JSON.stringify(state.Matrix.values[\"_lon\"]),JSON.stringify(state.Matrix.values[\"_lat\"]));};\n\t    if (this.bdeb) {console.log(\"dbextract matrix:\",JSON.stringify(m));};\n\t    //var docs=this.getDocs(state,where); // get all docs\n\t    //console.log(\"Docs:\",JSON.stringify(this.db.tables.alarm.data));\n\t} else {                              // maintain map data and keyCnt...\n\t    //console.log(\"Database where:\",where);\n\t    var docs=this.getDocs(state,where); // get all docs\n\t    //console.log(\">>>Extraction key (where='\",where,\"') Docs:\",docs.length);\n\t    state.Matrix.initKeyCnt(state);\n\t    state.Matrix.makeKeyCntMapArea(state,docs);      // makes mapArea\n\t    state.Matrix.makeMapRange(state);\n\t    state.Matrix.addUndefinedKeyCnt(state,docs); // add \"undefined\"\n\t    state.Matrix.addUndefinedKeyCntValues(state);\n\t    state.Matrix.addMapAreaKeys(state,docs); // add lat_/lon_\n\t    state.Path.exportAllKeys(state); // can not export keys before we have a keyCnt\n\t    state.Matrix.sortKeyValues(state);\n\t    state.Matrix.makeMatrix(state,docs,m);\n\t    //console.log (\"Matrix:\",JSON.stringify(m));\n\t}\n\tthis.processing=false;\n\tshowFunc(state,m);\n    };\n    this.dbindex=function(state,ks) { // make indexes on all keys\n\tvar s=\"\";\n\tvar klen = ks.length;\n\tfor (var ii = 0; ii < klen; ii++) {\n\t    //this.query(\"CREATE INDEX ? ON TABLE alarm.?\",ks[ii],ks[ii]);\n\t    s=s+\" \"+ks[ii];\n\t};\n\t//console.log(\"Indexes:\",s);\n    };\n    this.getTitleDynamic=function(state,key,val) {\n\tvar ret,parse;\n\tif (state.Database.values[key] === undefined) {\n\t    ret=val;\n\t} else {\n\t    var keytrg=this.getKeytrg(state,key,val);\n\t    if (val === \"null\") {\n\t\tret=key + \" is NULL\";\n\t    } else if (keytrg === this.keytrg.Max) { // this is a function\n\t\tparse=state.Utils.getMax(state.Database.values[key]);\n\t\tif (parse === undefined) {\n\t\t    ret=key + \" is NULL\";\n\t\t} else {\n\t\t    ret=parse;\n\t\t};\n\t    } else if (keytrg === this.keytrg.Min) { // this is a function\n\t\tparse=state.Utils.getMin(state.Database.values[key]);\n\t\tif (parse === undefined) {\n\t\t    ret=key + \" is NULL\";\n\t\t} else {\n\t\t    ret=parse;\n\t\t};\n\t    } else {\n\t\tret=val;\n\t    };\n\t};\n\treturn ret;\n    };\n    this.getWhereDynamic=function(state,key,val) {\n\tvar ret,parse;\n\tif (state.Database.values[key] === undefined) {\n\t    ret=state.Database.getWhereNull(key);\n\t} else {\n\t    var keytrg=this.getKeytrg(state,key,val);\n\t    //console.log(\"parseWhere:\",key,JSON.stringify(val),keytrg);\n\t    if (keytrg === this.keytrg.Max) { // this is a function\n\t\tparse=state.Utils.getMax(state.Database.values[key]);\n\t\t//console.log(\"parseWhere:\",key,parse,JSON.stringify(state.Database.values[key]));\n\t\tif (parse === undefined) {\n\t\t    ret=key + \" is NULL\";\n\t\t} else {\n\t\t    ret=key + \"='\"+parse+\"'\";\n\t\t};\n\t    } else if (keytrg === this.keytrg.Min) { // this is a function\n\t\tparse=state.Utils.getMin(state.Database.values[key]);\n\t\tif (parse === undefined) {\n\t\t    ret=key + \" is NULL\";\n\t\t} else {\n\t\t    ret=key + \"='\"+parse+\"'\";\n\t\t};\n\t    } else if (keytrg !== undefined && val !== \"\") {\n\t\t//console.log(\"Key trg:\",keytrg,key,val);\n\t\tret=state.Database.getWhereValue(key,val);\n\t    } else {\n\t\tret=state.Database.getWhereNull(key);\n\t    }\n\t};\n\t//console.log(\"GetWhere:\",key,val,ret);\n\treturn ret;\n    };\n    this.getWhereRange=function(key,range) {\n\tif (range  !== undefined ||\n\t    range  !== null ||\n\t    range  !== \"\") {\n\t    //console.log(\"getWhereRange:\",key,JSON.stringify(range),range[0],range[2]);\n\t    return key +' >= '+range[0]+' AND ' + key + ' < '+range[1]+'';\n\t} else {\n\t    return;\n\t};\n    };\n    this.getWhereValue=function(key,val) {\n\tif (val  !== undefined ||\n\t    val  !== null ||\n\t    val  !== \"\") {\n\t    return key + '=\"'+val+'\"'\n\t} else {\n\t    return;\n\t};\n    };\n    this.getWhereNull=function(key) {\n\treturn '\"' + key + '\" is NULL';\n    };\n    this.getWhere=function(state,keys,vals,ranges) {\n\tvar where=\"\";\n\t//console.log(\"Path:\",JSON.stringify(state.Path.keys));\n\tif (keys === undefined) {\n\t    keys=state.Path.keys.path;\n\t    vals=state.Path.select.val;\n\t    ranges=state.Path.select.range;\n\t    //console.log(\"getWhere ranges:\",JSON.stringify(ranges));\n\t};\n\tif (vals === undefined) {vals=[];};\n\tif (ranges === undefined) {ranges=[];};\n\tif (keys !== undefined) {\n\t    var plen = keys.length;\n\t    for (var ii = 0; ii < plen; ii++) {\n\t\tvar key=keys[ii];\n\t\tvar whereKey=state.Database.parseWhere(state,key,vals[key],ranges[key])\n\t\t//console.log(\"Wherekey:\",ii,key,JSON.stringify(vals),\n\t\t//\t    JSON.stringify(vals[key]),JSON.stringify(ranges[key]),\"'\"+whereKey+\"'\");\n\t\tif (whereKey  === undefined ||\n\t\t    whereKey  === null ||\n\t\t    whereKey  === \"\" ) {\n\t\t    if (where !== \"\") { where = where +  ' AND ';};\n\t\t    where= where + key +' is NULL';\n\t\t} else {\n\t\t    if (where !== \"\") { where = where +  ' AND ';};\n\t\t    where=where + \"(\"+ whereKey+\")\";\n\t\t}\n\t    };\n\t    if (where !== \"\") {where=\" WHERE \"+where;}\n\t};\n\t//console.log(\"Where=|\"+where+\"|\")\n\treturn where;\n    };\n    this.addWhere=function(iwhere,whereKey) {\n\tvar where=iwhere;\n\tif (whereKey  !== undefined &&\n\t    whereKey  !== null &&\n\t    whereKey  !== \"\" ) {\n\t    if (where !== \"\") {\n\t\twhere = where +  \" AND (\"+ whereKey+\")\";\n\t    } else {\n\t\twhere = \" WHERE (\"+ whereKey+\")\";\n\t    }\n\t}\n\treturn where;\n    };\n    this.getColWhere=function(key,values,index,step) {\n\tvar clen=values.length;\n\tvar where=\"\";\n        for (var kk=index;kk<Math.min(clen,index+step);kk++) {\n\t    if (where !== \"\") {where=where + \" or \";}\n\t    where=where + this.getWhereValue(key,values[kk]);\n        };               \n\treturn where;\n    };\n    this.makeWhere=function(state,keys,vals) {\n\t//console.log(\"Make where:\",JSON.stringify(keys),JSON.stringify(vals));\n\tif (keys === undefined) {\n\t    state.Path.keys.path.forEach(function(item,index) {this.setWhere(state,item,state.Path.select.val[item]);}.bind(this));\n\t} else {\n\t    keys.forEach(function(item,index) {this.setWhere(state,item,vals[item]);}.bind(this));\n\t}\n    };\n    this.setWhere=function(state,key,vals,range) {\n\t//console.log(\"Setting where:\",key,JSON.stringify(vals));\n\tvar where=this.parseWhere(state,key,vals,range);\n\t//console.log(\"Setting where:\",key,JSON.stringify(vals),\"'\"+where+\"'\");\n\tstate.Path.where[key]=where;\n    };\n    this.parseWhere=function(state,key,vals,range) {\n\tvar where=\"\";\n\tif (vals === undefined) {vals=[];};\n\tvar lenv=vals.length\n\tfor (var ii=0;ii<lenv;ii++) {\n\t    var val=vals[ii]\n\t    if (where !== \"\") { where=where + \" OR \";};\n\t    where = where + state.Database.getWhereDynamic(state,key,val);\n\t    //console.log(\"From getWhereDynamic:\",key,\":\",val,\":\",where);\n\t};\n\tif (range !== undefined) {\n\t    if (where !== \"\") { where=where + \" OR \";};\n\t    where = where + state.Database.getWhereRange(key,range);\n\t}\n\treturn where;\n    };\n    this.getGroup=function(keys) {\n\tvar group=\"\";\n\tvar plen = keys.length;\n\tfor (var ii = 0; ii < plen; ii++) {\n\t    var key=keys[ii];\n\t    if (group !== \"\") { group = group +  ',';};\n\t    group= group + key;\n\t};\n\tif (group !== \"\") {group=\" GROUP BY \"+group;}\n\treturn group;\n    };\n    this.getCols=function(ikeys) {\n\tvar onlyUnique=function(value, index, self) { \n\t    return self.indexOf(value) === index;\n\t};\n\tvar keys = ikeys.filter( onlyUnique );\n\tvar cols=\"\";\n\tvar plen = keys.length;\n\tfor (var ii = 0; ii < plen; ii++) {\n\t    var key=keys[ii];\n\t    cols= cols + key;\n\t    if (cols !== \"\") { cols = cols +  ',';};\n\t};\n\treturn cols;\n    };\n    this.getAll=function(state) {\n\tvar cols=\"\";\n\tvar plen = state.Path.keys.other.length;\n\tfor (var ii = 0; ii < plen; ii++) {\n\t    var key=state.Path.keys.other[ii];\n\t    cols= cols + key;\n\t    if (cols !== \"\") { cols = cols +  ',';};\n\t};\n\treturn cols;\n    };\n    this.getDocsRank=function(state,where,keys,maxrank) {\n\tvar dd;\n\tdd=this.query(\"select * FROM alarm\"+where);\n\treturn (dd===undefined?[]:dd);\n    };\n\n    this.getRankCnt=function(state,where,keys,maxrank) {\n\twhere=this.addWhere(where,\"rank='\" + maxrank.toString()+\"'\");\n\tvar sql,dd;\n\tvar body=\"* FROM alarm\";\n\tif (keys  === undefined) {\n\t    sql=\"select \"+body+where;\n\t    //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\t    dd=this.query(sql);\n\t    //console.log(\"initial count:\",dd[0].cnt,JSON.stringify(dd0));\n\t    //console.log(\"Cnt:\",JSON.stringify(dd));\n\t} else {\n\t    var cols = this.getCols(keys);\n\t    var group = this.getGroup(keys);\n\t    sql=\"select \"+cols+body+\n    \t\twhere+group;\n\t    //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\t    dd=this.query(sql);\n\t    //console.log(\"Cnt:\",JSON.stringify(dd),JSON.stringify(keys));\n\t}\n\treturn (dd===undefined?[]:dd);\n    };\n    this.getDocsCnt=function(state,where,keys) {\n\tvar sql,dd;\n\t//console.log(\"Docs:\",JSON.stringify(this.db.tables.alarm.data));\n\tvar body='count(*) AS cnt, max(level) AS maxlev, max(rank) AS maxrank, min(level) AS minlev, max(lat) AS maxlat, min(lat) AS minlat, max(lon) AS maxlon, min(lon) AS minlon FROM alarm';\n\tif (keys  === undefined) {\n\t    sql=\"select \"+body+where;\n\t    //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\t    dd=this.query(sql);\n\t    //console.log(\"initial count:\",dd[0].cnt,JSON.stringify(dd0));\n\t    //console.log(\"Cnt-A:\",JSON.stringify(dd));\n\t} else {\n\t    var cols = this.getCols(keys);\n\t    var group = this.getGroup(keys);\n\t    sql=\"select \"+cols+body+where+group;\n\t    //console.log(\"SQL:\",sql);\n\t    //console.log(\"Body:\",body,\":\",where,\",group:\",group,\",keys:\",JSON.stringify(keys));\n\t    dd=this.query(sql);\n\t    //console.log(\"Cnt-B:\",JSON.stringify(dd),\",keys:\",JSON.stringify(keys));\n\t}\n\treturn (dd===undefined?[]:dd);\n    };\n    this.getDocs=function(state,where) {\n\tvar query=\"select * FROM alarm\"+where;\n\t//query=\"select * FROM alarm WHERE (_lat=69.00631578947369) AND (_lon=17.206315789473685)\";\n\tvar dd=this.query(query);\n\t//console.log(\"getDocs q:\",query,JSON.stringify(dd));\n\treturn (dd===undefined?[]:dd);\n    };\n    this.makeTable=function(state) {\n\tthis.query('DROP TABLE IF EXISTS alarm; CREATE TABLE alarm;');\n    };\n    this.dataToDb=function(state,data) {\n\tthis.db.tables.alarm.data = data;\n    };\n    this.getKeyCnt=function(state,key,where){\n\tvar sql=\"select \"+key+\",count(*) AS cnt FROM alarm\"+\n\t    where+\" GROUP BY \"+key;\n\treturn this.query(sql);\n    };\n    this.whatIsIt=function(object) { // determine object type\n\tif (object  === null) {\n\t    return \"null\";\n\t} else if (object.constructor  === this.arrayConstructor) {\n\t    return \"Array\";\n\t}\n\telse if (object.constructor  === this.objectConstructor) {\n\t    return \"Object\";\n\t}\n\telse {\n\t    return \"value\";\n\t}\n    };\n    this.getTimeDiff=function(state,dt) {\n\tvar s=\"\";\n\tif (dt  === undefined || isNaN(state,dt)) {return s;};\n\tvar msec=Math.abs(state,dt);\n\tvar dd = Math.floor(state,((state,(msec / 1000) / 60) / 60) / 24);\n\tmsec -= dd * 1000 * 60 * 60 * 24;\n\tvar hh = Math.floor(state,((state,msec / 1000) / 60) / 60);\n\tmsec -= hh * 1000 * 60 * 60;\n\tvar mm = Math.floor(state,(msec / 1000) / 60);\n\tmsec -= mm * 1000 * 60;\n\tvar ss = Math.floor(state,msec / 1000);\n\tmsec -= ss * 1000;\n\tif (dt<0) {\n\t    s=\"-\";\n\t} else if (dt > 0) {\n\t    s=\"+\";\n\t} else {\n\t    s=\"0\";\n\t}\n\tif (dd !== 0) s=s+\" \"+state.Utils.numberWithCommas(dd)+\"d\";\n\tif (hh !== 0) s=s+\" \"+hh+\"h\";\n\tif (mm !== 0) s=s+\" \"+mm+\"m\";\n\t//if (ss !== 0) s=s+\" \"+ss+\"s\";\n\treturn s;\n    }\n    this.sanityCheck=function(state) {\n\tvar sql='select count(*) AS cnt, max(level) AS lev FROM alarm';\n\tvar dd0=this.query(sql);\n\tvar nrec= dd0[0].cnt;\n\treturn nrec;\n    }\n    this.query=function(sql) {\n\ttry {\n\t    return this.db.exec(sql);\n\t} catch (e) {\n\t    alert(sql + \":\" + e);\n\t};\n    }\n\n};\n\nexport default Database;\n"]},"metadata":{},"sourceType":"module"}