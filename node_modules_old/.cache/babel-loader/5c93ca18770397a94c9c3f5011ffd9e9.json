{"ast":null,"code":"//console.log(\"Loading MatrixLib.js\");\nfunction Matrix() {\n  this.bdeb = false;\n  this.cnt = 0;\n  this.keyCnt = {};\n  this.levCnt = {};\n  this.values = {};\n  this.limit = 100; // displayed data\n\n  this.popSingle = 2000; //0000;\n\n  this.popSeries = 2000; //0000;\n\n  this.init = function (state) {\n    var par = \"Matrix\";\n    state.Utils.init(par, this);\n  };\n\n  this.initKeyCnt = function (state) {\n    this.values = {};\n    this.keyCnt = {};\n  };\n\n  this.cntKey = function (state, key, nrec, where) {\n    var val;\n\n    if (this.values[key] === undefined) {\n      this.keyCnt[key] = 0;\n      this.values[key] = [];\n    }\n\n    if (state.Path.ignore.indexOf(key) === -1 && key !== \"\") {\n      //ignore special words... \n      var tcnt = 0;\n      var docs = state.Database.getKeyCnt(state, key, where); //console.log(\"Count:\",sql,JSON.stringify(docs));\n\n      var dlen = docs.length;\n\n      for (var jj = 0; jj < dlen; jj++) {\n        var doc = docs[jj];\n        val = doc[key];\n        var cnt = doc.cnt;\n\n        if (val !== undefined) {\n          //console.log(\"Found key:\",key,this.getDocVal(state,doc,key));\n          this.keyCnt[key] = this.keyCnt[key] + cnt;\n          this.values[key].push(val);\n          tcnt = tcnt + cnt;\n        }\n      }\n\n      ;\n\n      if (tcnt < nrec) {\n        // insert undefined...\n        val = \"\";\n        this.values[key].push(val);\n      }\n\n      ;\n    } else if (key === \"\") {\n      console.log(\"Key error...\", new Error().stack);\n    }\n  };\n\n  this.makeKeyCntMapAreaSql = function (state, where, nrec) {\n    var keys = state.Path.getActiveKeys(state);\n    state.Utils.cpArray(keys, [\"lat\", \"lon\", \"level\"]);\n\n    if (keys !== undefined) {\n      var plen = keys.length;\n\n      for (var ii = 0; ii < plen; ii++) {\n        var key = keys[ii];\n\n        if (key !== \"\" && key.substr(0, 1) !== \"_\") {\n          this.cntKey(state, key, nrec, where);\n        }\n      }\n    }\n\n    ;\n    this.setMapArea(state, where);\n  };\n\n  this.updateKeyCnt = function (state, key) {\n    if (this.keyCnt[key] === undefined) {\n      this.keyCnt[key] = 1;\n      this.values[key] = [];\n    } else {\n      this.keyCnt[key]++;\n    } //console.log(\"Update key cnt:\",key,this.keyCnt[key]);\n\n  };\n\n  this.updateValues = function (state, key, val) {\n    if (val !== undefined && this.values[key].indexOf(val) === -1) {\n      // value not in range\n      //console.log(\"Checking val=\",JSON.stringify(val),\" key=\",key,\" doc=\",JSON.stringify(doc));\n      //console.log(\"range=\",state.Utils.toString(state.Path.keys.trash));\n      this.values[key].push(val);\n    }\n\n    ;\n  }; // add \"undefined\" range of keys that are not present in every doc...\n\n\n  this.addUndefinedKeyCnt = function (state, docs) {\n    var dlen = docs.length;\n\n    for (var key in this.keyCnt) {\n      if (this.keyCnt[key] < dlen) {\n        var val = \"\";\n        this.values[key].push(val);\n      }\n    }\n  }; // parent path keys are always present (undefined parents can be used)...\n\n\n  this.addUndefinedKeyCntValues = function (state) {\n    var plen = state.Path.keys.path.length;\n\n    for (var ii = 0; ii < plen; ii++) {\n      var key = state.Path.keys.path[ii];\n\n      if (this.keyCnt[key] === undefined) {\n        this.keyCnt[key] = 0;\n        this.values[key] = [];\n      }\n    }\n  };\n\n  this.makeKeyCntMapArea = function (state, docs) {\n    //console.log(\"Visible keys:\",JSON.stringify(keys));\n    var key;\n    var maxlat, minlat, maxlon, minlon;\n    var dlen = docs.length; //console.log(\"MakeKeyCntMapArea:\",dlen);\n\n    for (var ii = 0; ii < dlen; ii++) {\n      var doc = docs[ii]; //var vals=[];\n\n      var dkeys = Object.keys(doc);\n\n      if (dkeys.indexOf(\"lat\") === -1) {\n        state.Utils.cpArray(dkeys, [\"lat\"]);\n      }\n\n      if (dkeys.indexOf(\"lon\") === -1) {\n        state.Utils.cpArray(dkeys, [\"lon\"]);\n      }\n\n      if (dkeys.indexOf(\"level\") === -1) {\n        state.Utils.cpArray(dkeys, [\"level\"]);\n      }\n\n      var lend = dkeys.length;\n\n      for (var kk = 0; kk < lend; kk++) {\n        key = dkeys[kk];\n        var val = this.getDocVal(state, doc, key);\n\n        if (val !== undefined) {\n          this.updateKeyCnt(state, key);\n          this.updateValues(state, key, val);\n\n          if (key === \"lat\") {\n            if (maxlat === undefined) {\n              maxlat = val;\n            } else {\n              maxlat = Math.max(val, maxlat);\n            }\n\n            ;\n\n            if (minlat === undefined) {\n              minlat = val;\n            } else {\n              minlat = Math.min(val, minlat);\n            }\n\n            ;\n            this.updateKeyCnt(state, \"_lat\");\n          } else if (key === \"lon\") {\n            if (maxlon === undefined) {\n              maxlon = val;\n            } else {\n              maxlon = Math.max(val, maxlon);\n            }\n\n            ;\n\n            if (minlon === undefined) {\n              minlon = val;\n            } else {\n              minlon = Math.min(val, minlon);\n            }\n\n            ;\n            this.updateKeyCnt(state, \"_lon\");\n          }\n        }\n      }\n\n      ; //console.log(\"Trash doc=\",ii,JSON.stringify(doc),minlat,maxlat,minlon,maxlon);\n    }\n\n    state.Grid.setArea(minlat, maxlat, minlon, maxlon);\n    return;\n  };\n\n  this.setMapArea = function (state, where) {\n    var docs = state.Database.getDocsCnt(state, where);\n    var dlen = docs.length;\n\n    for (var ii = 0; ii < dlen; ii++) {\n      var doc = docs[ii];\n      var minlon = this.getDocVal(state, doc, \"minlon\");\n      var maxlon = this.getDocVal(state, doc, \"maxlon\");\n      var minlat = this.getDocVal(state, doc, \"minlat\");\n      var maxlat = this.getDocVal(state, doc, \"maxlat\");\n      state.Grid.setArea(minlat, maxlat, minlon, maxlon);\n\n      if (this.bdeb) {\n        console.log(\"setMapArea:\", JSON.stringify(this.area), JSON.stringify(this.doc));\n      }\n\n      ;\n    }\n  };\n\n  this.makeMapRange = function (state) {\n    var distinct = function distinct(value, index, self) {\n      return self.indexOf(value) === index;\n    };\n\n    var lats, lons;\n    var layoutMode = state.Layout.getLayoutMode(state);\n    var map = state.Custom.getMap(state, layoutMode);\n\n    if (map !== undefined && map.cells !== undefined) {\n      //console.log(\"Found custom map...\",JSON.stringify(map));\n      lats = state.Custom.getLats(state, map);\n      this.values[\"_lat\"] = lats.filter(distinct);\n      lons = state.Custom.getLons(state, map);\n      this.values[\"_lon\"] = lons.filter(distinct); //console.log(\"Made values...\",JSON.stringify(this.values));\n    } else {\n      lats = state.Grid.getLats(state);\n      this.values[\"_lat\"] = lats.filter(distinct);\n      lons = state.Grid.getLons(state);\n      this.values[\"_lon\"] = lons.filter(distinct);\n    }\n\n    ;\n  };\n\n  this.addMapAreaKeys = function (state, docs) {\n    var layoutMode = state.Layout.getLayoutMode(state);\n    var map = state.Custom.getMap(state, layoutMode);\n    var dlen, ii, doc, ilat, ilon;\n\n    if (map !== undefined && map.cells !== undefined) {\n      dlen = docs.length;\n\n      for (ii = 0; ii < dlen; ii++) {\n        doc = docs[ii];\n        var cell = state.Custom.findCell(state, map, doc);\n\n        if (cell !== undefined) {\n          ilat = state.Custom.getCellRow(state, cell);\n          ilon = state.Custom.getCellCol(state, cell);\n          doc._lat = ilat;\n          doc._lon = ilon;\n          this.updateKeyCnt(state, \"_lat\");\n          this.updateKeyCnt(state, \"_lon\");\n        }\n      }\n    } else {\n      dlen = docs.length;\n\n      for (ii = 0; ii < dlen; ii++) {\n        doc = docs[ii]; //var vals=[];\n        //var lat=docs[\"lat\"];\n\n        var latpos = state.Grid.latToPos(state, doc.lat);\n        ilat = state.Grid.posToLat(state, latpos); //console.log(\"Lat:\",doc.lat,latpos,ilat);\n        //var lon=docs[\"lon\"];\n\n        var lonpos = state.Grid.lonToPos(state, doc.lon);\n        ilon = state.Grid.posToLon(state, lonpos);\n        doc._lat = ilat;\n        doc._lon = ilon;\n        this.updateKeyCnt(state, \"_lat\");\n        this.updateKeyCnt(state, \"_lon\"); //console.log(\"AddMapAreaKeys=\",doc.lon,lonpos,ilon,doc._lon);\n      }\n    }\n  };\n\n  this.makeMatrixCntMap = function (state, cntDocs, matrix) {\n    //console.log(\"MatrixCnt:\",JSON.stringify(cntDocs));\n    //var lonmin,lonmax,latmin,latmax;\n    var found = false;\n    var colkey = state.Path.getColKey(state);\n    var rowkey = state.Path.getRowKey(state); //var svgkey=state.Svg.getKey(state);\n\n    this.levCnt = {};\n\n    if (this.bdeb) {\n      console.log(\"Keys:\", JSON.stringify(colkey), JSON.stringify(rowkey));\n    }\n\n    ; //var pos=[];\n\n    var dlen = cntDocs.length;\n\n    for (var ii = 0; ii < dlen; ii++) {\n      var doc = cntDocs[ii];\n      var colval = this.getDocVal(state, doc, colkey);\n      var rowval = this.getDocVal(state, doc, rowkey);\n      var cnt = this.getDocVal(state, doc, \"cnt\");\n      var maxlev = this.getDocVal(state, doc, \"maxlev\");\n      var maxrank = this.getDocVal(state, doc, \"maxrank\");\n      var minlev = this.getDocVal(state, doc, \"minlev\");\n      var svgid = state.Svg.getId(state, doc); //var minlon=this.getDocVal(state,doc,\"minlon\");\n      //var maxlon=this.getDocVal(state,doc,\"maxlon\");\n      //var minlat=this.getDocVal(state,doc,\"minlat\");\n      //var maxlat=this.getDocVal(state,doc,\"maxlat\");\n      //if (lonmin === undefined || minlon < lonmin) {\n      //\tlonmin=minlon\n      //};\n      //if (latmin === undefined || minlat < latmin) {\n      //\tlatmin=minlat\n      //};\n      // find matrix array element\n      //console.log (\"Processing:\",JSON.stringify(doc),maxlev,minlev,cnt);\n\n      var arr = this.makeMatrixElement(state, colval, rowval, matrix); // update matrix array element\n\n      if (maxlev >= 0) {\n        found = true;\n      }\n\n      if (arr !== undefined) {\n        if (arr.maxlev === undefined || arr.maxlev < maxlev) {\n          arr.maxlev = maxlev;\n          arr.svgid = svgid;\n          arr.svgcnt = cnt;\n        } else if (arr.svgcnt === undefined || arr.svgcnt < cnt && arr.maxlev === maxlev) {\n          arr.svgid = svgid;\n          arr.svgcnt = cnt;\n        }\n\n        ;\n\n        if (arr.minlev === undefined || arr.minlev > minlev) {\n          arr.minlev = minlev;\n        }\n\n        if (arr.maxrank === undefined || arr.maxrank < maxrank) {\n          arr.maxrank = maxrank;\n        }\n\n        if (arr.cnt === undefined) {\n          arr.cnt = 0;\n        }\n\n        ;\n        arr.cnt = arr.cnt + cnt;\n        arr.def = 0; //arr.docs=[];\n        //console.log (\"Array:\",JSON.stringify(arr));\n      } // \tstate.Grid.setArea(minlat,maxlat,minlon,maxlon);\n\n    }\n\n    if (!found) {\n      console.log(\"makeMatrixCntMap No relevant thresholds found.\");\n      state.Html.setFootnote(state, \"No data found.\");\n    }\n\n    if (state.Layout.state.tooltip === 0) {\n      // pre-generate all tooltips\n      state.Matrix.addAllTooltip(state, matrix);\n    }\n\n    ; //console.log (\"makeMatrixCnt:\",JSON.stringify(matrix),colkey,rowkey);\n  };\n\n  this.makeMatrix = function (state, docs, matrix) {\n    var found = false;\n    var colkey = state.Path.getColKey(state);\n    var rowkey = state.Path.getRowKey(state); //var svgkey=state.Svg.getKey(state);\n\n    this.levCnt = {}; //var pos=[];\n\n    var dlen = docs.length;\n\n    for (var ii = 0; ii < dlen; ii++) {\n      var doc = docs[ii];\n      var colval = this.getDocVal(state, doc, colkey);\n      var rowval = this.getDocVal(state, doc, rowkey);\n      var svgid = state.Svg.getId(state, doc); //console.log(\"Found doc:\",colval,rowval,doc[\"lon\"],doc[\"lat\"])\n      // find matrix array element\n\n      var arr = this.makeMatrixElement(state, colval, rowval, matrix); // update matrix array element\n      //console.log (\"Processing:\",colval,rowval,JSON.stringify(doc));\n\n      var dlev = state.Threshold.getLevel(state, doc);\n\n      if (dlev === undefined) {\n        dlev = -2;\n      }\n\n      ;\n\n      if (dlev >= 0) {\n        found = true;\n      }\n\n      this.updateLevCnt(state, colval, dlev);\n      this.updateLevCnt(state, rowval, dlev);\n      this.updateMatrixElement(state, arr, dlev, svgid, doc);\n    }\n\n    if (!found) {\n      console.log(\"makeMatrix No relevant thresholds found.\"); //console.log(\"Keys:\",JSON.stringify(colkey),JSON.stringify(rowkey),);\n\n      state.Html.setFootnote(state, \"No data with valid threshold was found.\");\n    } //console.log (\"makeMatrix tooltip-keys:\",JSON.stringify(state.Path.tooltip));\n    //console.log (\"makeMatrix:\",JSON.stringify(matrix),colkey,rowkey);\n\n  };\n\n  this.updateLevCnt = function (state, val, lev) {\n    if (this.levCnt[val] === undefined) {\n      this.levCnt[val] = {};\n    }\n\n    ;\n\n    if (this.levCnt[val][lev] === undefined) {\n      this.levCnt[val][lev] = 0;\n    }\n\n    ;\n    this.levCnt[val][lev] = this.levCnt[val][lev] + 1;\n  };\n\n  this.makeMatrixElement = function (state, colval, rowval, matrix) {\n    var first = false;\n\n    if (matrix[colval] === undefined) {\n      first = true;\n      matrix[colval] = {};\n    }\n\n    ;\n\n    if (matrix[colval][rowval] === undefined) {\n      first = true;\n      matrix[colval][rowval] = {};\n    }\n\n    ;\n    var m = matrix[colval][rowval];\n\n    if (first) {\n      m.colval = colval;\n      m.rowval = rowval;\n    }\n\n    ;\n    return m;\n  };\n\n  this.getMatrixElement = function (colval, rowval, matrix) {\n    if (matrix[colval] === undefined) {\n      //console.log(\"getMatrixElement NO COL-ELEMENT:\",colval,\"|\",JSON.stringify(Object.keys(matrix)));\n      return;\n    } else if (matrix[colval][rowval] === undefined) {\n      //console.log(\"getMatrixElement NO ROW-ELEMENT:\",rowval,\"|\",JSON.stringify(Object.keys(matrix[colval])));\n      return;\n    } else {\n      //console.log(\"getMatrixElement Found:\",colval,\",\",rowval,\"|\",JSON.stringify(matrix[colval][rowval]));\n      return matrix[colval][rowval];\n    }\n  };\n\n  this.printElements = function (matrix) {// loop over colvalues\n    //console.log(\"Matrix:\",JSON.stringify(matrix));\n    //var colvalues=Object.keys(matrix);\n    //console.log(\"Matrix keys:\",JSON.stringify(colvalues));\n    //for (var colval of colvalues) {\n    //   console.log(\">\",colval);\n    //    if (colval === undefined) {\n    //\tconsole.log(colval,\": ***\");\n    //    } else {\n    //\t//var rowvalues=Object.keys(matrix[colval]);\n    //\t//console.log(colval,\":\",rowvalues);\n    //    };\n    //};\n  };\n\n  this.getMatrixDocs = function (matrix, skeys) {\n    var lens = skeys.length;\n    var ret = [];\n\n    for (var irow in matrix) {\n      if (matrix.hasOwnProperty(irow)) {\n        var cols = matrix[irow];\n\n        for (var icol in cols) {\n          if (cols.hasOwnProperty(icol)) {\n            var docs = cols[icol].docs;\n            console.log(\"Found docs:\", JSON.stringify(docs));\n\n            for (var idoc in docs) {\n              if (docs.hasOwnProperty(idoc)) {\n                var doc = docs[idoc];\n                var dd = {};\n\n                for (var i = 0; i < lens; i++) {\n                  var key = skeys[i];\n\n                  if (doc[key] !== undefined) {\n                    dd[key] = doc[key];\n                  }\n                }\n\n                ret.push(dd);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return ret;\n  };\n\n  this.getMatrixElements = function (icolvalues, irowval, matrix, iindex, istep) {\n    var colvalues = icolvalues === undefined ? undefined : icolvalues.slice();\n    var index = iindex;\n    var step = istep;\n    var elements = undefined;\n\n    if (colvalues === undefined) {\n      // all colvalues\n      colvalues = Object.keys(matrix);\n      index = 0;\n      step = colvalues.length;\n    }\n\n    ;\n    var clen = colvalues.length;\n\n    if (matrix !== undefined && matrix !== null) {\n      for (var kk = index; kk < Math.min(clen, index + step); kk++) {\n        var colval = colvalues[kk];\n        var rowvalues = [irowval];\n\n        if (irowval === undefined) {\n          var mm = matrix[colval];\n\n          if (mm !== undefined) {\n            rowvalues = Object.keys(mm);\n          }\n        } //console.log(\"Checking:\",kk,clen,colval,JSON.stringify(rowvalues),\n        //\t    JSON.stringify(icolvalues),JSON.stringify(colvalues),irowval,index,step);\n\n\n        var rlen = rowvalues.length;\n\n        for (var ll = 0; ll < rlen; ll++) {\n          var rowval = rowvalues[ll];\n          var element = this.getMatrixElement(colvalues[kk], rowval, matrix);\n\n          if (element === undefined) {} else {\n            //console.log(\"getMatrixElements Found:\",kk,colval,rowval);\n            if (elements === undefined) {\n              elements = [];\n            }\n\n            ;\n            elements.push(element); //console.log(\"Added element:\",JSON.stringify(element),element.docs.length);\n          }\n        }\n      }\n\n      ;\n    } else {//console.log(\"No matrix available.\");\n    }\n\n    return elements;\n  };\n\n  this.getMatrixRowElements = function (colval, rowvalues, matrix, index, step) {\n    var rlen = rowvalues.length;\n    var elements = undefined;\n\n    if (matrix !== undefined) {\n      for (var kk = index; kk < Math.min(rlen, index + step); kk++) {\n        var element = this.getMatrixElement(colval, rowvalues[kk], matrix);\n\n        if (element === undefined) {} else {\n          //console.log(\"getMatrixElements Found:\",kk,rowvalues[kk],colval);\n          if (elements === undefined) {\n            elements = [];\n          }\n\n          ;\n          elements.push(element);\n        }\n      }\n\n      ;\n    } else {\n      console.log(\"No matrix available.\");\n    }\n\n    return elements;\n  };\n\n  this.getDocVal = function (state, doc, key) {\n    if (key === undefined || key === null) {\n      return null;\n    }\n\n    ;\n    var val = doc[key];\n\n    if (val === undefined) {\n      val = \"\";\n    }\n\n    ;\n    return val;\n  };\n\n  this.updateMatrixElement = function (state, arr, dlev, svgid, doc) {\n    // called once for every hit\n    if (arr === undefined) {\n      console.log(\"Undefined matrix element.\");\n      return;\n    }\n\n    ;\n    var nn = arr.cnt || 0;\n    var dd = arr.def || 0;\n\n    if (arr.maxlev === undefined || arr.maxlev === -1 || dlev !== -1 && arr.maxlev < dlev) {\n      arr.maxlev = dlev;\n      arr.svgid = svgid;\n      arr.svgcnt = 1;\n    } else if (arr.svgcnt === undefined || arr.maxlev === dlev) {\n      arr.svgid = svgid;\n      arr.svgcnt = 1; // oh well, just use the icon from the last one...\n    }\n\n    ;\n\n    if (arr.minlev === undefined || arr.minlev > dlev) {\n      arr.minlev = dlev;\n    }\n\n    ;\n\n    if (arr.docs === undefined) {\n      arr.docs = [];\n    }\n\n    ;\n    arr.cnt = nn + 1; //console.log(\"Matrix doc:\",JSON.stringify(doc),dlev);\n\n    if (doc._thr !== undefined && doc._thr.val !== undefined) {\n      arr.def = dd + 1;\n\n      if (arr.def <= this.limit) {\n        arr.docs.push(doc);\n      }\n\n      ;\n    } else if (nn === dd) {\n      // make sure at least 1 undef is added...\n      arr.docs.push(doc);\n    } //if (state.Layout.state.tooltip === 0) {\n\n\n    var rank = state.Threshold.getRank(state, doc);\n\n    if (arr.tooltip === undefined) {\n      arr.tooltip = {};\n    }\n\n    ;\n    var el = this.getTooltipElement(state, arr.tooltip, doc);\n\n    if (dlev !== -1 && (el.maxrank === undefined && el.maxlev === undefined || el.maxlev < dlev || el.maxlev === dlev && el.maxrank < rank)) {\n      el.maxlev = dlev;\n      el.maxrank = rank;\n      el.docs = [];\n      el.docs.push(doc);\n    } else if (el.maxlev === dlev && el.maxrank === rank) {\n      if (dlev > 0 && dlev < state.Threshold.getMaxLevel(doc) && el.docs.length < 3 || el.docs.length < 1) {\n        el.docs.push(doc);\n      }\n\n      ;\n    }\n\n    ; //}\n    //console.log (\"Updating:\",JSON.stringify(arr),dlev,rank,JSON.stringify(doc));\n  };\n\n  this.getTooltipElement = function (state, tooltip, doc) {\n    var ret = tooltip;\n    var keys = state.Path.tooltip.select;\n    var lenk = keys.length; //console.log(\"Select-keys: \",lenk,JSON.stringify(keys));\n\n    for (var ii = 0; ii < lenk; ii++) {\n      var key = keys[ii];\n      var val = doc[key];\n\n      if (ret[val] === undefined) {\n        ret[val] = {};\n      }\n\n      ;\n      ret = ret[val]; //console.log(\"Selecting: \",ii,key,val,JSON.stringify(ret));\n    }\n\n    ;\n    return ret;\n  };\n\n  this.getRange = function (state, matrix, colvalues, rowvalues) {\n    var range; //console.log(\"Thresholds:\",JSON.stringify(state.Threshold.thrs));\n    //console.log(\"getRange Cols:\"+JSON.stringify(colvalues)+\" Rows:\"+JSON.stringify(rowvalues));\n\n    range = undefined;\n    var slenx = colvalues.length;\n\n    for (var ii = 0; ii < slenx; ii++) {\n      var sleny = rowvalues.length;\n\n      for (var jj = 0; jj < sleny; jj++) {\n        var element = this.getMatrixElement(colvalues[ii], rowvalues[jj], matrix);\n\n        if (element !== undefined) {\n          //console.log(\"Looking for range:\",ii,\"='\",colvalues[ii],\"' \",\n          //                                jj,\"='\",rowvalues[jj],\"'\",\n          //\t    JSON.stringify(element));\n          var docs = element.docs;\n\n          if (docs !== undefined) {\n            var dlen = docs.length;\n\n            for (var dd = 0; dd < dlen; dd++) {\n              var doc = docs[dd];\n\n              if (doc._thr !== undefined && doc._thr.val !== undefined) {\n                var val = doc._thr.val;\n                range = state.Grid.setRange(range, val);\n                var ts, dr;\n\n                if (doc._thr.max !== undefined) {\n                  //console.log(\"GetRange:\",JSON.stringify(doc._thr));\n                  ts = doc._thr.max;\n                  dr = ts[0] - ts[ts.length - 1];\n\n                  if (ts[ts.length - 1] > 0 && ts[ts.length - 1] - dr < 0) {\n                    // include zero\n                    range = state.Grid.setRange(range, 0);\n                  } //console.log(\"Found max:\",ts[0],ts[ts.length-1],dr,JSON.stringify(range),thr,key,val);\n\n                } else if (doc._thr.min !== undefined) {\n                  ts = doc._thr.min;\n\n                  if (ts[ts.length - 1] < 0 && ts[ts.length - 1] + dr > 0) {\n                    // include zero\n                    range = state.Grid.setRange(range, 0);\n                  } //console.log(\"Found min:\",ts[0],ts[ts.length-1],dr,JSON.stringify(range),thr,key,val);\n\n                }\n\n                range = state.Grid.setRange(range, ts[0]); // include lowest level\n\n                range = state.Grid.setRange(range, ts[ts.length - 1]); // include highest level\n                //console.log(\"After adjustment:\",tlev,ts.length,JSON.stringify(ts[tlev]),\"range=\",JSON.stringify(range));\n              }\n\n              ;\n            }\n          } else {//console.log(\"No matrix-element found:\",\n            //\t    JSON.stringify(colvalues[ii]),\n            //\t    JSON.stringify(rowvalues[jj]),\n            //\t    matrix.length,JSON.stringify(Object.keys(matrix))\n            //\t   );\n          }\n        }\n      }\n    } //console.log(\"Initial range:\",JSON.stringify(range));\n\n\n    range = state.Grid.adjustRange(range); //console.log(\"Final range:\",JSON.stringify(range));\n\n    return range;\n  };\n\n  this.sortTooltipDocs = function (state, docs) {\n    var sort = state.Path.tooltip.sort || [];\n    var lens = sort.length;\n    var order = state.Path.order;\n\n    var funk = function funk(a, b) {\n      for (var ss = 0; ss < lens; ss++) {\n        var key = sort[ss];\n        var va = a[key];\n        var vb = b[key];\n\n        if (order[key] !== undefined) {\n          // we have a predefined order\n          var ia = order[key].indexOf(va);\n          var ib = order[key].indexOf(vb);\n\n          if (ia !== -1 && ib !== -1) {\n            return ia - ib;\n          } else if (ia !== -1) {\n            return 1;\n          } else if (ia !== -1) {\n            return -1;\n          } else if (va !== vb) {\n            return (va > vb) - (va < vb);\n          }\n        } else {\n          if (va !== vb) {\n            return (va > vb) - (va < vb);\n          }\n        }\n      }\n\n      return 0;\n    };\n\n    var ret = docs.sort(funk);\n    return ret;\n  };\n\n  this.sortKeyValues = function (state) {\n    var tlen = state.Path.other.table.length; //console.log(\"this.sortKeyValues row/column:\",JSON.stringify(state.Path.other.table),tlen);\n    // sort values\n\n    for (var jj = 0; jj < tlen; jj++) {\n      var key = state.Path.other.table[jj];\n\n      if (this.values[key] !== undefined) {\n        //console.log(\"Key:\",key,\"Values:\",JSON.stringify(this.values[key]),jj,\n        //\t    \" sort:\",JSON.stringify(state.Database.keyCnt));\n        if (state.Database.keyCnt[key] === undefined) {\n          console.log(\"**** Undefined keycnt:\", key);\n        } else if (state.Database.keyCnt[key].order === state.Database.casc) {\n          this.values[key] = this.values[key].sort(state.Utils.ascending);\n        } else if (state.Database.keyCnt[key].order === state.Database.nasc) {\n          this.values[key] = this.values[key].sort(state.Utils.descendingN);\n        } else if (state.Database.keyCnt[key].order === state.Database.cdes) {\n          this.values[key] = this.values[key].sort(state.Utils.descending);\n        } else if (state.Database.keyCnt[key].order === state.Database.ndes) {\n          this.values[key] = this.values[key].sort(state.Utils.descendingN);\n        }\n\n        ; //console.log(\"Sorted keys:\",key,JSON.stringify(this.values[key]),state.Database.keyCnt[key].order);\n        // override sort\n\n        if (state.Path.order !== undefined && state.Path.order[key] !== undefined) {\n          // we have a predefined order\n          var buff = [];\n          var olen = state.Path.order[key].length;\n          var kk, val; //console.log(\"Order length:\",olen,jj);\n          // add ordered values (not in trash)\n\n          for (kk = 0; kk < olen; kk++) {\n            val = state.Path.order[key][kk];\n\n            if (this.values[key].indexOf(val) !== -1) {\n              //console.log(\"Adding:\",kk,val);\n              buff.push(val);\n            }\n          } // add remaining this.values values (not in trash)\n\n\n          var rlen = this.values[key].length;\n\n          for (kk = 0; kk < rlen; kk++) {\n            val = this.values[key][kk];\n\n            if (buff.indexOf(val) === -1) {\n              // not in sub\n              buff.push(val);\n              state.Path.order[key].push(val);\n            }\n          }\n\n          ;\n          this.values[key] = buff; // use requested order\n          //console.log(\"Using requested order:\",key);\n        }\n\n        ;\n      }\n\n      ; //console.log(\"Found values:\",key,JSON.stringify(this.values[key]));\n    }\n\n    ;\n  };\n\n  this.sortedKeys = function (state, obj) {\n    var key;\n    var skeys = [];\n\n    for (key in obj) {\n      if (obj.hasOwnProperty(key) && key.substring(0, 1) !== \"_\") {\n        skeys.push(key);\n      }\n    }\n\n    ;\n    skeys = skeys.sort(state.Utils.ascending);\n    var ks = [];\n    var slen = skeys.length;\n\n    for (var jj = 0; jj < slen; jj++) {\n      key = skeys[jj];\n\n      if (key.substr(state, 0, 1) !== \"_\" && ks.indexOf(key) === -1) {\n        ks.push(key);\n      }\n    } //console.log(\"state.Utils.sortedKeys...\",JSON.stringify(skeys),JSON.stringify(ks));\n\n\n    return ks;\n  };\n\n  this.getInfo = function (state, elements) {\n    var tooltip = {}; // list of maxrank-docs\n\n    var cnt = 0;\n    var maxlev = -1;\n    var minlev = 0;\n    var docs = [];\n\n    if (elements === undefined) {\n      console.log(\"No elements found.\");\n    } else {\n      //console.log(\"getInfo element:\",JSON.stringify(elements));\n      var elen = elements.length;\n\n      for (var ee = 0; ee < elen; ee++) {\n        cnt = cnt + elements[ee].cnt;\n\n        if (elements[ee].maxlev === undefined || elements[ee].minlev === undefined) {\n          minlev = Math.min(minlev, -2);\n        } else {\n          maxlev = Math.max(maxlev, elements[ee].maxlev);\n          minlev = Math.min(minlev, elements[ee].minlev);\n        } // loop over tooltips and put maxrank-docs into tooltip array\n\n\n        this.mergeTooltipElement(state, elements[ee].tooltip, tooltip, state.Path.tooltip.select.length);\n      }\n\n      docs = this.getTooltipDocs(state, tooltip); //console.log(\"Tooltip docs:\",JSON.stringify(tooltip),JSON.stringify(docs));\n    }\n\n    return {\n      cnt: cnt,\n      minlev: minlev,\n      maxlev: maxlev,\n      tooltip: this.sortTooltipDocs(state, docs)\n    };\n  };\n\n  this.mergeTooltipElement = function (state, nel, mel, pos) {\n    if (nel === undefined) {\n      return;\n    } // nothing to merge\n\n\n    var ipos = pos;\n\n    if (ipos === undefined) {\n      ipos = state.Path.tooltip.select.length;\n    } //console.log(\"Merging tooltip:\",ipos,JSON.stringify(nel));\n\n\n    if (ipos > 0) {\n      var vals = Object.keys(nel);\n      var lenv = vals.length;\n\n      for (var ii = 0; ii < lenv; ii++) {\n        var val = vals[ii];\n\n        if (mel[val] === undefined) {\n          mel[val] = {};\n        }\n\n        ;\n        this.mergeTooltipElement(state, nel[val], mel[val], ipos - 1);\n      }\n    } else {\n      if (mel.maxrank === undefined || mel.maxrank < nel.maxrank) {\n        mel.maxrank = nel.maxrank;\n        mel.docs = nel.docs;\n      }\n\n      ;\n    }\n  };\n\n  this.getTooltipDocs = function (state, el, pos) {\n    var docs = [];\n    var ipos = pos;\n\n    if (ipos === undefined) {\n      ipos = state.Path.tooltip.select.length;\n    }\n\n    if (el !== undefined) {\n      if (ipos > 0) {\n        var vals = Object.keys(el);\n        var lenv = vals.length;\n\n        for (var ii = 0; ii < lenv; ii++) {\n          var val = vals[ii];\n          var ndocs = this.getTooltipDocs(state, el[val], ipos - 1);\n          state.Utils.cpArray(docs, ndocs);\n        }\n      } else if (el.docs !== undefined) {\n        state.Utils.cpArray(docs, el.docs);\n      }\n\n      ;\n    }\n\n    ;\n    return docs;\n  };\n\n  this.checkTooltip = function (state, data) {\n    var rowval = data.rowval;\n    var colvalues = data.colvalues;\n    var step = data.step;\n    var index = data.index; // get elements\n\n    var elements = this.getMatrixElements(colvalues, rowval, state.React.matrix, index, step) || []; // loop over elements\t\n\n    var lene = elements.length;\n    var ttset = true;\n\n    for (var ee = 0; ee < lene; ee++) {\n      // check if elements have tooltip set\n      if (elements[ee].tooltip === undefined) {\n        ttset = false;\n      } //console.log(\"Element:\",ee,JSON.stringify(elements[ee]));\n\n    }\n\n    ;\n    return ttset;\n  };\n\n  this.addTooltip = function (state, data) {\n    //data={rowkey,rowval,colkey,colvalues,index,step,layout}\n    if (this.bdeb) {\n      console.log(\"Updated Matrix with tooltip.\", data.rowkey, data.colkey);\n    }\n\n    ; //console.log(\"Map:\",JSON.stringify(data.map),JSON.stringify(data.layout));\n\n    if (data.map === undefined) {\n      // get elements\n      var elements = this.getMatrixElements(data.colvalues, data.rowval, state.React.matrix, data.index, data.step) || [];\n      var lene = elements.length;\n\n      for (var ee = 0; ee < lene; ee++) {\n        // check if elements have tooltip set\n        if (elements[ee].tooltip === undefined) {\n          //console.log(\"AddTooltip:\",JSON.stringify(data));\n          var colval, rowval, layout;\n\n          if (data.colval !== undefined) {\n            colval = data.colval;\n          } else {\n            colval = elements[ee].colval;\n          }\n\n          ;\n\n          if (data.rowvalues !== undefined) {\n            rowval = data.rowvalues[data.index];\n          } else {\n            rowval = elements[ee].rowval;\n          }\n\n          ;\n          layout = data.layout;\n          this.addElementTooltip(state, elements[ee], colval, rowval, layout);\n        }\n      }\n\n      ;\n    } else {\n      //console.log(\"### Updated Matrix with tooltip.\",data.rowkey,data.colkey,\"Elements:\",lene);\n      //console.log(\"addTooltip docs:\",JSON.stringify(state.Database.getDocs(state,\"\")));\n      var element = this.getMatrixElement(data.colvalues[0], data.rowval, state.React.matrix); //console.log(\"addTooltip element:\",JSON.stringify([data.colvalues[0],data.rowval]));\n      //console.log(\"Adding tooltip:\",data.layout);\n\n      this.addElementTooltip(state, element); //console.log(\"...added tooltip.\",JSON.stringify(element));\n    }\n  };\n\n  this.makeCntTooltip = function (state, docs) {\n    // called when matrix is made if tooltip mode is toggled\n    var tooltip = {};\n    var dlen = docs.length;\n\n    for (var ii = 0; ii < dlen; ii++) {\n      var doc = docs[ii];\n      var rank = doc._rank;\n      var el = this.getTooltipElement(state, tooltip, doc);\n\n      if (el.maxrank === undefined || el.maxrank < rank) {\n        el.maxrank = rank;\n        el.docs = [];\n        el.docs.push(doc);\n      } else if (el.maxrank === rank) {\n        if (rank !== 0 || el.docs.length < 3) {\n          el.docs.push(doc);\n        }\n      } //console.log(\"Rank:\",rank,el.maxrank,JSON.stringify(tooltip));\n\n    }\n\n    return tooltip;\n  };\n\n  this.getElementWhere = function (state, el, colval, rowval, mode) {\n    var del = \"'\";\n    var where = state.Database.getWhere(state); //console.log(\"Element:\",JSON.stringify(el));\n\n    var colkey = state.Path.getColKey(state);\n    var rowkey = state.Path.getRowKey(state);\n\n    if (el !== undefined) {\n      if (mode === undefined || !state.Custom.mapHasCells(state, mode)) {\n        rowval = el.rowval;\n        colval = el.colval;\n\n        if (colkey.substring(0, 1) === \"_\" && rowkey.substring(0, 1) === \"_\") {\n          del = \"\";\n        }\n\n        ; // numerical value\n      }\n\n      if (rowkey !== undefined && rowkey !== \"\") {\n        where = state.Database.addWhere(where, rowkey + \"=\" + del + rowval + del);\n      }\n\n      ;\n\n      if (colkey !== undefined && colkey !== \"\") {\n        where = state.Database.addWhere(where, colkey + \"=\" + del + colval + del);\n      }\n\n      ;\n    }\n\n    ; //console.log(\"Where:\",where,colkey,colval,rowkey,rowval,JSON.stringify(state.React.matrix));\n    //console.log(\"Data:\",mode,JSON.stringify(state.Database.db.tables.alarm));\n\n    return where;\n  };\n\n  this.addAllTooltip = function (state, matrix) {\n    var mode = state.Custom.getLayoutMode(state); //console.log(\">>> Adding all tooltips...\",mode); // \n    // loop over all elements and add tooltips\n\n    var colvalues = Object.keys(matrix);\n    var lenc = colvalues.length;\n\n    for (var cc = 0; cc < lenc; cc++) {\n      var col = colvalues[cc];\n      var column = matrix[col];\n      var rowvalues = Object.keys(column);\n      var lenr = rowvalues.length;\n\n      for (var rr = 0; rr < lenr; rr++) {\n        var row = rowvalues[rr];\n        var el = column[row];\n        this.addElementTooltip(state, el, col, row, mode);\n      }\n    }\n  };\n\n  this.addElementTooltip = function (state, el, colval, rowval, mode) {\n    //var colkey= state.Path.getColKey(state);\n    //var rowkey= state.Path.getRowKey(state);\n    // called when info-button is pressed - to add tooltip to element...\n    var where = this.getElementWhere(state, el, colval, rowval, mode); //console.log(\">>> Adding ElementTooltip:\",JSON.stringify(el),mode,where,colval,rowval); // \n\n    var docs = [];\n\n    if (el.cnt > 0) {\n      docs = state.Database.getDocs(state, where);\n    }\n\n    ; //console.log(\"addElementTooltip:\",where,el.cnt,docs.length);\n\n    el.tooltip = this.makeCntTooltip(state, docs); //console.log(\">>> Added tooltip for element:\",docs.length,where,JSON.stringify(el)); // \n  };\n\n  this.getTooltipInfo = function (state, data) {\n    // get elements\n    var elements = [];\n\n    if (data.map === undefined) {\n      elements = this.getMatrixElements(data.colvalues, data.rowval, state.React.matrix, data.index, data.step);\n    } else {\n      //console.log(\"getTooltipInfo data:\",JSON.stringify(Object.keys(data)));\n      var element = this.getMatrixElement(data.colvalues[0], data.rowval, state.React.matrix);\n\n      if (element !== undefined && element !== null) {\n        elements = [element];\n      }\n    } //console.log(\"getTooltipInfo elements:\",JSON.stringify(elements));\n\n\n    var info = this.getInfo(state, elements);\n    return info;\n  };\n}\n\n;\nexport default Matrix;","map":{"version":3,"sources":["/home/franktt/react/varseltavle_new/src/lib/MatrixLib.js"],"names":["Matrix","bdeb","cnt","keyCnt","levCnt","values","limit","popSingle","popSeries","init","state","par","Utils","initKeyCnt","cntKey","key","nrec","where","val","undefined","Path","ignore","indexOf","tcnt","docs","Database","getKeyCnt","dlen","length","jj","doc","push","console","log","Error","stack","makeKeyCntMapAreaSql","keys","getActiveKeys","cpArray","plen","ii","substr","setMapArea","updateKeyCnt","updateValues","addUndefinedKeyCnt","addUndefinedKeyCntValues","path","makeKeyCntMapArea","maxlat","minlat","maxlon","minlon","dkeys","Object","lend","kk","getDocVal","Math","max","min","Grid","setArea","getDocsCnt","JSON","stringify","area","makeMapRange","distinct","value","index","self","lats","lons","layoutMode","Layout","getLayoutMode","map","Custom","getMap","cells","getLats","filter","getLons","addMapAreaKeys","ilat","ilon","cell","findCell","getCellRow","getCellCol","_lat","_lon","latpos","latToPos","lat","posToLat","lonpos","lonToPos","lon","posToLon","makeMatrixCntMap","cntDocs","matrix","found","colkey","getColKey","rowkey","getRowKey","colval","rowval","maxlev","maxrank","minlev","svgid","Svg","getId","arr","makeMatrixElement","svgcnt","def","Html","setFootnote","tooltip","addAllTooltip","makeMatrix","dlev","Threshold","getLevel","updateLevCnt","updateMatrixElement","lev","first","m","getMatrixElement","printElements","getMatrixDocs","skeys","lens","ret","irow","hasOwnProperty","cols","icol","idoc","dd","i","getMatrixElements","icolvalues","irowval","iindex","istep","colvalues","slice","step","elements","clen","rowvalues","mm","rlen","ll","element","getMatrixRowElements","nn","_thr","rank","getRank","el","getTooltipElement","getMaxLevel","select","lenk","getRange","range","slenx","sleny","setRange","ts","dr","adjustRange","sortTooltipDocs","sort","order","funk","a","b","ss","va","vb","ia","ib","sortKeyValues","tlen","other","table","casc","ascending","nasc","descendingN","cdes","descending","ndes","buff","olen","sortedKeys","obj","substring","ks","slen","getInfo","elen","ee","mergeTooltipElement","getTooltipDocs","nel","mel","pos","ipos","vals","lenv","ndocs","checkTooltip","data","React","lene","ttset","addTooltip","layout","addElementTooltip","makeCntTooltip","_rank","getElementWhere","mode","del","getWhere","mapHasCells","addWhere","lenc","cc","col","column","lenr","rr","row","getDocs","getTooltipInfo","info"],"mappings":"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","sourcesContent":["//console.log(\"Loading MatrixLib.js\");\n\nfunction Matrix() {\n    this.bdeb=false;\n    this.cnt=0;\n    this.keyCnt={};\n    this.levCnt={};\n    this.values={};\n    this.limit=100;     // displayed data\n    this.popSingle=2000;//0000;\n    this.popSeries=2000;//0000;\n    this.init=function(state){\n\tvar par=\"Matrix\";\n\tstate.Utils.init(par,this);\n    };\n    this.initKeyCnt=function(state) {\n\tthis.values={};\n\tthis.keyCnt={};\n    };\n    this.cntKey=function(state,key,nrec,where) {\n\tvar val;\n\tif (this.values[key]  === undefined) {\n\t    this.keyCnt[key]=0;\n\t    this.values[key]=[];\n\t}\n\tif (state.Path.ignore.indexOf(key)  === -1 && key !== \"\") {//ignore special words... \n\t    var tcnt=0;\n\t    var docs=state.Database.getKeyCnt(state,key,where)\n\t    //console.log(\"Count:\",sql,JSON.stringify(docs));\n\t    var dlen = docs.length;\n\t    for (var jj = 0; jj < dlen; jj++) {\n    \t\tvar doc=docs[jj];\n    \t\tval=doc[key];\n\t\tvar cnt=doc.cnt;\n\t\tif (val !== undefined) {\n\t\t    //console.log(\"Found key:\",key,this.getDocVal(state,doc,key));\n    \t\t    this.keyCnt[key]=this.keyCnt[key]+cnt;\n\t\t    this.values[key].push(val);\n\t\t    tcnt=tcnt+cnt;\n\t\t}\n\t    };\n\t    if (tcnt < nrec) { // insert undefined...\n\t\tval=\"\";\n\t\tthis.values[key].push(val);\n\t    };\n\t} else if (key === \"\") {\n\t    console.log(\"Key error...\",new Error().stack);\n\t}\n    };\n    this.makeKeyCntMapAreaSql=function(state,where,nrec) {\n\tvar keys=state.Path.getActiveKeys(state);\n\tstate.Utils.cpArray(keys,[\"lat\",\"lon\",\"level\"]);\n\tif (keys !== undefined) {\n\t    var plen = keys.length;\n\t    for (var ii = 0; ii < plen; ii++) {\n\t\tvar key=keys[ii];\n\t\tif (key !== \"\" && key.substr(0,1) !== \"_\") {\n\t\t    this.cntKey(state,key,nrec,where);\n\t\t}\n\t    }\n\t};\n\tthis.setMapArea(state,where);\n    };\n    this.updateKeyCnt=function(state,key){\n\tif (this.keyCnt[key]  === undefined) {\n    \t    this.keyCnt[key]=1;\n\t    this.values[key]=[];\n\t} else {\n    \t    this.keyCnt[key]++;\n\t}\n\t//console.log(\"Update key cnt:\",key,this.keyCnt[key]);\n    };\n    this.updateValues=function(state,key,val) {\n\tif ( val !== undefined &&\n\t     this.values[key].indexOf(val)  === -1 ) { // value not in range\n\t\t//console.log(\"Checking val=\",JSON.stringify(val),\" key=\",key,\" doc=\",JSON.stringify(doc));\n\t\t//console.log(\"range=\",state.Utils.toString(state.Path.keys.trash));\n    \t\tthis.values[key].push(val);\n\t};\n    }\n\n    // add \"undefined\" range of keys that are not present in every doc...\n    this.addUndefinedKeyCnt=function(state,docs){\n\tvar dlen = docs.length;\n\tfor (var key in this.keyCnt) {\n\t    if (this.keyCnt[key] < dlen) {\n\t\tvar val=\"\";\n\t\tthis.values[key].push(val);\n\t    }\n\t}\n    };\n    // parent path keys are always present (undefined parents can be used)...\n    this.addUndefinedKeyCntValues=function(state) {\n\tvar plen = state.Path.keys.path.length;\n\tfor (var ii = 0; ii < plen; ii++) {\n\t    var key=state.Path.keys.path[ii];\n\t    if (this.keyCnt[key]  === undefined) {\n    \t\tthis.keyCnt[key]=0;\n\t\tthis.values[key]=[];\n\t    }\n\t}\n    };\n    this.makeKeyCntMapArea=function(state,docs) {\n\t//console.log(\"Visible keys:\",JSON.stringify(keys));\n\tvar key;\n\tvar maxlat,minlat,maxlon,minlon;\n\tvar dlen = docs.length;\n\t//console.log(\"MakeKeyCntMapArea:\",dlen);\n\tfor (var ii = 0; ii < dlen; ii++) {\n    \t    var doc=docs[ii];\n    \t    //var vals=[];\n\t    var dkeys=Object.keys(doc);\n\t    if (dkeys.indexOf(\"lat\") === -1 ) {state.Utils.cpArray(dkeys,[\"lat\"]);}\n\t    if (dkeys.indexOf(\"lon\") === -1 ) {state.Utils.cpArray(dkeys,[\"lon\"]); }\n\t    if (dkeys.indexOf(\"level\") === -1 ) {state.Utils.cpArray(dkeys,[\"level\"]); }\n\t    var lend=dkeys.length;\n\t    for (var kk=0;kk<lend;kk++) {\n\t\tkey=dkeys[kk];\n\t\tvar val=this.getDocVal(state,doc,key);\n\t\tif (val !== undefined) {\n\t\t    this.updateKeyCnt(state,key);\n\t\t    this.updateValues(state,key,val)\n\t\t    if (key  === \"lat\") {\n\t\t\tif (maxlat  === undefined) {\n\t\t\t    maxlat=val\n\t\t\t}else {\n\t\t\t    maxlat=Math.max(val,maxlat)\n\t\t\t};\n\t\t\tif (minlat  === undefined) {\n\t\t\t    minlat=val\n\t\t\t}else {\n\t\t\t    minlat=Math.min(val,minlat)\n\t\t\t};\n\t\t\tthis.updateKeyCnt(state,\"_lat\");\n\t\t    } else if (key  === \"lon\") {\n\t\t\tif (maxlon  === undefined) {\n\t\t\t    maxlon=val\n\t\t\t}else {\n\t\t\t    maxlon=Math.max(val,maxlon)\n\t\t\t};\n\t\t\tif (minlon  === undefined) {\n\t\t\t    minlon=val\n\t\t\t}else {\n\t\t\t    minlon=Math.min(val,minlon)\n\t\t\t};\n\t\t\tthis.updateKeyCnt(state,\"_lon\");\n\t\t    }\n\t\t}\n    \t    };\n\t    //console.log(\"Trash doc=\",ii,JSON.stringify(doc),minlat,maxlat,minlon,maxlon);\n\t}\n\tstate.Grid.setArea(minlat,maxlat,minlon,maxlon);\n\treturn;\n    };\n    this.setMapArea=function(state,where) {\n\tvar docs=state.Database.getDocsCnt(state,where);\n\tvar dlen=docs.length;\n\tfor (var ii = 0; ii < dlen; ii++) {\n    \t    var doc=docs[ii];\n\t    var minlon=this.getDocVal(state,doc,\"minlon\");\n\t    var maxlon=this.getDocVal(state,doc,\"maxlon\");\n\t    var minlat=this.getDocVal(state,doc,\"minlat\");\n\t    var maxlat=this.getDocVal(state,doc,\"maxlat\");\n\t    state.Grid.setArea(minlat,maxlat,minlon,maxlon);\n\t    if (this.bdeb) {console.log(\"setMapArea:\",JSON.stringify(this.area),JSON.stringify(this.doc));};\n\t}\n    }\n    this.makeMapRange=function(state){\n\tconst distinct=(value, index, self) => {\n\t    return self.indexOf(value) === index;\n\t};\n\tvar lats, lons;\n\tvar layoutMode=state.Layout.getLayoutMode(state);\n\tvar map=state.Custom.getMap(state,layoutMode);\n\tif (map !== undefined && map.cells !== undefined) {\n\t    //console.log(\"Found custom map...\",JSON.stringify(map));\n\t    lats=state.Custom.getLats(state,map);\n\t    this.values[\"_lat\"]=lats.filter(distinct);\n\t    lons=state.Custom.getLons(state,map);\n\t    this.values[\"_lon\"]=lons.filter(distinct);\n\t    //console.log(\"Made values...\",JSON.stringify(this.values));\n\t} else {\n\t    lats=state.Grid.getLats(state);\n\t    this.values[\"_lat\"]=lats.filter(distinct);\n\t    lons=state.Grid.getLons(state);\n\t    this.values[\"_lon\"]=lons.filter(distinct);\n\t};\n    };\n    this.addMapAreaKeys=function(state,docs) {\n\tvar layoutMode=state.Layout.getLayoutMode(state);\n\tvar map=state.Custom.getMap(state,layoutMode);\n\tvar dlen,ii,doc,ilat,ilon;\n\tif (map !== undefined && map.cells !== undefined) {\n\t    dlen = docs.length;\n\t    for (ii = 0; ii < dlen; ii++) {\n    \t\tdoc=docs[ii];\n\t\tvar cell=state.Custom.findCell(state,map,doc);\n\t\tif (cell !== undefined) {\n\t\t    ilat=state.Custom.getCellRow(state,cell);\n\t\t    ilon=state.Custom.getCellCol(state,cell);\n\t\t    doc._lat=ilat\n\t\t    doc._lon=ilon\n\t\t    this.updateKeyCnt(state,\"_lat\");\n\t\t    this.updateKeyCnt(state,\"_lon\");\n\t\t}\n\t    }\n\t} else {\n\t    dlen = docs.length;\n\t    for (ii = 0; ii < dlen; ii++) {\n    \t\tdoc=docs[ii];\n    \t\t//var vals=[];\n\t\t//var lat=docs[\"lat\"];\n\t\tvar latpos=state.Grid.latToPos(state,doc.lat);\n\t\tilat=state.Grid.posToLat(state,latpos);\n\t\t//console.log(\"Lat:\",doc.lat,latpos,ilat);\n\t\t//var lon=docs[\"lon\"];\n\t\tvar lonpos=state.Grid.lonToPos(state,doc.lon);\n\t\tilon=state.Grid.posToLon(state,lonpos);\n\t\tdoc._lat=ilat\n\t\tdoc._lon=ilon\n\t\tthis.updateKeyCnt(state,\"_lat\");\n\t\tthis.updateKeyCnt(state,\"_lon\");\n\t\t//console.log(\"AddMapAreaKeys=\",doc.lon,lonpos,ilon,doc._lon);\n\t    }\n\t}\n    };\n    this.makeMatrixCntMap=function(state,cntDocs,matrix) {\n\t//console.log(\"MatrixCnt:\",JSON.stringify(cntDocs));\n\t//var lonmin,lonmax,latmin,latmax;\n\tvar found=false;\n\tvar colkey=state.Path.getColKey(state);\n\tvar rowkey=state.Path.getRowKey(state);\n\t//var svgkey=state.Svg.getKey(state);\n\tthis.levCnt={};\n\tif (this.bdeb) {console.log(\"Keys:\",JSON.stringify(colkey),JSON.stringify(rowkey),);};\n\t//var pos=[];\n\tvar dlen=cntDocs.length;\n\tfor (var ii = 0; ii < dlen; ii++) {\n    \t    var doc=cntDocs[ii];\n\t    var colval=this.getDocVal(state,doc,colkey);\n\t    var rowval=this.getDocVal(state,doc,rowkey);\n\t    var cnt=this.getDocVal(state,doc,\"cnt\");\n\t    var maxlev=this.getDocVal(state,doc,\"maxlev\");\n\t    var maxrank=this.getDocVal(state,doc,\"maxrank\");\n\t    var minlev=this.getDocVal(state,doc,\"minlev\");\n\t    var svgid=state.Svg.getId(state,doc);\n\t    //var minlon=this.getDocVal(state,doc,\"minlon\");\n\t    //var maxlon=this.getDocVal(state,doc,\"maxlon\");\n\t    //var minlat=this.getDocVal(state,doc,\"minlat\");\n\t    //var maxlat=this.getDocVal(state,doc,\"maxlat\");\n\t    //if (lonmin === undefined || minlon < lonmin) {\n\t//\tlonmin=minlon\n\t    //};\n\t    //if (latmin === undefined || minlat < latmin) {\n\t//\tlatmin=minlat\n\t    //};\n    \t    // find matrix array element\n    \t    //console.log (\"Processing:\",JSON.stringify(doc),maxlev,minlev,cnt);\n    \t    var arr=this.makeMatrixElement(state,colval,rowval,matrix);\n    \t    // update matrix array element\n\t    if (maxlev >= 0) { found=true;}\n\t    if (arr !== undefined) {\n\t\tif (arr.maxlev===undefined || arr.maxlev < maxlev) {\n\t\t    arr.maxlev=maxlev;\n\t\t    arr.svgid=svgid;\n\t\t    arr.svgcnt=cnt;\n\t\t} else if ( arr.svgcnt===undefined || (arr.svgcnt < cnt && arr.maxlev===maxlev)) {\n\t\t    arr.svgid=svgid;\n\t\t    arr.svgcnt=cnt;\n\t\t};\n\t\tif (arr.minlev===undefined || arr.minlev > minlev) {arr.minlev=minlev;}\n\t\tif (arr.maxrank===undefined || arr.maxrank < maxrank) {arr.maxrank=maxrank;}\n\t\tif (arr.cnt===undefined) {arr.cnt=0;};\n\t\tarr.cnt=arr.cnt+cnt;\n\t\tarr.def=0;\n\t\t//arr.docs=[];\n    \t\t//console.log (\"Array:\",JSON.stringify(arr));\n\t    }\n\t    // \tstate.Grid.setArea(minlat,maxlat,minlon,maxlon);\n\t}\n\tif (! found) {\n\t    console.log(\"makeMatrixCntMap No relevant thresholds found.\");\n\t    state.Html.setFootnote(state,\"No data found.\");\n\t}\n\tif (state.Layout.state.tooltip === 0) { // pre-generate all tooltips\n\t    state.Matrix.addAllTooltip(state,matrix);\n\t};\n\t//console.log (\"makeMatrixCnt:\",JSON.stringify(matrix),colkey,rowkey);\n    };\n    this.makeMatrix=function(state,docs,matrix) {\n\tvar found=false;\n\tvar colkey=state.Path.getColKey(state);\n\tvar rowkey=state.Path.getRowKey(state);\n\t//var svgkey=state.Svg.getKey(state);\n\tthis.levCnt={};\n\t//var pos=[];\n\tvar dlen=docs.length;\n\tfor (var ii = 0; ii < dlen; ii++) {\n    \t    var doc=docs[ii];\n\t    var colval=this.getDocVal(state,doc,colkey);\n\t    var rowval=this.getDocVal(state,doc,rowkey);\n\t    var svgid=state.Svg.getId(state,doc);\n\t    //console.log(\"Found doc:\",colval,rowval,doc[\"lon\"],doc[\"lat\"])\n    \t    // find matrix array element\n    \t    var arr=this.makeMatrixElement(state,colval,rowval,matrix);\n    \t    // update matrix array element\n    \t    //console.log (\"Processing:\",colval,rowval,JSON.stringify(doc));\n\t    var dlev=state.Threshold.getLevel(state,doc);\n\t    if (dlev === undefined) {dlev=-2;};\n\t    if (dlev >= 0) { found=true;}\n\t    this.updateLevCnt(state,colval,dlev);\n\t    this.updateLevCnt(state,rowval,dlev);\n    \t    this.updateMatrixElement(state,arr,dlev,svgid,doc);\n\t}\n\tif (! found) {\n\t    console.log(\"makeMatrix No relevant thresholds found.\");\n\t    //console.log(\"Keys:\",JSON.stringify(colkey),JSON.stringify(rowkey),);\n\t    state.Html.setFootnote(state,\"No data with valid threshold was found.\");\n\t}\n\t//console.log (\"makeMatrix tooltip-keys:\",JSON.stringify(state.Path.tooltip));\n\t//console.log (\"makeMatrix:\",JSON.stringify(matrix),colkey,rowkey);\n    };\n    this.updateLevCnt=function(state,val,lev) {\n\tif (this.levCnt[val]  === undefined) { this.levCnt[val]={};};\n\tif (this.levCnt[val][lev]  === undefined) { this.levCnt[val][lev]=0;};\n\tthis.levCnt[val][lev]=this.levCnt[val][lev]+1;\n    };\n    this.makeMatrixElement=function(state,colval,rowval,matrix) {\n\tvar first=false;\n\tif (matrix[colval] === undefined) {first=true;matrix[colval]={};};\n\tif (matrix[colval][rowval] === undefined) {first=true;matrix[colval][rowval]={};};\n\tvar m=matrix[colval][rowval];\n\tif (first) {\n\t    m.colval=colval;\n\t    m.rowval=rowval;\n\t};\n\treturn m\n    };\n    this.getMatrixElement=function(colval,rowval,matrix) {\n\tif (matrix[colval] === undefined) {\n\t    //console.log(\"getMatrixElement NO COL-ELEMENT:\",colval,\"|\",JSON.stringify(Object.keys(matrix)));\n\t    return;\n\t} else if ( matrix[colval][rowval] === undefined ) {\n\t    //console.log(\"getMatrixElement NO ROW-ELEMENT:\",rowval,\"|\",JSON.stringify(Object.keys(matrix[colval])));\n\t    return;\n\t} else {\n\t    //console.log(\"getMatrixElement Found:\",colval,\",\",rowval,\"|\",JSON.stringify(matrix[colval][rowval]));\n\t    return matrix[colval][rowval];\n\t}\n    };\n    this.printElements=function(matrix) {\n\t// loop over colvalues\n\t//console.log(\"Matrix:\",JSON.stringify(matrix));\n\t//var colvalues=Object.keys(matrix);\n\t//console.log(\"Matrix keys:\",JSON.stringify(colvalues));\n\t//for (var colval of colvalues) {\n\t//   console.log(\">\",colval);\n\t//    if (colval === undefined) {\n\t//\tconsole.log(colval,\": ***\");\n\t//    } else {\n\t//\t//var rowvalues=Object.keys(matrix[colval]);\n\t//\t//console.log(colval,\":\",rowvalues);\n\t//    };\n\t//};\n    };\n    this.getMatrixDocs=function(matrix,skeys) {\n\tvar lens=skeys.length;\n\tvar ret=[];\n\tfor (var irow in matrix) {\n\t    if (matrix.hasOwnProperty(irow)) {\n\t\tvar cols=matrix[irow];\n\t\tfor (var icol in cols) {\n\t\t    if (cols.hasOwnProperty(icol)) {\n\t\t\tvar docs=cols[icol].docs;\n\t\t\tconsole.log(\"Found docs:\",JSON.stringify(docs));\n\t\t\tfor (var idoc in docs) {\n\t\t\t    if (docs.hasOwnProperty(idoc)) {\n\t\t\t\tvar doc=docs[idoc];\n\t\t\t\tvar dd={};\n\t\t\t\tfor (var i = 0; i < lens; i++) {\n\t\t\t\t    var key=skeys[i];\n\t\t\t\t    if (doc[key] !== undefined) {\n\t\t\t\t\tdd[key] = doc[key];\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\tret.push(dd);\n\t\t\t    }\n\t\t\t}\n\t\t    }\n\t\t}\n\t    }\n\t}\n\treturn ret;\n    };\n    this.getMatrixElements=function(icolvalues,irowval,matrix,iindex,istep) {\n\tvar colvalues= (icolvalues === undefined ? undefined : icolvalues.slice());\n\tvar index=iindex;\n\tvar step=istep;\n\tvar elements=undefined;\n\tif (colvalues === undefined) { // all colvalues\n\t    colvalues=Object.keys(matrix);\n\t    index=0;\n\t    step=colvalues.length;\n\t};\n\tvar clen=colvalues.length;\n\tif (matrix!==undefined && matrix !== null) {\n\t    for (var kk=index;kk<Math.min(clen,index+step);kk++) {\n\t\tvar colval=colvalues[kk];\n\t\tvar rowvalues=[irowval];\n\t\tif (irowval===undefined) {\n\t\t    var mm=matrix[colval];if (mm !== undefined) {rowvalues=Object.keys(mm);}\n\t\t}\n\t\t//console.log(\"Checking:\",kk,clen,colval,JSON.stringify(rowvalues),\n\t\t//\t    JSON.stringify(icolvalues),JSON.stringify(colvalues),irowval,index,step);\n\t\tvar rlen=rowvalues.length;\n\t\tfor (var ll=0;ll<rlen;ll++) {\n\t\t    var rowval=rowvalues[ll];\n\t\t    var element=this.getMatrixElement(colvalues[kk],rowval,matrix);\n\t\t    if (element === undefined) {\n\t\t    } else {\n\t\t\t//console.log(\"getMatrixElements Found:\",kk,colval,rowval);\n\t\t\tif (elements===undefined) {elements=[];};\n\t\t\telements.push(element);\n\t\t\t//console.log(\"Added element:\",JSON.stringify(element),element.docs.length);\n\t\t    }\n\t\t}\n\t    };               \n\t} else {\n\t    //console.log(\"No matrix available.\");\n\t}\n\treturn elements;\n    };\n    this.getMatrixRowElements=function(colval,rowvalues,matrix,index,step) {\n\tvar rlen=rowvalues.length;\n\tvar elements=undefined;\n\tif (matrix!==undefined) {\n            for (var kk=index;kk<Math.min(rlen,index+step);kk++) {\n\t\tvar element=this.getMatrixElement(colval,rowvalues[kk],matrix);\n\t\tif (element === undefined) {\n\t\t} else {\n                    //console.log(\"getMatrixElements Found:\",kk,rowvalues[kk],colval);\n                    if (elements===undefined) {elements=[];};\n                    elements.push(element);\n\t\t}\n            };               \n\t} else {\n\t    console.log(\"No matrix available.\");\n\t}\n\treturn elements;\n    };\n    this.getDocVal=function(state,doc,key) {\n\tif (key === undefined || key === null) { return null; };\n\tvar val = doc[key];if (val  === undefined) {val=\"\";};return val;\n    };\n    this.updateMatrixElement=function(state,arr,dlev,svgid,doc) { // called once for every hit\n\tif (arr  === undefined) {\n\t    console.log(\"Undefined matrix element.\");\n\t    return;\n\t};\n\tvar nn=arr.cnt||0;\n\tvar dd=arr.def||0;\n\tif (arr.maxlev  === undefined || arr.maxlev === -1 ||\n\t    (dlev !== -1 && arr.maxlev < dlev)) {\n\t    arr.maxlev=dlev;\n\t    arr.svgid=svgid;\n\t    arr.svgcnt=1;\n\t} else if (arr.svgcnt===undefined || arr.maxlev===dlev) {\n\t    arr.svgid=svgid;\n\t    arr.svgcnt=1; // oh well, just use the icon from the last one...\n\t};\n\tif (arr.minlev === undefined || (arr.minlev > dlev)) {\n\t    arr.minlev=dlev;\n\t};\n\tif (arr.docs === undefined) {arr.docs=[];};\n\tarr.cnt=nn+1;\n\t//console.log(\"Matrix doc:\",JSON.stringify(doc),dlev);\n\tif (doc._thr !== undefined && doc._thr.val !== undefined) {\n\t    arr.def=dd+1;\n\t    if (arr.def <= this.limit) {arr.docs.push(doc);};\n\t} else if (nn === dd) { // make sure at least 1 undef is added...\n\t    arr.docs.push(doc);\n\t}\n\t//if (state.Layout.state.tooltip === 0) {\n\t    var rank=state.Threshold.getRank(state,doc);\n\t    if (arr.tooltip === undefined) {arr.tooltip={};};\n\t    var el=this.getTooltipElement(state,arr.tooltip,doc);\n\t    if ( dlev !== -1 &&\n\t\t ((el.maxrank === undefined && el.maxlev === undefined) || \n\t\t  (el.maxlev < dlev || (el.maxlev===dlev && el.maxrank < rank)))\n\t       ) {\n\t\tel.maxlev=dlev;\n\t\tel.maxrank=rank;\n\t\tel.docs=[];\n\t\tel.docs.push(doc);\n\t    } else if (el.maxlev === dlev && el.maxrank === rank) {\n\t\tif ((dlev > 0 && dlev < state.Threshold.getMaxLevel(doc) && \n\t\t     el.docs.length < 3) || el.docs.length < 1) {\n\t\t    el.docs.push(doc);\n\t\t};\n\t    };\n\t//}\n\t//console.log (\"Updating:\",JSON.stringify(arr),dlev,rank,JSON.stringify(doc));\n    };\n    this.getTooltipElement=function(state,tooltip,doc) {\n\tvar ret=tooltip;\n\tvar keys=state.Path.tooltip.select;\n\tvar lenk=keys.length;\n\t//console.log(\"Select-keys: \",lenk,JSON.stringify(keys));\n\tfor (var ii=0;ii < lenk;ii++) {\n\t    var key=keys[ii];\n\t    var val=doc[key];\n\t    if (ret[val]=== undefined) {ret[val]={};};\n\t    ret=ret[val];\n\t    //console.log(\"Selecting: \",ii,key,val,JSON.stringify(ret));\n\t};\n\treturn ret;\n    };\n    this.getRange=function(state,matrix,colvalues,rowvalues) {\n\tvar range;\n\t//console.log(\"Thresholds:\",JSON.stringify(state.Threshold.thrs));\n\t//console.log(\"getRange Cols:\"+JSON.stringify(colvalues)+\" Rows:\"+JSON.stringify(rowvalues));\n\trange=undefined;\n\tvar slenx=colvalues.length;\n\tfor(var ii=0; ii<slenx; ii++) {\n\t    var sleny=rowvalues.length;\n\t    for(var jj=0; jj<sleny; jj++) {\n\t\tvar element=this.getMatrixElement(colvalues[ii],rowvalues[jj],matrix);\n\t\tif (element !== undefined) {\n\t\t    //console.log(\"Looking for range:\",ii,\"='\",colvalues[ii],\"' \",\n\t\t    //                                jj,\"='\",rowvalues[jj],\"'\",\n\t\t    //\t    JSON.stringify(element));\n\t\t    var docs=element.docs;\n\t\t    if (docs !== undefined) {\n\t\t\tvar dlen = docs.length;\n\t\t\tfor (var dd = 0; dd < dlen; dd++) {\n    \t\t\t    var doc = docs[dd];\n\t\t\t    if  (doc._thr !== undefined && doc._thr.val !== undefined) {\n\t\t\t\tvar val = doc._thr.val;\n\t\t\t\trange=state.Grid.setRange(range,val);\n\t\t\t\tvar ts,dr;\n\t\t\t\tif (doc._thr.max !== undefined) {\n\t\t\t\t    //console.log(\"GetRange:\",JSON.stringify(doc._thr));\n\t\t\t\t    ts=doc._thr.max;\n\t\t\t\t    dr=ts[0]-ts[ts.length-1];\n\t\t\t\t    if (ts[ts.length-1]>0 && ts[ts.length-1]-dr<0) { // include zero\n\t\t\t\t\trange=state.Grid.setRange(range,0);\n\t\t\t\t    }\n\t\t\t\t    //console.log(\"Found max:\",ts[0],ts[ts.length-1],dr,JSON.stringify(range),thr,key,val);\n\t\t\t\t} else if (doc._thr.min !== undefined) {\n\t\t\t\t    ts=doc._thr.min;\n\t\t\t\t    if (ts[ts.length-1]<0 && ts[ts.length-1]+dr>0) { // include zero\n\t\t\t\t\trange=state.Grid.setRange(range,0);\n\t\t\t\t    }\n\t\t\t\t    //console.log(\"Found min:\",ts[0],ts[ts.length-1],dr,JSON.stringify(range),thr,key,val);\n\t\t\t\t}\n\t\t\t\trange=state.Grid.setRange(range,ts[0]); // include lowest level\n\t\t\t\trange=state.Grid.setRange(range,ts[ts.length-1]); // include highest level\n\t\t\t\t//console.log(\"After adjustment:\",tlev,ts.length,JSON.stringify(ts[tlev]),\"range=\",JSON.stringify(range));\n\t\t\t    };\n\t\t\t}\n\t\t    } else {\n\t\t\t//console.log(\"No matrix-element found:\",\n\t\t\t//\t    JSON.stringify(colvalues[ii]),\n\t\t\t//\t    JSON.stringify(rowvalues[jj]),\n\t\t\t//\t    matrix.length,JSON.stringify(Object.keys(matrix))\n\t\t\t//\t   );\n\t\t    }\n\t\t}\n\t    }\n\t}\n\t//console.log(\"Initial range:\",JSON.stringify(range));\n\trange=state.Grid.adjustRange(range);\n\t//console.log(\"Final range:\",JSON.stringify(range));\n\treturn range;\n    };\n    this.sortTooltipDocs=function(state,docs) {\n\tvar sort=state.Path.tooltip.sort||[];\n\tvar lens=sort.length;\n\tvar order=state.Path.order;\n\tvar funk=function(a,b){\n\t    for (var ss=0;ss<lens;ss++) {\n\t\tvar key=sort[ss];\n\t\tvar va=a[key];\n\t\tvar vb=b[key];\n\t\tif (order[key] !== undefined) { // we have a predefined order\n\t\t    var ia=order[key].indexOf(va);\n\t\t    var ib=order[key].indexOf(vb);\n\t\t    if (ia !==-1 && ib !== -1) {\n\t\t\treturn ia-ib\n\t\t    } else if (ia !== -1) {\n\t\t\treturn 1;\n\t\t    } else if (ia !== -1) {\n\t\t\treturn -1;\n\t\t    } else if (va !== vb) {\n\t\t\treturn (va > vb) - (va < vb);\n\t\t    }\n\t\t} else {\n\t\t    if (va !== vb) {\n\t\t\treturn (va > vb) - (va < vb);\n\t\t    }\n\t\t}\n\t    }\n\t    return 0;\n\t};\n\tvar ret=docs.sort(funk);\n\treturn ret; \n    };\n    this.sortKeyValues=function(state) {\n\tvar tlen=state.Path.other.table.length;\n\t//console.log(\"this.sortKeyValues row/column:\",JSON.stringify(state.Path.other.table),tlen);\n\t// sort values\n\tfor (var jj = 0; jj < tlen; jj++) {\n    \t    var key=state.Path.other.table[jj];\n\t    if (this.values[key] !== undefined) {\n\t\t//console.log(\"Key:\",key,\"Values:\",JSON.stringify(this.values[key]),jj,\n\t    \t//\t    \" sort:\",JSON.stringify(state.Database.keyCnt));\n\t\tif (state.Database.keyCnt[key]===undefined) {\n\t\t    console.log(\"**** Undefined keycnt:\",key);\n\t\t} else if (state.Database.keyCnt[key].order  === state.Database.casc) {\n    \t\t    this.values[key]=this.values[key].sort(state.Utils.ascending);\n\t\t} else if (state.Database.keyCnt[key].order  === state.Database.nasc) {\n    \t\t    this.values[key]=this.values[key].sort(state.Utils.descendingN);\n\t\t} else if (state.Database.keyCnt[key].order  === state.Database.cdes) {\n    \t\t    this.values[key]=this.values[key].sort(state.Utils.descending);\n\t\t} else if (state.Database.keyCnt[key].order  === state.Database.ndes) {\n    \t\t    this.values[key]=this.values[key].sort(state.Utils.descendingN);\n\t\t};\n\t\t//console.log(\"Sorted keys:\",key,JSON.stringify(this.values[key]),state.Database.keyCnt[key].order);\n\t\t// override sort\n\t\tif (state.Path.order !== undefined &&\n\t\t    state.Path.order[key] !== undefined) { // we have a predefined order\n\t\t\tvar buff=[];\n\t\t    var olen=state.Path.order[key].length;\n\t\t    var kk,val;\n\t\t    //console.log(\"Order length:\",olen,jj);\n\t\t    // add ordered values (not in trash)\n\t\t    for (kk = 0; kk < olen; kk++) {\n\t\t\tval=state.Path.order[key][kk];\n\t\t\tif (this.values[key].indexOf(val) !== -1) {\n\t\t\t    //console.log(\"Adding:\",kk,val);\n\t\t\t    buff.push(val);\n\t\t\t}\n\t\t    }\n\t\t    // add remaining this.values values (not in trash)\n\t\t    var rlen=this.values[key].length;\n\t\t    for (kk = 0; kk < rlen; kk++) {\n\t\t\tval=this.values[key][kk];\n\t\t\tif (buff.indexOf(val)  === -1) { // not in sub\n\t\t\t    buff.push(val);\n\t\t\t    state.Path.order[key].push(val);\n\t\t\t}\n\t\t    };\n\t\t    this.values[key]=buff; // use requested order\n\t\t    //console.log(\"Using requested order:\",key);\n\t\t};\n\t    };\n    \t    //console.log(\"Found values:\",key,JSON.stringify(this.values[key]));\n\t};\n    };\n    this.sortedKeys=function(state,obj) {\n\tvar key;\n\tvar skeys = [];\n\tfor(key in obj){\n\t    if (obj.hasOwnProperty(key) && key.substring(0,1) !== \"_\") {skeys.push(key);}\n\t};\n\tskeys=skeys.sort(state.Utils.ascending);\n\tvar ks=[];\n\tvar slen=skeys.length;\n\tfor (var jj = 0; jj < slen; jj++) {\n\t    key=skeys[jj];\n\t    if (key.substr(state,0,1) !== \"_\" && ks.indexOf(key) === -1) {\n\t\tks.push(key);\n\t    }\n\t}\n\t//console.log(\"state.Utils.sortedKeys...\",JSON.stringify(skeys),JSON.stringify(ks));\n\treturn ks;\n    }\n    this.getInfo=function(state,elements) {\n\tvar tooltip={}; // list of maxrank-docs\n\tvar cnt=0;\n\tvar maxlev=-1;\n\tvar minlev=0;\n\tvar docs=[];\n\tif (elements === undefined) {\n\t    console.log(\"No elements found.\");\n\t} else {\n\t    //console.log(\"getInfo element:\",JSON.stringify(elements));\n\t    var elen=elements.length;\n\t    for (var ee=0;ee<elen;ee++) {\n\t\tcnt=cnt+elements[ee].cnt;\n\t\tif (elements[ee].maxlev === undefined || elements[ee].minlev === undefined) {\n\t\t    minlev=Math.min(minlev,-2);\n\t\t} else {\n\t\t    maxlev=Math.max(maxlev,elements[ee].maxlev);\n\t\t    minlev=Math.min(minlev,elements[ee].minlev);\n\t\t}\n\t\t// loop over tooltips and put maxrank-docs into tooltip array\n\t\tthis.mergeTooltipElement(state,elements[ee].tooltip,tooltip,state.Path.tooltip.select.length);\n\t    }\n\t    docs=this.getTooltipDocs(state,tooltip);\n\t    //console.log(\"Tooltip docs:\",JSON.stringify(tooltip),JSON.stringify(docs));\n\t}\n\treturn {cnt:cnt,\n\t\tminlev:minlev,\n\t\tmaxlev:maxlev,\n\t\ttooltip:this.sortTooltipDocs(state,docs)};\n    }\n    this.mergeTooltipElement=function(state,nel,mel,pos) {\n\tif (nel === undefined) {return;} // nothing to merge\n\tvar ipos=pos;\n\tif (ipos === undefined) {ipos=state.Path.tooltip.select.length;}\n\t//console.log(\"Merging tooltip:\",ipos,JSON.stringify(nel));\n\tif (ipos > 0) {\n\t    var vals=Object.keys(nel);\n\t    var lenv=vals.length;\n\t    for (var ii=0;ii<lenv;ii++) {\n\t\tvar val=vals[ii];\n\t\tif (mel[val]===undefined) {mel[val]={}};\n\t\tthis.mergeTooltipElement(state,nel[val],mel[val],ipos-1);\n\t    }\n\t} else {\n\t    if (mel.maxrank === undefined || mel.maxrank < nel.maxrank) {\n\t\tmel.maxrank=nel.maxrank;\n\t\tmel.docs=nel.docs;\n\t    };\n\t}\n    };\n    this.getTooltipDocs=function(state,el,pos) {\n\tvar docs=[];\n\tvar ipos=pos;\n\tif (ipos === undefined) {ipos=state.Path.tooltip.select.length;}\n\tif (el !== undefined) {\n\t    if (ipos > 0) {\n\t\tvar vals=Object.keys(el);\n\t\tvar lenv=vals.length;\n\t\tfor (var ii=0;ii<lenv;ii++) {\n\t\t    var val=vals[ii];\n\t\t    var ndocs=this.getTooltipDocs(state,el[val],ipos-1);\n\t\t    state.Utils.cpArray(docs,ndocs);\n\t\t}\n\t    } else if (el.docs !== undefined) {\n\t\tstate.Utils.cpArray(docs,el.docs);\n\t    };\n\t};\n\treturn docs;\n    };\n    this.checkTooltip=function(state,data) {\n\tvar rowval=data.rowval;\n\tvar colvalues=data.colvalues;\n\tvar step=data.step;\n\tvar index=data.index;\n\t// get elements\n\tvar elements=this.getMatrixElements(colvalues,rowval,state.React.matrix,index,step)||[];\n\t// loop over elements\t\n\tvar lene=elements.length;\n\tvar ttset=true;\n\tfor (var ee=0; ee<lene; ee++) {\n\t    // check if elements have tooltip set\n\t    if (elements[ee].tooltip===undefined) {\n\t\tttset=false;\n\t    }\n\t    //console.log(\"Element:\",ee,JSON.stringify(elements[ee]));\n\n\t};\n\treturn ttset;\n    };\n    this.addTooltip=function(state,data) {\n\t//data={rowkey,rowval,colkey,colvalues,index,step,layout}\n\tif (this.bdeb) {console.log(\"Updated Matrix with tooltip.\",data.rowkey,data.colkey);};\n\t//console.log(\"Map:\",JSON.stringify(data.map),JSON.stringify(data.layout));\n\tif (data.map === undefined) {\n\t    // get elements\n\t    var elements=this.getMatrixElements(data.colvalues,data.rowval,state.React.matrix,data.index,data.step)||[];\n\t    var lene=elements.length;\n\t    for (var ee=0; ee<lene; ee++) {\n\t\t// check if elements have tooltip set\n\t\tif (elements[ee].tooltip===undefined) {\n\t\t    //console.log(\"AddTooltip:\",JSON.stringify(data));\n\t\t    var colval,rowval,layout;\n\t\t    if (data.colval !== undefined) {\n\t\t\tcolval=data.colval;\n\t\t    } else {\n\t\t\tcolval=elements[ee].colval;\n\t\t    };\n\t\t    if (data.rowvalues !== undefined) {\n\t\t\trowval=data.rowvalues[data.index];\n\t\t    } else {\n\t\t\trowval=elements[ee].rowval;\n\t\t    };\n\t\t    layout=data.layout;\n\t\t    this.addElementTooltip(state,elements[ee],colval,rowval,layout);\n\t\t}\n\t    };\n\t} else {\n\t    //console.log(\"### Updated Matrix with tooltip.\",data.rowkey,data.colkey,\"Elements:\",lene);\n\t    //console.log(\"addTooltip docs:\",JSON.stringify(state.Database.getDocs(state,\"\")));\n\t    var element=this.getMatrixElement(data.colvalues[0],data.rowval,state.React.matrix)\n\t    //console.log(\"addTooltip element:\",JSON.stringify([data.colvalues[0],data.rowval]));\n\t    //console.log(\"Adding tooltip:\",data.layout);\n\t    this.addElementTooltip(state,element);\n\t    //console.log(\"...added tooltip.\",JSON.stringify(element));\n\t    \n\t}\n    };\n    this.makeCntTooltip=function(state,docs) {\n\t// called when matrix is made if tooltip mode is toggled\n\tvar tooltip={};\n\tvar dlen=docs.length;\n\tfor (var ii = 0; ii < dlen; ii++) {\n    \t    var doc=docs[ii];\n\t    var rank=doc._rank\n\t    var el=this.getTooltipElement(state,tooltip,doc);\n\t    if (el.maxrank === undefined || el.maxrank < rank) {\n\t\tel.maxrank=rank;\n\t\tel.docs=[];\n\t\tel.docs.push(doc);\n\t    } else if (el.maxrank === rank) {\n\t\tif (rank!==0 || el.docs.length < 3) {\n\t\t    el.docs.push(doc);\n\t\t}\n\t    }\n\t    //console.log(\"Rank:\",rank,el.maxrank,JSON.stringify(tooltip));\n\t}\n\treturn tooltip;\n    };\n    this.getElementWhere=function(state,el,colval,rowval,mode) {\n\tvar del=\"'\";\n\tvar where = state.Database.getWhere(state);\n\t//console.log(\"Element:\",JSON.stringify(el));\n\tvar colkey= state.Path.getColKey(state);\n\tvar rowkey= state.Path.getRowKey(state);\n\tif (el !== undefined) {\n\t    if (mode === undefined ||  ! state.Custom.mapHasCells(state,mode)) {\n\t\trowval=el.rowval;\n\t\tcolval=el.colval;\n\t\tif (colkey.substring(0,1)===\"_\" && rowkey.substring(0,1)===\"_\") {del=\"\";}; // numerical value\n\t    }\n\t    if (rowkey !== undefined && rowkey !== \"\") {\n\t\twhere=state.Database.addWhere(where,rowkey+\"=\"+del +rowval+del);\n\t    };\n\t    if (colkey !== undefined && colkey !== \"\") {\n\t\twhere=state.Database.addWhere(where,colkey+\"=\"+del+ colval+del);\n\t    };\n\t};\n\t//console.log(\"Where:\",where,colkey,colval,rowkey,rowval,JSON.stringify(state.React.matrix));\n\t//console.log(\"Data:\",mode,JSON.stringify(state.Database.db.tables.alarm));\n\treturn where;\n    };\n    this.addAllTooltip=function(state,matrix) {\n\tvar mode=state.Custom.getLayoutMode(state);\n\t//console.log(\">>> Adding all tooltips...\",mode); // \n\t// loop over all elements and add tooltips\n\tvar colvalues=Object.keys(matrix);\n\tvar lenc=colvalues.length;\n\tfor (var cc=0;cc<lenc;cc++) {\n\t    var col=colvalues[cc];\n\t    var column=matrix[col];\n\t    var rowvalues=Object.keys(column);\n\t    var lenr=rowvalues.length;\n\t    for (var rr=0;rr<lenr;rr++) {\n\t\tvar row=rowvalues[rr];\n\t\tvar el=column[row];\n\t\tthis.addElementTooltip(state,el,col,row,mode);\n\t    }\n\t}\n    };\n    this.addElementTooltip=function(state,el,colval,rowval,mode) {\n\t//var colkey= state.Path.getColKey(state);\n\t//var rowkey= state.Path.getRowKey(state);\n\t// called when info-button is pressed - to add tooltip to element...\n\tvar where = this.getElementWhere(state,el,colval,rowval,mode);\n\t//console.log(\">>> Adding ElementTooltip:\",JSON.stringify(el),mode,where,colval,rowval); // \n\tvar docs=[];\n\tif (el.cnt>0) {docs=state.Database.getDocs(state,where);};\n\t//console.log(\"addElementTooltip:\",where,el.cnt,docs.length);\n\tel.tooltip=this.makeCntTooltip(state,docs);\n\t//console.log(\">>> Added tooltip for element:\",docs.length,where,JSON.stringify(el)); // \n    };\n    this.getTooltipInfo=function(state,data) {\n\t// get elements\n\tvar elements=[];\n\tif (data.map === undefined) {\n\t    elements=this.getMatrixElements(data.colvalues,data.rowval,state.React.matrix,data.index,data.step);\n\t} else {\n\t    //console.log(\"getTooltipInfo data:\",JSON.stringify(Object.keys(data)));\n\t    var element=this.getMatrixElement(data.colvalues[0],data.rowval,state.React.matrix)\n\t    if (element !== undefined && element !== null) {\n\t\telements=[element];\n\t    }\n\t}\n\t//console.log(\"getTooltipInfo elements:\",JSON.stringify(elements));\n\tvar info=this.getInfo(state,elements);\n\treturn info;\n    };\n};\nexport default Matrix;\n"]},"metadata":{},"sourceType":"module"}