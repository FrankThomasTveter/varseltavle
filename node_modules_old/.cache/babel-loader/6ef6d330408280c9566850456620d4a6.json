{"ast":null,"code":"import _slicedToArray from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as TWEEN from 'es6-tween';\nexport function coordinatesToPosition(coordinates, radius) {\n  var _coordinates = _slicedToArray(coordinates, 2),\n      lat = _coordinates[0],\n      long = _coordinates[1];\n\n  var phi = lat * Math.PI / 180;\n  var theta = (long - 180) * Math.PI / 180;\n  var x = -radius * Math.cos(phi) * Math.cos(theta);\n  var y = radius * Math.sin(phi);\n  var z = radius * Math.cos(phi) * Math.sin(theta);\n  return [x, y, z];\n}\nexport function getMarkerCoordinatesKey(marker) {\n  return marker.coordinates.toString();\n}\nexport function maxValue(array, callback) {\n  var maxValue = 0;\n  array.forEach(function (item) {\n    if (callback(item) > maxValue) {\n      maxValue = callback(item);\n    }\n  });\n  return maxValue;\n}\nexport function minValue(array, callback) {\n  var minValue = Infinity;\n  array.forEach(function (item) {\n    if (callback(item) < minValue) {\n      minValue = callback(item);\n    }\n  });\n  return minValue;\n}\nexport function tween(from, to, animationDuration, easingFunction, onUpdate, onEnd) {\n  new TWEEN.Tween(from).to(to, animationDuration).easing(TWEEN.Easing[easingFunction[0]][easingFunction[1]]).on('update', onUpdate).on('complete', onEnd).start();\n}","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/globe/utils.js"],"names":["TWEEN","coordinatesToPosition","coordinates","radius","lat","long","phi","Math","PI","theta","x","cos","y","sin","z","getMarkerCoordinatesKey","marker","toString","maxValue","array","callback","forEach","item","minValue","Infinity","tween","from","to","animationDuration","easingFunction","onUpdate","onEnd","Tween","easing","Easing","on","start"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,WAAvB;AACA,OAAO,SAASC,qBAAT,CAA+BC,WAA/B,EAA4CC,MAA5C,EAAoD;AAAA,oCACnCD,WADmC;AAAA,MAChDE,GADgD;AAAA,MAC3CC,IAD2C;;AAEvD,MAAMC,GAAG,GAAIF,GAAG,GAAGG,IAAI,CAACC,EAAZ,GAAkB,GAA9B;AACA,MAAMC,KAAK,GAAI,CAACJ,IAAI,GAAG,GAAR,IAAeE,IAAI,CAACC,EAArB,GAA2B,GAAzC;AACA,MAAME,CAAC,GAAG,CAACP,MAAD,GAAUI,IAAI,CAACI,GAAL,CAASL,GAAT,CAAV,GAA0BC,IAAI,CAACI,GAAL,CAASF,KAAT,CAApC;AACA,MAAMG,CAAC,GAAGT,MAAM,GAAGI,IAAI,CAACM,GAAL,CAASP,GAAT,CAAnB;AACA,MAAMQ,CAAC,GAAGX,MAAM,GAAGI,IAAI,CAACI,GAAL,CAASL,GAAT,CAAT,GAAyBC,IAAI,CAACM,GAAL,CAASJ,KAAT,CAAnC;AACA,SAAO,CAACC,CAAD,EAAIE,CAAJ,EAAOE,CAAP,CAAP;AACH;AACD,OAAO,SAASC,uBAAT,CAAiCC,MAAjC,EAAyC;AAC5C,SAAOA,MAAM,CAACd,WAAP,CAAmBe,QAAnB,EAAP;AACH;AACD,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,QAAzB,EAAmC;AACtC,MAAIF,QAAQ,GAAG,CAAf;AACAC,EAAAA,KAAK,CAACE,OAAN,CAAc,UAAAC,IAAI,EAAI;AAClB,QAAIF,QAAQ,CAACE,IAAD,CAAR,GAAiBJ,QAArB,EAA+B;AAC3BA,MAAAA,QAAQ,GAAGE,QAAQ,CAACE,IAAD,CAAnB;AACH;AACJ,GAJD;AAKA,SAAOJ,QAAP;AACH;AACD,OAAO,SAASK,QAAT,CAAkBJ,KAAlB,EAAyBC,QAAzB,EAAmC;AACtC,MAAIG,QAAQ,GAAGC,QAAf;AACAL,EAAAA,KAAK,CAACE,OAAN,CAAc,UAAAC,IAAI,EAAI;AAClB,QAAIF,QAAQ,CAACE,IAAD,CAAR,GAAiBC,QAArB,EAA+B;AAC3BA,MAAAA,QAAQ,GAAGH,QAAQ,CAACE,IAAD,CAAnB;AACH;AACJ,GAJD;AAKA,SAAOC,QAAP;AACH;AACD,OAAO,SAASE,KAAT,CAAeC,IAAf,EAAqBC,EAArB,EAAyBC,iBAAzB,EAA4CC,cAA5C,EAA4DC,QAA5D,EAAsEC,KAAtE,EAA6E;AAChF,MAAI/B,KAAK,CAACgC,KAAV,CAAgBN,IAAhB,EACKC,EADL,CACQA,EADR,EACYC,iBADZ,EAEKK,MAFL,CAEYjC,KAAK,CAACkC,MAAN,CAAaL,cAAc,CAAC,CAAD,CAA3B,EAAgCA,cAAc,CAAC,CAAD,CAA9C,CAFZ,EAGKM,EAHL,CAGQ,QAHR,EAGkBL,QAHlB,EAIKK,EAJL,CAIQ,UAJR,EAIoBJ,KAJpB,EAKKK,KALL;AAMH","sourcesContent":["import * as TWEEN from 'es6-tween';\nexport function coordinatesToPosition(coordinates, radius) {\n    const [lat, long] = coordinates;\n    const phi = (lat * Math.PI) / 180;\n    const theta = ((long - 180) * Math.PI) / 180;\n    const x = -radius * Math.cos(phi) * Math.cos(theta);\n    const y = radius * Math.sin(phi);\n    const z = radius * Math.cos(phi) * Math.sin(theta);\n    return [x, y, z];\n}\nexport function getMarkerCoordinatesKey(marker) {\n    return marker.coordinates.toString();\n}\nexport function maxValue(array, callback) {\n    let maxValue = 0;\n    array.forEach(item => {\n        if (callback(item) > maxValue) {\n            maxValue = callback(item);\n        }\n    });\n    return maxValue;\n}\nexport function minValue(array, callback) {\n    let minValue = Infinity;\n    array.forEach(item => {\n        if (callback(item) < minValue) {\n            minValue = callback(item);\n        }\n    });\n    return minValue;\n}\nexport function tween(from, to, animationDuration, easingFunction, onUpdate, onEnd) {\n    new TWEEN.Tween(from)\n        .to(to, animationDuration)\n        .easing(TWEEN.Easing[easingFunction[0]][easingFunction[1]])\n        .on('update', onUpdate)\n        .on('complete', onEnd)\n        .start();\n}\n"]},"metadata":{},"sourceType":"module"}