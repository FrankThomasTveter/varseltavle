{"ast":null,"code":"var _jsxFileName = \"/home/franktt/react/varseltavle_new/src/react/SummaryCell.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CanvasText from './CanvasTextComponent';\n\nvar styles = function styles(theme) {\n  return {\n    divTableCell: {\n      border: '1px solid #EEE',\n      display: 'table-cell',\n      padding: '0px 0px'\n    },\n    divTableCellCursor: {\n      cursor: \"pointer\",\n      border: '1px solid #EEE',\n      display: 'table-cell',\n      padding: '0px 0px'\n    }\n  };\n}; //\tborderCollapse: 'collapse',\n\n\nfunction SummaryCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      onclick = props.onclick,\n      index = props.index,\n      rowindex = props.rowindex,\n      colkey = props.colkey,\n      rowkey = props.rowkey,\n      colvalues = props.colvalues,\n      rowval = props.rowval,\n      elements = props.elements,\n      plan = props.plan,\n      key = props.key,\n      label = props.label,\n      layout = props.layout; //console.log(\"Summary height:\",plan.height);\n\n  var style0 = {\n    height: plan.height + \"px\",\n    backgroundColor: '#FFF'\n  };\n  var style1 = {\n    height: plan.height + \"px\",\n    backgroundColor: '#EEE'\n  };\n\n  if (elements === undefined) {\n    if (rowindex % 2 === 1) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.divTableCell,\n        style: style1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.divTableCell,\n        style: style0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      });\n    }\n  }\n\n  ;\n  var info = state.Matrix.getInfo(state, elements); //console.log(info);\n\n  var cnt = info.cnt;\n  var maxlev = info.maxlev;\n  var minlev = info.minlev;\n  var lab = \"\";\n\n  if (label === undefined) {\n    if (cnt > 1) {\n      lab = \".\";\n    } else {\n      lab = \"\";\n    }\n\n    ;\n  } else {\n    lab = label;\n  }\n\n  ;\n  var invalid = minlev < 0;\n  var bgcolor = state.Colors.getLevelBgColor(maxlev);\n  var fgcolor = state.Colors.getLevelFgColor(maxlev); //console.log(\"Sending color:\",fgcolor,maxlev);\n  //var stylec={height:plan.height+\"px\",backgroundColor:bgcolor};\n  //console.log(\"SummaryCell:'\"+lab+\"' lev=\",lev,elements.length,bgcolor,lab);\n  //console.log(\"Found invalid.\",invalid,minlev,maxlev,JSON.stringify(elements));\n  //console.log(\"Summary Plan:\",JSON.stringify(plan));\n  //var data={colkey:colkey,rowkey:rowkey};\n  //console.log(\"SummaryCell:\",JSON.stringify(plan));\n\n  var data = JSON.stringify({\n    rowkey: rowkey,\n    rowval: rowval,\n    colkey: colkey,\n    colvalues: colvalues,\n    index: index,\n    step: plan.step,\n    layout: layout\n  }); //console.log(\"SummaryCell data:\",JSON.stringify(data),layout);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: onclick !== undefined ? classes.divTableCellCursor : classes.divTableCell,\n    key: key,\n    style: {\n      color: fgcolor,\n      backgroundColor: bgcolor\n    },\n    onClick: onclick,\n    height: plan.height,\n    width: plan.width,\n    \"data-for\": \"cell\",\n    \"data-tip\": data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CanvasText, {\n    state: state,\n    label: lab,\n    plan: plan,\n    key: key,\n    invalid: invalid,\n    index: index,\n    colkey: colkey,\n    rowkey: rowkey,\n    colvalues: colvalues,\n    rowval: rowval,\n    color: fgcolor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }\n  }));\n}\n\nSummaryCell.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SummaryCell);","map":{"version":3,"sources":["/home/franktt/react/varseltavle_new/src/react/SummaryCell.js"],"names":["React","PropTypes","withStyles","CanvasText","styles","theme","divTableCell","border","display","padding","divTableCellCursor","cursor","SummaryCell","props","classes","state","onclick","index","rowindex","colkey","rowkey","colvalues","rowval","elements","plan","key","label","layout","style0","height","backgroundColor","style1","undefined","info","Matrix","getInfo","cnt","maxlev","minlev","lab","invalid","bgcolor","Colors","getLevelBgColor","fgcolor","getLevelFgColor","data","JSON","stringify","step","color","width","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport CanvasText  from './CanvasTextComponent';\n\nconst styles = theme => ({\n    divTableCell:{\n\tborder: '1px solid #EEE',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableCellCursor:{\n\tcursor: \"pointer\",\n\tborder: '1px solid #EEE',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n});\n\n//\tborderCollapse: 'collapse',\n\nfunction SummaryCell(props) {\n    const { classes,state,onclick,index,rowindex,\n\t    colkey,rowkey,colvalues,rowval,\n\t    elements,plan,key,label,layout } = props;\n    //console.log(\"Summary height:\",plan.height);\n    var style0={height:(plan.height)+\"px\",backgroundColor:'#FFF'};\n    var style1={height:(plan.height)+\"px\",backgroundColor:'#EEE'};\n    if (elements===undefined) {\n\tif (rowindex%2===1) {\n\t    return <div className={classes.divTableCell} style={style1}/>\n\t} else {\n\t    return <div className={classes.divTableCell} style={style0}/>\n\t}\n    };\n    var info=state.Matrix.getInfo(state,elements);\n    //console.log(info);\n    var cnt=info.cnt;\n    var maxlev=info.maxlev;\n    var minlev=info.minlev;\n    var lab=\"\";\n    if (label === undefined) {\n\tif (cnt > 1) {\n\t    lab=\".\";\n\t} else {\n\t    lab=\"\";\n\t};\n    } else {\n\tlab=label;\n    };\n    var invalid=(minlev < 0); \n    var bgcolor=state.Colors.getLevelBgColor(maxlev);\n    var fgcolor=state.Colors.getLevelFgColor(maxlev);\n    //console.log(\"Sending color:\",fgcolor,maxlev);\n    //var stylec={height:plan.height+\"px\",backgroundColor:bgcolor};\n    //console.log(\"SummaryCell:'\"+lab+\"' lev=\",lev,elements.length,bgcolor,lab);\n    //console.log(\"Found invalid.\",invalid,minlev,maxlev,JSON.stringify(elements));\n    //console.log(\"Summary Plan:\",JSON.stringify(plan));\n    //var data={colkey:colkey,rowkey:rowkey};\n    //console.log(\"SummaryCell:\",JSON.stringify(plan));\n    var data=JSON.stringify({rowkey:rowkey,rowval:rowval,colkey:colkey,colvalues:colvalues,index:index,step:plan.step,layout:layout}); \n    //console.log(\"SummaryCell data:\",JSON.stringify(data),layout);\n    return (\n            <div className={(onclick !== undefined?classes.divTableCellCursor:classes.divTableCell)} key={key}\n\t         style={{color:fgcolor,backgroundColor:bgcolor}} onClick={onclick} height={plan.height} width={plan.width}\n\t         data-for='cell' data-tip={data}>\n\t\t<CanvasText state={state} label={lab} plan={plan} key={key} invalid={invalid} index={index}\n\t\t\t\t\t   colkey={colkey} rowkey={rowkey} colvalues={colvalues} rowval={rowval} color={fgcolor}/>\n\t    </div>\n           );\n}\n\nSummaryCell.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SummaryCell);\n"]},"metadata":{},"sourceType":"module"}