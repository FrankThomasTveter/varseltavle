{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/franktt/react/varseltavle_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/franktt/react/varseltavle_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/franktt/react/varseltavle_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _objectWithoutProperties from \"/home/franktt/react/varseltavle_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle_new/src/react/CustomComponent.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'; //import {teal_palette} from '../mui/metMuiThemes';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport EmptyCell from './EmptyCell';\nimport SummaryCell from './SummaryCell';\nimport SeriesCell from './SeriesCell';\nimport CanvasText from './CanvasTextComponent';\nimport Tooltip from './TooltipContainer';\n\nvar styles = function styles(theme) {\n  return {\n    content: {\n      backgroundColor: 'transparent'\n    },\n    divHdrLeft: {\n      display: 'inline-block',\n      justifyContent: 'left',\n      cursor: \"pointer\"\n    },\n    divHdrRight: {\n      display: 'inline-block',\n      justifyContent: 'right',\n      cursor: \"pointer\"\n    },\n    paper: {\n      backgroundColor: 'transparent',\n      //\tbackgroundColor: teal_palette.main,\n      //\toverflow: 'hidden',\n      //\tborder:  '1px solid blue',\n      tableLayout: 'fixed',\n      padding: 0,\n      margin: 0,\n      outlined: \"0px\"\n    },\n    divEmpty: {\n      width: '100%',\n      height: '100%'\n    },\n    divCustom: {\n      display: 'table',\n      width: '100%',\n      backgroundColor: 'transparent' //\tborder:  '1px solid red',\n\n    },\n    divCustomRow: {\n      backgroundColor: 'transparent',\n      border: '0px solid #999999',\n      display: 'table-row',\n      padding: '0px'\n    },\n    divCustomCell: {\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px',\n      backgroundColor: 'transparent'\n    },\n    divCustomCellCursor: {\n      cursor: \"pointer\",\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px'\n    },\n    divCustomHead: {\n      border: '0px',\n      display: 'table-cell',\n      padding: '0px'\n    },\n    divCustomHeading: {\n      display: 'table-header-group'\n    },\n    divCustomHeadingCenter: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    divCustomFoot: {\n      backgroundColor: '#DDD',\n      display: 'table-footer-group',\n      fontWeight: 'bold'\n    },\n    divCustomBody: {\n      display: 'table-row-group'\n    },\n    paperImage: {\n      textAlign: 'center',\n      padding: theme.spacing(2)\n    }\n  };\n}; //const mui = createTheme({palette:teal_palette});\n// ---------------- DATA\n//{rowval}\n\n\nfunction DataCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      index = props.index,\n      elements = props.elements,\n      mode = props.mode,\n      layout = props.layout,\n      plan = props.plan,\n      rowindex = props.rowindex,\n      rowval = props.rowval,\n      colvalues = props.colvalues,\n      other = _objectWithoutProperties(props, [\"classes\", \"state\", \"index\", \"elements\", \"mode\", \"layout\", \"plan\", \"rowindex\", \"rowval\", \"colvalues\"]);\n\n  var map, cell, label;\n\n  if (elements === undefined) {\n    return /*#__PURE__*/React.createElement(EmptyCell, Object.assign({}, other, {\n      state: state,\n      plan: plan,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }));\n  } else if (mode === state.Layout.modes.cell.Sum) {\n    map = state.Custom.getMap(state, layout);\n    cell = state.Custom.getCell(state, map, colvalues[index], rowval);\n    label = state.Custom.getCellLabel(state, cell) || \"?\";\n    return /*#__PURE__*/React.createElement(SummaryCell, Object.assign({}, other, {\n      state: state,\n      elements: elements,\n      plan: plan,\n      index: index,\n      colvalues: colvalues,\n      rowval: rowval,\n      label: label,\n      layout: layout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    })); //return null;\n  } else {\n    map = state.Custom.getMap(state, layout);\n    cell = state.Custom.getCell(state, map, colvalues[index], rowval);\n    label = state.Custom.getCellLabel(state, cell) || \"?\";\n    return /*#__PURE__*/React.createElement(SeriesCell, Object.assign({}, other, {\n      state: state,\n      elements: elements,\n      plan: plan,\n      index: index,\n      colvalues: colvalues,\n      rowval: rowval,\n      label: label,\n      layout: layout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    })); //return null;\n  }\n}\n\nfunction renderDataCell(classes, state, colkey, colvalues, rowkey, rowval, rowindex, rowwhere, range, mode, layout, plan, val, index) {\n  //console.log(\"Making data cell:\",rowval,val,index,plan,JSON.stringify(colvalues));\n  if (index % plan.step === 0) {\n    // get elements and range\n    //console.log(\"Processing DataCell:\",colkey,val,colvalues[index],plan.step);\n    var matrix = state.React.matrix;\n    var elements = state.Matrix.getMatrixElements(colvalues, rowval, matrix, index, plan.step); //console.log(\"Elements:\",rowval,index,' =>',JSON.stringify(elements));\n    // get count and colwhere\n\n    var cnt = Math.min(colvalues.length, index + plan.step) - index;\n    var colwhere = state.Database.getColWhere(colkey, colvalues, index, plan.step); // make onclick\n\n    var onclick = function onclick() {\n      return state.Navigate.selectCustom(state, layout, colkey, rowkey, colvalues[index], rowval, colwhere, rowwhere, cnt, 1);\n    };\n\n    return /*#__PURE__*/React.createElement(DataCell, {\n      classes: classes,\n      state: state,\n      key: \"col-\".concat(index),\n      rowindex: rowindex,\n      index: index,\n      onclick: onclick,\n      colkey: colkey,\n      rowkey: rowkey,\n      colvalues: colvalues,\n      rowval: rowval,\n      colwhere: colwhere,\n      rowwhere: rowwhere,\n      elements: elements,\n      mode: mode,\n      layout: layout,\n      plan: plan,\n      range: range,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 10\n      }\n    });\n  } else {\n    return null;\n  }\n} //{{rowkey:'test1',colkey:'test2'}}\n\n\nfunction dataRow(classes, state, colkey, rowkey, colvalues, mode, layout, plans, rowval, rowindex) {\n  //console.log(\"Processing Row:\",rowkey,rowval);\n  var rowwhere = state.Database.getWhereValue(rowkey, rowval); //var onclick=() => {state.Navigate.selectKey(state,rowkey,rowval,rowwhere,1);}\n\n  var range = [undefined, undefined];\n\n  if (state.React.matrix !== undefined) {\n    range = state.Matrix.getRange(state, state.React.matrix, colvalues, [rowval]);\n  }\n\n  ; //console.log(\"Making data cols.\",rowval,colkey,JSON.stringify(colvalues));\n  //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderDataCell(classes, state, colkey, colvalues, rowkey, rowval, rowindex, rowwhere, range, mode, layout, plans.cell, val, index);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.divCustomRow,\n    key: rowindex.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, colvalues.map(mapFunction));\n}\n\n;\n\nfunction renderZeroRow(classes, state, colkey, colvalues, plans) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.divCustomRow,\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.divCustomCell,\n    width: plans.cell.width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, \"No data available\"));\n}\n\n;\n\nfunction DataRows(props) {\n  var classes = props.classes,\n      state = props.state,\n      plans = props.plans,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey,\n      rowvalues = props.rowvalues,\n      mode = props.mode,\n      layout = props.layout; //console.log(\"Making data cols.\",colkey,JSON.stringify(colvalues));\n\n  var mapFunction = function mapFunction(val, index) {\n    return dataRow(classes, state, colkey, rowkey, colvalues, mode, layout, plans, val, index);\n  };\n\n  if (rowvalues.length === 0) {\n    return renderZeroRow(classes, state, colkey, colvalues, plans);\n  } else {\n    return rowvalues.map(mapFunction);\n  }\n} // ---------------- HDR\n//\n// ---------------- Details\n\n\nfunction Details(props) {\n  var classes = props.classes,\n      state = props.state; // classes, element\n\n  var colkey = state.Path.getColKey(state) || \"\";\n  var rowkey = state.Path.getRowKey(state) || \"\";\n  var colvalues = state.Path.filterKeys(state, state.Matrix.values[colkey] || [\"\"]);\n  var rowvalues = state.Path.filterKeys(state, state.Matrix.values[rowkey] || [\"\"]);\n  var layoutMode = state.Layout.getLayoutMode(state);\n  var cellMode = state.Layout.getCellMode(state); //var ncol=colvalues.length + 1;\n  //var nrow=rowvalues.length + 1;\n  //DOM.style.font\n\n  var border = 0;\n  var width = 0.9 * window.innerWidth;\n  var height = 0.94 * window.innerHeight - 100;\n  var plans = state.Layout.makePlans(colkey, rowkey, colvalues, rowvalues, width, height, border); //console.log(\"Plans:\",JSON.stringify(plans));\n  //console.log(\"Heights:\",window.innerHeight,height,plans.hdr.height,plans.cell.height);\n  //console.log(\"Details => Width/Height:\",window.innerWidth,window.innerHeight,plan.cell.width,plan.hdr.height)\n  //console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(colvalues));\n  //console.log(\"Rowkey:\",rowkey,\" rowval:\",JSON.stringify(rowvalues));\n\n  if (state.React.matrix === undefined) {\n    var label = \"Processing...\";\n    var plan = state.Layout.makePlan(label, width, height);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.divEmpty,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(CanvasText, {\n      state: state,\n      label: label,\n      plan: plan,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 6\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.divCustom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.divCustomBody,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(DataRows, {\n      classes: classes,\n      state: state,\n      plans: plans,\n      colkey: colkey,\n      colvalues: colvalues,\n      rowkey: rowkey,\n      rowvalues: rowvalues,\n      mode: cellMode,\n      layout: layoutMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 10\n      }\n    })));\n  }\n}\n\nvar Custom = /*#__PURE__*/function (_Component) {\n  _inherits(Custom, _Component);\n\n  var _super = _createSuper(Custom);\n\n  function Custom(props) {\n    var _this;\n\n    _classCallCheck(this, Custom);\n\n    _this = _super.call(this, props);\n\n    _this.updateWindowDimensions = function () {\n      _this.width = window.innerWidth;\n      _this.height = window.innerHeight;\n      _this.bbx = _this.el.getBoundingClientRect(); //console.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n\n    var state = props.state;\n    state.React.Custom = _assertThisInitialized(_this);\n    _this._ismounted = false;\n    return _this;\n  }\n\n  _createClass(Custom, [{\n    key: \"showCustom\",\n    value: function showCustom() {\n      //console.log(\"Rebuilding custom.\",this._ismounted);\n      if (this._ismounted) {\n        this.forceUpdate();\n      }\n\n      ;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._ismounted = true;\n      window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._ismounted = false;\n    }\n  }, {\n    key: \"element\",\n    value: function element(el) {\n      if (el !== undefined && el !== null) {\n        this.el = el;\n        this.bbx = this.el.getBoundingClientRect(); //console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n      }\n\n      ;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state; //console.log(\"##### Rendering Custom.\");\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(el) {\n          _this2.element(el);\n        },\n        className: classes.content,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 28\n        }\n      }, /*#__PURE__*/React.createElement(Details, {\n        state: state,\n        classes: classes,\n        element: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(Tooltip, {\n        state: state,\n        classes: {\n          button: classes.button\n        },\n        element: this,\n        type: 'cell',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 6\n        }\n      }));\n    }\n  }]);\n\n  return Custom;\n}(Component);\n\nCustom.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Custom);","map":{"version":3,"sources":["/home/franktt/react/varseltavle_new/src/react/CustomComponent.js"],"names":["React","Component","PropTypes","withStyles","Paper","Grid","EmptyCell","SummaryCell","SeriesCell","CanvasText","Tooltip","styles","theme","content","backgroundColor","divHdrLeft","display","justifyContent","cursor","divHdrRight","paper","tableLayout","padding","margin","outlined","divEmpty","width","height","divCustom","divCustomRow","border","divCustomCell","divCustomCellCursor","divCustomHead","divCustomHeading","divCustomHeadingCenter","divCustomFoot","fontWeight","divCustomBody","paperImage","textAlign","spacing","DataCell","props","classes","state","index","elements","mode","layout","plan","rowindex","rowval","colvalues","other","map","cell","label","undefined","Layout","modes","Sum","Custom","getMap","getCell","getCellLabel","renderDataCell","colkey","rowkey","rowwhere","range","val","step","matrix","Matrix","getMatrixElements","cnt","Math","min","length","colwhere","Database","getColWhere","onclick","Navigate","selectCustom","dataRow","plans","getWhereValue","getRange","mapFunction","toString","renderZeroRow","DataRows","rowvalues","Details","Path","getColKey","getRowKey","filterKeys","values","layoutMode","getLayoutMode","cellMode","getCellMode","window","innerWidth","innerHeight","makePlans","makePlan","updateWindowDimensions","bbx","el","getBoundingClientRect","_ismounted","forceUpdate","addEventListener","element","button","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\n//import {teal_palette} from '../mui/metMuiThemes';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport EmptyCell   from './EmptyCell';\nimport SummaryCell from './SummaryCell';\nimport SeriesCell  from './SeriesCell';\nimport CanvasText  from './CanvasTextComponent';\nimport Tooltip  from './TooltipContainer';\n\nconst styles = theme => ({\n    content:{\n    \tbackgroundColor: 'transparent',\n    },\n    divHdrLeft : {\n\tdisplay: 'inline-block',\n\tjustifyContent: 'left',\n\tcursor: \"pointer\",\n    },\n    divHdrRight : {\n\tdisplay: 'inline-block',\n\tjustifyContent: 'right',\n\tcursor: \"pointer\",\n    },\n    paper: {\n\tbackgroundColor:'transparent',\n//\tbackgroundColor: teal_palette.main,\n//\toverflow: 'hidden',\n//\tborder:  '1px solid blue',\n\ttableLayout: 'fixed',\n\tpadding:0,\n\tmargin:0,\n\toutlined:\"0px\",\n    },\n    divEmpty :{\n\twidth: '100%',\n\theight: '100%',\n    },\n    divCustom :{\n\tdisplay: 'table',\n\twidth: '100%',\n\tbackgroundColor: 'transparent',\n//\tborder:  '1px solid red',\n    },\n    divCustomRow:  {\n\tbackgroundColor:'transparent',\n\tborder: '0px solid #999999',\n\tdisplay: 'table-row',\n\tpadding: '0px',\n    },\n    divCustomCell:{\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px',\n\tbackgroundColor: 'transparent',\n    },\n    divCustomCellCursor:{\n\tcursor: \"pointer\",\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px',\n    },\n    divCustomHead : {\n\tborder: '0px',\n\tdisplay: 'table-cell',\n\tpadding: '0px',\n    },\n    divCustomHeading : {\n\tdisplay: 'table-header-group',\n    },\n    divCustomHeadingCenter : {\n\tdisplay: 'flex',\n\tjustifyContent: 'center',\n    },\n    divCustomFoot : {\n\tbackgroundColor: '#DDD',\n\tdisplay: 'table-footer-group',\n\tfontWeight: 'bold',\n    },\n    divCustomBody : {\n\tdisplay: 'table-row-group',\n    },\n    paperImage: {\n        textAlign: 'center',\n        padding: theme.spacing(2),\n    }\n});\n\n//const mui = createTheme({palette:teal_palette});\n\n// ---------------- DATA\n//{rowval}\nfunction DataCell(props) {\n    const {classes,state,index,elements,mode,layout,plan,rowindex,rowval,colvalues,...other}=props;\n    var map, cell, label;\n    if (elements===undefined) {\n\treturn <EmptyCell {...other} state={state} plan={plan}/>\n    } else if (mode===state.Layout.modes.cell.Sum) {\n\tmap=state.Custom.getMap(state,layout);\n\tcell=state.Custom.getCell(state,map,colvalues[index],rowval);\n\tlabel=state.Custom.getCellLabel(state,cell)||\"?\";\n\treturn <SummaryCell {...other} state={state} elements={elements} plan={plan}\n\t        index={index} colvalues={colvalues} rowval={rowval} label={label}\n\t        layout={layout}/>\n\t//return null;\n    } else {\n\tmap=state.Custom.getMap(state,layout);\n\tcell=state.Custom.getCell(state,map,colvalues[index],rowval);\n\tlabel=state.Custom.getCellLabel(state,cell)||\"?\";\n\treturn <SeriesCell {...other} state={state} elements={elements} plan={plan}\n\t        index={index} colvalues={colvalues} rowval={rowval} label={label}\n\t        layout={layout}/>\n\t//return null;\n    }\n}\nfunction renderDataCell(classes,state,colkey,colvalues,rowkey,rowval,rowindex,rowwhere,range,mode,layout,plan,val,index) {\n    //console.log(\"Making data cell:\",rowval,val,index,plan,JSON.stringify(colvalues));\n    if (index%plan.step === 0) {\n\t// get elements and range\n\t//console.log(\"Processing DataCell:\",colkey,val,colvalues[index],plan.step);\n\tvar matrix=state.React.matrix;\n\tvar elements=state.Matrix.getMatrixElements(colvalues,rowval,matrix,index,plan.step);\n\t//console.log(\"Elements:\",rowval,index,' =>',JSON.stringify(elements));\n\t// get count and colwhere\n        var cnt = Math.min(colvalues.length,index+plan.step)-index;\n        var colwhere = state.Database.getColWhere(colkey,colvalues,index,plan.step);\n\t// make onclick\n\tvar onclick=() => state.Navigate.selectCustom(state,layout,colkey,rowkey,\n\t\t\t\t\t\t      colvalues[index],rowval,\n\t\t\t\t\t\t      colwhere,rowwhere,cnt,1);\n\treturn (<DataCell classes={classes} state={state} key={`col-${index}`} rowindex={rowindex} index={index} onclick={onclick}\n\t\tcolkey={colkey} rowkey={rowkey} colvalues={colvalues} rowval={rowval} colwhere={colwhere} rowwhere={rowwhere} \n\t\telements={elements} mode={mode} layout={layout} plan={plan} range={range}\n\t    />);\n    } else {\n\treturn null;\n    }\n}\n//{{rowkey:'test1',colkey:'test2'}}\nfunction dataRow(classes,state,colkey,rowkey,colvalues,mode,layout,plans,rowval,rowindex) {\n    //console.log(\"Processing Row:\",rowkey,rowval);\n    var rowwhere=state.Database.getWhereValue(rowkey,rowval);\n    //var onclick=() => {state.Navigate.selectKey(state,rowkey,rowval,rowwhere,1);}\n    var range=[undefined,undefined];\n    if (state.React.matrix!==undefined) {\n\trange=state.Matrix.getRange(state,state.React.matrix,colvalues,[rowval]);\n    };\n    //console.log(\"Making data cols.\",rowval,colkey,JSON.stringify(colvalues));\n    //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n    var mapFunction= (val,index)=>renderDataCell(classes,state,colkey,colvalues,rowkey,rowval,rowindex,rowwhere,range,mode,layout,plans.cell,val,index);\n    return (<div className={classes.divCustomRow} key={rowindex.toString()}>\n\t       {colvalues.map(mapFunction)}\n\t    </div>);\n};\nfunction renderZeroRow(classes,state,colkey,colvalues,plans) {\n    return (<div className={classes.divCustomRow} key={1}>\n\t       <div className={classes.divCustomCell} width={plans.cell.width}>No data available</div>\n\t    </div>);\n};\nfunction DataRows(props) {\n    const { classes, state, plans, colkey, colvalues, rowkey, rowvalues, mode, layout } = props;\n    //console.log(\"Making data cols.\",colkey,JSON.stringify(colvalues));\n    var mapFunction= (val,index)=>dataRow(classes,state,colkey,rowkey,colvalues,mode,layout,plans,val,index);\n    if (rowvalues.length===0) {\n\treturn renderZeroRow(classes,state,colkey,colvalues,plans);\n    } else {\n\treturn (rowvalues.map(mapFunction));\n    }\n}\n// ---------------- HDR\n//\n// ---------------- Details\nfunction Details(props) {\n    const { classes, state } = props; // classes, element\n    var colkey = state.Path.getColKey(state)||\"\";\n    var rowkey = state.Path.getRowKey(state)||\"\";\n    var colvalues = state.Path.filterKeys(state,state.Matrix.values[colkey]||[\"\"]);\n    var rowvalues = state.Path.filterKeys(state,state.Matrix.values[rowkey]||[\"\"]);\n    var layoutMode  = state.Layout.getLayoutMode(state);\n    var cellMode  = state.Layout.getCellMode(state);\n    //var ncol=colvalues.length + 1;\n    //var nrow=rowvalues.length + 1;\n    //DOM.style.font\n    var border=0;\n    var width=0.9*window.innerWidth;\n    var height=0.94*window.innerHeight - 100;\n    var plans=state.Layout.makePlans(colkey,rowkey,colvalues,rowvalues,width,height,border);\n    //console.log(\"Plans:\",JSON.stringify(plans));\n    //console.log(\"Heights:\",window.innerHeight,height,plans.hdr.height,plans.cell.height);\n    //console.log(\"Details => Width/Height:\",window.innerWidth,window.innerHeight,plan.cell.width,plan.hdr.height)\n    //console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(colvalues));\n    //console.log(\"Rowkey:\",rowkey,\" rowval:\",JSON.stringify(rowvalues));\n    if (state.React.matrix === undefined) {\n\tvar label=\"Processing...\"\n\tvar plan=state.Layout.makePlan(label,width,height);\n\treturn (<div className={classes.divEmpty}>\n\t\t   <CanvasText state={state} label={label} plan={plan}/>\n\t\t</div>);\n    } else {\n\treturn (<div className={classes.divCustom}>\n\t\t <div className={classes.divCustomBody}>\n\t        <DataRows classes={classes} state={state} plans={plans} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues} mode={cellMode} layout={layoutMode}/>\n\t\t </div>\n\t\t</div>);\n    }\n}\nclass Custom extends Component {\n    constructor(props) {\n\tsuper(props);\n\tconst {state} = props;\n\tstate.React.Custom=this;\n\tthis._ismounted=false;\n    };\n    showCustom() {\n\t//console.log(\"Rebuilding custom.\",this._ismounted);\n\tif (this._ismounted) {\n\t    this.forceUpdate();\n\t};\n    };\n    componentDidMount() { \n\tthis._ismounted = true;\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n    componentWillUnmount() {\n\tthis._ismounted = false;\n    }\n    updateWindowDimensions = () => {\n        this.width= window.innerWidth;\n\tthis.height=window.innerHeight;\n\tthis.bbx=this.el.getBoundingClientRect();\n\t//console.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n    element(el) {\n\tif (el !== undefined && el !== null) {\n\t    this.el=el;\n\t    this.bbx=this.el.getBoundingClientRect();\n\t    //console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n\t};\n    };\n    render() {\n\tconst { classes, state } = this.props;\n\t//console.log(\"##### Rendering Custom.\");\n\treturn (<div ref={el=>{this.element(el)}} className={classes.content}>\n\t\t   <Grid container spacing={10}>\n\t\t      <Grid item xs={12}> \n                         { <Paper className={classes.paper}>\n\t\t              <Details state={state} classes={classes} element={this}/>\n                           </Paper>}\n                      </Grid>\n                   </Grid>\n\t\t   <Tooltip state={state} classes={{button:classes.button}} element={this} type={'cell'}/>\n\t        </div>);\n    }\n}\n\nCustom.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Custom);\n"]},"metadata":{},"sourceType":"module"}