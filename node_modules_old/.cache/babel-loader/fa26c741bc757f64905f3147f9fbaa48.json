{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/franktt/react/varseltavle_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/franktt/react/varseltavle_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle_new/src/react/Tooltip.js\";\nimport React, { Component } from \"react\"; //import PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { teal_palette } from '../mui/metMuiThemes';\nimport Table from './TooltipTable'; //import InfoIcon from '@material-ui/icons/Info';\n//import CancelIcon from '@material-ui/icons/Cancel';\n\nvar styles = function styles(theme) {\n  return {\n    tooltip: {\n      border: '0px solid #999999',\n      backgroundColor: teal_palette.main,\n      zIndex: 10000\n    }\n  };\n};\n\nfunction TableDetails(props) {\n  var state = props.state,\n      data = props.data,\n      tooltip = props.tooltip; //state,element\n\n  var keys = state.Path.getTooltipKeys(state, data, tooltip); // keys in tooltip\n\n  var click = state.Path.getClickableTooltipKeys(state, data); // clickable tooltip keys\n  //console.log (\"TableDetails tooltip-keys:\",JSON.stringify(state.Path.tooltip));\n  //console.log(\"TableDetails keys:\",JSON.stringify(keys),JSON.stringify(state.Path.keys));\n  //console.log(\"TableDetails tooltip:\",JSON.stringify(tooltip));\n\n  var key = data.rowkey + \":\" + data.colkey;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    state: state,\n    keys: keys,\n    click: click,\n    subs: tooltip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }));\n}\n\n;\n\nfunction InfoDetails(props) {\n  var onclick = props.onclick,\n      info = props.info; // state,element,data,\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onClick: onclick,\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Cnt:\", info.cnt, \" Level:\", info.maxlev);\n}\n\n; //function printData(data) {\n//    console.log(\"############## Data:\",JSON.stringify(Object.keys(data)));\n//};\n\nvar Tooltip = /*#__PURE__*/function (_Component) {\n  _inherits(Tooltip, _Component);\n\n  var _super = _createSuper(Tooltip);\n\n  function Tooltip() {\n    _classCallCheck(this, Tooltip);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Tooltip, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          state = _this$props.state,\n          data = _this$props.data,\n          update = _this$props.update;\n      var info = state.Matrix.getTooltipInfo(state, data); //console.log(\"Info:\",JSON.stringify(info));\n\n      var available = state.Matrix.checkTooltip(state, data); //console.log(\"Available:\",JSON.stringify(available));\n\n      if (available) {\n        return /*#__PURE__*/React.createElement(TableDetails, {\n          state: state,\n          data: data,\n          tooltip: info.tooltip,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 14\n          }\n        });\n      } else {\n        var onclick = function onclick() {\n          state.Matrix.addTooltip(state, data);\n          update();\n\n          _this.forceUpdate();\n        }; //printData(data);\n\n\n        return /*#__PURE__*/React.createElement(InfoDetails, {\n          state: state,\n          data: data,\n          onclick: onclick,\n          info: info,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 14\n          }\n        });\n      }\n    }\n  }]);\n\n  return Tooltip;\n}(Component);\n\n;\nexport default withStyles(styles)(Tooltip);","map":{"version":3,"sources":["/home/franktt/react/varseltavle_new/src/react/Tooltip.js"],"names":["React","Component","withStyles","teal_palette","Table","styles","theme","tooltip","border","backgroundColor","main","zIndex","TableDetails","props","state","data","keys","Path","getTooltipKeys","click","getClickableTooltipKeys","key","rowkey","colkey","InfoDetails","onclick","info","cursor","cnt","maxlev","Tooltip","update","Matrix","getTooltipInfo","available","checkTooltip","addTooltip","forceUpdate"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAAQC,YAAR,QAA2B,qBAA3B;AAEA,OAAOC,KAAP,MAAmB,gBAAnB,C,CAEA;AACA;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,OAAO,EAAC;AACXC,MAAAA,MAAM,EAAE,mBADG;AAEXC,MAAAA,eAAe,EAACN,YAAY,CAACO,IAFlB;AAGXC,MAAAA,MAAM,EAAC;AAHI;AADa,GAAL;AAAA,CAApB;;AAQA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAAA,MACjBC,KADiB,GACGD,KADH,CACjBC,KADiB;AAAA,MACXC,IADW,GACGF,KADH,CACXE,IADW;AAAA,MACNR,OADM,GACGM,KADH,CACNN,OADM,EACU;;AAClC,MAAIS,IAAI,GAACF,KAAK,CAACG,IAAN,CAAWC,cAAX,CAA0BJ,KAA1B,EAAgCC,IAAhC,EAAqCR,OAArC,CAAT,CAFwB,CAEkC;;AAC1D,MAAIY,KAAK,GAACL,KAAK,CAACG,IAAN,CAAWG,uBAAX,CAAmCN,KAAnC,EAAyCC,IAAzC,CAAV,CAHwB,CAGkC;AAC1D;AACA;AACA;;AACA,MAAIM,GAAG,GAACN,IAAI,CAACO,MAAL,GAAY,GAAZ,GAAgBP,IAAI,CAACQ,MAA7B;AACA,sBAAQ;AAAK,IAAA,GAAG,EAAEF,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACJ,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEP,KAAd;AAAqB,IAAA,IAAI,EAAEE,IAA3B;AAAiC,IAAA,KAAK,EAAEG,KAAxC;AAA+C,IAAA,IAAI,EAAEZ,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,CAAR;AAIH;;AAAA;;AACD,SAASiB,WAAT,CAAqBX,KAArB,EAA4B;AAAA,MACjBY,OADiB,GACHZ,KADG,CACjBY,OADiB;AAAA,MACTC,IADS,GACHb,KADG,CACTa,IADS,EACI;;AAC5B,sBAAQ;AAAK,IAAA,OAAO,EAAED,OAAd;AAAuB,IAAA,KAAK,EAAE;AAACE,MAAAA,MAAM,EAAC;AAAR,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACFD,IAAI,CAACE,GADH,aACeF,IAAI,CAACG,MADpB,CAAR;AAIH;;AAAA,C,CACD;AACA;AACA;;IACMC,O;;;;;;;;;;;;;6BACO;AAAA;;AAAA,wBACc,KAAKjB,KADnB;AAAA,UACLC,KADK,eACLA,KADK;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACMgB,MADN,eACMA,MADN;AAEZ,UAAIL,IAAI,GAACZ,KAAK,CAACkB,MAAN,CAAaC,cAAb,CAA4BnB,KAA5B,EAAkCC,IAAlC,CAAT,CAFY,CAGZ;;AACA,UAAImB,SAAS,GAACpB,KAAK,CAACkB,MAAN,CAAaG,YAAb,CAA0BrB,KAA1B,EAAgCC,IAAhC,CAAd,CAJY,CAKZ;;AACA,UAAImB,SAAJ,EAAe;AACX,4BAAQ,oBAAC,YAAD;AAAc,UAAA,KAAK,EAAEpB,KAArB;AAA4B,UAAA,IAAI,EAAEC,IAAlC;AAAwC,UAAA,OAAO,EAAEW,IAAI,CAACnB,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACH,OAFD,MAEO;AACH,YAAIkB,OAAO,GAAC,SAARA,OAAQ,GAAM;AAACX,UAAAA,KAAK,CAACkB,MAAN,CAAaI,UAAb,CAAwBtB,KAAxB,EAA8BC,IAA9B;AAAoCgB,UAAAA,MAAM;;AAAG,UAAA,KAAI,CAACM,WAAL;AAAoB,SAApF,CADG,CACiF;;;AACpF,4BAAQ,oBAAC,WAAD;AAAa,UAAA,KAAK,EAAEvB,KAApB;AAA2B,UAAA,IAAI,EAAEC,IAAjC;AAAuC,UAAA,OAAO,EAAEU,OAAhD;AAAyD,UAAA,IAAI,EAAEC,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACH;AACG;;;;EAbiBzB,S;;AAcrB;AAGD,eAAeC,UAAU,CAACG,MAAD,CAAV,CAAmByB,OAAnB,CAAf","sourcesContent":["import React, {Component} from \"react\";\n//import PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport {teal_palette} from '../mui/metMuiThemes';\n\nimport Table  from './TooltipTable';\n\n//import InfoIcon from '@material-ui/icons/Info';\n//import CancelIcon from '@material-ui/icons/Cancel';\n\nconst styles = theme => ({\n    tooltip:{\n\tborder: '0px solid #999999',\n\tbackgroundColor:teal_palette.main,\n\tzIndex:10000,\n    },\n});\n\nfunction TableDetails(props){\n    const {state,data,tooltip}=props; //state,element\n    var keys=state.Path.getTooltipKeys(state,data,tooltip);   // keys in tooltip\n    var click=state.Path.getClickableTooltipKeys(state,data); // clickable tooltip keys\n    //console.log (\"TableDetails tooltip-keys:\",JSON.stringify(state.Path.tooltip));\n    //console.log(\"TableDetails keys:\",JSON.stringify(keys),JSON.stringify(state.Path.keys));\n    //console.log(\"TableDetails tooltip:\",JSON.stringify(tooltip));\n    var key=data.rowkey+\":\"+data.colkey;\n    return (<div key={key}>\n\t       <Table state={state} keys={keys} click={click} subs={tooltip}/>\n\t    </div>\n\t   );\n};\nfunction InfoDetails(props) {\n    const {onclick,info}=props; // state,element,data,\n    return (<div onClick={onclick} style={{cursor:'pointer'}}>\n\t    Cnt:{info.cnt} Level:{info.maxlev}\n\t    </div>\n\t   );\n};\n//function printData(data) {\n//    console.log(\"############## Data:\",JSON.stringify(Object.keys(data)));\n//};\nclass Tooltip extends Component {\n    render() {\n\tconst {state,data,update}=this.props;\n\tvar info=state.Matrix.getTooltipInfo(state,data);\n\t//console.log(\"Info:\",JSON.stringify(info));\n\tvar available=state.Matrix.checkTooltip(state,data);\n\t//console.log(\"Available:\",JSON.stringify(available));\n\tif (available) {\n\t    return (<TableDetails state={state} data={data} tooltip={info.tooltip}/>);\n\t} else {\n\t    var onclick=() => {state.Matrix.addTooltip(state,data);update();this.forceUpdate();}//printData(data);\n\t    return (<InfoDetails state={state} data={data} onclick={onclick} info={info}/>);\n\t}\n    }\n};\n\n\nexport default withStyles(styles)(Tooltip);\n"]},"metadata":{},"sourceType":"module"}