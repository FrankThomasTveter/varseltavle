{"ast":null,"code":"//console.log(\"Loading MatrixLib.js\");\nfunction Custom() {\n  this.bdeb = false;\n  this.maps = {};\n\n  this.init = function (state) {\n    var par = \"Custom\";\n    state.Utils.init(par, this); //console.log(\"Custom:\",JSON.stringify(this.list));\n  };\n\n  this.getLayoutMode = function (state) {\n    var mode = state.Layout.getLayoutMode(state);\n    var keys = Object.keys(state.Layout.modes.layout);\n    var lenk = keys.length;\n\n    for (var kk = 0; kk < lenk; kk++) {\n      var key = keys[kk];\n      var val = state.Layout.modes.layout[key];\n\n      if (mode === val) {\n        //console.log(\"Found mode:\",key,val,mode);\n        return;\n      }\n\n      ;\n    }\n\n    ;\n    return mode;\n  };\n\n  this.addMaps = function (state, list) {\n    var maps = Object.keys(this.maps);\n\n    for (var ii = 0; ii < maps.length; ii++) {\n      list.push(maps[ii]);\n    }\n\n    ;\n    return list;\n  };\n\n  this.getMap = function (state, name) {\n    var map = this.maps[name];\n\n    if (map !== undefined) {\n      return map;\n    } else {\n      //console.log(\"Invalid map...\",name);\n      return;\n    }\n  };\n\n  this.mapHasCells = function (state, name) {\n    var map = this.getMap(state, name);\n\n    if (map !== undefined) {\n      return map.cells !== undefined;\n    } else {\n      return false;\n    }\n  };\n\n  this.getMapRow = function (state, map) {\n    if (map !== undefined) {\n      return map.range[0];\n    } else {\n      return 0;\n    }\n  };\n\n  this.getMapCol = function (state, map) {\n    if (map !== undefined) {\n      return map.range[1];\n    } else {\n      return 0;\n    }\n  };\n\n  this.getCell = function (state, map, colval, rowval) {\n    if (map !== undefined) {\n      var cells = map.cells;\n\n      if (cells === undefined) {\n        return;\n      } // no cell found\n\n\n      var lenc = cells.length;\n\n      for (var cc = 0; cc < lenc; cc++) {\n        var cell = cells[cc]; //var bok=true;\n\n        var row = this.getCellRow(state, cell);\n        var col = this.getCellCol(state, cell); //console.log(\"Checking:\",col,colval,row,rowval,colval == col && rowval == row);\n\n        if (colval === col && rowval === row) {\n          return cell;\n        }\n\n        ;\n      }\n\n      ;\n    }\n\n    ;\n  };\n\n  this.getCellRow = function (state, cell) {\n    if (cell !== undefined) {\n      return cell[0];\n    }\n  };\n\n  this.getCellCol = function (state, cell) {\n    if (cell !== undefined) {\n      return cell[1];\n    }\n\n    ;\n  };\n\n  this.getCellLabel = function (state, cell) {\n    if (cell !== undefined) {\n      //console.log(\"Cell:\",JSON.stringify(cell));\n      return cell[2] || \"?\";\n    } else {\n      return \".\";\n    }\n  };\n\n  this.getCellCriteria = function (state, cell) {\n    if (cell !== undefined) {\n      return cell[3];\n    }\n\n    ;\n  };\n\n  this.getCriteria = function (state, layout, colval, rowval) {\n    var map = state.Custom.getMap(state, layout);\n    var cell = state.Custom.getCell(state, map, colval, rowval);\n    var criteria = state.Custom.getCellCriteria(state, cell);\n    return criteria;\n  };\n\n  this.getLats = function (state, map) {\n    var ret = [];\n    var leni = this.getMapRow(state, map);\n\n    for (var iy = 0; iy < leni; iy++) {\n      ret.push(iy);\n    }\n\n    return ret;\n  };\n\n  this.getLons = function (state, map) {\n    var ret = [];\n    var leni = this.getMapCol(state, map);\n\n    for (var ix = 0; ix < leni; ix++) {\n      ret.push(ix);\n    }\n\n    return ret;\n  };\n\n  this.findCell = function (state, map, doc) {\n    var cells = map.cells;\n\n    if (cells === undefined) {\n      return;\n    } // no cell found\n\n\n    var lenc = cells.length;\n\n    for (var cc = 0; cc < lenc; cc++) {\n      var cell = cells[cc];\n      var bok = true;\n      var criteria = this.getCellCriteria(state, cell);\n\n      if (criteria !== undefined) {\n        var keys = Object.keys(criteria);\n        var lenk = keys.length;\n\n        for (var kk = 0; kk < lenk; kk++) {\n          var key = keys[kk];\n\n          if (criteria[key].indexOf(doc[key]) === -1) {\n            bok = false;\n          }\n        }\n      } else {\n        bok = false;\n      }\n\n      if (bok) {\n        return cell;\n      }\n    }\n\n    console.log(\"No valid cell found...\");\n    return; // no cell found\n  };\n}\n\n;\nexport default Custom;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/CustomLib.js"],"names":["Custom","bdeb","maps","init","state","par","Utils","getLayoutMode","mode","Layout","keys","Object","modes","layout","lenk","length","kk","key","val","addMaps","list","ii","push","getMap","name","map","undefined","mapHasCells","cells","getMapRow","range","getMapCol","getCell","colval","rowval","lenc","cc","cell","row","getCellRow","col","getCellCol","getCellLabel","getCellCriteria","getCriteria","criteria","getLats","ret","leni","iy","getLons","ix","findCell","doc","bok","indexOf","console","log"],"mappings":"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","sourcesContent":["//console.log(\"Loading MatrixLib.js\");\n\nfunction Custom() {\n    this.bdeb=false;\n    this.maps={};\n    this.init=function(state){\n\tvar par=\"Custom\";\n\tstate.Utils.init(par,this);\n\t//console.log(\"Custom:\",JSON.stringify(this.list));\n    };\n    this.getLayoutMode=function(state) {\n\tvar mode=state.Layout.getLayoutMode(state);\n\tvar keys=Object.keys(state.Layout.modes.layout);\n\tvar lenk=keys.length;\n\tfor (var kk=0;kk<lenk;kk++) {\n\t    var key=keys[kk];\n\t    var val=state.Layout.modes.layout[key];\n\t    if (mode === val) {\n\t\t//console.log(\"Found mode:\",key,val,mode);\n\t\treturn;\n\t    };\n\t};\n\treturn mode;\n    };\n    this.addMaps=function(state,list) {\n\tvar maps=Object.keys(this.maps);\n\tfor (var ii=0; ii< maps.length;ii++) {\n\t    list.push(maps[ii]);\n\t};\n\treturn list;\n    }\n    this.getMap=function(state,name) {\n\tvar map=this.maps[name];\n\tif (map !== undefined) {\n\t    return map;\n\t} else {\n\t    //console.log(\"Invalid map...\",name);\n\t    return;\n\t}\n    };\n    this.mapHasCells=function(state,name) {\n\tvar map=this.getMap(state,name);\n\tif (map !== undefined) {\n\t    return (map.cells !== undefined);\n\t} else {\n\t    return false;\n\t}\n    }\n    this.getMapRow=function(state,map) {\n\tif (map !== undefined) {\n\t    return map.range[0];\n\t} else {\n\t    return 0;\n\t}\n    };\n    this.getMapCol=function(state,map) {\n\tif (map !== undefined) {\n\t    return map.range[1];\n\t} else {\n\t    return 0;\n\t}\n    };\n    this.getCell=function(state,map,colval,rowval) {\n\tif (map !== undefined) {\n\t    var cells=map.cells;\n\t    if (cells === undefined) { return;} // no cell found\n\t    var lenc=cells.length;\n\t    for (var cc=0;cc<lenc;cc++) {\n\t\tvar cell=cells[cc];\n\t\t//var bok=true;\n\t\tvar row=this.getCellRow(state,cell);\n\t\tvar col=this.getCellCol(state,cell);\n\t\t//console.log(\"Checking:\",col,colval,row,rowval,colval == col && rowval == row);\n\t\tif (colval === col && rowval === row) {\n\t\t    return cell;\n\t\t};\n\t    };\n\t};\n    };\n    this.getCellRow=function(state,cell) {\n\tif (cell !== undefined) {\n\t    return cell[0];\n\t}\n    };\n    this.getCellCol=function(state,cell) {\n\tif (cell !== undefined) {\n\t    return cell[1];\n\t};\n    };\n    this.getCellLabel=function(state,cell) {\n\tif (cell !== undefined) {\n\t    //console.log(\"Cell:\",JSON.stringify(cell));\n\t    return cell[2]||\"?\";\n\t} else {\n\t    return \".\";\n\t}\n    };\n    this.getCellCriteria=function(state,cell) {\n\tif (cell !== undefined) {\n\t    return cell[3];\n\t};\n    };\n    this.getCriteria=function(state,layout,colval,rowval) {\n\tvar map=state.Custom.getMap(state,layout);\n\tvar cell=state.Custom.getCell(state,map,colval,rowval);\n\tvar criteria=state.Custom.getCellCriteria(state,cell);\n\treturn criteria;\n    }\n    this.getLats=function(state,map) {\n\tvar ret=[];\n\tvar leni=this.getMapRow(state,map);\n\tfor (var iy=0;iy<leni;iy++) {\n\t    ret.push(iy);\n\t}\n\treturn ret;\n    };\n    this.getLons=function(state,map) {\n\tvar ret=[];\n\tvar leni=this.getMapCol(state,map);\n\tfor (var ix=0;ix<leni;ix++) {\n\t    ret.push(ix);\n\t}\n\treturn ret;\n    };\n    this.findCell=function(state,map,doc) {\n\tvar cells=map.cells;\n\tif (cells === undefined) { return;} // no cell found\n\tvar lenc=cells.length;\n\tfor (var cc=0;cc<lenc;cc++) {\n\t    var cell=cells[cc];\n\t    var bok=true;\n\t    var criteria=this.getCellCriteria(state,cell);\n\t    if (criteria !== undefined) {\n\t\tvar keys=Object.keys(criteria);\n\t\tvar lenk=keys.length;\n\t\tfor (var kk=0; kk<lenk;kk++) {\n\t\t    var key=keys[kk];\n\t\t    if (criteria[key].indexOf(doc[key]) === -1) {\n\t\t\tbok=false;\n\t\t    }\n\t\t}\n\t    } else {\n\t\tbok=false;\n\t    }\n\t    if (bok) {\n\t\treturn cell;\n\t    }\n\t}\n\tconsole.log(\"No valid cell found...\");\n\treturn; // no cell found\n    };\n};\nexport default Custom;\n"]},"metadata":{},"sourceType":"module"}