{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/franktt/react/varseltavle_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/franktt/react/varseltavle_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle_new/src/globe/TooltipWrapper.js\";\nimport React, { Component } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { teal_palette } from '../mui/metMuiThemes';\n\nvar styles = function styles(theme) {\n  return {\n    tooltip: {\n      border: '0px solid #999999',\n      backgroundColor: teal_palette.main,\n      zIndex: 100\n    }\n  };\n};\n\nvar TooltipWrapper = /*#__PURE__*/function (_Component) {\n  _inherits(TooltipWrapper, _Component);\n\n  var _super = _createSuper(TooltipWrapper);\n\n  function TooltipWrapper(props) {\n    var _this;\n\n    _classCallCheck(this, TooltipWrapper);\n\n    _this = _super.call(this, props);\n    _this.tooltipRef = React.createRef();\n    _this.divRef = React.createRef();\n    _this.showing = false;\n    _this.marker = null;\n    _this.state = {\n      content: null\n    };\n    return _this;\n  }\n\n  _createClass(TooltipWrapper, [{\n    key: \"rebuild\",\n    value: function rebuild() {//console.log(\"Rebuilding tooltip.\");\n      //ReactTooltip.rebuild();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      //console.log(\"Rebuilding tooltip.\");\n      this.forceUpdate();\n      ReactTooltip.rebuild();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      ReactTooltip.rebuild();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      //this.tooltipRef.destroy();\n      this.showing = false;\n      this.marker = null;\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      document.body.style.cursor = 'inherit';\n      this.divRef.style.position = 'fixed';\n      this.divRef.style.left = '0';\n      this.divRef.style.top = '0'; //this.tooltipRef.hide();\n\n      this.showing = false;\n      this.marker = null;\n      this.setState({\n        content: null\n      });\n      ReactTooltip.hide(this.divRef);\n    }\n  }, {\n    key: \"show\",\n    value: function show(clientX, clientY, marker) {\n      if (!this.showing || this.marker === null) {\n        this.marker = marker;\n        document.body.style.cursor = 'pointer';\n        this.divRef.style.width = '20px';\n        this.divRef.style.height = '20px';\n        this.divRef.style.border = '0px solid #FFF';\n        this.divRef.style.position = 'fixed';\n        var posx = Math.max(clientX - 10, 1);\n        var posy = Math.max(clientY - 15, 1);\n        this.divRef.style.left = \"\".concat(posx, \"px\"); //`${clientX + TOOLTIP_OFFSET}px`;\n\n        this.divRef.style.top = \"\".concat(posy, \"px\");\n        this.setState({\n          content: this.props.getTooltipContent(marker)\n        }); //console.log(\"Showing:\",marker.id,posx,posy);\n\n        ReactTooltip.show(this.divRef);\n        this.forceUpdate(); // do we need this???\n      }\n\n      ;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes; //console.log(\"Rendering ToolWrapper...\");\n\n      var getContent = function (dataTip) {\n        return this.state.content;\n      }.bind(this);\n\n      var onClickMarker = function (event) {\n        if (this.marker !== null) {\n          var marker = this.marker; //console.log(\"Clicked marker...\",marker.id)\n\n          var state = marker.state;\n          var colkey = marker.colrangekey;\n          var colrange = marker.colrange;\n          var colwhere = marker.colwhere;\n          var rowkey = marker.rowrangekey;\n          var rowrange = marker.rowrange;\n          var rowwhere = marker.rowwhere;\n          var cnt = marker.cnt; //console.log(\"Clicked marker...\",marker.id);\n\n          state.Navigate.selectItemRange(state, colkey, rowkey, colrange, rowrange, colwhere, rowwhere, cnt, 1); //state.Show.showAll(state);\n          // } else {\n          //\tconsole.log(\"Clicked empty marker...\");\n        }\n      }.bind(this);\n\n      var afterShow = function () {\n        //console.log(\"Showing \",this.marker.id);\n        this.showing = true;\n      }.bind(this);\n\n      var afterHide = function () {\n        //console.log(\"Hiding \",this.marker.id);\n        this.showing = false;\n      }.bind(this);\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(element) {\n          return _this2.divRef = element;\n        },\n        \"data-for\": \"map\",\n        \"data-tip\": \"test\",\n        onClick: onClickMarker,\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 3\n        }\n      }), /*#__PURE__*/React.createElement(ReactTooltip, {\n        id: \"map\",\n        ref: function ref(element) {\n          return _this2.tooltipRef = element;\n        },\n        className: classes.tooltip,\n        effect: \"solid\",\n        delayHide: 500,\n        delayShow: 200,\n        delayUpdate: 500,\n        place: 'right',\n        border: true,\n        type: 'light',\n        afterShow: afterShow,\n        afterHide: afterHide,\n        getContent: getContent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 3\n        }\n      }));\n    }\n  }]);\n\n  return TooltipWrapper;\n}(Component);\n\nTooltipWrapper.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TooltipWrapper);","map":{"version":3,"sources":["/home/franktt/react/varseltavle_new/src/globe/TooltipWrapper.js"],"names":["React","Component","ReactTooltip","PropTypes","withStyles","teal_palette","styles","theme","tooltip","border","backgroundColor","main","zIndex","TooltipWrapper","props","tooltipRef","createRef","divRef","showing","marker","state","content","forceUpdate","rebuild","document","body","style","cursor","position","left","top","setState","hide","clientX","clientY","width","height","posx","Math","max","posy","getTooltipContent","show","classes","getContent","dataTip","bind","onClickMarker","event","colkey","colrangekey","colrange","colwhere","rowkey","rowrangekey","rowrange","rowwhere","cnt","Navigate","selectItemRange","afterShow","afterHide","element","display","justifyContent","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport ReactTooltip from 'react-tooltip'\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport {teal_palette} from '../mui/metMuiThemes';\n\nconst styles = theme => ({\n    tooltip:{\n\tborder: '0px solid #999999',\n\tbackgroundColor:teal_palette.main,\n\tzIndex:100,\n    },\n});\n\t\t\t \nclass TooltipWrapper extends Component {\n    constructor (props) {\n\tsuper(props);\n\tthis.tooltipRef=React.createRef();\n\tthis.divRef=React.createRef();\n\tthis.showing=false;\n\tthis.marker=null;\n\tthis.state={content:null};\n    }\n    rebuild() {\n\t//console.log(\"Rebuilding tooltip.\");\n\t//ReactTooltip.rebuild();\n    };\n    update() {\n\t//console.log(\"Rebuilding tooltip.\");\n\tthis.forceUpdate();\n\tReactTooltip.rebuild();\n    };\n    componentDidUpdate(){\n\tReactTooltip.rebuild()\n    } \n   \n    destroy() {\n\t//this.tooltipRef.destroy();\n\tthis.showing=false;\n\tthis.marker=null;\n    };\n\n    hide() {\n\tdocument.body.style.cursor = 'inherit';\n\tthis.divRef.style.position = 'fixed';\n\tthis.divRef.style.left = '0';\n\tthis.divRef.style.top = '0';\n\t//this.tooltipRef.hide();\n\tthis.showing=false;\n\tthis.marker=null;\n\tthis.setState({content:null});\n\tReactTooltip.hide(this.divRef);\n    };\n\n    show(clientX, clientY, marker) {\n\tif (! this.showing || this.marker === null) {\n\t    this.marker=marker;\n\t    document.body.style.cursor = 'pointer';\n\t    this.divRef.style.width = '20px';\n\t    this.divRef.style.height = '20px';\n\t    this.divRef.style.border = '0px solid #FFF';\n\t    this.divRef.style.position = 'fixed';\n\t    var posx=Math.max(clientX-10,1);\n\t    var posy=Math.max(clientY-15,1);\n\t    this.divRef.style.left = `${posx}px`;//`${clientX + TOOLTIP_OFFSET}px`;\n\t    this.divRef.style.top = `${posy}px`;\n\t    this.setState({content:this.props.getTooltipContent(marker)});\n\t    //console.log(\"Showing:\",marker.id,posx,posy);\n\t    ReactTooltip.show(this.divRef);\n\t    this.forceUpdate(); // do we need this???\n\t};\n    };\n    \n    render() {\n\tconst { classes } = this.props;\n\t//console.log(\"Rendering ToolWrapper...\");\n\tvar getContent= function(dataTip) {\n\t    return this.state.content;\n\t}.bind(this);\n\tvar onClickMarker=function (event) {\n\t    if (this.marker !== null) {\n\t\tvar marker=this.marker;\n\t\t//console.log(\"Clicked marker...\",marker.id)\n\t\tvar state=marker.state;\n\t\tvar colkey=marker.colrangekey;\n\t\tvar colrange=marker.colrange;\n\t\tvar colwhere=marker.colwhere;\n\t\tvar rowkey=marker.rowrangekey;\n\t\tvar rowrange=marker.rowrange;\n\t\tvar rowwhere=marker.rowwhere;\n\t\tvar cnt=marker.cnt;\n\t\t//console.log(\"Clicked marker...\",marker.id);\n\t\tstate.Navigate.selectItemRange(state,colkey,rowkey,colrange,rowrange,colwhere,rowwhere,cnt,1);\n\t\t//state.Show.showAll(state);\n\t   // } else {\n\t   //\tconsole.log(\"Clicked empty marker...\");\n\t    }\n\t}.bind(this);\n\tvar afterShow= function() {\n\t    //console.log(\"Showing \",this.marker.id);\n\t    this.showing=true;\n\t}.bind(this);\n\tvar afterHide= function() {\n\t    //console.log(\"Hiding \",this.marker.id);\n\t    this.showing=false;\n\t}.bind(this);\n\treturn (<div>\n\t\t<div ref={element=>this.divRef=element}\n\t             data-for={\"map\"}\n\t             data-tip=\"test\"\n\t\t     onClick={onClickMarker}\n\t\t     style={{display: 'flex', justifyContent: 'center'}}></div>\n\t\t<ReactTooltip\n\t             id={\"map\"}\n\t             ref={element=>this.tooltipRef=element}\n\t             className={classes.tooltip}\n                     effect='solid'\n                     delayHide={500}\n                     delayShow={200}\n                     delayUpdate={500}\n                     place={'right'}\n                     border={true}\n                     type={'light'}\n\t             afterShow={afterShow}\n\t             afterHide={afterHide}\n\t\t     getContent={getContent}/>\n\t\t</div>);\n    }\n}\n\n\n\nTooltipWrapper.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TooltipWrapper);\n"]},"metadata":{},"sourceType":"module"}