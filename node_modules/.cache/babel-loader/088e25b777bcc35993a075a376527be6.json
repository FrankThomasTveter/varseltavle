{"ast":null,"code":"//console.log(\"Loading LayoutLib.js\");\nfunction Layout() {\n  this.rotate = undefined; // should labels on x-axis be rotated?\n\n  this.priority = undefined; // which key should be on the abscissa\n\n  this.order = {}; // key order\n\n  this.trash = {}; // key trash\n\n  this.init = function (state) {\n    var par = \"Table\" + state.Utils.version;\n    state.Utils.init(par, this);\n  }; // adjust keys so that rows/cols have more than on entry...\n\n\n  this.checkTableKeys = function (state) {\n    var ret = [];\n    var where = state.Database.getWhere(state);\n    state.Matrix.initKeyCnt(state);\n    state.Matrix.mapKeyCnt(state, where, 0, state.Path.keys.other); // possible table keys (no undefined)\n\n    state.Path.exportAllKeys(state); //console.log(\"this.checkTableKeys Entering.\",JSON.stringify(setup));\n\n    var keys = state.Path.other.table;\n    var bdone = !keys.length < 2;\n    var iinew = -1;\n    var jjnew = -1;\n    var order = state.Utils.cp(state.Path.keys.other);\n\n    do {\n      //console.log(\"this.checkTableKeys Looping.\");\n      if (keys.length < 2) {\n        bdone = true;\n      } else {\n        // check for number of column values\n        var docs = state.Database.getCntDocs(state, where, state.Path.other.table); // current table keys\n\n        var slen = state.Path.other.table.length;\n        var hits = {};\n        var maxh = {};\n        var kval = {}; // loop over docs\n\n        var dlen = docs.length;\n\n        for (var ii = 0; ii < dlen; ii++) {\n          var doc = docs[ii]; //console.log(\"Trash doc=\",ii,JSON.stringify(doc));\n\n          for (var jj = 0; jj < slen; jj++) {\n            var key = state.Path.other.table[jj];\n\n            if (doc[key] !== undefined) {\n              var val = doc[key];\n              kval[key] = val;\n\n              if (hits[key] === undefined) {\n                hits[key] = {};\n              }\n\n              hits[key][val] = 1 + (hits[key][val] || 0); //console.log(\"Found:\",key,val,hits[key][val]);\n\n              if (hits[key][val] > (maxh[key] || 0)) {\n                maxh[key] = hits[key][val];\n              }\n            }\n          }\n        } //console.log(\"this.checkTableKeys Checking.\",dlen);\n\n\n        var rm = {};\n        bdone = true; //console.log(\"Max:\",JSON.stringify(maxh));\n\n        for (var jj = 0; jj < slen; jj++) {\n          var key = state.Path.other.table[jj];\n          rm[key] = \"\"; //console.log(\"Checking:\",key,JSON.stringify(maxh));\n\n          if (maxh[key] !== undefined) {\n            if (maxh[key] === 1) {\n              rm[key] = \"other\";\n            } else if (maxh[key] === dlen) {\n              // remove key from table\n              rm[key] = \"self\";\n            }\n          }\n        }\n\n        var rmthis = {};\n\n        for (var jj = 0; jj < slen; jj++) {\n          var key = state.Path.other.table[jj];\n\n          if (rm[key] === \"other\") {\n            for (var kk = 0; kk < slen; kk++) {\n              var rkey = state.Path.other.table[kk];\n\n              if (kk !== jj) {\n                rmthis[rkey] = \"trash\";\n                iinew = kk;\n              }\n            }\n          } else if (rm[key] === \"self\") {\n            rmthis[key] = \"path\";\n            jjnew = jj;\n          }\n        }\n\n        if (iinew !== -1 && jjnew !== -1) {\n          iinew = -1;\n          jjnew = -1;\n        } //console.log(\"Rm:\",JSON.stringify(rmthis),JSON.stringify(rm));\n\n\n        for (var jj = 0; jj < slen; jj++) {\n          var key = state.Path.other.table[jj];\n\n          if (rmthis[key] !== undefined) {\n            bdone = false;\n            var sin = state.Path.keys.other.indexOf(key);\n\n            if (sin !== -1) {\n              if (jj === 0) {// flipTable\n                //console.log(\"Flipped table.\",JSON.stringify(state.Path.keys),this.getFlipString(state));\n              } else {//console.log(\"Not Flipping table.\",JSON.stringify(state.Path.keys),this.getFlipString(state));\n                }\n\n              ;\n              var src = state.Path.keys.other.splice(sin, 1); // remove from path\n\n              if (rmthis[key] === \"trash\") {\n                // trash key\n                //console.log(\"### Trashing:\",key);\n                state.Path.keys.trash = state.Path.keys.trash.concat(src); // last path position\n\n                ret = ret.concat(src);\n              } else if (rmthis[key] === \"path\") {\n                // add to path\n                // add to path...\n                var val = kval[key]; //console.log(\"### Pathing:\",key,val);\n\n                state.Path.keys.path = state.Path.keys.path.concat(src); // last path position\n\n                state.Path.select.val[key] = val;\n                state.Path.select.where[key] = key + '=\"' + val + '\"';\n                state.Path.select.cnt[key] = 1;\n                this.order[key] = order; //this.last.flip[key]=this.getFlip(state);\n              }\n\n              ;\n            }\n          }\n        }\n\n        if (!bdone) {\n          state.Path.exportAllKeys(state);\n        }\n      }\n\n      ;\n    } while (!bdone); //console.log(\"this.checkTableKeys Done.\",JSON.stringify(state.Path.other.table));\n\n\n    return ret;\n  };\n\n  this.getDescription = function (state, element, skeys) {\n    if (element.cnt === 1) {\n      var s = \"\";\n      var docs = element.docs;\n      var doc = docs[0];\n      var klen = skeys.length;\n\n      for (var jj = 0; jj < klen; jj++) {\n        var d = skeys[jj] + \"=\" + doc[skeys[jj]];\n        ;\n\n        if (s !== \"\") {\n          s = s + \" \" + d;\n        } else {\n          s = d;\n        }\n      }\n\n      return s;\n    } else {\n      return element.cnt;\n    }\n  };\n\n  this.selectItem = function (state, colkey, rowkey, colval, rowval, colwhere, rowwhere, colcnt, rowcnt) {\n    var colkey = state.Path.getColKey(state);\n    var rowkey = state.Path.getRowKey(state);\n    var order = state.Utils.cp(state.Path.keys.other);\n    console.log(\"SelectItem:\", colkey, \"=\", colval, \"  \", rowkey, \"=\", rowval);\n\n    if (state.Show.getLayoutMode(state) === state.Show.code.mMap) {\n      if (this.selectMapKey(state, colkey, colval, colwhere, colcnt)) {\n        this.order[colkey] = state.Utils.cp(order); //this.flip[colkey]=this.getFlip(state);\n\n        if (this.selectMapKey(state, rowkey, rowval, rowwhere, rowcnt)) {\n          this.order[rowkey] = state.Utils.cp(order); //this.last.flip[rowkey]=this.getFlip(state);\n        }\n\n        this.trash[colkey] = this.checkTableKeys(state);\n        console.log(\"this.checkTableKeys Done.\", colkey, JSON.stringify(this.trash[colkey]));\n      }\n\n      ;\n      console.log(\"Path:\", JSON.stringify(state.Path));\n      state.Show.showAll(state);\n    } else if (this.selectTableKey(state, colkey, colval, colwhere, colcnt)) {\n      this.order[colkey] = order; //this.flip[colkey]=this.getFlip(state);\n\n      if (this.selectTableKey(state, rowkey, rowval, rowwhere, rowcnt)) {\n        this.order[rowkey] = state.Utils.cp(order); //this.last.flip[rowkey]=this.getFlip(state);\n      }\n\n      this.trash[colkey] = this.checkTableKeys(state);\n      console.log(\"this.checkTableKeys Done.\", colkey, JSON.stringify(this.trash[colkey]));\n      state.Show.showAll(state);\n    } else if (this.selectTableKey(state, rowkey, rowval, rowwhere, rowcnt)) {\n      this.order[rowkey] = order; //this.last.flip[rowkey]=this.getFlip(state);\n\n      this.trash[rowkey] = this.checkTableKeys(state);\n      console.log(\"this.checkTableKeys Done.\", rowkey, JSON.stringify(this.trash[rowkey]));\n      state.Show.showAll(state);\n    } else {\n      console.log(\"Unable to select:\", rowkey, colkey);\n    }\n\n    console.log(\"Selectitem Done:\", rowwhere, colwhere);\n  };\n\n  this.selectMapKey = function (state, key, val, where, cnt) {\n    // keep abscissa\n    console.log(\"Table.Selecting:\", key, \"=\", val, \", where=\", where);\n    state.Path.select.val[key] = val;\n    state.Path.select.where[key] = where;\n    state.Path.select.cnt[key] = cnt;\n\n    if (state.Utils.missing(state.Path.keys.path, key)) {\n      console.log(\"Adding to path:\", key);\n      state.Path.keys.path = state.Path.keys.path.concat(key); // last path position\n    }\n\n    ;\n    return true;\n  };\n\n  this.selectTableKey = function (state, key, val, where, cnt) {\n    // keep abscissa\n    console.log(\"this.Selecting:\", key, \"=\", val, \", where=\", where);\n    var sid = state.Path.keys.other.indexOf(key);\n\n    if (sid !== -1) {\n      state.Path.select.val[key] = val;\n      state.Path.select.where[key] = where;\n      state.Path.select.cnt[key] = cnt;\n      var src = state.Path.keys.other.splice(sid, 1); // remove from path\n\n      if (state.Utils.missing(state.Path.keys.path, src)) {\n        console.log(\"Adding to path:\", JSON.stringify(src));\n        state.Path.keys.path = state.Path.keys.path.concat(src); // last path position\n      }\n\n      ;\n\n      if (cnt > 1 && state.Utils.missing(state.Path.keys.trash, src)) {\n        console.log(\"Adding \", JSON.stringify(src), \" to trash.\");\n        state.Path.keys.trash = state.Path.keys.trash.concat(src);\n      }\n\n      ; //console.log(\"Selectkey:\",JSON.stringify(setup),JSON.stringify(src));\n\n      return true;\n    } else {\n      console.log(\"Missing \", key, \" in path:\", JSON.stringify(state.Path.keys));\n      return false;\n    }\n  };\n\n  this.getPriorityIndex = function (state, arr) {\n    var len;\n    var pri = {};\n    len = arr.length;\n\n    for (var ii = 0; ii < len; ii++) {\n      pri[arr[ii]] = 0;\n    }\n\n    ;\n    len = this.priority.length;\n\n    for (var ii = 0; ii < len; ii++) {\n      var key = this.priority[ii];\n      pri[key] = len + 1 - ii;\n    }\n\n    ;\n    return pri;\n  };\n\n  this.changePriority = function (state, key, trg) {\n    // key -> trg\n    if (key === undefined || trg === undefined) {\n      return;\n    }\n\n    console.log(\"Priority:\", key, \"->\", trg, JSON.stringify(this.priority)); //if (typeof trg  === \"undefined\") {\n\n    var col = state.Path.other.table[0];\n    var row = state.Path.other.table[1];\n    var icol = 0;\n    var irow = 0;\n    var ikey = 0;\n    var itrg = 0;\n    var len = this.priority.length;\n\n    for (var ii = 0; ii < len; ii++) {\n      if (this.priority[ii] === col) {\n        icol = len + 1 - ii;\n      }\n\n      ;\n\n      if (this.priority[ii] === row) {\n        irow = len + 1 - ii;\n      }\n\n      ;\n\n      if (this.priority[ii] === key) {\n        ikey = len + 1 - ii;\n      }\n\n      if (this.priority[ii] === trg) {\n        itrg = len + 1 - ii;\n      }\n    }\n\n    if (itrg < ikey) {\n      // demote existing key\n      if (itrg > 0) {\n        // key exists on priority list\n        state.Utils.spliceArray(this.priority, len + 2 - itrg, 0, key); // add after\n\n        console.log(\"Added:\", JSON.stringify(this.priority), ikey, itrg, key);\n        var src = this.priority.splice(len + 1 - ikey, 1); // remove\n      } else {\n        // key exists, target does not\n        var src = this.priority.splice(len + 1 - ikey, 1); // remove\n\n        this.priority.concat(key);\n      }\n    } else if (itrg > ikey) {\n      // demote, key may not exist on priority list\n      if (ikey > 0) {\n        // key exists on priority list\n        var src = this.priority.splice(len + 1 - ikey, 1); // remove\n\n        state.Utils.spliceArray(this.priority, len + 1 - itrg, 0, key); // add before\n      } else {\n        // key is not on priority list\n        state.Utils.spliceArray(this.priority, len + 1 - itrg, 0, key); // add before\n      }\n    } else if (itrg === 0) {\n      // key and target not on the priority list\n      this.priority.concat(key);\n    }\n\n    console.log(\"Changed priority:\", JSON.stringify(this.priority), ikey, itrg);\n    return true;\n  }; //this.flipTable=function(state) {\n  //    var bb=this.colrow[0];\n  //    this.colrow[0]=this.colrow[1];\n  //    this.colrow[1]=bb;\n  //    //console.log(\"Setup:\",JSON.stringify(setup));\n  //};\n\n\n  this.selectKey = function (state, key, val, where, cnt) {\n    var order = state.Utils.cp(state.Path.keys.other); //console.log(\"SelecRow: rowkey=\",key,\" val=\",val);\n    //console.log(\"SelectKey:\",JSON.stringify(state.Path.keys.other));\n\n    if (state.Show.getLayoutMode(state) === state.Show.code.mMap) {\n      if (this.selectMapKey(state, key, val, where, cnt)) {\n        this.order[key] = state.Utils.cp(order);\n      }\n\n      state.Show.showAll(state);\n    } else if (this.selectTableKey(state, key, val, where, cnt)) {\n      this.order[key] = order;\n      this.trash[key] = this.checkTableKeys(state); //console.log(\"this.checkTableKeys Done.\",rowkey,JSON.stringify(this.trash[key]));\n\n      state.Show.showAll(state);\n    } else {\n      console.log(\"Unable to select:\", key);\n    } //console.log(\"Finally:\",JSON.stringify(state.Path.keys.other));\n\n  };\n\n  this.swapTableKeys = function (state, c, r) {\n    //console.log(\"Swapping:\",c,\"<->\",r);\n    var sid = state.Path.keys.other.indexOf(c);\n    var tid = state.Path.keys.other.indexOf(r);\n\n    if (sid !== -1 && tid !== -1) {\n      var src = state.Path.keys.other[sid];\n      var trg = state.Path.keys.other[tid];\n\n      if (sid > tid) {\n        state.Path.keys.other.splice(sid, 1);\n        state.Path.keys.other.splice(tid, 1);\n        state.Path.keys.other.splice(tid, 0, src);\n        state.Path.keys.other.splice(sid, 0, trg);\n      } else {\n        state.Path.keys.other.splice(tid, 1);\n        state.Path.keys.other.splice(sid, 1);\n        state.Path.keys.other.splice(sid, 0, trg);\n        state.Path.keys.other.splice(tid, 0, src);\n      }\n    } else {\n      console.log(\"Invalid keys:\", c, r, JSON.stringify(state.Path.keys));\n    }\n  };\n\n  this.getPriority = function (state) {\n    return state.Utils.cp(this.priority);\n  };\n\n  this.setPriority = function (state, priority) {\n    this.priority = priority;\n  };\n}\n\n;\nexport default Layout;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/LayoutLib.js"],"names":["Layout","rotate","undefined","priority","order","trash","init","state","par","Utils","version","checkTableKeys","ret","where","Database","getWhere","Matrix","initKeyCnt","mapKeyCnt","Path","keys","other","exportAllKeys","table","bdone","length","iinew","jjnew","cp","docs","getCntDocs","slen","hits","maxh","kval","dlen","ii","doc","jj","key","val","rm","rmthis","kk","rkey","sin","indexOf","src","splice","concat","path","select","cnt","getDescription","element","skeys","s","klen","d","selectItem","colkey","rowkey","colval","rowval","colwhere","rowwhere","colcnt","rowcnt","getColKey","getRowKey","console","log","Show","getLayoutMode","code","mMap","selectMapKey","JSON","stringify","showAll","selectTableKey","missing","sid","getPriorityIndex","arr","len","pri","changePriority","trg","col","row","icol","irow","ikey","itrg","spliceArray","selectKey","swapTableKeys","c","r","tid","getPriority","setPriority"],"mappings":"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","sourcesContent":["//console.log(\"Loading LayoutLib.js\");\n\nfunction Layout() {\n    this.rotate=undefined;  // should labels on x-axis be rotated?\n    this.priority=undefined;// which key should be on the abscissa\n    this.order={};          // key order\n    this.trash={};           // key trash\n    this.init=function(state){\n\tvar par=\"Table\"+state.Utils.version\n\tstate.Utils.init(par,this);\n    };\n    // adjust keys so that rows/cols have more than on entry...\n    this.checkTableKeys=function(state) {\n\tvar ret=[];\n\tvar where = state.Database.getWhere(state);\n\tstate.Matrix.initKeyCnt(state);\n\tstate.Matrix.mapKeyCnt(state,where,0,state.Path.keys.other); // possible table keys (no undefined)\n\tstate.Path.exportAllKeys(state);\n\t//console.log(\"this.checkTableKeys Entering.\",JSON.stringify(setup));\n\tvar keys=state.Path.other.table;\n\tvar bdone= ! keys.length < 2;\n\tvar iinew=-1;\n\tvar jjnew=-1;\n\tvar order=state.Utils.cp(state.Path.keys.other);\n\tdo {\n\t    //console.log(\"this.checkTableKeys Looping.\");\n\t    if (keys.length < 2) {\n\t\tbdone=true;\n\t    } else {\n\t\t// check for number of column values\n\t\tvar docs=state.Database.getCntDocs(state,where,state.Path.other.table); // current table keys\n\t\tvar slen=state.Path.other.table.length;\n\t\tvar hits={};\n\t\tvar maxh={};\n\t\tvar kval={};\n\t\t// loop over docs\n\t\tvar dlen = docs.length;\n\t\tfor (var ii = 0; ii < dlen; ii++) {\n    \t\t    var doc=docs[ii];\n\t\t    //console.log(\"Trash doc=\",ii,JSON.stringify(doc));\n\t\t    for (var jj=0;jj<slen;jj++) {\n\t\t\tvar key=state.Path.other.table[jj];\n\t\t\tif (doc[key] !== undefined) {\n\t\t\t    var val=doc[key];\n\t\t\t    kval[key]=val;\n\t\t\t    if (hits[key]  === undefined) {hits[key]={};}\n\t\t\t    hits[key][val] = 1+ (hits[key][val]||0);\n\t\t\t    //console.log(\"Found:\",key,val,hits[key][val]);\n\t\t\t    if (hits[key][val] > (maxh[key]||0)) {\n\t\t\t\tmaxh[key]=hits[key][val];\n\t\t\t    }\n\t\t\t}\n\t\t    }\n\t\t}\n\t\t//console.log(\"this.checkTableKeys Checking.\",dlen);\n\t\tvar rm={};\n\t\tbdone=true;\n\t\t//console.log(\"Max:\",JSON.stringify(maxh));\n\t\tfor (var jj=0;jj<slen;jj++) {\n\t\t    var key=state.Path.other.table[jj];\n\t\t    rm[key]=\"\";\n\t\t    //console.log(\"Checking:\",key,JSON.stringify(maxh));\n\t\t    if (maxh[key] !== undefined) {\n\t\t\tif (maxh[key]  === 1) {\n\t\t\t    rm[key]=\"other\";\n\t\t\t} else if (maxh[key]  === dlen) { // remove key from table\n\t\t\t    rm[key]=\"self\";\n\t\t\t}\n\t\t    }\n\t\t}\n\t\tvar rmthis={};\n\t\tfor (var jj=0;jj<slen;jj++) {\n\t\t    var key=state.Path.other.table[jj];\n\t\t    if (rm[key]  === \"other\") {\n\t\t\tfor (var kk=0;kk<slen;kk++) {\n\t\t\t    var rkey=state.Path.other.table[kk];\n\t\t\t    if (kk !== jj) {\n\t\t\t\trmthis[rkey]=\"trash\";\n\t\t\t\tiinew=kk;\n\t\t\t    }\n\t\t\t}\n\t\t    } else if (rm[key]  === \"self\") {\n\t\t\trmthis[key]=\"path\";\n\t\t\tjjnew=jj;\n\t\t    }\n\t\t}\n\t\tif (iinew !== -1 && jjnew !== -1) {\n\t\t    iinew=-1;\n\t\t    jjnew=-1;\n\t\t}\n\t\t//console.log(\"Rm:\",JSON.stringify(rmthis),JSON.stringify(rm));\n\t\tfor (var jj=0;jj<slen;jj++) {\n\t\t    var key=state.Path.other.table[jj];\n\t\t    if (rmthis[key] !== undefined) {\n\t\t\tbdone=false;\n\t\t\tvar sin=state.Path.keys.other.indexOf(key);\n\t\t\tif (sin !== -1) {\n\t\t\t    if (jj  === 0) {\n\t\t\t\t// flipTable\n\t\t\t\t//console.log(\"Flipped table.\",JSON.stringify(state.Path.keys),this.getFlipString(state));\n\t\t\t    } else {\n\t\t\t\t//console.log(\"Not Flipping table.\",JSON.stringify(state.Path.keys),this.getFlipString(state));\n\t\t\t    };\n\t\t\t    var src=state.Path.keys.other.splice(sin, 1); // remove from path\n\t\t\t    if (rmthis[key]  === \"trash\") {// trash key\n\t\t\t\t//console.log(\"### Trashing:\",key);\n\t\t\t\tstate.Path.keys.trash=state.Path.keys.trash.concat(src); // last path position\n\t\t\t\tret=ret.concat(src);\n\t\t\t    } else if (rmthis[key]  === \"path\") {// add to path\n\t\t\t\t// add to path...\n\t\t\t\tvar val=kval[key];\n\t\t\t\t//console.log(\"### Pathing:\",key,val);\n\t\t\t\tstate.Path.keys.path=state.Path.keys.path.concat(src); // last path position\n\t\t\t\tstate.Path.select.val[key]=val;\n\t\t\t\tstate.Path.select.where[key]=key+'=\"'+val+'\"'\n\t\t\t\tstate.Path.select.cnt[key]=1;\n\t\t\t\tthis.order[key]=order;\n\t\t\t\t//this.last.flip[key]=this.getFlip(state);\n\t\t\t    };\n\t\t\t}\n\t\t    }\n\t\t}\n\t\tif (! bdone) {state.Path.exportAllKeys(state);}\n\t    };\n\t} while (! bdone);\n\t//console.log(\"this.checkTableKeys Done.\",JSON.stringify(state.Path.other.table));\n\treturn ret;\n    };\n    this.getDescription=function(state,element,skeys) {\n\tif (element.cnt  === 1) {\n\t    var s=\"\";\n\t    var docs=element.docs;\n\t    var doc=docs[0];\n\t    var klen=skeys.length;\n\t    for (var jj = 0; jj < klen; jj++) {\n\t\tvar d=skeys[jj]+\"=\"+doc[skeys[jj]];;\n\t\tif (s !== \"\") {\n\t\t    s=s+\" \"+d\n\t\t} else {\n\t\t    s=d;\n\t\t}\n\t    }\n\t    return s;\n\t} else {\n\t    return element.cnt;\n\t}\n    };\n    this.selectItem=function(state,colkey,rowkey,colval,rowval,colwhere,rowwhere,colcnt,rowcnt) {\n\tvar colkey=state.Path.getColKey(state);\n\tvar rowkey=state.Path.getRowKey(state);\n\tvar order=state.Utils.cp(state.Path.keys.other);\n\tconsole.log(\"SelectItem:\",colkey,\"=\",colval,\"  \",rowkey,\"=\",rowval);\n\tif (state.Show.getLayoutMode(state)  === state.Show.code.mMap) {\n\t    if (this.selectMapKey(state,colkey,colval,colwhere,colcnt)) {\n\t\tthis.order[colkey]=state.Utils.cp(order);\n\t\t//this.flip[colkey]=this.getFlip(state);\n\t\tif (this.selectMapKey(state,rowkey,rowval,rowwhere,rowcnt)) {\n\t\t    this.order[rowkey]=state.Utils.cp(order);\n\t\t    //this.last.flip[rowkey]=this.getFlip(state);\n\t\t}\n\t\tthis.trash[colkey]=this.checkTableKeys(state);\n\t\tconsole.log(\"this.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n\t    };\n\t    console.log(\"Path:\",JSON.stringify(state.Path))\n\t    state.Show.showAll(state);\t\n\t} else if (this.selectTableKey(state,colkey,colval,colwhere,colcnt)) {\n\t    this.order[colkey]=order;\n\t    //this.flip[colkey]=this.getFlip(state);\n\t    if (this.selectTableKey(state,rowkey,rowval,rowwhere,rowcnt)) {\n\t\tthis.order[rowkey]=state.Utils.cp(order);\n\t\t//this.last.flip[rowkey]=this.getFlip(state);\n\t    }\n\t    this.trash[colkey]=this.checkTableKeys(state);\n\t    console.log(\"this.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n\t    state.Show.showAll(state);\n\t} else if (this.selectTableKey(state,rowkey,rowval,rowwhere,rowcnt)) {\n\t    this.order[rowkey]=order;\n\t    //this.last.flip[rowkey]=this.getFlip(state);\n\t    this.trash[rowkey]=this.checkTableKeys(state);\n\t    console.log(\"this.checkTableKeys Done.\",rowkey,JSON.stringify(this.trash[rowkey]));\n\t    state.Show.showAll(state);\n\t} else {\n\t    console.log(\"Unable to select:\",rowkey,colkey);\n\t}\n\tconsole.log(\"Selectitem Done:\",rowwhere,colwhere);\n    };\n    this.selectMapKey=function(state,key,val,where,cnt) { // keep abscissa\n\tconsole.log(\"Table.Selecting:\",key,\"=\",val,\", where=\",where);\n\tstate.Path.select.val[key]=val;\n\tstate.Path.select.where[key]=where;\n\tstate.Path.select.cnt[key]=cnt;\n\tif (state.Utils.missing(state.Path.keys.path,key)) {\n\t    console.log(\"Adding to path:\",key);\n\t    state.Path.keys.path=state.Path.keys.path.concat(key); // last path position\n\t};\n\treturn true;\n    };\n    this.selectTableKey=function(state,key,val,where,cnt) { // keep abscissa\n\tconsole.log(\"this.Selecting:\",key,\"=\",val,\", where=\",where);\n\tvar sid = state.Path.keys.other.indexOf(key);\n\tif (sid !== -1) {\n\t    state.Path.select.val[key]=val;\n\t    state.Path.select.where[key]=where;\n\t    state.Path.select.cnt[key]=cnt;\n\t    var src=state.Path.keys.other.splice(sid, 1); // remove from path\n\t    if ( state.Utils.missing(state.Path.keys.path,src)) {\n\t\tconsole.log(\"Adding to path:\",JSON.stringify(src));\n\t\tstate.Path.keys.path=state.Path.keys.path.concat(src); // last path position\n\t    };\n\t    if (cnt>1 && state.Utils.missing(state.Path.keys.trash,src)) {\n\t\tconsole.log(\"Adding \",JSON.stringify(src),\" to trash.\");\n\t\tstate.Path.keys.trash=state.Path.keys.trash.concat(src)\n\t    };\n\t    //console.log(\"Selectkey:\",JSON.stringify(setup),JSON.stringify(src));\n\t    return true;\n\t} else {\n\t    console.log(\"Missing \",key,\" in path:\",JSON.stringify(state.Path.keys));\n\t    return false;\n\t}\n    };\n    this.getPriorityIndex=function(state,arr) {\n\tvar len;\n\tvar pri={};\n\tlen=arr.length;\n\tfor (var ii=0;ii<len;ii++) {\n\t    pri[arr[ii]]=0;\n\t};\n\tlen=this.priority.length\n\tfor (var ii=0;ii<len;ii++) {\n\t    var key=this.priority[ii]\n\t    pri[key]=len+1-ii\n\t};\n\treturn pri;\n    };\n    this.changePriority=function(state,key,trg) {  // key -> trg\n\tif (key  === undefined || trg  === undefined) { return;}\n\tconsole.log(\"Priority:\",key,\"->\",trg,JSON.stringify(this.priority));\n\t//if (typeof trg  === \"undefined\") {\n\tvar col=state.Path.other.table[0];\n\tvar row=state.Path.other.table[1];\n\tvar icol=0\n\tvar irow=0\n\tvar ikey=0\n\tvar itrg=0\n\tvar len=this.priority.length;\n\tfor (var ii=0;ii<len;ii++) {\n\t    if (this.priority[ii]  === col) {\n\t\ticol=len+1-ii;\n\t    };\n\t    if  (this.priority[ii]  === row) {\n\t\tirow=len+1-ii;\n\t    };\n\t    if  (this.priority[ii]  === key) {\n\t\tikey=len+1-ii;\n\t    }\n\t    if  (this.priority[ii]  === trg) {\n\t\titrg=len+1-ii;\n\t    }\n\t}\n\tif (itrg < ikey) {        // demote existing key\n\t    if (itrg > 0) {       // key exists on priority list\n\t\tstate.Utils.spliceArray(this.priority,len+2-itrg,0,key);  // add after\n\n\t\tconsole.log(\"Added:\",JSON.stringify(this.priority),ikey,itrg,key);\n\t\t\n\t\tvar src=this.priority.splice(len+1-ikey, 1);        // remove\n\t    } else {              // key exists, target does not\n\t\tvar src=this.priority.splice(len+1-ikey, 1);        // remove\n\t\tthis.priority.concat(key)\t    \n\t    }\n\t} else if (itrg > ikey) { // demote, key may not exist on priority list\n\t    if (ikey>0) {         // key exists on priority list\n\t\tvar src=this.priority.splice(len+1-ikey, 1);        // remove\n\t\tstate.Utils.spliceArray(this.priority,len+1-itrg,0,key);  // add before\n\t    } else {              // key is not on priority list\n\t\tstate.Utils.spliceArray(this.priority,len+1-itrg,0,key);  // add before\n\t    }\n\t} else if (itrg === 0) { // key and target not on the priority list\n\t    this.priority.concat(key)\n\t}\n\tconsole.log(\"Changed priority:\",JSON.stringify(this.priority),ikey,itrg);\n\treturn true;\n    }\n    //this.flipTable=function(state) {\n    //    var bb=this.colrow[0];\n    //    this.colrow[0]=this.colrow[1];\n    //    this.colrow[1]=bb;\n    //    //console.log(\"Setup:\",JSON.stringify(setup));\n    //};\n    this.selectKey=function(state,key,val,where,cnt) {\n\tvar order=state.Utils.cp(state.Path.keys.other);\n\t//console.log(\"SelecRow: rowkey=\",key,\" val=\",val);\n\t//console.log(\"SelectKey:\",JSON.stringify(state.Path.keys.other));\n\tif (state.Show.getLayoutMode(state)  === state.Show.code.mMap) {\n\t    if (this.selectMapKey(state,key,val,where,cnt)) {\n\t\tthis.order[key]=state.Utils.cp(order);\n\t    }\n\t    state.Show.showAll(state);\n\t} else if (this.selectTableKey(state,key,val,where,cnt)) {\n\t    this.order[key]=order;\n\t    this.trash[key]=this.checkTableKeys(state);\n\t    //console.log(\"this.checkTableKeys Done.\",rowkey,JSON.stringify(this.trash[key]));\n\t    state.Show.showAll(state);\n\t} else {\n\t    console.log(\"Unable to select:\",key);\n\t}\n\t//console.log(\"Finally:\",JSON.stringify(state.Path.keys.other));\n    };\n    this.swapTableKeys=function(state,c,r) {\n\t//console.log(\"Swapping:\",c,\"<->\",r);\n\tvar sid = state.Path.keys.other.indexOf(c);\n\tvar tid = state.Path.keys.other.indexOf(r);\n\tif (sid !== -1 && tid !== -1) {\n\t    var src=state.Path.keys.other[sid];\n\t    var trg=state.Path.keys.other[tid];\n\t    if (sid > tid) {\n\t\tstate.Path.keys.other.splice(sid, 1);\n\t\tstate.Path.keys.other.splice(tid, 1);\n\t\tstate.Path.keys.other.splice(tid, 0, src);\n\t\tstate.Path.keys.other.splice(sid, 0, trg);\n\t    } else {\n\t\tstate.Path.keys.other.splice(tid, 1);\n\t\tstate.Path.keys.other.splice(sid, 1);\n\t\tstate.Path.keys.other.splice(sid, 0, trg);\n\t\tstate.Path.keys.other.splice(tid, 0, src);\n\t    }\n\t} else {\n\t    console.log(\"Invalid keys:\",c,r,JSON.stringify(state.Path.keys));\n\t}\n    };\n    this.getPriority=function(state) {\n\treturn state.Utils.cp(this.priority);\n    };\n    this.setPriority=function(state,priority) {\n\tthis.priority=priority;\n    }\n};\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}