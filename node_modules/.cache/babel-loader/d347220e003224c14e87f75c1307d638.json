{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/LevelBar.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'; //import Grid from \"@material-ui/core/Grid/Grid\";\n\nimport LevelColor from './LevelColor';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport HomeIcon from '@material-ui/icons/Home';\n\nvar styles = function styles(theme) {\n  return {\n    divTable: {\n      display: 'table',\n      width: '100%' //\tborder:  '1px solid red',\n\n    },\n    divTableBody: {\n      display: 'table-row-group'\n    },\n    divTableRow: {\n      border: '0px solid #999999',\n      display: 'table-row',\n      padding: '0px'\n    },\n    divTableCell: {\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px' //\tborder:  '1px solid blue',\n\n    }\n  };\n};\n\nfunction renderItem(classes, state, bg, fg, level) {\n  var plans = state.Layout.makePlans(); //console.log(\"Showing palette:\",bg,fg,JSON.stringify(plans.hd2));\n\n  return React.createElement(LevelColor, {\n    key: level,\n    state: state,\n    bg: bg,\n    fg: fg,\n    level: level,\n    classes: {\n      divTableCell: classes.divTableCell\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }); //  style={{color:fg,backgroundColor:bg,textAlign:'center'}} onClick={onclick} \n}\n\n;\n\nvar LevelBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LevelBar, _Component);\n\n  function LevelBar(props) {\n    var _this;\n\n    _classCallCheck(this, LevelBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LevelBar).call(this, props));\n    var state = props.state;\n    state.React.LevelBar = _assertThisInitialized(_this);\n    return _this;\n  }\n\n  _createClass(LevelBar, [{\n    key: \"show\",\n    value: function show(state) {\n      //console.log(\"Called LevelBar.show...\");\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state;\n      var bgcolors = [];\n      var fgcolors = [];\n\n      if (state.Colors.colors !== undefined) {\n        bgcolors = state.Colors.colors.background;\n        fgcolors = state.Colors.colors.foreground;\n        console.log(\"Found colors...\");\n      } else {\n        console.log(\"No colors...\");\n      }\n\n      var mapFunction = function mapFunction(val, index) {\n        return renderItem(classes, state, bgcolors[index], fgcolors[index], index);\n      }; //console.log(\"Rendering LevelBar...\");\n\n\n      return React.createElement(\"div\", {\n        className: classes.divTable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.divTableBody,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.divTableRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, bgcolors.map(mapFunction))));\n    }\n  }]);\n\n  return LevelBar;\n}(Component);\n\nLevelBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(LevelBar);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/LevelBar.js"],"names":["React","Component","PropTypes","withStyles","LevelColor","UndoIcon","RedoIcon","HomeIcon","styles","theme","divTable","display","width","divTableBody","divTableRow","border","padding","divTableCell","renderItem","classes","state","bg","fg","level","plans","Layout","makePlans","LevelBar","props","forceUpdate","bgcolors","fgcolors","Colors","colors","undefined","background","foreground","console","log","mapFunction","val","index","map","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n//import Grid from \"@material-ui/core/Grid/Grid\";\n\nimport LevelColor from './LevelColor';\n\nimport UndoIcon from '@material-ui/icons/Undo';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport HomeIcon from '@material-ui/icons/Home';\n\nconst styles = theme => ({\n    divTable :{\n\tdisplay: 'table',\n\twidth: '100%',\n//\tborder:  '1px solid red',\n    },\n    divTableBody : {\n\tdisplay: 'table-row-group',\n    },\n    divTableRow:  {\n\tborder: '0px solid #999999',\n\tdisplay: 'table-row',\n\tpadding: '0px',\n    },\n    divTableCell:{\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px',\n//\tborder:  '1px solid blue',\n    },\n});\nfunction renderItem(classes,state,bg,fg,level) {\n    var plans=state.Layout.makePlans();\n    //console.log(\"Showing palette:\",bg,fg,JSON.stringify(plans.hd2));\n    return (<LevelColor key={level} state={state} bg={bg} fg={fg} level={level} classes={{divTableCell:classes.divTableCell}}/>);\n//  style={{color:fg,backgroundColor:bg,textAlign:'center'}} onClick={onclick} \n};\nclass LevelBar extends Component {\n    constructor(props) {\n        super(props);\n        const {state} = props;\n        state.React.LevelBar=this;\n    };\n    show(state) {\n\t//console.log(\"Called LevelBar.show...\");\n\tthis.forceUpdate();\n    };\n    render() {\n        const { classes, state } = this.props;\n\tvar bgcolors=[];\n\tvar fgcolors=[];\n\tif (state.Colors.colors !== undefined) {\n\t    bgcolors=state.Colors.colors.background;\n\t    fgcolors=state.Colors.colors.foreground;\n\t    console.log(\"Found colors...\");\n\t} else {\n\t    console.log(\"No colors...\");\n\t}\n\tvar mapFunction= (val,index)=>renderItem(classes,state,bgcolors[index],fgcolors[index],index);\n\t//console.log(\"Rendering LevelBar...\");\n\treturn (   <div className={classes.divTable}>\n\t\t      <div className={classes.divTableBody}>\n\t\t         <div className={classes.divTableRow}>\n\t    \t            {bgcolors.map(mapFunction)}\n\t                 </div>\n\t              </div>\n\t\t   </div>);\n    }\n}\n\nLevelBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(LevelBar);\n\n\n\n"]},"metadata":{},"sourceType":"module"}