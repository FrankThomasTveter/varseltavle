{"ast":null,"code":"var _jsxFileName = \"/home/franktt/react/varseltavle/src/react/SummaryCell.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport { StickyTable, Row, Cell } from 'react-sticky-table';\n\nvar styles = function styles(theme) {\n  return {\n    pointer: {\n      cursor: \"pointer\"\n    },\n    nopointer: {}\n  };\n};\n\nfunction SummaryCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      key = props.key,\n      index = props.index,\n      onclick = props.onclick,\n      colkey = props.colkey,\n      rowkey = props.rowkey,\n      colval = props.colval,\n      rowval = props.rowval,\n      colwhere = props.colwhere,\n      rowwhere = props.rowwhere,\n      elements = props.elements,\n      step = props.step,\n      range = props.range;\n  var cnt = 0;\n  var lev = -1;\n  var elen = elements.length;\n\n  for (var ee = 0; ee < elen; ee++) {\n    cnt = cnt + elements[ee].cnt;\n    lev = Math.max(lev, elements[ee].lev);\n  }\n\n  ;\n  var label = \"\";\n\n  if (cnt > 1) {\n    label = cnt;\n  }\n\n  ;\n  var bgcolor = state.Colors.getLevelColor(lev);\n  var classname = \"nopointer\";\n\n  if (onclick !== undefined) {\n    classname = \"pointer\";\n  }\n\n  var title = colwhere;\n  return React.createElement(Cell, {\n    className: classname,\n    bgcolor: bgcolor,\n    onclick: onclick,\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, label);\n}\n\nSummaryCell.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SummaryCell);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/SummaryCell.js"],"names":["React","PropTypes","withStyles","Typography","StickyTable","Row","Cell","styles","theme","pointer","cursor","nopointer","SummaryCell","props","classes","state","key","index","onclick","colkey","rowkey","colval","rowval","colwhere","rowwhere","elements","step","range","cnt","lev","elen","length","ee","Math","max","label","bgcolor","Colors","getLevelColor","classname","undefined","title","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,SAASC,WAAT,EAAsBC,GAAtB,EAA2BC,IAA3B,QAAuC,oBAAvC;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,OAAO,EAAE;AACZC,MAAAA,MAAM,EAAC;AADK,KADY;AAIrBC,IAAAA,SAAS,EAAE;AAJU,GAAL;AAAA,CAApB;;AAOA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA,MAChBC,OADgB,GAGCD,KAHD,CAChBC,OADgB;AAAA,MACRC,KADQ,GAGCF,KAHD,CACRE,KADQ;AAAA,MACFC,GADE,GAGCH,KAHD,CACFG,GADE;AAAA,MACEC,KADF,GAGCJ,KAHD,CACEI,KADF;AAAA,MACQC,OADR,GAGCL,KAHD,CACQK,OADR;AAAA,MAEvBC,MAFuB,GAGCN,KAHD,CAEvBM,MAFuB;AAAA,MAEhBC,MAFgB,GAGCP,KAHD,CAEhBO,MAFgB;AAAA,MAETC,MAFS,GAGCR,KAHD,CAETQ,MAFS;AAAA,MAEFC,MAFE,GAGCT,KAHD,CAEFS,MAFE;AAAA,MAEKC,QAFL,GAGCV,KAHD,CAEKU,QAFL;AAAA,MAEcC,QAFd,GAGCX,KAHD,CAEcW,QAFd;AAAA,MAGvBC,QAHuB,GAGCZ,KAHD,CAGvBY,QAHuB;AAAA,MAGdC,IAHc,GAGCb,KAHD,CAGda,IAHc;AAAA,MAGTC,KAHS,GAGCd,KAHD,CAGTc,KAHS;AAIxB,MAAIC,GAAG,GAAC,CAAR;AACA,MAAIC,GAAG,GAAC,CAAC,CAAT;AACA,MAAIC,IAAI,GAACL,QAAQ,CAACM,MAAlB;;AACA,OAAK,IAAIC,EAAE,GAAC,CAAZ,EAAcA,EAAE,GAACF,IAAjB,EAAsBE,EAAE,EAAxB,EAA4B;AACxBJ,IAAAA,GAAG,GAACA,GAAG,GAACH,QAAQ,CAACO,EAAD,CAAR,CAAaJ,GAArB;AACAC,IAAAA,GAAG,GAACI,IAAI,CAACC,GAAL,CAASL,GAAT,EAAaJ,QAAQ,CAACO,EAAD,CAAR,CAAaH,GAA1B,CAAJ;AACH;;AAAA;AACD,MAAIM,KAAK,GAAC,EAAV;;AACA,MAAIP,GAAG,GAAG,CAAV,EAAa;AAACO,IAAAA,KAAK,GAACP,GAAN;AAAW;;AAAA;AACzB,MAAIQ,OAAO,GAACrB,KAAK,CAACsB,MAAN,CAAaC,aAAb,CAA2BT,GAA3B,CAAZ;AACA,MAAIU,SAAS,GAAC,WAAd;;AACA,MAAIrB,OAAO,KAAKsB,SAAhB,EAA2B;AAC9BD,IAAAA,SAAS,GAAC,SAAV;AACI;;AACD,MAAIE,KAAK,GAAClB,QAAV;AACA,SACK,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEgB,SAAjB;AAA4B,IAAA,OAAO,EAAEH,OAArC;AAA8C,IAAA,OAAO,EAAElB,OAAvD;AAAgE,IAAA,KAAK,EAAEuB,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+EN,KAA/E,CADL;AAGH;;AAEDvB,WAAW,CAAC8B,SAAZ,GAAwB;AACpB5B,EAAAA,OAAO,EAAEb,SAAS,CAAC0C,MAAV,CAAiBC;AADN,CAAxB;AAIA,eAAe1C,UAAU,CAACK,MAAD,CAAV,CAAmBK,WAAnB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport { StickyTable, Row, Cell } from 'react-sticky-table';\n\n\nconst styles = theme => ({\n    pointer: {\n\tcursor:\"pointer\"\n    },\n    nopointer: {\n    },\n});\nfunction SummaryCell(props) {\n    const { classes,state,key,index,onclick,\n\t    colkey,rowkey,colval,rowval,colwhere,rowwhere,\n\t    elements,step,range } = props;\n    var cnt=0;\n    var lev=-1;\n    var elen=elements.length;\n    for (var ee=0;ee<elen;ee++) {\n        cnt=cnt+elements[ee].cnt;\n        lev=Math.max(lev,elements[ee].lev);\n    }; \n    var label=\"\";\n    if (cnt > 1) {label=cnt;};\n    var bgcolor=state.Colors.getLevelColor(lev);\n    var classname=\"nopointer\";\n    if (onclick !== undefined) {\n\tclassname=\"pointer\";\n    }\n    var title=colwhere;\n    return (\n         <Cell className={classname} bgcolor={bgcolor} onclick={onclick} title={title}>{label}</Cell>\n    );\n}\n\nSummaryCell.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SummaryCell);\n"]},"metadata":{},"sourceType":"module"}