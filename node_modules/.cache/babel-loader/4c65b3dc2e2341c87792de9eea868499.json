{"ast":null,"code":"import _slicedToArray from \"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/context.js\";\nimport React, { createContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nexport var Context = createContext({});\nexport var Provider = function Provider(props) {\n  // Initial values are obtained from the props\n  // Use State to keep the values\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      markers = _useState2[0],\n      setMarkers = _useState2[1]; // Make the context object:\n\n\n  var usersContext = {\n    markers: markers,\n    setMarkers: setMarkers\n  }; // pass the value in provider and return\n\n  return React.createElement(Context.Provider, {\n    value: usersContext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  });\n};\nvar Consumer = Context.Consumer;\nexport { Consumer };\nProvider.propTypes = {\n  markers: PropTypes.array\n};\nProvider.defaultProps = {\n  markers: []\n};\nexport { Context as UsersContext, Provider as UsersContextProvider, Consumer as UsersContextConsumer };","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/context.js"],"names":["React","createContext","useState","PropTypes","Context","Provider","props","markers","setMarkers","usersContext","Consumer","propTypes","array","defaultProps","UsersContext","UsersContextProvider","UsersContextConsumer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,IAAMC,OAAO,GAAGH,aAAa,CAAC,EAAD,CAA7B;AAEP,OAAO,IAAMI,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AAC/B;AAEA;AAH+B,kBAIDJ,QAAQ,CAAC,EAAD,CAJP;AAAA;AAAA,MAIxBK,OAJwB;AAAA,MAIfC,UAJe,kBAM/B;;;AACA,MAAMC,YAAY,GAAG;AACjBF,IAAAA,OAAO,EAAPA,OADiB;AAEjBC,IAAAA,UAAU,EAAVA;AAFiB,GAArB,CAP+B,CAY/B;;AACA,SAAO,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEC,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAdM;IAgBQC,Q,GAAaN,O,CAAbM,Q;;AAEfL,QAAQ,CAACM,SAAT,GAAqB;AACnBJ,EAAAA,OAAO,EAAEJ,SAAS,CAACS;AADA,CAArB;AAIAP,QAAQ,CAACQ,YAAT,GAAwB;AACtBN,EAAAA,OAAO,EAAE;AADa,CAAxB;AAIA,SACIH,OAAO,IAAIU,YADf,EAEIT,QAAQ,IAAIU,oBAFhB,EAGIL,QAAQ,IAAIM,oBAHhB","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Context = createContext({});\n\nexport const Provider = props => {\n  // Initial values are obtained from the props\n\n  // Use State to keep the values\n  const [markers, setMarkers] = useState([]);\n\n  // Make the context object:\n  const usersContext = {\n      markers,\n      setMarkers\n  };\n\n  // pass the value in provider and return\n  return <Context.Provider value={usersContext}></Context.Provider>;\n};\n\nexport const { Consumer } = Context;\n\nProvider.propTypes = {\n  markers: PropTypes.array\n};\n\nProvider.defaultProps = {\n  markers: []\n};\n\nexport {\n    Context as UsersContext,\n    Provider as UsersContextProvider,\n    Consumer as UsersContextConsumer\n}\n"]},"metadata":{},"sourceType":"module"}