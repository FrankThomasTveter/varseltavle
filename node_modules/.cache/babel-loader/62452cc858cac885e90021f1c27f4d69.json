{"ast":null,"code":"//console.log(\"Loading ThresholdLib.js\");\nfunction Threshold() {\n  this.thrs = undefined; // threshold parameter levels, set by Default\n\n  this.imax = 0; // threshold item types\n\n  this.ithr = 1;\n  this.ikey = 2;\n  this.ilev = 3;\n  this.ival = 4;\n\n  this.init = function (state) {\n    var par = \"Threshold\";\n    state.Utils.init(par, this);\n  };\n\n  this.setThresholds = function (doc, thrs) {\n    if (doc.thr !== undefined) {\n      return [];\n    } else {\n      if (thrs === undefined) {\n        thrs = this.thrs;\n      }\n\n      ;\n\n      for (var trgkey in thrs) {\n        // loop over thresholds\n        if (doc[trgkey] !== undefined) {\n          var trgval = doc[trgkey]; // trgval-value\n\n          if (thrs[trgkey][trgval] !== undefined) {\n            var mlen, jj, res;\n\n            if (thrs[trgkey][trgval].par === undefined) {\n              // there is another level\n              return this.getThresholds(doc, thrs[trgkey][trgval]);\n            } else if (doc[thrs[trgkey][trgval].par] !== undefined) {\n              var thr = thrs[trgkey][trgval];\n              doc.threshold = thr;\n              doc.thr = {};\n              var val = doc[thr[\"par\"]];\n              var maxs = thr[\">\"];\n              var mins = thr[\"<\"];\n              var doclev = -1;\n\n              if (maxs !== undefined) {\n                // above thresholds\n                var docmax = Number(val);\n                mlen = maxs.length; // get new level\n\n                for (jj = 0; jj < mlen; jj++) {\n                  if (docmax >= Number(maxs[jj])) {\n                    //console.log(\"Hit:\",jj,docmax,tmax[jj],docmax>=tmax[jj],doclev);\n                    doclev = jj;\n                  }\n                }\n\n                doc.thr.level = doclev;\n                doc.thr.val = docmax;\n                doc.thr.lat = doc[thrs[\"lat\"]];\n                doc.thr.lon = doc[thrs[\"lon\"]];\n                doc.thr.max = maxs;\n                return [\"level\", \"val\", \"lat\", \"lon\", \"max\"];\n              } else if (mins !== undefined) {\n                // below thresholds\n                var docmin = Number(val); // get new level\n\n                mlen = mins.length;\n\n                for (jj = 0; jj < mlen; jj++) {\n                  if (docmin <= Number(mins[jj])) {\n                    doclev = jj;\n                  }\n                }\n\n                doc.thr.level = doclev;\n                doc.thr.val = docmin;\n                doc.thr.lat = doc[thrs[\"lat\"]];\n                doc.thr.lon = doc[thrs[\"lon\"]];\n                doc.thr.min = mins;\n                return [\"level\", \"val\", \"lat\", \"lon\", \"min\"];\n              }\n            }\n          }\n        }\n      }\n\n      doc.level = -2; // no thresholds found...\n    }\n\n    return [];\n  }; // call after this.setThresholds\n\n\n  this.getLevel = function (state, doc) {\n    return doc.level;\n  };\n\n  this.getLat = function (state, doc) {\n    return doc.lat;\n  };\n\n  this.getLon = function (state, doc) {\n    return doc.lon;\n  };\n}\n\n;\nexport default Threshold;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/ThresholdLib.js"],"names":["Threshold","thrs","undefined","imax","ithr","ikey","ilev","ival","init","state","par","Utils","setThresholds","doc","thr","trgkey","trgval","mlen","jj","res","getThresholds","threshold","val","maxs","mins","doclev","docmax","Number","length","level","lat","lon","max","docmin","min","getLevel","getLat","getLon"],"mappings":"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","sourcesContent":["//console.log(\"Loading ThresholdLib.js\");\n\nfunction Threshold() {\n    this.thrs=undefined; // threshold parameter levels, set by Default\n    this.imax=0;        // threshold item types\n    this.ithr=1;\n    this.ikey=2;\n    this.ilev=3;\n    this.ival=4;\n    this.init=function(state){\n\tvar par=\"Threshold\";\n\tstate.Utils.init(par,this);\n    };\n    this.setThresholds=function(doc,thrs) {\n\tif (doc.thr !== undefined) {\n\t    return [];\n\t} else {\n\t    if (thrs === undefined) {\n\t\tthrs=this.thrs;\n\t    };\n\t    for (var trgkey in thrs) { // loop over thresholds\n\t\tif (doc[trgkey] !== undefined) {\n\t\t    var trgval=doc[trgkey]; // trgval-value\n\t\t    if (thrs[trgkey][trgval] !== undefined) {\n\t\t\tvar mlen,jj,res;\n\t\t\tif (thrs[trgkey][trgval].par === undefined) { // there is another level\n\t\t\t    return this.getThresholds(doc,thrs[trgkey][trgval]);\n\t\t\t} else if (doc[thrs[trgkey][trgval].par] !== undefined) {\n\t\t\t    var thr = thrs[trgkey][trgval]\n\t\t\t    doc.threshold=thr;\n\t\t\t    doc.thr={};\n\t\t\t    var val = doc[thr[\"par\"]];\n\t\t\t    var maxs = thr[\">\"];\n\t\t\t    var mins = thr[\"<\"];\n\t\t\t    var doclev=-1;\n\t\t\t    if (maxs !== undefined) { // above thresholds\n\t\t\t\tvar docmax=Number(val);\n\t\t\t\tmlen=maxs.length;\n\t\t\t\t// get new level\n\t\t\t\tfor (jj = 0; jj < mlen; jj++) {\n\t\t\t\t    if (docmax >= Number(maxs[jj])) {\n\t\t\t\t\t//console.log(\"Hit:\",jj,docmax,tmax[jj],docmax>=tmax[jj],doclev);\n\t\t\t\t\tdoclev=jj;\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\tdoc.thr.level=doclev;\n\t\t\t\tdoc.thr.val=docmax\n\t\t\t\tdoc.thr.lat=doc[thrs[\"lat\"]];\n\t\t\t\tdoc.thr.lon=doc[thrs[\"lon\"]];\n\t\t\t\tdoc.thr.max=maxs;\n\t\t\t\treturn [\"level\",\"val\",\"lat\",\"lon\",\"max\"];\n\t\t\t    } else if (mins !== undefined) { // below thresholds\n\t\t\t\tvar docmin=Number(val);\n\t\t\t\t// get new level\n\t\t\t\tmlen=mins.length;\n\t\t\t\tfor (jj = 0; jj < mlen; jj++) {\n\t\t\t\t    if (docmin <= Number(mins[jj])) {\n\t\t\t\t\tdoclev=jj;\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\tdoc.thr.level=doclev;\n\t\t\t\tdoc.thr.val=docmin\n\t\t\t\tdoc.thr.lat=doc[thrs[\"lat\"]];\n\t\t\t\tdoc.thr.lon=doc[thrs[\"lon\"]];\n\t\t\t\tdoc.thr.min=mins;\n\t\t\t\treturn [\"level\",\"val\",\"lat\",\"lon\",\"min\"];\n\t\t\t    }\n\t\t\t}\n\t\t    }\n\t\t}\n\t    }\n\t    doc.level=-2;  // no thresholds found...\n\t}\n\treturn [];\n    };\n    // call after this.setThresholds\n    this.getLevel=function(state,doc) {\n\treturn doc.level;\n    }\n    this.getLat=function(state,doc) {\n\treturn doc.lat;\n    }\n    this.getLon=function(state,doc) {\n\treturn doc.lon;\n    };\n};\nexport default Threshold;\n"]},"metadata":{},"sourceType":"module"}