{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/Table2DComponent.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { StickyTable, Row, Cell } from 'react-sticky-table';\nimport 'react-sticky-table/dist/react-sticky-table.css';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport TableCell from '@material-ui/core/TableCell';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nconsole.log(\"Inside Table.\");\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      height: '100%',\n      width: '100%'\n    },\n    paper: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'left'\n    },\n    table: {\n      textAlign: 'left',\n      padding: theme.spacing.unit * 2,\n      cursor: \"pointer\",\n      height: '100%',\n      width: '100%'\n    },\n    cell: {\n      cursor: \"pointer\"\n    }\n  };\n};\n\nfunction onCellClick(event) {\n  var rowid = event.target.getAttribute(\"rowid\");\n  event.target.innerHTML = rowid;\n}\n\nfunction getStep(state, colvalues) {\n  var cellMode = state.Show.getLayoutMode(state);\n  var step = 1;\n\n  if (cellMode === state.Show.code.mSeries) {\n    step = Math.max(1, Math.ceil(colvalues.length / 20));\n  }\n\n  return step;\n}\n\nfunction renderDataRow(props) {}\n\n;\n\nfunction renderZeroRow(props) {}\n\n;\n\nfunction DataRows(props) {\n  var classes = props.classes,\n      state = props.state,\n      step = props.step,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey,\n      rowvalues = props.rowvalues;\n\n  var mapFunction = function mapFunction(item, index) {\n    return renderDataRow(classes, state, colkey, rowkey, colvalues, step, item, index);\n  };\n\n  if (rowvalues.length == 0) {\n    return renderZeroRow(state, step, colkey, colvalues);\n  } else {\n    return rowvalues.map(mapFunction);\n  }\n}\n\nfunction ZeroHdrCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      colkey = props.colkey,\n      rowkey = props.rowkey;\n  return React.createElement(Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"TBD\");\n}\n\nfunction renderHdrCell(classes, state, colkey, colvalues, rowkey, step, item, index) {\n  var onclick = \"Navigate.onClickPath(state,'path','\" + index + \"');\";\n  var title = state.Database.getWhereDetail(colkey, colvalues[index]);\n\n  if ((item - 1) % step === 0) {\n    return React.createElement(Cell, {\n      classes: classes,\n      state: state,\n      key: \"col-\".concat(colkey),\n      index: index,\n      onclick: onclick,\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    });\n  } else {\n    return;\n  }\n}\n\nfunction HdrRow(props) {\n  var classes = props.classes,\n      state = props.state,\n      step = props.step,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey,\n      rowvalues = props.rowvalues;\n\n  var mapFunction = function mapFunction(item, index) {\n    return renderHdrCell(classes, state, colkey, colvalues, rowkey, step, item, index);\n  };\n\n  return React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(ZeroHdrCell, {\n    colkey: colkey,\n    rowkey: rowkey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), \"colvalues.map(mapFunction)\");\n}\n\nfunction Details(props) {\n  var classes = props.classes,\n      state = props.state;\n  var colkey = state.Path.getColKey(state) || \"\";\n  var rowkey = state.Path.getRowKey(state) || \"\";\n  var colvalues = state.Path.filterKeys(state, state.Matrix.values[colkey] || [\"\"]);\n  var rowvalues = state.Path.filterKeys(state, state.Matrix.values[rowkey] || [\"\"]);\n  var step = getStep(state, colvalues);\n  return React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(StickyTable, {\n    state: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(HdrRow, {\n    state: state,\n    step: step,\n    colkey: colkey,\n    colvalues: colvalues,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(DataRows, {\n    state: state,\n    step: step,\n    colkey: colkey,\n    colvalues: colvalues,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })));\n}\n\nvar Table =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Table, _Component);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = props.state;\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state;\n      return React.createElement(\"div\", {\n        className: classes.root,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Details, {\n        state: state,\n        classes: classes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Table;\n}(Component);\n\nTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Table);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/Table2DComponent.js"],"names":["React","Component","PropTypes","withStyles","StickyTable","Row","Cell","Paper","Grid","Button","Typography","TableCell","TableSortLabel","console","log","styles","theme","root","flexGrow","height","width","paper","padding","spacing","unit","textAlign","table","cursor","cell","onCellClick","event","rowid","target","getAttribute","innerHTML","getStep","state","colvalues","cellMode","Show","getLayoutMode","step","code","mSeries","Math","max","ceil","length","renderDataRow","props","renderZeroRow","DataRows","classes","colkey","rowkey","rowvalues","mapFunction","item","index","map","ZeroHdrCell","renderHdrCell","onclick","title","Database","getWhereDetail","HdrRow","Details","Path","getColKey","getRowKey","filterKeys","Matrix","values","Table","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { StickyTable, Row, Cell } from 'react-sticky-table';\nimport 'react-sticky-table/dist/react-sticky-table.css';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nconsole.log(\"Inside Table.\")\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n\theight: '100%',\n\twidth: '100%',\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'left',\n    },\n    table: {\n        textAlign: 'left',\n        padding: theme.spacing.unit * 2,\n\tcursor: \"pointer\",\n\theight: '100%',\n\twidth: '100%',\n    },\n    cell : {cursor: \"pointer\",},\n});\n\nfunction onCellClick(event) {\n    var rowid=event.target.getAttribute(\"rowid\");\n    event.target.innerHTML = rowid;\n}\nfunction getStep(state,colvalues) {\n    var cellMode=state.Show.getLayoutMode(state)\n    var step=1;\n    if (cellMode === state.Show.code.mSeries) {step=Math.max(1,Math.ceil(colvalues.length/20));}\n    return step;\n}\nfunction renderDataRow(props) {};\nfunction renderZeroRow(props) {};\nfunction DataRows(props) {\n    const { classes, state, step, colkey,colvalues, rowkey, rowvalues } = props;\n    var mapFunction= (item,index)=>renderDataRow(classes,state,colkey,rowkey,colvalues,step,item,index);\n    if (rowvalues.length==0) {\n\treturn renderZeroRow(state, step, colkey, colvalues);\n    } else {\n\treturn (rowvalues.map(mapFunction));\n    }\n}\nfunction ZeroHdrCell (props) {\n    const { classes, state, colkey, rowkey } = props;\n    return (<Cell>TBD</Cell>);\n}\nfunction renderHdrCell(classes,state,colkey,colvalues,rowkey,step,item,index) {\n    var onclick=\"Navigate.onClickPath(state,'path','\"+index+\"');\";\n    var title=state.Database.getWhereDetail(colkey,colvalues[index]);\n    if ((item-1)%step === 0) {\n\treturn (<Cell classes={classes} state={state} key={`col-${colkey}`} index={index} onclick={onclick} title={title}/>);\n    } else {\n\treturn;\n    }\n}\nfunction HdrRow(props) {\n    const { classes, state, step, colkey, colvalues, rowkey, rowvalues } = props;\n    var mapFunction= (item,index)=>renderHdrCell(classes,state,colkey,colvalues,rowkey,step,item,index);\n    return (<Row><ZeroHdrCell colkey={colkey} rowkey={rowkey}/>colvalues.map(mapFunction)</Row>);\n}\nfunction Details(props) {\n    const { classes, state } = props;\n    var colkey=state.Path.getColKey(state)||\"\";\n    var rowkey=state.Path.getRowKey(state)||\"\";\n    var colvalues=state.Path.filterKeys(state,state.Matrix.values[colkey]||[\"\"]);\n    var rowvalues=state.Path.filterKeys(state,state.Matrix.values[rowkey]||[\"\"]);\n    var step=getStep(state,colvalues);\n    return (<div  style={{width: '100%', height: '100%'}}>\n        <StickyTable state={state}>\n\t      <HdrRow   state={state} step={step} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues}/>\n\t      <DataRows state={state} step={step} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues}/>\n        </StickyTable>\n           </div>);\n }\nclass Table extends Component {\n    constructor(props) {\n\tsuper(props);\n\tthis.state=props.state;\n    }\n    componentDidMount() {} \n    render() {\n\tconst { classes, state } = this.props;\n\treturn (<div className={classes.root}  style={{width: '100%', height: '100%'}}>\n\t\t   <Grid container spacing={24}>\n\t\t      <Grid item xs={12} > \n                         { <Paper className={classes.table}>\n\t\t              <Details state={state} classes={classes}/>\n                           </Paper>}\n                      </Grid>\n                   </Grid>\n\t        </div>);\n    }\n}\n\nTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Table);\n"]},"metadata":{},"sourceType":"module"}