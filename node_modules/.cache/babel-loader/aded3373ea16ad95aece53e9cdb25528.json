{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/TableComponent.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { teal_palette } from '../mui/metMuiThemes';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport SummaryCell from './SummaryCell';\nimport SeriesCell from './SeriesCell';\nimport CanvasText from './CanvasTextComponent';\nimport Tooltip from './TooltipContainer';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      position: 'fixed',\n      height: 'calc(100% - 0px)',\n      width: '90%',\n      overflow: 'hidden',\n      border: '5px solid red'\n    },\n    divHdrLeft: {\n      display: 'inline-block',\n      justifyContent: 'left',\n      cursor: \"pointer\"\n    },\n    divHdrRight: {\n      display: 'inline-block',\n      justifyContent: 'right',\n      cursor: \"pointer\"\n    },\n    paper: {\n      overflow: 'hidden',\n      tableLayout: 'fixed',\n      padding: 0,\n      margin: 0\n    },\n    divTable: {\n      display: 'table',\n      width: '100%'\n    },\n    divTableRow: {\n      backgroundColor: teal_palette.main,\n      border: '0px solid #999999',\n      display: 'table-row',\n      padding: '0px'\n    },\n    divTableCell: {\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px'\n    },\n    divTableCellCursor: {\n      cursor: \"pointer\",\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px'\n    },\n    divTableHead: {\n      border: '0px',\n      display: 'table-cell',\n      padding: '0px'\n    },\n    divTableHeading: {\n      display: 'table-header-group'\n    },\n    divTableHeadingCenter: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    divTableFoot: {\n      backgroundColor: '#DDD',\n      display: 'table-footer-group',\n      fontWeight: 'bold'\n    },\n    divTableBody: {\n      display: 'table-row-group'\n    },\n    paperImage: {\n      textAlign: 'center',\n      padding: theme.spacing.unit * 2\n    }\n  };\n}; //const mui = createTheme({palette:teal_palette});\n// ---------------- DATA\n\n\nfunction FirstDataCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      colkey = props.colkey,\n      rowkey = props.rowkey,\n      rowval = props.rowval,\n      onclick = props.onclick,\n      plan = props.plan,\n      rowindex = props.rowindex;\n  var cursor = classes.divTableCell;\n\n  if (onclick !== undefined) {\n    cursor = classes.divTableCellCursor;\n  } // width={plan.width} height={plan.height}\n\n\n  var data;\n\n  if (colkey === \"\" && rowkey === \"\") {\n    data = null;\n  } else {\n    data = JSON.stringify({\n      colkey: colkey,\n      rowkey: rowkey,\n      rowval: rowval\n    });\n  }\n\n  ;\n\n  if (rowindex % 2 === 1) {\n    return React.createElement(\"div\", {\n      className: cursor,\n      onClick: onclick,\n      style: {\n        backgroundColor: '#DDD'\n      },\n      \"data-for\": \"cell\",\n      \"data-tip\": data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(CanvasText, {\n      state: state,\n      label: rowval,\n      plan: plan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      className: cursor,\n      onClick: onclick,\n      style: {\n        backgroundColor: '#EEE'\n      },\n      \"data-for\": \"cell\",\n      \"data-tip\": data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(CanvasText, {\n      state: state,\n      label: rowval,\n      plan: plan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }));\n  }\n} //{rowval}\n\n\nfunction DataCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      elements = props.elements,\n      mode = props.mode,\n      plan = props.plan,\n      rowindex = props.rowindex,\n      other = _objectWithoutProperties(props, [\"classes\", \"state\", \"elements\", \"mode\", \"plan\", \"rowindex\"]);\n\n  if (elements === undefined) {\n    if (rowindex % 2 === 1) {\n      return React.createElement(\"div\", {\n        className: classes.divTableCell,\n        style: {\n          backgroundColor: '#EEE'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: classes.divTableCell,\n        style: {\n          backgroundColor: '#FFF'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      });\n    }\n  } else if (mode === state.Layout.modes.cell.Sum) {\n    return React.createElement(SummaryCell, Object.assign({}, other, {\n      state: state,\n      elements: elements,\n      plan: plan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })); //return null;\n  } else {\n    return React.createElement(SeriesCell, Object.assign({}, other, {\n      state: state,\n      elements: elements,\n      plan: plan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })); //return null;\n  }\n}\n\nfunction renderDataCell(classes, state, colkey, colvalues, rowkey, rowval, rowindex, rowwhere, range, mode, plan, val, index) {\n  //console.log(\"Making data cell:\",rowval,val,index,plan,JSON.stringify(colvalues));\n  if (index % plan.step === 0) {\n    // get elements and range\n    //console.log(\"Processing:\",val,colvalues[index],plan.step);\n    var elements = state.Matrix.getMatrixElements(colvalues, rowval, state.React.matrix, index, plan.step); //console.log(\"Elements:\",rowval,index,' =>',JSON.stringify(elements));\n    // get count and colwhere\n\n    var cnt = Math.min(colvalues.length, index + plan.step) - index;\n    var colwhere = state.Database.getColWhere(colkey, colvalues, index, plan.step); // make onclick\n\n    var onclick = function onclick() {\n      return state.Navigate.selectItem(state, colkey, rowkey, colvalues[index], rowval, colwhere, rowwhere, cnt, 1);\n    };\n\n    return React.createElement(DataCell, {\n      classes: classes,\n      state: state,\n      key: \"col-\".concat(index),\n      rowindex: rowindex,\n      index: index,\n      onclick: onclick,\n      colkey: colkey,\n      rowkey: rowkey,\n      colvalues: colvalues,\n      rowval: rowval,\n      colwhere: colwhere,\n      rowwhere: rowwhere,\n      elements: elements,\n      mode: mode,\n      plan: plan,\n      range: range,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    });\n  } else {\n    return null;\n  }\n} //{{rowkey:'test1',colkey:'test2'}}\n\n\nfunction dataRow(classes, state, colkey, rowkey, colvalues, mode, plans, rowval, rowindex) {\n  var rowwhere = state.Database.getWhereDetail(rowkey, rowval);\n\n  var onclick = function onclick() {\n    state.Navigate.selectKey(state, rowkey, rowval, rowwhere, 1);\n  };\n\n  var range = [undefined, undefined];\n\n  if (state.React.matrix !== undefined) {\n    range = state.Matrix.getRange(state, state.React.matrix, colvalues, [rowval]);\n  }\n\n  ; //console.log(\"Making data cols.\",rowval,colkey,JSON.stringify(colvalues));\n  //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderDataCell(classes, state, colkey, colvalues, rowkey, rowval, rowindex, rowwhere, range, mode, plans.cell, val, index);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.divTableRow,\n    key: rowindex.toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(FirstDataCell, {\n    classes: classes,\n    state: state,\n    key: '0',\n    colkey: colkey,\n    rowkey: rowkey,\n    rowval: rowval,\n    onclick: onclick,\n    plan: plans.row,\n    rowindex: rowindex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }), colvalues.map(mapFunction));\n}\n\n;\n\nfunction renderZeroRow(classes, state, colkey, colvalues, plans) {\n  return React.createElement(\"div\", {\n    className: classes.divTableRow,\n    key: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.divTableCell,\n    width: plans.cell.width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"No data available\"));\n}\n\n;\n\nfunction DataRows(props) {\n  var classes = props.classes,\n      state = props.state,\n      plans = props.plans,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey,\n      rowvalues = props.rowvalues,\n      mode = props.mode; //console.log(\"Making data cols.\",colkey,JSON.stringify(colvalues));\n\n  var mapFunction = function mapFunction(val, index) {\n    return dataRow(classes, state, colkey, rowkey, colvalues, mode, plans, val, index);\n  };\n\n  if (rowvalues.length === 0) {\n    return renderZeroRow(classes, state, colkey, colvalues, plans);\n  } else {\n    return rowvalues.map(mapFunction);\n  }\n} // ---------------- HDR\n\n\nfunction FirstHdrCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      colkey = props.colkey,\n      rowkey = props.rowkey,\n      plans = props.plans; // plan\n  //var width=plans.hdr.width;\n  //var height=plans.hdr.height;\n  //teal_palette\n  //console.log(\"Making first header cell.\",colkey,rowkey,plan.width,plan.height);\n  //style={{backgroundColor:teal_palette.main}}\n\n  var onclickCol = function onclickCol() {\n    return state.Navigate.switchTableKey(state, colkey);\n  };\n\n  var onclickRow = function onclickRow() {\n    return state.Navigate.switchTableKey(state, rowkey);\n  };\n\n  var data;\n\n  if (colkey === \"\" && rowkey === \"\") {\n    data = null;\n  } else {\n    data = JSON.stringify({\n      colkey: colkey,\n      rowkey: rowkey\n    });\n  }\n\n  ;\n  return React.createElement(\"div\", {\n    style: {\n      width: plans.hdr.width\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.divHdrRight,\n    width: plans.hd2.width,\n    onClick: onclickRow,\n    \"data-for\": \"cell\",\n    \"data-tip\": data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(CanvasText, {\n    state: state,\n    label: rowkey,\n    plan: plans.hd2,\n    color: 'white',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.divHdrLeft,\n    width: plans.hd1.width,\n    onClick: onclickCol,\n    \"data-for\": \"cell\",\n    \"data-tip\": data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(CanvasText, {\n    state: state,\n    label: colkey,\n    plan: plans.hd1,\n    color: 'white',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  })));\n} //\n\n\nfunction renderHdrCell(classes, state, colkey, colvalues, rowkey, plan, val, index) {\n  if (index % plan.step === 0) {\n    //console.log(\"HdrCell:\",index,plan.step);\n    var cnt = Math.min(colvalues.length, index + plan.step) - index;\n    var colwhere = state.Database.getColWhere(colkey, colvalues, index, plan.step);\n\n    var onclick = function onclick() {\n      return state.Navigate.selectKey(state, colkey, colvalues[index], colwhere, cnt);\n    };\n\n    var cursor = classes.divTableCell;\n\n    if (onclick !== undefined) {\n      cursor = classes.divTableCellCursor;\n    } //console.log(\"Plan:\",JSON.stringify(plan));\n\n\n    var data;\n\n    if (colkey === \"\" && rowkey === \"\") {\n      data = null;\n    } else {\n      data = JSON.stringify({\n        colkey: colkey,\n        rowkey: rowkey,\n        colvalues: colvalues,\n        index: index,\n        step: plan.step\n      });\n    }\n\n    ;\n    return React.createElement(\"div\", {\n      className: cursor,\n      onClick: onclick,\n      style: {\n        backgroundColor: '#DDD'\n      },\n      key: \"col-\".concat(index),\n      \"data-for\": \"cell\",\n      \"data-tip\": data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(CanvasText, {\n      state: state,\n      index: index,\n      plan: plan,\n      label: val,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }));\n  } else {\n    return null;\n  }\n}\n\nfunction HdrRow(props) {\n  var classes = props.classes,\n      state = props.state,\n      plans = props.plans,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey; //, rowvalues\n  //console.log(\"Making header row.\",colkey,JSON.stringify(colvalues));\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderHdrCell(classes, state, colkey, colvalues, rowkey, plans.col, val, index);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.divTableRow,\n    key: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, React.createElement(FirstHdrCell, {\n    classes: classes,\n    state: state,\n    colkey: colkey,\n    rowkey: rowkey,\n    plans: plans,\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }), colvalues.map(mapFunction));\n} // ---------------- Details\n\n\nfunction Details(props) {\n  var classes = props.classes,\n      state = props.state; // classes, element\n\n  var colkey = state.Path.getColKey(state) || \"\";\n  var rowkey = state.Path.getRowKey(state) || \"\";\n  var colvalues = state.Path.filterKeys(state, state.Matrix.values[colkey] || [\"\"]);\n  var rowvalues = state.Path.filterKeys(state, state.Matrix.values[rowkey] || [\"\"]);\n  var cellMode = state.Layout.getCellMode(state); //var ncol=colvalues.length + 1;\n  //var nrow=rowvalues.length + 1;\n  //DOM.style.font\n\n  var border = 2;\n  var width = 0.8 * window.innerWidth;\n  var height = 0.8 * (window.innerHeight - 200);\n  var plans = state.Layout.makePlans(colkey, rowkey, colvalues, rowvalues, width, height, border); //console.log(\"Details => Width/Height:\",window.innerWidth,window.innerHeight,plan.cell.width,plan.hdr.height)\n  //console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(colvalues));\n  //console.log(\"Rowkey:\",rowkey,\" rowval:\",JSON.stringify(rowvalues));\n\n  return React.createElement(\"div\", {\n    className: classes.divTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.divTableBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, React.createElement(HdrRow, {\n    classes: classes,\n    state: state,\n    plans: plans,\n    colkey: colkey,\n    colvalues: colvalues,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }), React.createElement(DataRows, {\n    classes: classes,\n    state: state,\n    plans: plans,\n    colkey: colkey,\n    colvalues: colvalues,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    mode: cellMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  })));\n}\n\nvar Table =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Table, _Component);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n\n    _this.updateWindowDimensions = function () {\n      _this.width = window.innerWidth;\n      _this.height = window.innerHeight;\n      _this.bbx = _this.el.getBoundingClientRect(); //console.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n\n    var state = props.state;\n    state.React.Table = _assertThisInitialized(_this);\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"showTable\",\n    value: function showTable() {\n      console.log(\"Rebuilding table.\");\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n  }, {\n    key: \"element\",\n    value: function element(el) {\n      if (el !== undefined && el !== null) {\n        this.el = el;\n        this.bbx = this.el.getBoundingClientRect(); //console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n      }\n\n      ;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state; //console.log(\"##### Rendering Table.\");\n\n      return React.createElement(\"div\", {\n        ref: function ref(el) {\n          _this2.element(el);\n        },\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(Details, {\n        state: state,\n        classes: classes,\n        element: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.paperImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"*** Indicated colors do not represent official warning levels ***\"))), React.createElement(Tooltip, {\n        state: state,\n        classes: {\n          button: classes.button\n        },\n        element: this,\n        type: 'cell',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Table;\n}(Component);\n\nTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Table);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/TableComponent.js"],"names":["React","Component","PropTypes","withStyles","teal_palette","Paper","Grid","SummaryCell","SeriesCell","CanvasText","Tooltip","styles","theme","root","position","height","width","overflow","border","divHdrLeft","display","justifyContent","cursor","divHdrRight","paper","tableLayout","padding","margin","divTable","divTableRow","backgroundColor","main","divTableCell","divTableCellCursor","divTableHead","divTableHeading","divTableHeadingCenter","divTableFoot","fontWeight","divTableBody","paperImage","textAlign","spacing","unit","FirstDataCell","props","classes","state","colkey","rowkey","rowval","onclick","plan","rowindex","undefined","data","JSON","stringify","DataCell","elements","mode","other","Layout","modes","cell","Sum","renderDataCell","colvalues","rowwhere","range","val","index","step","Matrix","getMatrixElements","matrix","cnt","Math","min","length","colwhere","Database","getColWhere","Navigate","selectItem","dataRow","plans","getWhereDetail","selectKey","getRange","mapFunction","toString","row","map","renderZeroRow","DataRows","rowvalues","FirstHdrCell","onclickCol","switchTableKey","onclickRow","hdr","hd2","hd1","renderHdrCell","HdrRow","col","Details","Path","getColKey","getRowKey","filterKeys","values","cellMode","getCellMode","window","innerWidth","innerHeight","makePlans","Table","updateWindowDimensions","bbx","el","getBoundingClientRect","console","log","forceUpdate","addEventListener","element","button","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport {teal_palette} from '../mui/metMuiThemes';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport SummaryCell from './SummaryCell';\nimport SeriesCell  from './SeriesCell';\nimport CanvasText  from './CanvasTextComponent';\nimport Tooltip  from './TooltipContainer';\n\nconst styles = theme => ({\n    root: {\n\tposition:'fixed',\n\theight: 'calc(100% - 0px)',\n\twidth:'90%',\n\toverflow:'hidden',\n\tborder:  '5px solid red',\n    },\n    divHdrLeft : {\n\tdisplay: 'inline-block',\n\tjustifyContent: 'left',\n\tcursor: \"pointer\",\n    },\n    divHdrRight : {\n\tdisplay: 'inline-block',\n\tjustifyContent: 'right',\n\tcursor: \"pointer\",\n    },\n    paper: {\n\toverflow: 'hidden',\n\ttableLayout: 'fixed',\n\tpadding:0,\n\tmargin:0,\n    },\n    divTable :{\n\tdisplay: 'table',\n\twidth: '100%',\n    },\n    divTableRow:  {\n\tbackgroundColor:teal_palette.main,\n\tborder: '0px solid #999999',\n\tdisplay: 'table-row',\n\tpadding: '0px',\n    },\n    divTableCell:{\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px',\n    },\n    divTableCellCursor:{\n\tcursor: \"pointer\",\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px',\n    },\n    divTableHead : {\n\tborder: '0px',\n\tdisplay: 'table-cell',\n\tpadding: '0px',\n    },\n    divTableHeading : {\n\tdisplay: 'table-header-group',\n    },\n    divTableHeadingCenter : {\n\tdisplay: 'flex',\n\tjustifyContent: 'center',\n    },\n    divTableFoot : {\n\tbackgroundColor: '#DDD',\n\tdisplay: 'table-footer-group',\n\tfontWeight: 'bold',\n    },\n    divTableBody : {\n\tdisplay: 'table-row-group',\n    },\n    paperImage: {\n        textAlign: 'center',\n        padding: theme.spacing.unit * 2,\n    }\n});\n\n//const mui = createTheme({palette:teal_palette});\n\n// ---------------- DATA\nfunction FirstDataCell (props) {\n    const { classes, state, colkey, rowkey, rowval, onclick, plan, rowindex } = props;\n    var cursor=classes.divTableCell;\n    if (onclick !== undefined) {\n\tcursor=classes.divTableCellCursor;\n    }\n    // width={plan.width} height={plan.height}\n    var data;\n    if (colkey===\"\" && rowkey===\"\") {\n\tdata=null;\n    } else {\n\tdata=JSON.stringify({colkey:colkey,rowkey:rowkey,rowval:rowval}); \n    };\n    if (rowindex%2 === 1) {\n\treturn (<div className={cursor} onClick={onclick} style={{backgroundColor:'#DDD'}}\n\t\tdata-for='cell' data-tip={data}>\n\t\t   <CanvasText state={state} label={rowval} plan={plan}/>\n\t\t</div>);\n    } else {\n\treturn (<div className={cursor} onClick={onclick} style={{backgroundColor:'#EEE'}}\n\t\tdata-for='cell' data-tip={data}>\n\t\t<CanvasText state={state} label={rowval} plan={plan}/>\n\t\t</div>);\n    }\n}\n//{rowval}\nfunction DataCell(props) {\n    const {classes,state,elements,mode,plan,rowindex,...other}=props;\n    if (elements===undefined) {\n\tif (rowindex%2===1) {\n\t    return <div className={classes.divTableCell} style={{backgroundColor:'#EEE'}}/>\n\t} else {\n\t    return <div className={classes.divTableCell} style={{backgroundColor:'#FFF'}}/>\n\t}\n    } else if (mode===state.Layout.modes.cell.Sum) {\n\treturn <SummaryCell {...other} state={state} elements={elements} plan={plan}/>\n\t//return null;\n    } else {\n\treturn <SeriesCell {...other} state={state} elements={elements} plan={plan}/>\n\t//return null;\n    }\n}\nfunction renderDataCell(classes,state,colkey,colvalues,rowkey,rowval,rowindex,rowwhere,range,mode,plan,val,index) {\n    //console.log(\"Making data cell:\",rowval,val,index,plan,JSON.stringify(colvalues));\n    if (index%plan.step === 0) {\n\t// get elements and range\n\t//console.log(\"Processing:\",val,colvalues[index],plan.step);\n\tvar elements=state.Matrix.getMatrixElements(colvalues,rowval,state.React.matrix,index,plan.step);\n\t//console.log(\"Elements:\",rowval,index,' =>',JSON.stringify(elements));\n\t// get count and colwhere\n        var cnt = Math.min(colvalues.length,index+plan.step)-index;\n        var colwhere = state.Database.getColWhere(colkey,colvalues,index,plan.step);\n\t// make onclick\n\tvar onclick=() => state.Navigate.selectItem(state,colkey,rowkey,colvalues[index],rowval,colwhere,rowwhere,cnt,1);\n\treturn (<DataCell classes={classes} state={state} key={`col-${index}`} rowindex={rowindex} index={index} onclick={onclick}\n\t\tcolkey={colkey} rowkey={rowkey} colvalues={colvalues} rowval={rowval} colwhere={colwhere} rowwhere={rowwhere} \n\t\telements={elements} mode={mode} plan={plan} range={range}\n\t    />);\n    } else {\n\treturn null;\n    }\n}\n//{{rowkey:'test1',colkey:'test2'}}\nfunction dataRow(classes,state,colkey,rowkey,colvalues,mode,plans,rowval,rowindex) {\n    var rowwhere=state.Database.getWhereDetail(rowkey,rowval);\n    var onclick=() => {state.Navigate.selectKey(state,rowkey,rowval,rowwhere,1);}\n    var range=[undefined,undefined];\n    if (state.React.matrix!==undefined) {\n\trange=state.Matrix.getRange(state,state.React.matrix,colvalues,[rowval]);\n    };\n    //console.log(\"Making data cols.\",rowval,colkey,JSON.stringify(colvalues));\n    //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n    var mapFunction= (val,index)=>renderDataCell(classes,state,colkey,colvalues,rowkey,rowval,rowindex,rowwhere,range,mode,plans.cell,val,index);\n    return (<div className={classes.divTableRow} key={rowindex.toString()}>\n\t    <FirstDataCell classes={classes} state={state} key={'0'} colkey={colkey} rowkey={rowkey} rowval={rowval} onclick={onclick} \n\t                   plan={plans.row} rowindex={rowindex}/>\n\t       {colvalues.map(mapFunction)}\n\t    </div>);\n};\nfunction renderZeroRow(classes,state,colkey,colvalues,plans) {\n    return (<div className={classes.divTableRow} key={1}>\n\t       <div className={classes.divTableCell} width={plans.cell.width}>No data available</div>\n\t    </div>);\n};\nfunction DataRows(props) {\n    const { classes, state, plans, colkey, colvalues, rowkey, rowvalues, mode } = props;\n    //console.log(\"Making data cols.\",colkey,JSON.stringify(colvalues));\n    var mapFunction= (val,index)=>dataRow(classes,state,colkey,rowkey,colvalues,mode,plans,val,index);\n    if (rowvalues.length===0) {\n\treturn renderZeroRow(classes,state,colkey,colvalues,plans);\n    } else {\n\treturn (rowvalues.map(mapFunction));\n    }\n}\n// ---------------- HDR\nfunction FirstHdrCell (props) {\n    const { classes, state, colkey, rowkey, plans } = props; // plan\n    //var width=plans.hdr.width;\n    //var height=plans.hdr.height;\n    //teal_palette\n    //console.log(\"Making first header cell.\",colkey,rowkey,plan.width,plan.height);\n    //style={{backgroundColor:teal_palette.main}}\n    var onclickCol=() => state.Navigate.switchTableKey(state,colkey);\n    var onclickRow=() => state.Navigate.switchTableKey(state,rowkey);\n    var data;\n    if (colkey===\"\" && rowkey===\"\") {\n\tdata=null;\n    } else {\n\tdata=JSON.stringify({colkey:colkey,rowkey:rowkey}); \n    };\n    return (<div style={{width:plans.hdr.width}}>\n\t       <div className={classes.divHdrRight} width={plans.hd2.width} onClick={onclickRow} data-for='cell' data-tip={data}>\n\t          <CanvasText state={state} label={rowkey} plan={plans.hd2} color={'white'}/>\n\t       </div>\n\t       <div className={classes.divHdrLeft} width={plans.hd1.width} onClick={onclickCol} data-for='cell' data-tip={data}>\n\t          <CanvasText state={state} label={colkey} plan={plans.hd1} color={'white'}/>\n\t       </div>\n\t    </div>);\n}\n//\n\nfunction renderHdrCell(classes,state,colkey,colvalues,rowkey,plan,val,index) {\n    if (index%plan.step === 0) {\n\t//console.log(\"HdrCell:\",index,plan.step);\n        var cnt = Math.min(colvalues.length,index+plan.step)-index;\n        var colwhere = state.Database.getColWhere(colkey,colvalues,index,plan.step);\n\tvar onclick=() => state.Navigate.selectKey(state,colkey,colvalues[index],colwhere,cnt);\n\tvar cursor=classes.divTableCell;\n\tif (onclick !== undefined) {\n\t    cursor=classes.divTableCellCursor;\n\t}\n\t//console.log(\"Plan:\",JSON.stringify(plan));\n\tvar data;\n\tif (colkey===\"\" && rowkey===\"\") {\n\t    data=null;\n\t} else {\n\t    data=JSON.stringify({colkey:colkey,rowkey:rowkey,colvalues:colvalues,index:index,step:plan.step}); \n\t};\n\treturn (<div className={cursor} onClick={onclick} style={{backgroundColor:'#DDD'}} key={`col-${index}`}  data-for='cell' data-tip={data}>\n\t\t   <CanvasText state={state} index={index} plan={plan} label={val}/>\n \t        </div> );\n     } else {\n\treturn null;\n    }\n}\nfunction HdrRow(props) {\n    const { classes, state, plans, colkey, colvalues, rowkey } = props; //, rowvalues\n    //console.log(\"Making header row.\",colkey,JSON.stringify(colvalues));\n    var mapFunction= (val,index)=>renderHdrCell(classes,state,colkey,colvalues,rowkey,plans.col,val,index);\n    return (<div className={classes.divTableRow} key={0}>\n\t       <FirstHdrCell classes={classes} state={state} colkey={colkey} rowkey={rowkey} plans={plans} style={{height:\"100%\"}}/>\n\t       {colvalues.map(mapFunction)}\n\t    </div>);\n}\n// ---------------- Details\nfunction Details(props) {\n    const { classes, state } = props; // classes, element\n    var colkey = state.Path.getColKey(state)||\"\";\n    var rowkey = state.Path.getRowKey(state)||\"\";\n    var colvalues = state.Path.filterKeys(state,state.Matrix.values[colkey]||[\"\"]);\n    var rowvalues = state.Path.filterKeys(state,state.Matrix.values[rowkey]||[\"\"]);\n    var cellMode  = state.Layout.getCellMode(state);\n    //var ncol=colvalues.length + 1;\n    //var nrow=rowvalues.length + 1;\n    //DOM.style.font\n    var border=2;\n    var width=0.8*window.innerWidth;\n    var height=0.8*(window.innerHeight-200);\n    var plans=state.Layout.makePlans(colkey,rowkey,colvalues,rowvalues,width,height,border);\n    //console.log(\"Details => Width/Height:\",window.innerWidth,window.innerHeight,plan.cell.width,plan.hdr.height)\n    //console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(colvalues));\n    //console.log(\"Rowkey:\",rowkey,\" rowval:\",JSON.stringify(rowvalues));\n\n    return (<div className={classes.divTable}>\n\t       <div className={classes.divTableBody}>\n\t          <HdrRow classes={classes} state={state} plans={plans} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues}/>\n\t          <DataRows classes={classes} state={state} plans={plans} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues} mode={cellMode}/>\n\t       </div>\n            </div>);\n }\nclass Table extends Component {\n    constructor(props) {\n\tsuper(props);\n\tconst {state} = props;\n\tstate.React.Table=this;\n    };\n    showTable() {\n\tconsole.log(\"Rebuilding table.\");\n\tthis.forceUpdate();\n    };\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    } \n    updateWindowDimensions = () => {\n        this.width= window.innerWidth;\n\tthis.height=window.innerHeight;\n\tthis.bbx=this.el.getBoundingClientRect();\n\t//console.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n    element(el) {\n\tif (el !== undefined && el !== null) {\n\t    this.el=el;\n\t    this.bbx=this.el.getBoundingClientRect();\n\t    //console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n\t};\n    };\n    render() {\n\tconst { classes, state } = this.props;\n\t//console.log(\"##### Rendering Table.\");\n\treturn (<div ref={el=>{this.element(el)}} className={classes.root}>\n\t\t   <Grid container spacing={24}>\n\t\t      <Grid item xs={12} > \n                         { <Paper className={classes.paper}>\n\t\t              <Details state={state} classes={classes} element={this}/>\n                           </Paper>}\n                      </Grid>\n\t\t      <Grid item xs={12} > \n                         <Paper className={classes.paperImage}>\n\t\t            *** Indicated colors do not represent official warning levels ***\n\t\t         </Paper>\n                      </Grid>\n                   </Grid>\n\t\t   <Tooltip state={state} classes={{button:classes.button}} element={this} type={'cell'}/>\n\t        </div>);\n    }\n}\n\nTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Table);\n"]},"metadata":{},"sourceType":"module"}