{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/Table2DComponent.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport SummaryCell from './SummaryCell';\nimport SeriesCell from './SeriesCell';\nconsole.log(\"Inside Table.\");\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      height: '100%',\n      width: '100%'\n    },\n    paper: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'left'\n    },\n    table: {\n      textAlign: 'left',\n      padding: theme.spacing.unit * 0,\n      height: '100%',\n      width: '100%',\n      borderStyle: 'solid'\n    },\n    row: {\n      alignItems: \"stretch\"\n    },\n    cell: {\n      cursor: \"pointer\"\n    }\n  };\n}; //function onCellClick(event) {\n//    var rowid=event.target.getAttribute(\"rowid\");\n//    event.target.innerHTML = rowid;\n//}\n//function onCellClick(event) {\n//    var rowid=event.target.getAttribute(\"rowid\");\n//    event.target.innerHTML = rowid;\n//}\n\n\nfunction getStep(state, colvalues, cellMode) {\n  var step = 1;\n\n  if (cellMode === state.Show.code.mSeries) {\n    step = Math.max(1, Math.ceil(colvalues.length / 20));\n  }\n\n  return step;\n} // ---------------- DATA\n\n\nfunction FirstDataCell(props) {\n  var classes = props.classes,\n      rowval = props.rowval,\n      onclick = props.onclick,\n      title = props.title; //console.log(\"Making first data cell.\");\n\n  return React.createElement(TableCell, {\n    className: classes.cell,\n    onClick: onclick,\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, rowval);\n}\n\nfunction DataCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      elements = props.elements,\n      key = props.key,\n      mode = props.mode,\n      other = _objectWithoutProperties(props, [\"classes\", \"state\", \"elements\", \"key\", \"mode\"]);\n\n  if (elements === undefined) {\n    return React.createElement(TableCell, {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    });\n  } else if (mode === state.Show.code.mSum) {\n    return React.createElement(SummaryCell, Object.assign({}, other, {\n      state: state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(SeriesCell, Object.assign({}, other, {\n      state: state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n  }\n}\n\nfunction renderDataCell(classes, state, colkey, colvalues, rowkey, rowval, rowindex, rowwhere, mode, step, val, index) {\n  var title = state.Database.getWhereDetail(colkey, colvalues[index]); //console.log(\"Making data cell:\",rowval,val,index,step,JSON.stringify(colvalues));\n\n  if ((index - 1) % step === 0) {\n    var clen = colvalues.length; // get elements and range\n\n    var kk;\n    var elements = undefined;\n    var range = [undefined, undefined];\n\n    if (state.React.matrix !== undefined) {\n      range = state.Matrix.getRange(state, state.React.matrix, colvalues, [rowval]);\n\n      for (kk = index; kk < Math.min(clen, index + step); kk++) {\n        var element = state.Matrix.getMatrixElement(colvalues[kk], rowval, state.React.matrix);\n\n        if (element === undefined) {} else {\n          //console.log(\"Found:\",colvalues[kk],rowval);\n          if (elements === undefined) {\n            elements = [];\n          }\n\n          ;\n          elements.push(element);\n        }\n      }\n\n      ;\n      console.log(\"We have a matrix with range:\", JSON.stringify(range));\n    } else {\n      console.log(\"No matrix available.\");\n    } // get count and colwhere\n\n\n    var cnt = 0;\n    var colwhere = \"\";\n\n    for (kk = index; kk < Math.min(clen, index + step); kk++) {\n      if (colwhere !== \"\") {\n        colwhere = colwhere + \" or \";\n      }\n\n      colwhere = colwhere + state.Database.getWhereDetail(colkey, colvalues[kk]);\n      cnt = cnt + 1;\n    }\n\n    ; // make onclick and title\n\n    var onclick = function onclick() {\n      return state.Layout.selectItem(colkey, rowkey, colvalues[index], rowval, colwhere, rowwhere, cnt, 1);\n    };\n\n    return React.createElement(DataCell, {\n      classes: classes,\n      state: state,\n      key: \"col-\".concat(index),\n      index: index,\n      onClick: onclick,\n      title: title,\n      colkey: colkey,\n      rowkey: rowkey,\n      colval: val,\n      rowval: rowval,\n      colwhere: colwhere,\n      rowwhere: rowwhere,\n      elements: elements,\n      mode: mode,\n      step: step,\n      range: range,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    });\n  } else {\n    return null;\n  }\n}\n\nfunction dataRow(classes, state, colkey, rowkey, colvalues, mode, step, rowval, rowindex) {\n  var rowwhere = state.Database.getWhereDetail(rowkey, rowval);\n\n  var onclick = function onclick() {\n    return state.Layout.selectKey(rowkey, rowval, rowwhere, 1);\n  };\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderDataCell(classes, state, colkey, colvalues, rowkey, rowval, rowindex, rowwhere, mode, step, val, index);\n  };\n\n  return React.createElement(TableRow, {\n    key: rowindex.toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(FirstDataCell, {\n    classes: classes,\n    key: '0',\n    rowval: rowval,\n    onClick: onclick,\n    title: rowwhere,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), colvalues.map(mapFunction));\n}\n\n;\n\nfunction renderZeroRow(classes, state, colkey, colvalues, step) {\n  return React.createElement(TableRow, {\n    key: '1',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    key: \"0\",\n    classes: classes,\n    state: state,\n    index: '0',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"No data\"));\n}\n\n;\n\nfunction DataRows(props) {\n  var classes = props.classes,\n      state = props.state,\n      step = props.step,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey,\n      rowvalues = props.rowvalues,\n      mode = props.mode;\n  console.log(\"Making data rows.\", rowkey, JSON.stringify(rowvalues));\n\n  var mapFunction = function mapFunction(val, index) {\n    return dataRow(classes, state, colkey, rowkey, colvalues, mode, step, val, index);\n  };\n\n  if (rowvalues.length === 0) {\n    return renderZeroRow(classes, state, colkey, colvalues, step);\n  } else {\n    return rowvalues.map(mapFunction);\n  }\n} // ---------------- HDR\n\n\nfunction FirstHdrCell(props) {\n  var colkey = props.colkey,\n      rowkey = props.rowkey;\n  var label = rowkey + \"\\\\\" + colkey;\n  console.log(\"Making first header cell.\", label);\n  return React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, label);\n}\n\nfunction renderHdrCell(classes, state, colkey, colvalues, rowkey, step, val, index) {\n  if ((index - 1) % step === 0) {\n    //console.log(\"HdrCell:\",index,step);\n    var colwhere = \"\";\n    var cnt = 0;\n    var clen = colvalues.length;\n\n    for (var kk = index; kk < Math.min(clen, index + step); kk++) {\n      if (colwhere !== \"\") {\n        colwhere = colwhere + \" or \";\n      }\n\n      colwhere = colwhere + state.Database.getWhereDetail(colkey, colvalues[kk]);\n      cnt = cnt + 1;\n    }\n\n    ;\n\n    var onclick = function onclick() {\n      return state.Layout.selectKey(colkey, colvalues[index], colwhere, cnt);\n    };\n\n    var title = colwhere;\n    return React.createElement(TableCell, {\n      className: classes.cell,\n      key: \"col-\".concat(index),\n      index: index,\n      onClick: onclick,\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, val);\n  } else {\n    return null;\n  }\n}\n\nfunction HdrRow(props) {\n  var classes = props.classes,\n      state = props.state,\n      step = props.step,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey; //, rowvalues\n\n  console.log(\"Making header row.\", colkey, JSON.stringify(colvalues));\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderHdrCell(classes, state, colkey, colvalues, rowkey, step, val, index);\n  };\n\n  return React.createElement(TableRow, {\n    key: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(FirstHdrCell, {\n    colkey: colkey,\n    rowkey: rowkey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), colvalues.map(mapFunction));\n} // ---------------- Details\n\n\nfunction Details(props) {\n  var classes = props.classes,\n      state = props.state; // classes, \n\n  var colkey = state.Path.getColKey(state) || \"\";\n  var rowkey = state.Path.getRowKey(state) || \"\";\n  var colvalues = state.Path.filterKeys(state, state.Matrix.values[colkey] || [\"\"]);\n  var rowvalues = state.Path.filterKeys(state, state.Matrix.values[rowkey] || [\"\"]);\n  var cellMode = state.Show.getCellMode();\n  var step = getStep(state, colvalues, cellMode); //console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(colvalues));\n\n  return React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(HdrRow, {\n    classes: classes,\n    state: state,\n    step: step,\n    colkey: colkey,\n    colvalues: colvalues,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  })), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(DataRows, {\n    classes: classes,\n    state: state,\n    step: step,\n    colkey: colkey,\n    colvalues: colvalues,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    mode: cellMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }))));\n}\n\nvar Table2D =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Table2D, _Component);\n\n  function Table2D(props) {\n    var _this;\n\n    _classCallCheck(this, Table2D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table2D).call(this, props));\n    _this.state = props.state;\n    return _this;\n  }\n\n  _createClass(Table2D, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state;\n      console.log(\"##### Rendering Table2D.\");\n      return React.createElement(\"div\", {\n        className: classes.root,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Details, {\n        state: state,\n        classes: classes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Table2D;\n}(Component);\n\nTable2D.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Table2D);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/Table2DComponent.js"],"names":["React","Component","PropTypes","withStyles","Paper","Grid","Table","TableBody","TableRow","TableHead","TableCell","SummaryCell","SeriesCell","console","log","styles","theme","root","flexGrow","height","width","paper","padding","spacing","unit","textAlign","table","borderStyle","row","alignItems","cell","cursor","getStep","state","colvalues","cellMode","step","Show","code","mSeries","Math","max","ceil","length","FirstDataCell","props","classes","rowval","onclick","title","DataCell","elements","key","mode","other","undefined","mSum","renderDataCell","colkey","rowkey","rowindex","rowwhere","val","index","Database","getWhereDetail","clen","kk","range","matrix","Matrix","getRange","min","element","getMatrixElement","push","JSON","stringify","cnt","colwhere","Layout","selectItem","dataRow","selectKey","mapFunction","toString","map","renderZeroRow","DataRows","rowvalues","FirstHdrCell","label","renderHdrCell","HdrRow","Details","Path","getColKey","getRowKey","filterKeys","values","getCellMode","Table2D","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\n\nimport SummaryCell from './SummaryCell';\nimport SeriesCell from './SeriesCell';\n\nconsole.log(\"Inside Table.\")\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n\theight: '100%',\n\twidth: '100%',\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'left',\n    },\n    table: {\n        textAlign: 'left',\n        padding: theme.spacing.unit * 0,\n\theight: '100%',\n\twidth: '100%',\n\tborderStyle: 'solid',\n    },\n    row  :{alignItems: \"stretch\"},\n    cell : {cursor: \"pointer\"},\n});\n\n\n//function onCellClick(event) {\n//    var rowid=event.target.getAttribute(\"rowid\");\n//    event.target.innerHTML = rowid;\n//}\n//function onCellClick(event) {\n//    var rowid=event.target.getAttribute(\"rowid\");\n//    event.target.innerHTML = rowid;\n//}\nfunction getStep(state,colvalues,cellMode) {\n    var step=1;\n    if (cellMode === state.Show.code.mSeries) {step=Math.max(1,Math.ceil(colvalues.length/20));}\n    return step;\n}\n// ---------------- DATA\nfunction FirstDataCell (props) {\n    const { classes, rowval, onclick, title } = props;\n    //console.log(\"Making first data cell.\");\n    return (<TableCell className={classes.cell} onClick={onclick} title={title}>{rowval}</TableCell>);\n}\nfunction DataCell(props) {\n    const {classes,state,elements,key,mode,...other}=props;\n    if (elements===undefined) {\n\treturn <TableCell key={key}/>\n    } else if (mode===state.Show.code.mSum) {\n\treturn <SummaryCell {...other} state={state}/>\n    } else {\n\treturn <SeriesCell {...other} state={state}/>\n    }\n}\nfunction renderDataCell(classes,state,colkey,colvalues,rowkey,rowval,rowindex,rowwhere,mode,step,val,index) {\n    var title=state.Database.getWhereDetail(colkey,colvalues[index]);\n    //console.log(\"Making data cell:\",rowval,val,index,step,JSON.stringify(colvalues));\n    if ((index-1)%step === 0) {\n\tvar clen=colvalues.length;\n\t// get elements and range\n\tvar kk;\n        var elements=undefined;\n\tvar range=[undefined,undefined];\n\tif (state.React.matrix!==undefined) {\n\t    range=state.Matrix.getRange(state,state.React.matrix,colvalues,[rowval]);\n            for (kk=index;kk<Math.min(clen,index+step);kk++) {\n\t\tvar element=state.Matrix.getMatrixElement(colvalues[kk],rowval,state.React.matrix);\n\t\tif (element === undefined) {\n\t\t} else {\n                    //console.log(\"Found:\",colvalues[kk],rowval);\n                    if (elements===undefined) {elements=[];};\n                    elements.push(element);\n\t\t}\n            };               \n\t    console.log(\"We have a matrix with range:\",JSON.stringify(range));\n\t} else {\n\t    console.log(\"No matrix available.\");\n\t}\n\t// get count and colwhere\n        var cnt=0;\n        var colwhere = \"\";\n        for (kk=index;kk<Math.min(clen,index+step);kk++) {\n\t    if (colwhere !== \"\") {colwhere=colwhere + \" or \";}\n\t    colwhere=colwhere + state.Database.getWhereDetail(colkey,colvalues[kk]);\n\t    cnt=cnt+1;\n        };               \n\t// make onclick and title\n\tvar onclick=() => state.Layout.selectItem(colkey,rowkey,colvalues[index],rowval,colwhere,rowwhere,cnt,1);\n\treturn (<DataCell classes={classes} state={state} key={`col-${index}`} index={index} onClick={onclick} title={title} \n\t\tcolkey={colkey} rowkey={rowkey} colval={val} rowval={rowval} colwhere={colwhere} rowwhere={rowwhere} \n\t\telements={elements} mode={mode} step={step} range={range}/>);\n    } else {\n\treturn null;\n    }\n}\nfunction dataRow(classes,state,colkey,rowkey,colvalues,mode,step,rowval,rowindex) {\n    var rowwhere=state.Database.getWhereDetail(rowkey,rowval);\n    var onclick=() => state.Layout.selectKey(rowkey,rowval,rowwhere,1);\n    var mapFunction= (val,index)=>renderDataCell(classes,state,colkey,colvalues,rowkey,rowval,rowindex,rowwhere,mode,step,val,index);\n    return (<TableRow key={rowindex.toString()}>\n\t    <FirstDataCell classes={classes} key={'0'} rowval={rowval} onClick={onclick} title={rowwhere}/>\n\t    {colvalues.map(mapFunction)}\n\t    </TableRow>);\n};\nfunction renderZeroRow(classes,state,colkey,colvalues,step) {\n    return (<TableRow key={'1'}>\n\t    <TableCell  key={`0`} classes={classes} state={state} index={'0'}>No data</TableCell>\n\t    </TableRow>);\n};\nfunction DataRows(props) {\n    const { classes, state, step, colkey, colvalues, rowkey, rowvalues, mode } = props;\n    console.log(\"Making data rows.\",rowkey,JSON.stringify(rowvalues));\n    var mapFunction= (val,index)=>dataRow(classes,state,colkey,rowkey,colvalues,mode,step,val,index);\n    if (rowvalues.length===0) {\n\treturn renderZeroRow(classes,state,colkey,colvalues,step);\n    } else {\n\treturn (rowvalues.map(mapFunction));\n    }\n}\n// ---------------- HDR\nfunction FirstHdrCell (props) {\n    const { colkey, rowkey } = props;\n    var label=rowkey + \"\\\\\" + colkey;\n    console.log(\"Making first header cell.\",label);\n    return (<TableCell>{label}</TableCell>);\n}\nfunction renderHdrCell(classes,state,colkey,colvalues,rowkey,step,val,index) {\n    if ((index-1)%step === 0) {\n\t//console.log(\"HdrCell:\",index,step);\n        var colwhere = \"\";\n        var cnt=0\n\tvar clen=colvalues.length;\n        for (var kk=index;kk<Math.min(clen,index+step);kk++) {\n            if (colwhere !== \"\") {colwhere=colwhere + \" or \";}\n            colwhere=colwhere + state.Database.getWhereDetail(colkey,colvalues[kk]);\n            cnt=cnt+1;\n        };               \n\tvar onclick=() => state.Layout.selectKey(colkey,colvalues[index],colwhere,cnt);\n\tvar title=colwhere;\n\treturn (<TableCell className={classes.cell} key={`col-${index}`} index={index} onClick={onclick} title={title}>{val}</TableCell>);\n    } else {\n\treturn null;\n    }\n}\nfunction HdrRow(props) {\n    const { classes, state, step, colkey, colvalues, rowkey } = props; //, rowvalues\n    console.log(\"Making header row.\",colkey,JSON.stringify(colvalues));\n    var mapFunction= (val,index)=>renderHdrCell(classes,state,colkey,colvalues,rowkey,step,val,index);\n    return (<TableRow key={0}>\n\t      <FirstHdrCell colkey={colkey} rowkey={rowkey}/>\n\t      {colvalues.map(mapFunction)}\n\t     </TableRow>);\n}\n// ---------------- Details\nfunction Details(props) {\n    const { classes, state } = props; // classes, \n    var colkey = state.Path.getColKey(state)||\"\";\n    var rowkey = state.Path.getRowKey(state)||\"\";\n    var colvalues = state.Path.filterKeys(state,state.Matrix.values[colkey]||[\"\"]);\n    var rowvalues = state.Path.filterKeys(state,state.Matrix.values[rowkey]||[\"\"]);\n    var cellMode  = state.Show.getCellMode();\n    var step=getStep(state,colvalues,cellMode);\n    //console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(colvalues));\n    return (<div  style={{width: '100%', height: '100%'}}>\n        <Table>\n\t    <TableHead>\n\t      <HdrRow classes={classes} state={state} step={step} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues}/>\n\t    </TableHead>\n\t    <TableBody>\n\t      <DataRows classes={classes} state={state} step={step} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues} mode={cellMode}/>\n\t    </TableBody>\n        </Table>\n           </div>);\n }\nclass Table2D extends Component {\n    constructor(props) {\n\tsuper(props);\n\tthis.state=props.state;\n    }\n    componentDidMount() {} \n    render() {\n\tconst { classes, state } = this.props;\n\tconsole.log(\"##### Rendering Table2D.\");\n\treturn (<div className={classes.root}  style={{width: '100%', height: '100%'}}>\n\t\t   <Grid container spacing={24}>\n\t\t      <Grid item xs={12} > \n                         { <Paper className={classes.table}>\n\t\t              <Details state={state} classes={classes}/>\n                           </Paper>}\n                      </Grid>\n                   </Grid>\n\t        </div>);\n    }\n}\n\nTable2D.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Table2D);\n"]},"metadata":{},"sourceType":"module"}