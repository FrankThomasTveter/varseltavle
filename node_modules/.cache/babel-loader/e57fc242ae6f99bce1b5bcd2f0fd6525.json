{"ast":null,"code":"//console.log(\"Loading NavigateLib.js\");\nfunction Navigate() {\n  this.onClick = function (state, ttyp, tkey) {\n    var reload = false; // matrix changed?\n\n    var tid, src;\n\n    if (ttyp === \"path\") {\n      // path -> table\n      tid = state.Path.keys.path.indexOf(tkey);\n\n      if (tid !== -1) {\n        src = state.Path.keys.path.splice(ii, 1); // remove from path\n\n        state.Utils.spliceArray(state.Path.keys.other, 0, 0, src); // first position (table)\n\n        reload = true;\n      }\n    } else if (ttyp === \"table\") {\n      // table -> path/other\n      tid = state.Path.keys.other.indexOf(tkey);\n\n      if (tid !== -1) {\n        src = state.Path.keys.other.splice(ii, 1); // remove from path\n\n        if (state.Path.values[tkey]) {\n          // table -> path\n          state.Path.keys.path = state.Path.keys.path.concat(src); // last path position\n        } else {\n          // table -> other\n          state.Path.keys.other = state.Path.keys.other.concat(src); // last position\n        }\n\n        reload = true;\n      }\n    } else if (ttyp === \"rest\") {\n      // rest -> table\n      tid = state.Path.keys.other.indexOf(tkey);\n\n      if (tid !== -1) {\n        src = state.Path.keys.other.splice(ii, 1); // remove from path\n\n        state.Utils.spliceArray(state.Path.keys.other, 0, 0, src); // first position (table)\n\n        reload = true;\n      }\n\n      ;\n    } else if (ttyp == \"trash\") {\n      tid = state.Path.keys.trash.indexOf(tkey);\n\n      if (tid !== -1) {\n        src = state.Path.keys.trash.splice(ii, 1); // remove from trash\n\n        state.Path.keys.other = state.Path.keys.other.concat(src); // last position\n\n        state.Path.values[src] = undefined;\n        reload = true;\n      }\n\n      ;\n    }\n\n    state.Show.showAll(state, reload);\n  };\n\n  this.dropCheck = function (state, ev) {\n    var check;\n    var styp = ev.dataTransfer.getData(state, \"styp\");\n    var skey = ev.dataTransfer.getData(state, \"skey\"); //var sval = ev.dataTransfer.getData(state,\"sval\");\n    //var srel = ev.dataTransfer.getData(state,\"srel\");\n\n    var ttyp = ev.target.getAttribute(state, \"ptyp\");\n    var tkey = ev.target.getAttribute(state, \"pkey\"); //var tval = ev.target.getAttribute(state,\"pval\");\n    //var trel = ev.target.getAttribute(state,\"prel\");\n\n    if (ttyp === state.Path.type.eye.ptyp) {\n      // ******************** E Y E **************\n      if (styp === state.Path.type.path.ptyp) {\n        check = true;\n      } else if (styp === state.Path.type.table.ptyp || styp === state.Path.type.rest.ptyp) {\n        //console.log(\"Value:\",skey,state.Path.keyVal(state,skey));\n        if (state.Path.keyVal(state, skey) !== undefined) {\n          check = true;\n        } else {\n          check = false;\n        }\n      } else if (styp === state.Path.type.trashRest.ptyp) {\n        if (state.Path.keyVal(state, skey) !== undefined) {\n          check = true;\n        } else {\n          check = false;\n        }\n      } else if (styp === state.Path.type.row.ptyp || styp === state.Path.type.col.ptyp || styp === state.Path.type.item.ptyp || styp === state.Path.type.rotate.ptyp) {\n        check = true;\n      } else {\n        check = false;\n      }\n    } else if (ttyp === state.Path.type.trash.ptyp || ttyp === state.Path.type.trashRest.ptyp) {\n      // ******************** T R A S H **************\n      if (styp === state.Path.type.path.ptyp || styp === state.Path.type.eye.ptyp || styp === state.Path.type.table.ptyp || styp === state.Path.type.rest.ptyp || styp === state.Path.type.trash.ptyp || styp === state.Path.type.trashRest.ptyp || styp === state.Path.type.col.ptyp || styp === state.Path.type.row.ptyp || styp === state.Path.type.item.ptyp || styp === state.Path.type.rotate.ptyp) {\n        check = true;\n      } else {\n        check = false;\n      }\n    } else if (ttyp === state.Path.type.path.ptyp) {\n      // ******************** P A T H **************\n      if (styp === state.Path.type.path.ptyp || styp === state.Path.type.eye.ptyp) {\n        check = true;\n      } else if (styp === state.Path.type.table.ptyp || styp === state.Path.type.rest.ptyp) {\n        //console.log(\"Value:\",skey,state.Path.keyVal(state,skey));\n        if (state.Path.keyVal(state, skey) !== undefined) {\n          check = true;\n        } else {\n          check = false;\n        }\n      } else if (styp === state.Path.type.trash.ptyp) {\n        check = true;\n      } else if (styp === state.Path.type.trashRest.ptyp) {\n        if (state.Path.keyVal(state, skey) !== undefined) {\n          check = true;\n        } else {\n          check = false;\n        }\n      } else {\n        check = false;\n      }\n    } else if (ttyp === state.Path.type.table.ptyp || ttyp === state.Path.type.rest.ptyp) {\n      // ******************** T A B L E / R E S T **************\n      if (styp === state.Path.type.path.ptyp || styp === state.Path.type.rest.ptyp || styp === state.Path.type.table.ptyp || styp === state.Path.type.trash.ptyp) {\n        check = true;\n      } else if (styp === state.Path.type.eye.ptyp) {\n        check = state.Path.checkNewPath(state, ttyp, tkey);\n      } else if (styp === state.Path.type.trash.ptyp) {\n        check = true;\n      } else if (styp === state.Path.type.trashRest.ptyp) {\n        check = true;\n      } else {\n        check = false;\n      }\n    } else if (ttyp === state.Path.type.row.ptyp || ttyp === state.Path.type.col.ptyp || ttyp === state.Path.type.item.ptyp) {\n      // ******************** T A B L E **************\n      if (styp === state.Path.type.eye.ptyp || styp === state.Path.type.trash.ptyp) {\n        check = true;\n      } else if (styp === state.Path.type.trash.ptyp) {\n        check = true;\n      } else if (styp === state.Path.type.rotate.ptyp) {\n        check = true;\n      } else if (styp === ttyp) {\n        check = true;\n      } else if (styp === state.Path.type.row.ptyp && ttyp === state.Path.type.col.ptyp) {\n        check = true;\n      } else if (ttyp === state.Path.type.row.ptyp && styp === state.Path.type.col.ptyp) {\n        check = true;\n      } else {\n        check = false;\n      }\n    } else if (ttyp === state.Path.type.rotate.ptyp) {\n      // ******************** R O T A T E **************\n      if (styp === state.Path.type.col.ptyp) {\n        check = true;\n      } else {\n        check = false;\n      }\n    } else {\n      check = false;\n    } //console.log(\"Checking  styp=\",styp,\"  ttyp=\",ttyp,\" check=\",check);\n\n\n    if (check) {\n      ev.preventDefault(); // this.drop check\n    }\n  };\n\n  this.drop = function (state, ev) {\n    ev.preventDefault();\n    state.Html.setLog(state, \"Processing\");\n    var styp = ev.dataTransfer.getData(state, \"styp\");\n    var skey = ev.dataTransfer.getData(state, \"skey\");\n    var sval = ev.dataTransfer.getData(state, \"sval\");\n    var srel = ev.dataTransfer.getData(state, \"srel\");\n    var ttyp = ev.target.getAttribute(state, \"ptyp\");\n    var tkey = ev.target.getAttribute(state, \"pkey\");\n    var tval = ev.target.getAttribute(state, \"pval\");\n    var trel = ev.target.getAttribute(state, \"prel\");\n    var reload = false; // matrix changed?\n\n    var tin, tid;\n\n    if (ttyp === state.Path.type.eye.ptyp) {\n      // ************ -> E Y E **************\n      if (styp === state.Path.type.path.ptyp) {\n        state.Path.moveKey(state, \"path\", skey, \"other\");\n      } else if (styp === state.Path.type.table.ptyp) {\n        reload = state.Path.moveKey(state, \"other\", skey, \"path\");\n      } else if (styp === state.Path.type.rest.ptyp) {\n        reload = state.Path.moveKey(state, \"other\", skey, \"path\");\n      } else if (styp === state.Path.type.trashRest.ptyp) {\n        state.Path.moveKey(state, \"trash\", skey, \"trash\", 0);\n      } else if (styp === state.Path.type.row.ptyp || styp === state.Path.type.col.ptyp) {} else if (styp === state.Path.type.item.ptyp) {} else if (styp === state.Path.type.rotate.ptyp) {}\n    } else if (ttyp === state.Path.type.trash.ptyp) {\n      // ************ -> T R A S H **************\n      tin = 0; // insert position\n\n      if (styp === state.Path.type.path.ptyp) {\n        reload = state.Path.moveKey(state, \"path\", skey, \"trash\", tin);\n      } else if (styp === state.Path.type.eye.ptyp) {} else if (styp === state.Path.type.table.ptyp) {\n        reload = state.Path.moveKey(state, \"other\", skey, \"trash\", tin);\n      } else if (styp === state.Path.type.rest.ptyp) {\n        state.Path.moveKey(state, \"other\", skey, \"trash\", tin);\n      } else if (styp === state.Path.type.trashRest.ptyp) {\n        if (state.Path.keyVal(state, skey) !== undefined) {\n          state.Path.select.val[skey] = \"\";\n          state.Path.select.where[skey] = \"\";\n          state.Path.select.cnt[skey] = 0;\n        } else {\n          reload = state.Path.moveKey(state, \"trash\", skey, \"trash\", tin);\n        }\n      } else if (styp === state.Path.type.col.ptyp || styp === state.Path.type.row.ptyp) {\n        // col/row -> trash\n        if (state.Path.values[skey] === undefined) {\n          state.Path.values[skey] = [];\n        }\n\n        ;\n        state.Path.values[skey].push(sval); //console.log(\"Trashed:\",skey,sval)\n\n        reload = true;\n      } else if (styp === state.Path.type.item.ptyp) {\n        // trash -> item\n        state.Path.trash.level = sval; //console.log(\"Trashlevel:\",state.Path.trash.level);\n\n        reload = true;\n      } else if (styp === state.Path.type.rotate.ptyp) {\n        state.Layout.rotate = {};\n        reload = true;\n      }\n    } else if (ttyp === state.Path.type.trashRest.ptyp) {\n      // ************ -> T R A S H R E S T **************\n      tin = state.Path.keys.trash.indexOf(tkey);\n\n      if (styp === state.Path.type.path.ptyp) {\n        reload = state.Path.moveKey(state, \"path\", skey, \"trash\", tin + 1);\n      } else if (styp === state.Path.type.eye.ptyp) {} else if (styp === state.Path.type.table.ptyp) {\n        reload = state.Path.moveTableKey(state, skey, \"trash\", tin + 1);\n      } else if (styp === state.Path.type.rest.ptyp) {\n        state.Path.moveKey(state, \"other\", skey, \"trash\", tin + 1);\n      } else if (styp === state.Path.type.trash.ptyp) {\n        state.Path.moveAllFirst(state, \"trash\", tin + 1);\n      } else if (styp === state.Path.type.trashRest.ptyp) {\n        state.Path.moveKey(state, \"trash\", skey, \"trash\", tin);\n      } else if (styp === state.Path.type.col.ptyp || styp === state.Path.type.row.ptyp) {\n        // col/row -> trash\n        if (state.Path.values[skey] === undefined) {\n          state.Path.values[skey] = [];\n        }\n\n        ;\n        state.Path.values[skey] = state.Path.values[skey].concat(sval); //console.log(\"Trashed:\",skey,sval)\n\n        reload = true;\n      } else if (styp === state.Path.type.item.ptyp) {\n        // trash -> item\n        state.Path.trash.level = sval; //console.log(\"Trashlevel:\",state.Path.trash.level);\n\n        reload = true;\n      } else if (styp === state.Path.type.rotate.ptyp) {}\n    } else if (ttyp === state.Path.type.path.ptyp) {\n      // ************ -> P A T H **************\n      tid = state.Path.keys.path.indexOf(tkey);\n\n      if (styp === state.Path.type.path.ptyp) {\n        state.Path.moveKey(state, \"path\", skey, \"path\", tid);\n      } else if (styp === state.Path.type.eye.ptyp) {\n        reload = state.Path.moveAllKey(state, \"path\", skey, \"other\", 0);\n      } else if (styp === state.Path.type.table.ptyp) {\n        if (state.Path.keyVal(state, skey) !== undefined) {\n          // check if value is set\n          reload = state.Path.moveKey(state, \"other\", skey, \"path\", tid);\n        }\n      } else if (styp === state.Path.type.rest.ptyp) {\n        if (state.Path.keyVal(state, skey) !== undefined) {\n          // check if value is set\n          reload = state.Path.moveKey(state, \"other\", skey, \"path\", tid);\n        }\n      } else if (styp === state.Path.type.trash.ptyp) {\n        if (state.Path.keyVal(state, skey) !== undefined) {\n          // check if value is set\n          reload = state.Path.moveKey(state, \"trash\", skey, \"path\", tid);\n        }\n      }\n    } else if (ttyp === state.Path.type.table.ptyp) {\n      // ************ -> T A B L E **************\n      if (styp === state.Path.type.table.ptyp) {\n        // swap positions\n        reload = state.Path.swapTableKey(state, skey, tkey);\n      } else {\n        if (styp === state.Path.type.path.ptyp) {\n          reload = state.Path.moveKey2Table(state, \"path\", skey, tkey);\n        } else if (styp === state.Path.type.eye.ptyp) {\n          if (state.Path.checkNewPath(state, ttyp, tkey)) {//state.path.makeNewPath(state,typ,tid+1);\n            //reload=true;  // matrix has changed...\n          }\n        } else if (styp === state.Path.type.rest.ptyp) {\n          reload = state.Path.moveKey2Table(state, \"other\", skey, tkey);\n        } else if (styp === state.Path.type.trash.ptyp) {\n          reload = state.Path.moveTrash2Table(state, tkey);\n        } else if (styp === state.Path.type.trashRest.ptyp) {\n          reload = state.Path.moveKey2Table(state, \"trash\", skey, tkey);\n        } else if (styp === state.Path.type.trash.ptyp) {\n          state.Path.moveTrash(state, \"other\", tin + 1);\n        } else if (styp === state.Path.type.trashRest.ptyp) {\n          reload = state.Path.moveKey(state, \"trash\", skey, \"other\", tin + 1);\n        }\n      }\n    } else if (ttyp === state.Path.type.rest.ptyp) {\n      // ************ -> R E S T **************\t\n      tid = state.Path.other.rest.indexOf(tkey);\n      tin = state.Path.keys.other.indexOf(tkey);\n\n      if (styp === state.Path.type.path.ptyp) {\n        reload = state.Path.moveKey(state, \"path\", skey, \"other\", tin);\n      } else if (styp === state.Path.type.eye.ptyp) {\n        if (state.Path.checkNewPath(state, ttyp, tkey)) {//state.path.makeNewPath(state,typ,tid+1);\n          //reload=true;  // matrix has changed...\n        }\n      } else if (styp === state.Path.type.table.ptyp) {\n        reload = state.Path.moveTableKey(state, skey, \"other\", tin - 1); // shifts when table-key is removed...\n      } else if (styp === state.Path.type.rest.ptyp) {\n        state.Path.moveKey(state, \"other\", skey, \"other\", tin);\n      }\n    } else if (ttyp === state.Path.type.row.ptyp || // ************ -> R O W / C O L **************\n    ttyp === state.Path.type.col.ptyp) {\n      if (styp === state.Path.type.eye.ptyp) {\n        // eye -> col/row\n        delete state.Path.order[tkey];\n        reload = true;\n      } else if (styp === state.Path.type.trash.ptyp) {\n        // trash -> col/row\n        //delete state.Path.order[tkey];\n        state.Path.values[tkey] = [];\n        reload = true;\n      } else if (styp === ttyp) {\n        // col/row -> col/row\n        if (state.Path.order === undefined) {\n          state.Path.order = {};\n        }\n\n        ;\n\n        if (state.Path.order[skey] === undefined) {\n          //console.log(\"Copying:\",JSON.stringify(state.Matrix.values[skey]));\n          state.Path.order[skey] = state.Utils.cp(state.Path.values[skey]);\n        }\n\n        ;\n\n        if ((state, srel === \"first\" && trel === \"last\") || srel === \"last\" && trel === \"first\") {\n          state.Utils.invertArray(state.Path.order[skey]);\n\n          if (state.Path.order[skey][0] < state.Path.order[skey][Math.min(state.Path.order[skey].length, 1)]) {\n            if (state.Database.keyCnt[skey].num === \"num\") {\n              state.Database.keyCnt[skey].order = state.Database.nasc;\n            } else {\n              state.Database.keyCnt[skey].order = state.Database.casc;\n            }\n          } else {\n            if (state.Database.keyCnt[skey].num === \"num\") {\n              state.Database.keyCnt[skey].order = state.Database.ndes;\n            } else {\n              state.Database.keyCnt[skey].order = state.Database.cdes;\n            }\n          } //console.log(\"Sorting\",skey,\":\",state.Database.keyCnt[skey].order);\n\n        } else {\n          state.Utils.moveTo(state.Path.order[skey], sval, tval); //console.log(\"Order:\",JSON.stringify(state.Path.order[skey]),skey,sval,tval);\n        }\n\n        reload = true;\n      } else if (styp === state.Path.type.rotate.ptyp) {\n        console.log(\"Rotating \", tkey);\n\n        if (state.Layout.rotate === undefined) {\n          state.Layout.rotate = {};\n        }\n\n        ;\n\n        if (state.Layout.rotate || [tkey] === undefined || state.Layout.rotate || [tkey] === \"\") {\n          state.Layout.rotate[tkey] = 'rotate';\n        } else {\n          state.Layout.rotate[tkey] = \"\";\n        }\n\n        reload = true;\n      } else if (styp === state.Path.type.row.ptyp && ttyp === state.Path.type.col.ptyp) {\n        reload = state.Layout.changePriority(state, skey, tkey);\n      } else if (ttyp === state.Path.type.row.ptyp && styp === state.Path.type.col.ptyp) {\n        reload = state.Layout.changePriority(state, skey, tkey);\n      }\n    } else if (ttyp === state.Path.type.item.ptyp) {\n      // ************ -> I T E M **************\n      if (styp === state.Path.type.trash.ptyp) {\n        // trash -> item\n        state.Path.trash.level = undefined;\n        console.log(\"Trashlevel:\", state.Path.trash.level);\n      }\n    } else if (ttyp === state.Path.type.rotate.ptyp) {\n      // ************ -> R O T **************\n      if (styp === state.Path.type.col.ptyp) {\n        // col/row -> trash\n        if (state.Layout.rotate === undefined) {\n          state.Layout.rotate = {};\n        }\n\n        ;\n\n        if (state.Layout.rotate[skey] === undefined || state.Layout.rotate[skey] === \"\") {\n          state.Layout.rotate[skey] = 'rotate';\n        } else {\n          state.Layout.rotate[skey] = \"\";\n        }\n\n        reload = true;\n      }\n    } else {\n      console.log(\"Unknown type:\", ttyp, styp);\n    }\n\n    state.Show.showAll(state, reload);\n    state.Html.setLog(state);\n  };\n\n  this.dragStart = function (state, ev) {\n    var styp = ev.target.getAttribute(state, \"ptyp\");\n    var skey = ev.target.getAttribute(state, \"pkey\");\n    var sval = ev.target.getAttribute(state, \"pval\");\n    var srel = ev.target.getAttribute(state, \"prel\"); // // mark all possible destinations...\n    //if (styp  === state.Path.type.path.ptyp) {\n    //state.Colors.setPathBorderColor(state,state.Colors.colors.bo);\n    //};\n\n    ev.dataTransfer.setData(state, \"styp\", styp);\n    ev.dataTransfer.setData(state, \"skey\", skey);\n    ev.dataTransfer.setData(state, \"sval\", sval);\n    ev.dataTransfer.setData(state, \"srel\", srel);\n  };\n\n  this.dragEnd = function (state, ev) {//var styp = ev.dataTransfer.getData(state,\"styp\");\n    //var sey = ev.dataTransfer.getData(state,\"sey\");\n    //console.log(\"this.Dropped.\");\n    // // reset destination marks to default...\n    //if (styp  === \"path\" || styp  === \"trash\"){\n    //state.Colors.setPathBorderColor(state,state.Colors.colors.bg);\n    //}\n  };\n\n  this.onClickPath = function (state, ttyp, tid) {\n    var reload = false; // matrix changed?\n\n    var tkey, tin, src;\n\n    if (ttyp === \"path\") {\n      // path-> other\n      var len = state.Path.keys.path.length;\n\n      for (var ii = len - 1; ii >= tid; ii--) {\n        tkey = state.Path.keys.path.splice(ii, 1); // remove from path\n\n        console.log(\"ClickPath:\", JSON.stringify(tkey[0]), JSON.stringify(tkey[0].substring(state, 0, 1)));\n\n        if (tkey[0].substring(state, 0, 1) === \"_\") {\n          console.log(\"Omitting internal variable:\", tkey);\n        } else {\n          if (state.Utils.missing(state.Path.keys.other, tkey)) {\n            state.Path.keys.other = state.Path.keys.other.concat(tkey); // last position\n          }\n\n          ;\n\n          if (state.Layout.trash[tkey] === undefined) {\n            state.Layout.trash[tkey] = [];\n          }\n\n          ;\n          var trash = state.Layout.trash[tkey];\n          state.Path.moveKeys(state, \"trash\", trash, \"other\");\n\n          if (state.Layout.order[tkey] === undefined) {\n            state.Layout.order[tkey] = [];\n          }\n\n          ;\n          var order = state.Layout.order[tkey]; //console.log(\"*** Order:\",JSON.stringify(order));\n        }\n\n        state.Path.makeOrder(state, \"other\", order);\n      } //console.log(\"###Result:\",JSON.stringify(state.Path.keys.other));\n\n\n      reload = true; //console.log(\"Onclick other-all:\",JSON.stringify(setup));\n    } else {\n      // other -> path\n      if (ttyp === \"table\") {\n        // table -> path\n        tkey = state.Path.other.table[tid];\n        tin = state.Path.keys.other.indexOf(tkey);\n        console.log(\"Table-click:\", tid, tkey, tin, JSON.stringify(state.Path.keys.other));\n\n        if (tid === state.Path.other.table.length - 1 || // last element\n        state.Path.other.rest.length === 0) {\n          // no remaining elements\n          src = state.Path.keys.other.splice(tin, 1); // remove from other\n\n          if (state.Utils.missing(state.Path.keys.path, src) && state.Path.keyVal(state, tkey) !== undefined) {\n            // check if value is set\n            state.Path.keys.path = state.Path.keys.path.concat(src); // last position\n          } else if (state.Utils.missing(state.Path.keys.trash, src)) {\n            state.Utils.spliceArray(state.Path.keys.trash, 0, 0, src); // last position\n          }\n        } else {\n          // move first element\n          var tkey2 = state.Path.other.table[1]; // get last element\n\n          src = state.Path.keys.other.splice(tin, 1); // remove first element from path\n\n          if (state.Utils.missing(state.Path.keys.path, src) && state.Path.keyVal(state, tkey) !== undefined) {\n            // check if value is set\n            state.Path.keys.path = state.Path.keys.path.concat(src); // last position\n          } else if (state.Utils.missing(state.Path.keys.trash, src)) {\n            state.Utils.spliceArray(state.Path.keys.trash, 0, 0, src); // last position\n          }\n\n          ; // keep second element\n\n          var tin2 = state.Path.keys.other.indexOf(tkey2);\n          var src2 = state.Path.keys.other.splice(tin2, 1); // remove from path\n\n          if (state.Utils.missing(state.Path.keys.other, src2)) {\n            state.Utils.spliceArray(state.Path.keys.other, 1, 0, src2);\n          } //console.log(\"Kept:\",tin,tkey,JSON.stringify(state.Path.keys.other));\n\n        }\n\n        reload = true;\n      } else if (ttyp === \"rest\") {\n        // rest -> path\n        tkey = state.Path.other.rest[tid];\n        tin = state.Path.keys.other.indexOf(tkey);\n\n        if (state.Path.keyVal(state, tkey) !== undefined) {\n          // check if value is set\n          src = state.Path.keys.other.splice(tin, 1); // remove from path\n\n          if (state.Utils.missing(state.Path.keys.path, src)) {\n            state.Path.keys.path = state.Path.keys.path.concat(src); // last position\n          } else if (state.Utils.missing(state.Path.keys.trash, src)) {\n            state.Utils.spliceArray(state.Path.keys.trash, 0, 0, src); // last position\n          }\n\n          reload = true;\n        } else {\n          src = state.Path.keys.other.splice(tin, 1); // remove from path\n\n          if (state.Utils.missing(state.Path.keys.trash, src)) {\n            state.Utils.spliceArray(state.Path.keys.trash, 0, 0, src); // last position\n          }\n        }\n      } else if (ttyp === \"trash\") {\n        // trash -> path\n        tkey = state.Path.trash.rest[tid];\n\n        if (state.Path.keyVal(state, tkey) === undefined || !state.Utils.missing(state.Path.keys.path, tkey)) {\n          // no value is set\n          tin = state.Path.keys.trash.indexOf(tkey);\n          src = state.Path.keys.trash.splice(tin, 1); // remove from path\n\n          if (state.Utils.missing(state.Path.keys.other, src)) {\n            state.Path.keys.other = state.Path.keys.other.concat(src); // last position\n          } //console.log(\"Restored:\",JSON.stringify(state.Path.keys.other));\n\n\n          reload = state.Path.other.table.length < 2;\n        } else {\n          tin = state.Path.keys.trash.indexOf(tkey);\n          src = state.Path.keys.trash.splice(tin, 1); // remove from path\n\n          if (state.Utils.missing(state.Path.keys.path, src)) {\n            state.Path.keys.path = state.Path.keys.path.concat(src); // last position\n          }\n\n          ;\n          reload = true;\n        }\n      }\n    }\n\n    state.Show.showAll(state, reload);\n  };\n}\n\n;\nexport default Navigate;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/NavigateLib.js"],"names":["Navigate","onClick","state","ttyp","tkey","reload","tid","src","Path","keys","path","indexOf","splice","ii","Utils","spliceArray","other","values","concat","trash","undefined","Show","showAll","dropCheck","ev","check","styp","dataTransfer","getData","skey","target","getAttribute","type","eye","ptyp","table","rest","keyVal","trashRest","row","col","item","rotate","checkNewPath","preventDefault","drop","Html","setLog","sval","srel","tval","trel","tin","moveKey","select","val","where","cnt","push","level","Layout","moveTableKey","moveAllFirst","moveAllKey","swapTableKey","moveKey2Table","moveTrash2Table","moveTrash","order","cp","invertArray","Math","min","length","Database","keyCnt","num","nasc","casc","ndes","cdes","moveTo","console","log","changePriority","dragStart","setData","dragEnd","onClickPath","len","JSON","stringify","substring","missing","moveKeys","makeOrder","tkey2","tin2","src2"],"mappings":"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","sourcesContent":["//console.log(\"Loading NavigateLib.js\");\n    \nfunction Navigate() {\n    this.onClick=function(state,ttyp,tkey) {\n\tvar reload=false; // matrix changed?\n\tvar tid,src;\n\tif (ttyp  === \"path\") { // path -> table\n\t    tid=state.Path.keys.path.indexOf(tkey);\n\t    if (tid !== -1) {\n\t\tsrc=state.Path.keys.path.splice(ii, 1);                 // remove from path\n\t\tstate.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\t\treload=true;\n\t    }\n\t} else if (ttyp  === \"table\") { // table -> path/other\n\t    tid=state.Path.keys.other.indexOf(tkey);\n\t    if (tid !== -1) {\n\t\tsrc=state.Path.keys.other.splice(ii, 1);                 // remove from path\n\t\tif (state.Path.values[tkey]) { // table -> path\n\t\t    state.Path.keys.path=state.Path.keys.path.concat(src); // last path position\n\t\t} else {                       // table -> other\n\t\t    state.Path.keys.other=state.Path.keys.other.concat(src); // last position\n\t\t}\n\t\treload=true;\n\t    }\n\t} else if (ttyp === \"rest\") { // rest -> table\n\t    tid=state.Path.keys.other.indexOf(tkey);\n\t    if (tid !== -1) {\n\t\tsrc=state.Path.keys.other.splice(ii, 1);                 // remove from path\n\t\tstate.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\t\treload=true;\n\t    };\n\t} else if (ttyp == \"trash\") {\n\t    tid=state.Path.keys.trash.indexOf(tkey);\n\t    if (tid !== -1) {\n\t\tsrc=state.Path.keys.trash.splice(ii, 1);                 // remove from trash\n\t\tstate.Path.keys.other=state.Path.keys.other.concat(src); // last position\n\t\tstate.Path.values[src]=undefined;\n\t\treload=true;\n\t    };\n\t}\n\tstate.Show.showAll(state,reload);\n    };\n    this.dropCheck=function(state,ev) {\n\tvar check;\n\tvar styp = ev.dataTransfer.getData(state,\"styp\");\n\tvar skey = ev.dataTransfer.getData(state,\"skey\");\n\t//var sval = ev.dataTransfer.getData(state,\"sval\");\n\t//var srel = ev.dataTransfer.getData(state,\"srel\");\n\tvar ttyp = ev.target.getAttribute(state,\"ptyp\");\n\tvar tkey = ev.target.getAttribute(state,\"pkey\");\n\t//var tval = ev.target.getAttribute(state,\"pval\");\n\t//var trel = ev.target.getAttribute(state,\"prel\");\n\tif (ttyp  === state.Path.type.eye.ptyp) { // ******************** E Y E **************\n\t    if (styp  === state.Path.type.path.ptyp) {\n\t\tcheck=true;\n\t    } else if (styp  === state.Path.type.table.ptyp ||\n\t\t       styp  === state.Path.type.rest.ptyp) {\n\t\t//console.log(\"Value:\",skey,state.Path.keyVal(state,skey));\n\t\tif (state.Path.keyVal(state,skey) !== undefined) {\n\t\t    check=true;\n\t\t} else {\n\t\t    check=false;\n\t\t}\n\t    } else if (styp  === state.Path.type.trashRest.ptyp ) {\n\t\tif (state.Path.keyVal(state,skey) !== undefined) {\n\t\t    check=true;\n\t\t} else {\n\t\t    check=false;\n\t\t}\n\t    } else if (styp  === state.Path.type.row.ptyp ||\n\t\t       styp  === state.Path.type.col.ptyp ||\n\t\t       styp  === state.Path.type.item.ptyp ||\n\t\t       styp  === state.Path.type.rotate.ptyp) {\n\t\tcheck=true;\n\t    } else {\n\t\tcheck=false;\n\t    }\n\t} else if (ttyp  === state.Path.type.trash.ptyp ||\n\t\t   ttyp  === state.Path.type.trashRest.ptyp) {  // ******************** T R A S H **************\n\t\tif (styp  === state.Path.type.path.ptyp  ||\n\t\t    styp  === state.Path.type.eye.ptyp   ||\n\t\t    styp  === state.Path.type.table.ptyp ||\n\t\t    styp  === state.Path.type.rest.ptyp ||\n\t\t    styp  === state.Path.type.trash.ptyp ||\n\t\t    styp  === state.Path.type.trashRest.ptyp ||\n\t\t    styp  === state.Path.type.col.ptyp ||\n\t\t    styp  === state.Path.type.row.ptyp ||\n\t\t    styp  === state.Path.type.item.ptyp ||\n\t\t    styp  === state.Path.type.rotate.ptyp) {\n\t\t    check=true;\n\t\t} else {\n\t\t    check=false;\n\t\t}\n\t} else if (ttyp  === state.Path.type.path.ptyp) {  // ******************** P A T H **************\n\t    if (styp  === state.Path.type.path.ptyp||\n\t\tstyp  === state.Path.type.eye.ptyp) {\n\t\tcheck=true;\n\t    } else if (styp  === state.Path.type.table.ptyp ||\n\t\t       styp  === state.Path.type.rest.ptyp) {\n\t\t//console.log(\"Value:\",skey,state.Path.keyVal(state,skey));\n\t\tif (state.Path.keyVal(state,skey) !== undefined) {\n\t\t    check=true;\n\t\t} else {\n\t\t    check=false;\n\t\t}\n\t    } else if (styp  === state.Path.type.trash.ptyp ) {\n\t\tcheck=true;\n\t    } else if (styp  === state.Path.type.trashRest.ptyp ) {\n\t\tif (state.Path.keyVal(state,skey) !== undefined) {\n\t\t    check=true;\n\t\t} else {\n\t\t    check=false;\n\t\t}\n\t    } else {\n\t\tcheck=false;\n\t    }\n\t} else if (ttyp  === state.Path.type.table.ptyp ||\n\t\t   ttyp  === state.Path.type.rest.ptyp) {  // ******************** T A B L E / R E S T **************\n\t\tif (styp  === state.Path.type.path.ptyp||\n\t\t    styp  === state.Path.type.rest.ptyp||\n\t\t    styp  === state.Path.type.table.ptyp||\n\t\t    styp  === state.Path.type.trash.ptyp) {\n\t\t    check=true;\n\t\t} else if (styp  === state.Path.type.eye.ptyp) {\n\t\t    check=state.Path.checkNewPath(state,ttyp,tkey);\n\t\t} else if (styp  === state.Path.type.trash.ptyp ) {\n\t\t    check=true;\n\t\t} else if (styp  === state.Path.type.trashRest.ptyp ) {\n\t\t    check=true;\n\t\t} else {\n\t\t    check=false;\n\t\t}\n\t} else if (ttyp  === state.Path.type.row.ptyp||\n\t\t   ttyp  === state.Path.type.col.ptyp||\n\t\t   ttyp  === state.Path.type.item.ptyp) {  // ******************** T A B L E **************\n\t\tif (styp  === state.Path.type.eye.ptyp ||\n\t\t    styp  === state.Path.type.trash.ptyp) {\n\t\t    check=true;\n\t\t} else if (styp  === state.Path.type.trash.ptyp ) {\n\t\t    check=true;\n\t\t} else if (styp  === state.Path.type.rotate.ptyp ) {\n\t\t    check=true;\n\t\t} else if (styp  === ttyp) {\n\t\t    check=true;\n\t\t} else if (styp  ===  state.Path.type.row.ptyp && ttyp  ===  state.Path.type.col.ptyp) {\n\t\t    check=true;\n\t\t} else if (ttyp  ===  state.Path.type.row.ptyp && styp  ===  state.Path.type.col.ptyp) {\n\t\t    check=true;\n\t\t} else {\n\t\t    check=false;\n\t\t}\n\t} else if (ttyp  === state.Path.type.rotate.ptyp) {  // ******************** R O T A T E **************\n\t    if (styp  === state.Path.type.col.ptyp) {\n\t\tcheck=true;\n\t    } else {\n\t\tcheck=false;\n\t    }\n\t} else {\n\t    check=false;\n\t}\n\t//console.log(\"Checking  styp=\",styp,\"  ttyp=\",ttyp,\" check=\",check);\n\tif (check) {\n\t    ev.preventDefault(); // this.drop check\n\t}\n    };\n    this.drop=function(state,ev) {\n\tev.preventDefault();\n\tstate.Html.setLog(state,\"Processing\");\n\tvar styp = ev.dataTransfer.getData(state,\"styp\");\n\tvar skey = ev.dataTransfer.getData(state,\"skey\");\n\tvar sval = ev.dataTransfer.getData(state,\"sval\");\n\tvar srel = ev.dataTransfer.getData(state,\"srel\");\n\tvar ttyp = ev.target.getAttribute(state,\"ptyp\");\n\tvar tkey = ev.target.getAttribute(state,\"pkey\");\n\tvar tval = ev.target.getAttribute(state,\"pval\");\n\tvar trel = ev.target.getAttribute(state,\"prel\");\n\tvar reload=false; // matrix changed?\n\tvar tin,tid;\n\tif (ttyp  === state.Path.type.eye.ptyp) { // ************ -> E Y E **************\n\t    if (styp  === state.Path.type.path.ptyp) { \n\t\tstate.Path.moveKey(state,\"path\",skey,\"other\");\n\t    } else if (styp  === state.Path.type.table.ptyp) {\n\t\treload=state.Path.moveKey(state,\"other\",skey,\"path\");\n\t    } else if (styp  === state.Path.type.rest.ptyp) { \n\t\treload=state.Path.moveKey(state,\"other\",skey,\"path\");\n\t    } else if (styp  === state.Path.type.trashRest.ptyp ) {\n\t\tstate.Path.moveKey(state,\"trash\",skey,\"trash\",0);\n\t    } else if (styp  === state.Path.type.row.ptyp ||\n\t\t       styp  === state.Path.type.col.ptyp) {\n\t    } else if (styp  === state.Path.type.item.ptyp) {\n\t    } else if (styp  === state.Path.type.rotate.ptyp) {\n\t    }\n\t} else if (ttyp  === state.Path.type.trash.ptyp) {  // ************ -> T R A S H **************\n\t    tin=0; // insert position\n\t    if (styp  === state.Path.type.path.ptyp) {\n\t\treload=state.Path.moveKey(state,\"path\",skey,\"trash\",tin);\n\t    } else if (styp  === state.Path.type.eye.ptyp) {\n\t    } else if (styp  === state.Path.type.table.ptyp) {\n\t\treload=state.Path.moveKey(state,\"other\",skey,\"trash\",tin);\n\t    } else if (styp  === state.Path.type.rest.ptyp) {\n\t\tstate.Path.moveKey(state,\"other\",skey,\"trash\",tin);\n\t    } else if (styp  === state.Path.type.trashRest.ptyp) {\n\t\tif (state.Path.keyVal(state,skey) !== undefined) {\n\t\t    state.Path.select.val[skey]=\"\";\n\t\t    state.Path.select.where[skey]=\"\";\n\t\t    state.Path.select.cnt[skey]=0;\n\t\t} else {\n\t\t    reload=state.Path.moveKey(state,\"trash\",skey,\"trash\",tin);\n\t\t}\n\t    } else if (styp  === state.Path.type.col.ptyp ||\n\t\t       styp  === state.Path.type.row.ptyp) { // col/row -> trash\n\t\t    if (state.Path.values[skey]  === undefined) {\n\t\t\tstate.Path.values[skey]=[];\n\t\t    };\n\t\tstate.Path.values[skey].push(sval);\n\t\t//console.log(\"Trashed:\",skey,sval)\n\t\treload=true;\n\t    } else if (styp  === state.Path.type.item.ptyp) { // trash -> item\n\t\tstate.Path.trash.level=sval;\n\t\t//console.log(\"Trashlevel:\",state.Path.trash.level);\n\t\treload=true;\n\t    } else if (styp  === state.Path.type.rotate.ptyp) {\n\t\tstate.Layout.rotate={};\n\t\treload=true;\n\t    }\n\t} else if (ttyp  === state.Path.type.trashRest.ptyp) {// ************ -> T R A S H R E S T **************\n\t    tin=state.Path.keys.trash.indexOf(tkey);\n\t    if (styp  === state.Path.type.path.ptyp) {\n\t\treload=state.Path.moveKey(state,\"path\",skey,\"trash\",tin+1);\n\t    } else if (styp  === state.Path.type.eye.ptyp) {\n\t    } else if (styp  === state.Path.type.table.ptyp) {\n\t\treload=state.Path.moveTableKey(state,skey,\"trash\",tin+1);\n\t    } else if (styp  === state.Path.type.rest.ptyp) {\n\t\tstate.Path.moveKey(state,\"other\",skey,\"trash\",tin+1);\n\t    } else if (styp  === state.Path.type.trash.ptyp) {\n\t\tstate.Path.moveAllFirst(state,\"trash\",tin+1);\n\t    } else if (styp  === state.Path.type.trashRest.ptyp) {\n\t\tstate.Path.moveKey(state,\"trash\",skey,\"trash\",tin);\n\t    } else if (styp  === state.Path.type.col.ptyp ||\n\t\t       styp  === state.Path.type.row.ptyp) { // col/row -> trash\n\t\t    if (state.Path.values[skey]  === undefined) {state.Path.values[skey]=[];};\n\t\tstate.Path.values[skey]=state.Path.values[skey].concat(sval);\n\t\t//console.log(\"Trashed:\",skey,sval)\n\t\treload=true;\n\t    } else if (styp  === state.Path.type.item.ptyp) { // trash -> item\n\t\tstate.Path.trash.level=sval;\n\t\t//console.log(\"Trashlevel:\",state.Path.trash.level);\n\t\treload=true;\n\t    } else if (styp  === state.Path.type.rotate.ptyp) {\n\t    }\n\t} else if (ttyp  === state.Path.type.path.ptyp) {    // ************ -> P A T H **************\n\t    tid=state.Path.keys.path.indexOf(tkey);\n\t    if (styp  === state.Path.type.path.ptyp) {\n\t\tstate.Path.moveKey(state,\"path\",skey,\"path\",tid);\n\t    } else if (styp  === state.Path.type.eye.ptyp) {\n\t\treload=state.Path.moveAllKey(state,\"path\",skey,\"other\",0);\n\t    } else if (styp  === state.Path.type.table.ptyp) {\n\t\tif (state.Path.keyVal(state,skey) !== undefined) { // check if value is set\n\t\t    reload=state.Path.moveKey(state,\"other\",skey,\"path\",tid);\n\t\t}\n\t    } else if (styp  === state.Path.type.rest.ptyp) {\n\t\tif (state.Path.keyVal(state,skey) !== undefined) { // check if value is set\n\t\t    reload=state.Path.moveKey(state,\"other\",skey,\"path\",tid);\n\t\t}\n\t    } else if (styp  === state.Path.type.trash.ptyp ) {\t\n\t\tif (state.Path.keyVal(state,skey) !== undefined) { // check if value is set\n\t\t    reload=state.Path.moveKey(state,\"trash\",skey,\"path\",tid);\n\t\t}\n\t    }\n\t} else if (ttyp  === state.Path.type.table.ptyp) {// ************ -> T A B L E **************\n\t    if (styp  === state.Path.type.table.ptyp) { // swap positions\n\t\treload=state.Path.swapTableKey(state,skey,tkey);\n\t    } else {\n\t\tif (styp  === state.Path.type.path.ptyp) {\n\t\t    reload=state.Path.moveKey2Table(state,\"path\",skey,tkey);\n\t\t} else if (styp  === state.Path.type.eye.ptyp) {\n\t\t    if (state.Path.checkNewPath(state,ttyp,tkey)) {\n\t\t\t//state.path.makeNewPath(state,typ,tid+1);\n\t\t\t//reload=true;  // matrix has changed...\n\t\t    }\n\t\t} else if (styp  === state.Path.type.rest.ptyp) {\n\t\t    reload=state.Path.moveKey2Table(state,\"other\",skey,tkey);\t\t\n\t\t} else if (styp  === state.Path.type.trash.ptyp) {\n\t\t    reload=state.Path.moveTrash2Table(state,tkey);\t\t\n\t\t} else if (styp  === state.Path.type.trashRest.ptyp) {\n\t\t    reload=state.Path.moveKey2Table(state,\"trash\",skey,tkey);\t\t\n\t\t} else if (styp  === state.Path.type.trash.ptyp) {\n\t\t    state.Path.moveTrash(state,\"other\",tin+1);\n\t\t} else if (styp  === state.Path.type.trashRest.ptyp) {\n\t\t    reload=state.Path.moveKey(state,\"trash\",skey,\"other\",tin+1);\n\t\t}\n\t    }\n\t} else if (ttyp  === state.Path.type.rest.ptyp) { // ************ -> R E S T **************\t\n\t    tid=state.Path.other.rest.indexOf(tkey);\n\t    tin=state.Path.keys.other.indexOf(tkey);\n\t    if (styp  === state.Path.type.path.ptyp) {\n\t\treload=state.Path.moveKey(state,\"path\",skey,\"other\",tin);\n\t    } else if (styp  === state.Path.type.eye.ptyp) {\n\t\tif (state.Path.checkNewPath(state,ttyp,tkey)) {\n\t\t    //state.path.makeNewPath(state,typ,tid+1);\n\t\t    //reload=true;  // matrix has changed...\n\t\t}\n\t    } else if (styp  === state.Path.type.table.ptyp) {\n\t\treload=state.Path.moveTableKey(state,skey,\"other\",tin-1); // shifts when table-key is removed...\n\t    } else if (styp  === state.Path.type.rest.ptyp) {\n\t\tstate.Path.moveKey(state,\"other\",skey,\"other\",tin);\n\t    }\n\t} else if (ttyp  === state.Path.type.row.ptyp|| // ************ -> R O W / C O L **************\n\t\t   ttyp  === state.Path.type.col.ptyp) {\n\t    if (styp  === state.Path.type.eye.ptyp) { // eye -> col/row\n\t\tdelete state.Path.order[tkey];\n\t\treload=true;\n\t    } else if (styp  === state.Path.type.trash.ptyp) { // trash -> col/row\n\t\t//delete state.Path.order[tkey];\n\t\tstate.Path.values[tkey]=[];\n\t\treload=true;\n\t    } else if (styp  === ttyp) { // col/row -> col/row\n\t\tif (state.Path.order  === undefined) {state.Path.order={};};\n\t\tif (state.Path.order[skey]  === undefined) {\n\t\t    //console.log(\"Copying:\",JSON.stringify(state.Matrix.values[skey]));\n\t\t    state.Path.order[skey]=state.Utils.cp(state.Path.values[skey]);\n\t\t};\n\t\tif ((state,srel  === \"first\" && trel  === \"last\" ) || \n\t\t    (srel  === \"last\" && trel  === \"first\" )) {\n\t\t    state.Utils.invertArray(state.Path.order[skey]);\n\t\t    if (state.Path.order[skey][0] < state.Path.order[skey][Math.min(state.Path.order[skey].length,1)]) {\n\t\t\tif (state.Database.keyCnt[skey].num === \"num\") {\n\t\t\t    state.Database.keyCnt[skey].order=state.Database.nasc;\n\t\t\t} else {\n\t\t\t    state.Database.keyCnt[skey].order=state.Database.casc;\n\t\t\t}\n\t\t    } else {\n\t\t\tif (state.Database.keyCnt[skey].num === \"num\") {\n\t\t\t    state.Database.keyCnt[skey].order=state.Database.ndes;\n\t\t\t} else {\n\t\t\t    state.Database.keyCnt[skey].order=state.Database.cdes;\n\t\t\t}\n\t\t    }\n\t\t    //console.log(\"Sorting\",skey,\":\",state.Database.keyCnt[skey].order);\n\t\t} else {\n\t\t    state.Utils.moveTo(state.Path.order[skey],sval,tval);\n\t\t    //console.log(\"Order:\",JSON.stringify(state.Path.order[skey]),skey,sval,tval);\n\t\t}\n\t\treload=true;\n\t    } else if (styp  === state.Path.type.rotate.ptyp) {\n\t\tconsole.log(\"Rotating \",tkey);\n\t\tif (state.Layout.rotate  === undefined) {state.Layout.rotate ={};};\n\t\tif (state.Layout.rotate||[tkey]  === undefined || state.Layout.rotate||[tkey]  === \"\") {\n\t\t    state.Layout.rotate[tkey]='rotate';\n\t\t} else {\n\t\t    state.Layout.rotate[tkey]=\"\";\n\t\t}\n\t\treload=true;\n\t    } else if (styp  ===  state.Path.type.row.ptyp && ttyp  ===  state.Path.type.col.ptyp) {\n\t\treload=state.Layout.changePriority(state,skey,tkey);\n\t    } else if (ttyp  ===  state.Path.type.row.ptyp && styp  ===  state.Path.type.col.ptyp) {\n\t\treload=state.Layout.changePriority(state,skey,tkey);\n\t    }\n\t} else if (ttyp  === state.Path.type.item.ptyp) { // ************ -> I T E M **************\n\t    if (styp  === state.Path.type.trash.ptyp) { // trash -> item\n\t\tstate.Path.trash.level=undefined;\n\t\tconsole.log(\"Trashlevel:\",state.Path.trash.level);\n\n\t    }\n\t} else if (ttyp  === state.Path.type.rotate.ptyp) { // ************ -> R O T **************\n\t    if (styp  === state.Path.type.col.ptyp) { // col/row -> trash\n\t\tif (state.Layout.rotate  === undefined) {state.Layout.rotate ={};};\n\t\tif (state.Layout.rotate[skey]  === undefined || state.Layout.rotate[skey]  === \"\") {\n\t\t    state.Layout.rotate[skey]='rotate';\n\t\t} else {\n\t\t    state.Layout.rotate[skey]=\"\";\n\t\t}\n\t\treload=true;\n\t    }\n\t} else {\n\t    console.log(\"Unknown type:\",ttyp,styp);\n\t}\n\tstate.Show.showAll(state,reload);\n\tstate.Html.setLog(state);\n    };\n    this.dragStart=function(state,ev) {\n\tvar styp=ev.target.getAttribute(state,\"ptyp\");\n\tvar skey=ev.target.getAttribute(state,\"pkey\");\n\tvar sval=ev.target.getAttribute(state,\"pval\");\n\tvar srel=ev.target.getAttribute(state,\"prel\");\n\t// // mark all possible destinations...\n\t//if (styp  === state.Path.type.path.ptyp) {\n\t//state.Colors.setPathBorderColor(state,state.Colors.colors.bo);\n\t//};\n\tev.dataTransfer.setData(state,\"styp\",styp);\n\tev.dataTransfer.setData(state,\"skey\",skey);\n\tev.dataTransfer.setData(state,\"sval\",sval);\n\tev.dataTransfer.setData(state,\"srel\",srel);\n    };\n    this.dragEnd=function(state,ev) {\n\t//var styp = ev.dataTransfer.getData(state,\"styp\");\n\t//var sey = ev.dataTransfer.getData(state,\"sey\");\n\t//console.log(\"this.Dropped.\");\n\t// // reset destination marks to default...\n\t//if (styp  === \"path\" || styp  === \"trash\"){\n\t//state.Colors.setPathBorderColor(state,state.Colors.colors.bg);\n\t//}\n    };\n    this.onClickPath=function(state,ttyp,tid) {\n\tvar reload=false; // matrix changed?\n\tvar tkey,tin,src;\n\tif (ttyp  === \"path\") { // path-> other\n\t    var len=state.Path.keys.path.length\n\t    for (var ii = len-1;ii>=tid;ii--) {\n\t\ttkey=state.Path.keys.path.splice(ii, 1);    // remove from path\n\t\tconsole.log(\"ClickPath:\",JSON.stringify(tkey[0]),JSON.stringify(tkey[0].substring(state,0,1)));\n\t\tif (tkey[0].substring(state,0,1) === \"_\") {\n\t\t    console.log(\"Omitting internal variable:\",tkey);\n\t\t} else {\n\t\t    if (state.Utils.missing(state.Path.keys.other,tkey)) {\n\t\t\tstate.Path.keys.other=state.Path.keys.other.concat(tkey);         // last position\n\t\t    };\n\t\t    if (state.Layout.trash[tkey]  === undefined) {state.Layout.trash[tkey]=[];};\n\t\t    var trash=state.Layout.trash[tkey];\n\t\t    state.Path.moveKeys(state,\"trash\",trash,\"other\");\n\t\t    if (state.Layout.order[tkey]  === undefined) {state.Layout.order[tkey]=[];};\n\t\t    var order=state.Layout.order[tkey];\n\t\t    //console.log(\"*** Order:\",JSON.stringify(order));\n\t\t}\n\t\tstate.Path.makeOrder(state,\"other\",order);\n\t    }\n\t    //console.log(\"###Result:\",JSON.stringify(state.Path.keys.other));\n\t    reload=true;\n\t    //console.log(\"Onclick other-all:\",JSON.stringify(setup));\n\t} else {              // other -> path\n\t    if (ttyp  === \"table\") { // table -> path\n\t\ttkey=state.Path.other.table[tid];\n\t\ttin=state.Path.keys.other.indexOf(tkey);\n\t\tconsole.log(\"Table-click:\",tid,tkey,tin,JSON.stringify(state.Path.keys.other));\n\t\tif (tid  === state.Path.other.table.length-1 || // last element\n\t\t    state.Path.other.rest.length  === 0 ){       // no remaining elements\n\t\t    src=state.Path.keys.other.splice(tin, 1);    // remove from other\n\t\t    if (state.Utils.missing(state.Path.keys.path,src)&& state.Path.keyVal(state,tkey) !== undefined) { // check if value is set\n\t\t\tstate.Path.keys.path=state.Path.keys.path.concat(src);         // last position\n\t\t    } else if (state.Utils.missing(state.Path.keys.trash,src)) {\n\t\t\tstate.Utils.spliceArray(state.Path.keys.trash,0,0,src);         // last position\n\t\t    }\n\t\t} else { // move first element\n\t\t    var tkey2=state.Path.other.table[1];           // get last element\n\t\t    src=state.Path.keys.other.splice(tin, 1);   // remove first element from path\n\t\t    if (state.Utils.missing(state.Path.keys.path,src) && state.Path.keyVal(state,tkey) !== undefined) { // check if value is set\n\t\t\tstate.Path.keys.path=state.Path.keys.path.concat(src);         // last position\n\t\t    } else if (state.Utils.missing(state.Path.keys.trash,src)) {\n\t\t\tstate.Utils.spliceArray(state.Path.keys.trash,0,0,src);         // last position\n\t\t    };\n\t\t    // keep second element\n\t\t    var tin2=state.Path.keys.other.indexOf(tkey2);\n\t\t    var src2=state.Path.keys.other.splice(tin2, 1);    // remove from path\n\t\t    if (state.Utils.missing(state.Path.keys.other,src2)) {\n\t\t\tstate.Utils.spliceArray(state.Path.keys.other,1,0,src2);\n\t\t    }\n\t\t    //console.log(\"Kept:\",tin,tkey,JSON.stringify(state.Path.keys.other));\n\t\t}\n\t\treload=true;\n\t    } else if (ttyp  === \"rest\") {  // rest -> path\n\t\ttkey=state.Path.other.rest[tid];\n\t\ttin=state.Path.keys.other.indexOf(tkey);\n\t\tif (state.Path.keyVal(state,tkey) !== undefined) { // check if value is set\n\t\t    src=state.Path.keys.other.splice(tin, 1);    // remove from path\n\t\t    if (state.Utils.missing(state.Path.keys.path,src)) {\n\t\t\tstate.Path.keys.path=state.Path.keys.path.concat(src);         // last position\n\t\t    } else if (state.Utils.missing(state.Path.keys.trash,src)) {\n\t\t\tstate.Utils.spliceArray(state.Path.keys.trash,0,0,src);         // last position\n\t\t    }\n\t\t    reload=true;\n\t\t} else {\n\t\t    src=state.Path.keys.other.splice(tin, 1);    // remove from path\n\t\t    if (state.Utils.missing(state.Path.keys.trash,src)) {\n\t\t\tstate.Utils.spliceArray(state.Path.keys.trash,0,0,src);         // last position\n\t\t    }\n\t\t}\n\t    } else if (ttyp  === \"trash\") { // trash -> path\n\t\ttkey=state.Path.trash.rest[tid];\n\t\tif (state.Path.keyVal(state,tkey)  === undefined || !state.Utils.missing(state.Path.keys.path,tkey)) { // no value is set\n\t\t    tin=state.Path.keys.trash.indexOf(tkey);\n\t\t    src=state.Path.keys.trash.splice(tin, 1);    // remove from path\n\t\t    if (state.Utils.missing(state.Path.keys.other,src)) {\n\t\t\tstate.Path.keys.other=state.Path.keys.other.concat(src);         // last position\n\t\t    }\n\t\t    //console.log(\"Restored:\",JSON.stringify(state.Path.keys.other));\n\t\t    reload=(state.Path.other.table.length<2);\n\t\t} else {\n\t\t    tin=state.Path.keys.trash.indexOf(tkey);\n\t\t    src=state.Path.keys.trash.splice(tin, 1);    // remove from path\n\t\t    if (state.Utils.missing(state.Path.keys.path,src)) {\n\t\t\tstate.Path.keys.path=state.Path.keys.path.concat(src);         // last position\n\t\t    };\n\t\t    reload=true;\n\t\t}\n\t    }\n\t}\n\tstate.Show.showAll(state,reload);\n    }\n};\nexport default Navigate;\n"]},"metadata":{},"sourceType":"module"}