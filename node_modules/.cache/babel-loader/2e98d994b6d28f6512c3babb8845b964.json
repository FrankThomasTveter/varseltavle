{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/AutoLoad.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from \"prop-types\";\nimport Test from '../js/Test';\n\nvar styles = function styles(theme) {\n  return {\n    content: {\n      flex: '1 0 auto',\n      paddingTop: '5rem'\n    }\n  };\n};\n/**\n * The entire app get generated from this container.\n * We set the material UI theme by choosing a primary and secondary color from the metMuiThemes file\n * and creating a color palette with the createTheme method.\n * For information about using the different palettes see material UI documentation\n * \n * This app contains the database, path and matrix states...\n */\n\n\nvar AutoLoad =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AutoLoad, _Component);\n\n  function AutoLoad(props) {\n    var _this;\n\n    _classCallCheck(this, AutoLoad);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AutoLoad).call(this, props));\n    _this.state = props.state;\n    _this.state.React.AutoLoad = _assertThisInitialized(_assertThisInitialized(_this));\n    _this.state.cnt = 0;\n    _this.state.tick = _this.tick;\n    _this.state.AutoLoad = _assertThisInitialized(_assertThisInitialized(_this));\n    _this.t = new Test();\n    return _this;\n  }\n\n  _createClass(AutoLoad, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"Initialising alarm.\");\n      this.state.Colors.init(this.state);\n      this.state.Path.init(this.state);\n      this.state.Show.init(this.state);\n      this.state.Threshold.init(this.state); //console.log(\"Update database.\")\n      //this.state.Database.update(this.state);\n      //var t=new Test();\n      //t.test(this.state);\n\n      this.timerID = setInterval(function () {\n        return _this2.t.test(_this2.state);\n      }, //            () => this.tick(),\n      1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timerID);\n    }\n  }, {\n    key: \"tick\",\n    value: function tick() {\n      // check if database has changed, reload if necessary...\n      this.setState({\n        cnt: this.state.cnt + 1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state;\n      return React.createElement(\"div\", {\n        className: classes.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.state.cnt);\n    }\n  }]);\n\n  return AutoLoad;\n}(Component);\n\nAutoLoad.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(AutoLoad);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/AutoLoad.js"],"names":["React","Component","withStyles","PropTypes","Test","styles","theme","content","flex","paddingTop","AutoLoad","props","state","cnt","tick","t","console","log","Colors","init","Path","Show","Threshold","timerID","setInterval","test","clearInterval","setState","classes","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,IAAI,EAAE,UADD;AAELC,MAAAA,UAAU,EAAE;AAFP;AADY,GAAL;AAAA,CAApB;AAQA;;;;;;;;;;IAQMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACtB,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAWD,KAAK,CAACC,KAAjB;AACA,UAAKA,KAAL,CAAWZ,KAAX,CAAiBU,QAAjB;AACA,UAAKE,KAAL,CAAWC,GAAX,GAAe,CAAf;AACA,UAAKD,KAAL,CAAWE,IAAX,GAAgB,MAAKA,IAArB;AACA,UAAKF,KAAL,CAAWF,QAAX;AACA,UAAKK,CAAL,GAAO,IAAIX,IAAJ,EAAP;AAPsB;AAQlB;;;;wCACmB;AAAA;;AAChBY,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,WAAKL,KAAL,CAAWM,MAAX,CAAkBC,IAAlB,CAAuB,KAAKP,KAA5B;AACA,WAAKA,KAAL,CAAWQ,IAAX,CAAgBD,IAAhB,CAAqB,KAAKP,KAA1B;AACA,WAAKA,KAAL,CAAWS,IAAX,CAAgBF,IAAhB,CAAqB,KAAKP,KAA1B;AACA,WAAKA,KAAL,CAAWU,SAAX,CAAqBH,IAArB,CAA0B,KAAKP,KAA/B,EALgB,CAMhB;AACA;AACP;AACA;;AACO,WAAKW,OAAL,GAAeC,WAAW,CACtB;AAAA,eAAM,MAAI,CAACT,CAAL,CAAOU,IAAP,CAAY,MAAI,CAACb,KAAjB,CAAN;AAAA,OADsB,EAElC;AACY,UAHsB,CAA1B;AAMH;;;2CACsB;AACnBc,MAAAA,aAAa,CAAC,KAAKH,OAAN,CAAb;AACH;;;2BACM;AACV;AACK,WAAKI,QAAL,CAAc;AACZd,QAAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GAAX,GAAe;AADR,OAAd;AAGD;;;6BACQ;AAAA,wBACsB,KAAKF,KAD3B;AAAA,UACGiB,OADH,eACGA,OADH;AAAA,UACYhB,KADZ,eACYA,KADZ;AAEL,aACQ;AAAK,QAAA,SAAS,EAAEgB,OAAO,CAACrB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACV,KAAKK,KAAL,CAAWC,GADD,CADR;AAKH;;;;EA3CkBZ,S;;AA8CvBS,QAAQ,CAACmB,SAAT,GAAqB;AACjBD,EAAAA,OAAO,EAAEzB,SAAS,CAAC2B,MAAV,CAAiBC;AADT,CAArB;AAIA,eAAe7B,UAAU,CAACG,MAAD,CAAV,CAAmBK,QAAnB,CAAf","sourcesContent":["import React, { Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from \"prop-types\";\nimport Test from '../js/Test';\n\nconst styles = theme => ({\n    content: {\n        flex: '1 0 auto',\n        paddingTop: '5rem',\n    }\n});\n\n\n/**\n * The entire app get generated from this container.\n * We set the material UI theme by choosing a primary and secondary color from the metMuiThemes file\n * and creating a color palette with the createTheme method.\n * For information about using the different palettes see material UI documentation\n * \n * This app contains the database, path and matrix states...\n */\nclass AutoLoad extends Component {\n    constructor(props) {\n\tsuper(props);\n\tthis.state=props.state;\n\tthis.state.React.AutoLoad = this;\n\tthis.state.cnt=0;\n\tthis.state.tick=this.tick;\n\tthis.state.AutoLoad=this;\n\tthis.t=new Test();\n    };\n    componentDidMount() {\n        console.log(\"Initialising alarm.\")\n        this.state.Colors.init(this.state);\n        this.state.Path.init(this.state);\n        this.state.Show.init(this.state);\n        this.state.Threshold.init(this.state);\n        //console.log(\"Update database.\")\n        //this.state.Database.update(this.state);\n\t//var t=new Test();\n\t//t.test(this.state);\n        this.timerID = setInterval(\n            () => this.t.test(this.state),\n//            () => this.tick(),\n            1000\n        );\n\n    };\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    };\n    tick() {\n\t// check if database has changed, reload if necessary...\n      this.setState({\n        cnt: this.state.cnt+1\n      });\n    };\n    render() {\n        const { classes, state } = this.props;\n        return (\n                <div className={classes.content}>\n\t\t   {this.state.cnt}\n                </div>\n        );\n    }\n}\n\nAutoLoad.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AutoLoad);\n\n"]},"metadata":{},"sourceType":"module"}