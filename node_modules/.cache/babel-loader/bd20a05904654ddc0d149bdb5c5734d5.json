{"ast":null,"code":"import _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/SeriesCell.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CanvasGraph from './CanvasGraphComponent'; //\ttextAlign: \"center\",\n\nvar styles = function styles(theme) {\n  return {\n    pointer: {\n      textAlign: \"center\",\n      cursor: \"pointer\",\n      padding: 0,\n      overflow: 'hidden',\n      tableLayout: 'fixed'\n    },\n    nopointer: {\n      textAlign: \"center\",\n      padding: 0,\n      overflow: 'hidden',\n      tableLayout: 'fixed'\n    },\n    div: {\n      overflow: 'hidden',\n      tableLayout: 'fixed'\n    },\n    divTableCell: {\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    },\n    divTableCellCursor: {\n      cursor: \"pointer\",\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    }\n  };\n}; //\tpadding: \"0px\";\n//\ttextAlign: \"center\",\n\n\nfunction SeriesCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      onclick = props.onclick,\n      colwhere = props.colwhere,\n      rowwhere = props.rowwhere,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      elements = props.elements,\n      range = props.range,\n      plan = props.plan,\n      key = props.key,\n      other = _objectWithoutProperties(props, [\"classes\", \"state\", \"onclick\", \"colwhere\", \"rowwhere\", \"colkey\", \"colvalues\", \"elements\", \"range\", \"plan\", \"key\"]);\n\n  var cnt = 0;\n  var lev = -1;\n  var elen = elements.length;\n\n  for (var ee = 0; ee < elen; ee++) {\n    cnt = cnt + elements[ee].cnt;\n\n    if (elements[ee].maxlev !== undefined) {\n      lev = Math.max(lev, elements[ee].maxlev);\n    }\n  }\n\n  ;\n  var bgcolor = state.Colors.getLevelColor(lev);\n  var title = \"\";\n\n  if (colwhere !== \"\" && rowwhere !== \"\") {\n    title = \"(\" + colwhere + \") AND (\" + rowwhere + \")\";\n  } else if (colwhere !== \"\") {\n    title = colwhere;\n  } else if (rowwhere !== \"\") {\n    title = rowwhere;\n  } // var bgcolor=state.Colors.getLevelColor(lev);\n  // bgcolor={bgcolor} \n  // height={plan.height}\n  // width={plan.width}\n  //console.log(\"SeriesCell:\",JSON.stringify(elements));\n  //console.log(\"SeriesCell:\",lev,cnt,JSON.stringify(range));\n\n\n  return React.createElement(\"div\", {\n    className: onclick !== undefined ? classes.divTableCellCursor : classes.divTableCell,\n    key: key,\n    style: {\n      backgroundColor: bgcolor\n    },\n    onClick: onclick,\n    title: title,\n    height: plan.height,\n    width: plan.width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(CanvasGraph, Object.assign({}, other, {\n    state: state,\n    range: range,\n    colkey: colkey,\n    colvalues: colvalues,\n    index: 0,\n    onclick: onclick,\n    title: title,\n    elements: elements,\n    level: lev,\n    plan: plan,\n    bgcolor: bgcolor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })));\n}\n\nSeriesCell.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SeriesCell);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/SeriesCell.js"],"names":["React","PropTypes","withStyles","CanvasGraph","styles","theme","pointer","textAlign","cursor","padding","overflow","tableLayout","nopointer","div","divTableCell","border","display","divTableCellCursor","SeriesCell","props","classes","state","onclick","colwhere","rowwhere","colkey","colvalues","elements","range","plan","key","other","cnt","lev","elen","length","ee","maxlev","undefined","Math","max","bgcolor","Colors","getLevelColor","title","backgroundColor","height","width","propTypes","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,wBAAxB,C,CAEA;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,OAAO,EAAE;AACZC,MAAAA,SAAS,EAAE,QADC;AAEZC,MAAAA,MAAM,EAAC,SAFK;AAGZC,MAAAA,OAAO,EAAE,CAHG;AAIZC,MAAAA,QAAQ,EAAE,QAJE;AAKZC,MAAAA,WAAW,EAAE;AALD,KADY;AAQrBC,IAAAA,SAAS,EAAE;AACdL,MAAAA,SAAS,EAAE,QADG;AAEdE,MAAAA,OAAO,EAAE,CAFK;AAGdC,MAAAA,QAAQ,EAAE,QAHI;AAIdC,MAAAA,WAAW,EAAE;AAJC,KARU;AAcrBE,IAAAA,GAAG,EAAE;AACRH,MAAAA,QAAQ,EAAE,QADF;AAERC,MAAAA,WAAW,EAAE;AAFL,KAdgB;AAkBrBG,IAAAA,YAAY,EAAC;AAChBC,MAAAA,MAAM,EAAE,mBADQ;AAEhBC,MAAAA,OAAO,EAAE,YAFO;AAGhBP,MAAAA,OAAO,EAAE;AAHO,KAlBQ;AAuBrBQ,IAAAA,kBAAkB,EAAC;AACtBT,MAAAA,MAAM,EAAE,SADc;AAEtBO,MAAAA,MAAM,EAAE,mBAFc;AAGtBC,MAAAA,OAAO,EAAE,YAHa;AAItBP,MAAAA,OAAO,EAAE;AAJa;AAvBE,GAAL;AAAA,CAApB,C,CA8BA;AACA;;;AACA,SAASS,UAAT,CAAoBC,KAApB,EAA2B;AAAA,MACfC,OADe,GAGeD,KAHf,CACfC,OADe;AAAA,MACPC,KADO,GAGeF,KAHf,CACPE,KADO;AAAA,MACDC,OADC,GAGeH,KAHf,CACDG,OADC;AAAA,MAEtBC,QAFsB,GAGeJ,KAHf,CAEtBI,QAFsB;AAAA,MAEbC,QAFa,GAGeL,KAHf,CAEbK,QAFa;AAAA,MAEJC,MAFI,GAGeN,KAHf,CAEJM,MAFI;AAAA,MAEGC,SAFH,GAGeP,KAHf,CAEGO,SAFH;AAAA,MAGtBC,QAHsB,GAGeR,KAHf,CAGtBQ,QAHsB;AAAA,MAGbC,KAHa,GAGeT,KAHf,CAGbS,KAHa;AAAA,MAGPC,IAHO,GAGeV,KAHf,CAGPU,IAHO;AAAA,MAGFC,GAHE,GAGeX,KAHf,CAGFW,GAHE;AAAA,MAGKC,KAHL,4BAGeZ,KAHf;;AAIvB,MAAIa,GAAG,GAAC,CAAR;AACA,MAAIC,GAAG,GAAC,CAAC,CAAT;AACA,MAAIC,IAAI,GAACP,QAAQ,CAACQ,MAAlB;;AACA,OAAK,IAAIC,EAAE,GAAC,CAAZ,EAAcA,EAAE,GAACF,IAAjB,EAAsBE,EAAE,EAAxB,EAA4B;AACxBJ,IAAAA,GAAG,GAACA,GAAG,GAACL,QAAQ,CAACS,EAAD,CAAR,CAAaJ,GAArB;;AACP,QAAIL,QAAQ,CAACS,EAAD,CAAR,CAAaC,MAAb,KAAwBC,SAA5B,EAAuC;AAC5BL,MAAAA,GAAG,GAACM,IAAI,CAACC,GAAL,CAASP,GAAT,EAAaN,QAAQ,CAACS,EAAD,CAAR,CAAaC,MAA1B,CAAJ;AACV;AACG;;AAAA;AACD,MAAII,OAAO,GAACpB,KAAK,CAACqB,MAAN,CAAaC,aAAb,CAA2BV,GAA3B,CAAZ;AACA,MAAIW,KAAK,GAAC,EAAV;;AACA,MAAIrB,QAAQ,KAAK,EAAb,IAAmBC,QAAQ,KAAK,EAApC,EAAwC;AAC3CoB,IAAAA,KAAK,GAAC,MAAIrB,QAAJ,GAAa,SAAb,GAAuBC,QAAvB,GAAgC,GAAtC;AACI,GAFD,MAEO,IAAID,QAAQ,KAAK,EAAjB,EAAqB;AAC/BqB,IAAAA,KAAK,GAACrB,QAAN;AACI,GAFM,MAEA,IAAIC,QAAQ,KAAK,EAAjB,EAAqB;AAC/BoB,IAAAA,KAAK,GAACpB,QAAN;AACI,GArBsB,CAsBvB;AACA;AACA;AACA;AACA;AACA;;;AACA,SACC;AAAK,IAAA,SAAS,EAAGF,OAAO,KAAKgB,SAAZ,GAAsBlB,OAAO,CAACH,kBAA9B,GAAiDG,OAAO,CAACN,YAA1E;AAAyF,IAAA,GAAG,EAAEgB,GAA9F;AACK,IAAA,KAAK,EAAE;AAACe,MAAAA,eAAe,EAACJ;AAAjB,KADZ;AACuC,IAAA,OAAO,EAAEnB,OADhD;AACyD,IAAA,KAAK,EAAEsB,KADhE;AACuE,IAAA,MAAM,EAAEf,IAAI,CAACiB,MADpF;AAC4F,IAAA,KAAK,EAAEjB,IAAI,CAACkB,KADxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEK,oBAAC,WAAD,oBAAiBhB,KAAjB;AAAwB,IAAA,KAAK,EAAEV,KAA/B;AAAsC,IAAA,KAAK,EAAEO,KAA7C;AAAoD,IAAA,MAAM,EAAEH,MAA5D;AAAoE,IAAA,SAAS,EAAEC,SAA/E;AAA0F,IAAA,KAAK,EAAE,CAAjG;AACC,IAAA,OAAO,EAAEJ,OADV;AACmB,IAAA,KAAK,EAAEsB,KAD1B;AACiC,IAAA,QAAQ,EAAEjB,QAD3C;AACqD,IAAA,KAAK,EAAEM,GAD5D;AACiE,IAAA,IAAI,EAAEJ,IADvE;AAC6E,IAAA,OAAO,EAAEY,OADtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFL,CADD;AAOH;;AAIDvB,UAAU,CAAC8B,SAAX,GAAuB;AACnB5B,EAAAA,OAAO,EAAEnB,SAAS,CAACgD,MAAV,CAAiBC;AADP,CAAvB;AAIA,eAAehD,UAAU,CAACE,MAAD,CAAV,CAAmBc,UAAnB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CanvasGraph from './CanvasGraphComponent';\n\n//\ttextAlign: \"center\",\nconst styles = theme => ({\n    pointer: {\n\ttextAlign: \"center\",\n\tcursor:\"pointer\",\n\tpadding: 0,\n\toverflow: 'hidden',\n\ttableLayout: 'fixed',\n    },\n    nopointer: {\n\ttextAlign: \"center\",\n\tpadding: 0,\n\toverflow: 'hidden',\n\ttableLayout: 'fixed',\n    },\n    div: {\n\toverflow: 'hidden',\n\ttableLayout: 'fixed',\n    },\n    divTableCell:{\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableCellCursor:{\n\tcursor: \"pointer\",\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n});\n//\tpadding: \"0px\";\n//\ttextAlign: \"center\",\nfunction SeriesCell(props) {\n    const { classes,state,onclick,\n\t    colwhere,rowwhere,colkey,colvalues,\n\t    elements,range,plan,key,...other } = props;\n    var cnt=0;\n    var lev=-1;\n    var elen=elements.length;\n    for (var ee=0;ee<elen;ee++) {\n        cnt=cnt+elements[ee].cnt;\n\tif (elements[ee].maxlev !== undefined) {\n            lev=Math.max(lev,elements[ee].maxlev);\n\t}\n    }; \n    var bgcolor=state.Colors.getLevelColor(lev);\n    var title=\"\";\n    if (colwhere !== \"\" && rowwhere !== \"\") {\n\ttitle=\"(\"+colwhere+\") AND (\"+rowwhere+\")\";\n    } else if (colwhere !== \"\") {\n\ttitle=colwhere;\n    } else if (rowwhere !== \"\") {\n\ttitle=rowwhere;\n    }\n    // var bgcolor=state.Colors.getLevelColor(lev);\n    // bgcolor={bgcolor} \n    // height={plan.height}\n    // width={plan.width}\n    //console.log(\"SeriesCell:\",JSON.stringify(elements));\n    //console.log(\"SeriesCell:\",lev,cnt,JSON.stringify(range));\n    return(\n\t    <div className={(onclick !== undefined?classes.divTableCellCursor:classes.divTableCell)} key={key}\n\t         style={{backgroundColor:bgcolor}} onClick={onclick} title={title} height={plan.height} width={plan.width}>\n  \t       <CanvasGraph {...other} state={state} range={range} colkey={colkey} colvalues={colvalues} index={0}\n\t          onclick={onclick} title={title} elements={elements} level={lev} plan={plan} bgcolor={bgcolor}/>  \n\t     </div>\n    );\n}\n\n\n\nSeriesCell.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SeriesCell);\n"]},"metadata":{},"sourceType":"module"}