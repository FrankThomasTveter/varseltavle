{"ast":null,"code":"//console.log(\"Loading LayoutLib.js\");\nfunction Layout() {\n  this.rotate = undefined; // should labels on x-axis be rotated?\n\n  this.priority = undefined; // which key should be on the abscissa\n\n  this.order = {}; // key order\n\n  this.trash = {}; // key trash\n\n  this.init = function (state) {\n    var par = \"Table\" + state.Utils.version;\n    state.Utils.init(par, this);\n  }; // adjust keys so that rows/cols have more than on entry...\n\n\n  this.getPriorityKeys = function (state) {\n    if (state.Layout.priority === undefined) {\n      state.Layout.priority = state.Database.keyCnt.keys();\n    } else {\n      var keys = Object.keys(state.Database.keyCnt);\n      ;\n      var plen = keys;\n\n      for (var ii = 0; ii < plen; ii++) {\n        var key = keys[ii];\n\n        if (state.Layout.priority.indexOf(key) === -1) {\n          state.Layout.priority.push(key);\n        }\n      }\n\n      ;\n    }\n\n    ;\n    return state.Layout.priority; //state.Utils.invertedArray()\n  };\n\n  this.increasePriority = function (state, key) {\n    var kid = state.Layout.priority.indexOf(key);\n    console.log(\"Bumping:\", key, kid, JSON.stringify(state.Layout.priority));\n\n    if (kid !== -1 && kid > 0) {\n      var src = state.Layout.priority.splice(kid, 1); // remove from array   \n\n      state.Utils.spliceArray(state.Layout.priority, kid - 1, 0, src);\n    }\n\n    state.Show.showConfig(state);\n  };\n\n  this.checkTableKeys = function (state) {\n    var ret = [];\n    var where = state.Database.getWhere(state);\n    state.Matrix.initKeyCnt(state);\n    state.Matrix.mapKeyCnt(state, where, 0, state.Path.keys.other); // possible table keys (no undefined)\n\n    state.Path.exportAllKeys(state); //console.log(\"this.checkTableKeys Entering.\",JSON.stringify(setup));\n\n    var keys = state.Path.other.table;\n    var bdone = !keys.length < 2;\n    var iinew = -1;\n    var jjnew = -1;\n    var order = state.Utils.cp(state.Path.keys.other);\n\n    do {\n      //console.log(\"this.checkTableKeys Looping.\");\n      if (keys.length < 2) {\n        bdone = true;\n      } else {\n        // check for number of column values\n        var docs = state.Database.getCntDocs(state, where, state.Path.other.table); // current table keys\n\n        var slen = state.Path.other.table.length;\n        var hits = {};\n        var maxh = {};\n        var kval = {};\n        var ii, jj, key, val; // loop over docs\n\n        var dlen = docs.length;\n\n        for (ii = 0; ii < dlen; ii++) {\n          var doc = docs[ii]; //console.log(\"Trash doc=\",ii,JSON.stringify(doc));\n\n          for (jj = 0; jj < slen; jj++) {\n            key = state.Path.other.table[jj];\n\n            if (doc[key] !== undefined) {\n              val = doc[key];\n              kval[key] = val;\n\n              if (hits[key] === undefined) {\n                hits[key] = {};\n              }\n\n              hits[key][val] = 1 + (hits[key][val] || 0); //console.log(\"Found:\",key,val,hits[key][val]);\n\n              if (hits[key][val] > (maxh[key] || 0)) {\n                maxh[key] = hits[key][val];\n              }\n            }\n          }\n        } //console.log(\"this.checkTableKeys Checking.\",dlen);\n\n\n        var rm = {};\n        bdone = true; //console.log(\"Max:\",JSON.stringify(maxh));\n\n        for (jj = 0; jj < slen; jj++) {\n          key = state.Path.other.table[jj];\n          rm[key] = \"\"; //console.log(\"Checking:\",key,JSON.stringify(maxh));\n\n          if (maxh[key] !== undefined) {\n            if (maxh[key] === 1) {\n              rm[key] = \"other\";\n            } else if (maxh[key] === dlen) {\n              // remove key from table\n              rm[key] = \"self\";\n            }\n          }\n        }\n\n        var rmthis = {};\n\n        for (jj = 0; jj < slen; jj++) {\n          key = state.Path.other.table[jj];\n\n          if (rm[key] === \"other\") {\n            for (var kk = 0; kk < slen; kk++) {\n              var rkey = state.Path.other.table[kk];\n\n              if (kk !== jj) {\n                rmthis[rkey] = \"trash\";\n                iinew = kk;\n              }\n            }\n          } else if (rm[key] === \"self\") {\n            rmthis[key] = \"path\";\n            jjnew = jj;\n          }\n        }\n\n        if (iinew !== -1 && jjnew !== -1) {\n          iinew = -1;\n          jjnew = -1;\n        } //console.log(\"Rm:\",JSON.stringify(rmthis),JSON.stringify(rm));\n\n\n        for (jj = 0; jj < slen; jj++) {\n          key = state.Path.other.table[jj];\n\n          if (rmthis[key] !== undefined) {\n            bdone = false;\n            var sin = state.Path.keys.other.indexOf(key);\n\n            if (sin !== -1) {\n              if (jj === 0) {// flipTable\n                //console.log(\"Flipped table.\",JSON.stringify(state.Path.keys),this.getFlipString(state));\n              } else {//console.log(\"Not Flipping table.\",JSON.stringify(state.Path.keys),this.getFlipString(state));\n                }\n\n              ;\n              var src = state.Path.keys.other.splice(sin, 1); // remove from path\n\n              if (rmthis[key] === \"trash\") {\n                // trash key\n                //console.log(\"### Trashing:\",key);\n                state.Path.keys.trash = state.Path.keys.trash.concat(src); // last path position\n\n                ret = ret.concat(src);\n              } else if (rmthis[key] === \"path\") {\n                // add to path\n                // add to path...\n                val = kval[key]; //console.log(\"### Pathing:\",key,val);\n\n                state.Path.keys.path = state.Path.keys.path.concat(src); // last path position\n\n                state.Path.select.val[key] = [val];\n                state.Path.select.where[key] = key + '=\"' + val + '\"';\n                state.Path.select.cnt[key] = 1;\n                this.order[key] = order; //this.last.flip[key]=this.getFlip(state);\n              }\n\n              ;\n            }\n          }\n        }\n\n        if (!bdone) {\n          state.Path.exportAllKeys(state);\n        }\n      }\n\n      ;\n    } while (!bdone); //console.log(\"this.checkTableKeys Done.\",JSON.stringify(state.Path.other.table));\n\n\n    return ret;\n  };\n\n  this.getDescription = function (state, element, skeys) {\n    if (element.cnt === 1) {\n      var s = \"\";\n      var docs = element.docs;\n      var doc = docs[0];\n      var klen = skeys.length;\n\n      for (var jj = 0; jj < klen; jj++) {\n        var d = skeys[jj] + \"=\" + doc[skeys[jj]];\n        ;\n\n        if (s !== \"\") {\n          s = s + \" \" + d;\n        } else {\n          s = d;\n        }\n      }\n\n      return s;\n    } else {\n      return element.cnt;\n    }\n  };\n\n  this.selectItem = function (state, colkey, rowkey, colval, rowval, colwhere, rowwhere, colcnt, rowcnt) {\n    console.log(\"Selectitem:\", colkey, rowkey, colval, rowval, colwhere, rowwhere, colcnt, rowcnt); //var colkey=state.Path.getColKey(state);\n    //var rowkey=state.Path.getRowKey(state);\n\n    var order = state.Utils.cp(state.Path.keys.other);\n    console.log(\"SelectItem:\", colkey, \"=\", colval, \"  \", rowkey, \"=\", rowval);\n\n    if (state.Show.getLayoutMode(state) === state.Show.code.layout.Map) {\n      if (this.selectMapKey(state, colkey, colval, colwhere, colcnt)) {\n        this.order[colkey] = state.Utils.cp(order); //this.flip[colkey]=this.getFlip(state);\n\n        if (this.selectMapKey(state, rowkey, rowval, rowwhere, rowcnt)) {\n          this.order[rowkey] = state.Utils.cp(order); //this.last.flip[rowkey]=this.getFlip(state);\n        }\n\n        this.trash[colkey] = this.checkTableKeys(state);\n        console.log(\"this.checkTableKeys Done.\", colkey, JSON.stringify(this.trash[colkey]));\n      }\n\n      ; //console.log(\"Path:\",JSON.stringify(state.Path))\n\n      state.Html.setFootnote(state, \"Extracting data.\");\n      setTimeout(function () {\n        state.Show.showAll(state);\n      }.bind(this), 0);\n    } else if (this.selectTableKey(state, colkey, colval, colwhere, colcnt)) {\n      this.order[colkey] = order; //this.flip[colkey]=this.getFlip(state);\n\n      if (this.selectTableKey(state, rowkey, rowval, rowwhere, rowcnt)) {\n        this.order[rowkey] = state.Utils.cp(order); //this.last.flip[rowkey]=this.getFlip(state);\n      }\n\n      this.trash[colkey] = this.checkTableKeys(state);\n      console.log(\"this.checkTableKeys Done.\", colkey, JSON.stringify(this.trash[colkey]));\n      state.Html.setFootnote(state, \"Extracting data.\");\n      setTimeout(function () {\n        state.Show.showAll(state);\n      }.bind(this), 0);\n    } else if (this.selectTableKey(state, rowkey, rowval, rowwhere, rowcnt)) {\n      this.order[rowkey] = order; //this.last.flip[rowkey]=this.getFlip(state);\n\n      this.trash[rowkey] = this.checkTableKeys(state);\n      console.log(\"this.checkTableKeys Done.\", rowkey, JSON.stringify(this.trash[rowkey]));\n      state.Html.setFootnote(state, \"Extracting data.\");\n      setTimeout(function () {\n        state.Show.showAll(state);\n      }.bind(this), 0);\n    } else {\n      console.log(\"Unable to select:\", rowkey, colkey);\n    }\n\n    console.log(\"Selectitem Done:\", rowwhere, colwhere);\n  };\n\n  this.selectMapKey = function (state, key, val, where, cnt) {\n    // keep abscissa\n    console.log(\"Table.Selecting:\", key, \"=\", val, \", where=\", where);\n    state.Path.select.val[key] = [val];\n    state.Path.select.where[key] = where;\n    state.Path.select.cnt[key] = cnt;\n\n    if (state.Utils.missing(state.Path.keys.path, key)) {\n      //console.log(\"Adding to path:\",key);\n      state.Path.keys.path = state.Path.keys.path.concat(key); // last path position\n    }\n\n    ;\n    return true;\n  };\n\n  this.selectTableKey = function (state, key, val, where, cnt) {\n    // keep abscissa\n    console.log(\"this.Selecting:\", key, \"=\", val, \", where=\", where);\n    var sid = state.Path.keys.other.indexOf(key);\n\n    if (sid !== -1) {\n      state.Path.select.val[key] = [val];\n      state.Path.select.where[key] = where;\n      state.Path.select.cnt[key] = cnt;\n      var src = state.Path.keys.other.splice(sid, 1); // remove from path\n\n      if (state.Utils.missing(state.Path.keys.path, src)) {\n        //console.log(\"Adding to path:\",JSON.stringify(src));\n        state.Path.keys.path = state.Path.keys.path.concat(src); // last path position\n      }\n\n      ;\n\n      if (cnt > 1 && state.Utils.missing(state.Path.keys.trash, src)) {\n        console.log(\"Adding \", JSON.stringify(src), \" to trash.\");\n        state.Path.keys.trash = state.Path.keys.trash.concat(src);\n      }\n\n      ; //console.log(\"Selectkey:\",JSON.stringify(setup),JSON.stringify(src));\n\n      return true;\n    } else {\n      console.log(\"Missing \", key, \" in path:\", JSON.stringify(state.Path.keys));\n      return false;\n    }\n  };\n\n  this.getPriorityIndex = function (state, arr) {\n    var len, ii;\n    var pri = {};\n    len = arr.length;\n\n    for (ii = 0; ii < len; ii++) {\n      pri[arr[ii]] = 0;\n    }\n\n    ;\n\n    if (this.priority !== undefined) {\n      len = this.priority.length;\n\n      for (ii = 0; ii < len; ii++) {\n        var key = this.priority[ii];\n        pri[key] = len + 1 - ii;\n      }\n\n      ;\n    }\n\n    ;\n    return pri;\n  };\n\n  this.changePriority = function (state, key, trg) {\n    // key -> trg\n    if (key === undefined || trg === undefined) {\n      return;\n    }\n\n    console.log(\"Priority:\", key, \"->\", trg, JSON.stringify(this.priority)); //if (typeof trg  === \"undefined\") {\n\n    var col = state.Path.other.table[0];\n    var row = state.Path.other.table[1]; //var icol=0;\n    //var irow=0;\n\n    var ikey = 0;\n    var itrg = 0;\n    var len = this.priority.length;\n\n    for (var ii = 0; ii < len; ii++) {\n      if (this.priority[ii] === col) {//icol=len+1-ii;\n      }\n\n      ;\n\n      if (this.priority[ii] === row) {//irow=len+1-ii;\n      }\n\n      ;\n\n      if (this.priority[ii] === key) {\n        ikey = len + 1 - ii;\n      }\n\n      if (this.priority[ii] === trg) {\n        itrg = len + 1 - ii;\n      }\n    }\n\n    if (itrg < ikey) {\n      // demote existing key\n      if (itrg > 0) {\n        // key exists on priority list\n        state.Utils.spliceArray(this.priority, len + 2 - itrg, 0, key); // add after\n\n        console.log(\"Added:\", JSON.stringify(this.priority), ikey, itrg, key); //var src=\n\n        this.priority.splice(len + 1 - ikey, 1); // remove\n      } else {\n        // key exists, target does not\n        //var src=\n        this.priority.splice(len + 1 - ikey, 1); // remove\n\n        this.priority.concat(key);\n      }\n    } else if (itrg > ikey) {\n      // demote, key may not exist on priority list\n      if (ikey > 0) {\n        // key exists on priority list\n        //var src=\n        this.priority.splice(len + 1 - ikey, 1); // remove\n\n        state.Utils.spliceArray(this.priority, len + 1 - itrg, 0, key); // add before\n      } else {\n        // key is not on priority list\n        state.Utils.spliceArray(this.priority, len + 1 - itrg, 0, key); // add before\n      }\n    } else if (itrg === 0) {\n      // key and target not on the priority list\n      this.priority.concat(key);\n    }\n\n    console.log(\"Changed priority:\", JSON.stringify(this.priority), ikey, itrg);\n    return true;\n  }; //this.flipTable=function(state) {\n  //    var bb=this.colrow[0];\n  //    this.colrow[0]=this.colrow[1];\n  //    this.colrow[1]=bb;\n  //    //console.log(\"Setup:\",JSON.stringify(setup));\n  //};\n\n\n  this.selectKey = function (state, key, val, where, cnt) {\n    var order = state.Utils.cp(state.Path.keys.other); //console.log(\"SelecRow: rowkey=\",key,\" val=\",val);\n\n    console.log(\"SelectKey:\", key, val, where, cnt);\n\n    if (state.Show.getLayoutMode(state) === state.Show.code.layout.Map) {\n      if (this.selectMapKey(state, key, val, where, cnt)) {\n        this.order[key] = state.Utils.cp(order);\n      }\n\n      state.Html.setFootnote(state, \"Extracting data.\");\n      setTimeout(function () {\n        state.Show.showAll(state);\n      }.bind(this), 0);\n    } else if (this.selectTableKey(state, key, val, where, cnt)) {\n      this.order[key] = order;\n      this.trash[key] = this.checkTableKeys(state); //console.log(\"this.checkTableKeys Done.\",rowkey,JSON.stringify(this.trash[key]));\n\n      state.Html.setFootnote(state, \"Extracting data.\");\n      setTimeout(function () {\n        state.Show.showAll(state);\n      }.bind(this), 0);\n    } else {\n      console.log(\"Unable to select:\", key);\n    } //console.log(\"Finally:\",JSON.stringify(state.Path.keys.other));\n\n  };\n\n  this.swapTableKeys = function (state, c, r) {\n    //console.log(\"Swapping:\",c,\"<->\",r);\n    var sid = state.Path.keys.other.indexOf(c);\n    var tid = state.Path.keys.other.indexOf(r);\n\n    if (sid !== -1 && tid !== -1) {\n      var src = state.Path.keys.other[sid];\n      var trg = state.Path.keys.other[tid];\n\n      if (sid > tid) {\n        state.Path.keys.other.splice(sid, 1);\n        state.Path.keys.other.splice(tid, 1);\n        state.Path.keys.other.splice(tid, 0, src);\n        state.Path.keys.other.splice(sid, 0, trg);\n      } else {\n        state.Path.keys.other.splice(tid, 1);\n        state.Path.keys.other.splice(sid, 1);\n        state.Path.keys.other.splice(sid, 0, trg);\n        state.Path.keys.other.splice(tid, 0, src);\n      }\n    } else {\n      console.log(\"Invalid keys:\", c, r, JSON.stringify(state.Path.keys));\n    }\n  };\n\n  this.getPriority = function (state) {\n    return state.Utils.cp(this.priority);\n  };\n\n  this.setPriority = function (state, priority) {\n    this.priority = priority;\n  };\n}\n\n;\nexport default Layout;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/LayoutLib.js"],"names":["Layout","rotate","undefined","priority","order","trash","init","state","par","Utils","version","getPriorityKeys","Database","keyCnt","keys","Object","plen","ii","key","indexOf","push","increasePriority","kid","console","log","JSON","stringify","src","splice","spliceArray","Show","showConfig","checkTableKeys","ret","where","getWhere","Matrix","initKeyCnt","mapKeyCnt","Path","other","exportAllKeys","table","bdone","length","iinew","jjnew","cp","docs","getCntDocs","slen","hits","maxh","kval","jj","val","dlen","doc","rm","rmthis","kk","rkey","sin","concat","path","select","cnt","getDescription","element","skeys","s","klen","d","selectItem","colkey","rowkey","colval","rowval","colwhere","rowwhere","colcnt","rowcnt","getLayoutMode","code","layout","Map","selectMapKey","Html","setFootnote","setTimeout","showAll","bind","selectTableKey","missing","sid","getPriorityIndex","arr","len","pri","changePriority","trg","col","row","ikey","itrg","selectKey","swapTableKeys","c","r","tid","getPriority","setPriority"],"mappings":"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","sourcesContent":["//console.log(\"Loading LayoutLib.js\");\n\nfunction Layout() {\n    this.rotate=undefined;  // should labels on x-axis be rotated?\n    this.priority=undefined;// which key should be on the abscissa\n    this.order={};          // key order\n    this.trash={};           // key trash\n    this.init=function(state){\n\tvar par=\"Table\"+state.Utils.version\n\tstate.Utils.init(par,this);\n    };\n    // adjust keys so that rows/cols have more than on entry...\n    this.getPriorityKeys=function(state){\n        if (state.Layout.priority === undefined) {\n            state.Layout.priority=state.Database.keyCnt.keys();\n        } else {\n\t    var keys = Object.keys(state.Database.keyCnt);;\n\t    var plen = keys;\n\t    for (var ii = 0; ii < plen; ii++) {\n\t\tvar key=keys[ii];\n\t\tif (state.Layout.priority.indexOf(key)===-1) {\n\t\t    state.Layout.priority.push(key);\n\t\t}\n\t    };\n\t};\n\treturn state.Layout.priority; //state.Utils.invertedArray()\n    };\n    this.increasePriority=function(state,key){\n\tvar kid=state.Layout.priority.indexOf(key);\n\tconsole.log(\"Bumping:\",key,kid,JSON.stringify(state.Layout.priority));\n\tif (kid !== -1 && kid > 0) {\n\t    var src=state.Layout.priority.splice(kid, 1); // remove from array   \n\t    state.Utils.spliceArray(state.Layout.priority,kid-1,0,src);\n\t}\n\tstate.Show.showConfig(state);\n    };\n    this.checkTableKeys=function(state) {\n\tvar ret=[];\n\tvar where = state.Database.getWhere(state);\n\tstate.Matrix.initKeyCnt(state);\n\tstate.Matrix.mapKeyCnt(state,where,0,state.Path.keys.other); // possible table keys (no undefined)\n\tstate.Path.exportAllKeys(state);\n\t//console.log(\"this.checkTableKeys Entering.\",JSON.stringify(setup));\n\tvar keys=state.Path.other.table;\n\tvar bdone= ! keys.length < 2;\n\tvar iinew=-1;\n\tvar jjnew=-1;\n\tvar order=state.Utils.cp(state.Path.keys.other);\n\tdo {\n\t    //console.log(\"this.checkTableKeys Looping.\");\n\t    if (keys.length < 2) {\n\t\tbdone=true;\n\t    } else {\n\t\t// check for number of column values\n\t\tvar docs=state.Database.getCntDocs(state,where,state.Path.other.table); // current table keys\n\t\tvar slen=state.Path.other.table.length;\n\t\tvar hits={};\n\t\tvar maxh={};\n\t\tvar kval={};\n\t\tvar ii,jj,key,val;\n\t\t// loop over docs\n\t\tvar dlen = docs.length;\n\t\tfor (ii = 0; ii < dlen; ii++) {\n    \t\t    var doc=docs[ii];\n\t\t    //console.log(\"Trash doc=\",ii,JSON.stringify(doc));\n\t\t    for (jj=0;jj<slen;jj++) {\n\t\t\tkey=state.Path.other.table[jj];\n\t\t\tif (doc[key] !== undefined) {\n\t\t\t    val=doc[key];\n\t\t\t    kval[key]=val;\n\t\t\t    if (hits[key]  === undefined) {hits[key]={};}\n\t\t\t    hits[key][val] = 1+ (hits[key][val]||0);\n\t\t\t    //console.log(\"Found:\",key,val,hits[key][val]);\n\t\t\t    if (hits[key][val] > (maxh[key]||0)) {\n\t\t\t\tmaxh[key]=hits[key][val];\n\t\t\t    }\n\t\t\t}\n\t\t    }\n\t\t}\n\t\t//console.log(\"this.checkTableKeys Checking.\",dlen);\n\t\tvar rm={};\n\t\tbdone=true;\n\t\t//console.log(\"Max:\",JSON.stringify(maxh));\n\t\tfor (jj=0;jj<slen;jj++) {\n\t\t    key=state.Path.other.table[jj];\n\t\t    rm[key]=\"\";\n\t\t    //console.log(\"Checking:\",key,JSON.stringify(maxh));\n\t\t    if (maxh[key] !== undefined) {\n\t\t\tif (maxh[key]  === 1) {\n\t\t\t    rm[key]=\"other\";\n\t\t\t} else if (maxh[key]  === dlen) { // remove key from table\n\t\t\t    rm[key]=\"self\";\n\t\t\t}\n\t\t    }\n\t\t}\n\t\tvar rmthis={};\n\t\tfor (jj=0;jj<slen;jj++) {\n\t\t    key=state.Path.other.table[jj];\n\t\t    if (rm[key]  === \"other\") {\n\t\t\tfor (var kk=0;kk<slen;kk++) {\n\t\t\t    var rkey=state.Path.other.table[kk];\n\t\t\t    if (kk !== jj) {\n\t\t\t\trmthis[rkey]=\"trash\";\n\t\t\t\tiinew=kk;\n\t\t\t    }\n\t\t\t}\n\t\t    } else if (rm[key]  === \"self\") {\n\t\t\trmthis[key]=\"path\";\n\t\t\tjjnew=jj;\n\t\t    }\n\t\t}\n\t\tif (iinew !== -1 && jjnew !== -1) {\n\t\t    iinew=-1;\n\t\t    jjnew=-1;\n\t\t}\n\t\t//console.log(\"Rm:\",JSON.stringify(rmthis),JSON.stringify(rm));\n\t\tfor (jj=0;jj<slen;jj++) {\n\t\t    key=state.Path.other.table[jj];\n\t\t    if (rmthis[key] !== undefined) {\n\t\t\tbdone=false;\n\t\t\tvar sin=state.Path.keys.other.indexOf(key);\n\t\t\tif (sin !== -1) {\n\t\t\t    if (jj  === 0) {\n\t\t\t\t// flipTable\n\t\t\t\t//console.log(\"Flipped table.\",JSON.stringify(state.Path.keys),this.getFlipString(state));\n\t\t\t    } else {\n\t\t\t\t//console.log(\"Not Flipping table.\",JSON.stringify(state.Path.keys),this.getFlipString(state));\n\t\t\t    };\n\t\t\t    var src=state.Path.keys.other.splice(sin, 1); // remove from path\n\t\t\t    if (rmthis[key]  === \"trash\") {// trash key\n\t\t\t\t//console.log(\"### Trashing:\",key);\n\t\t\t\tstate.Path.keys.trash=state.Path.keys.trash.concat(src); // last path position\n\t\t\t\tret=ret.concat(src);\n\t\t\t    } else if (rmthis[key]  === \"path\") {// add to path\n\t\t\t\t// add to path...\n\t\t\t\tval=kval[key];\n\t\t\t\t//console.log(\"### Pathing:\",key,val);\n\t\t\t\tstate.Path.keys.path=state.Path.keys.path.concat(src); // last path position\n\t\t\t\tstate.Path.select.val[key]=[val];\n\t\t\t\tstate.Path.select.where[key]=key+'=\"'+val+'\"'\n\t\t\t\tstate.Path.select.cnt[key]=1;\n\t\t\t\tthis.order[key]=order;\n\t\t\t\t//this.last.flip[key]=this.getFlip(state);\n\t\t\t    };\n\t\t\t}\n\t\t    }\n\t\t}\n\t\tif (! bdone) {state.Path.exportAllKeys(state);}\n\t    };\n\t} while (! bdone);\n\t//console.log(\"this.checkTableKeys Done.\",JSON.stringify(state.Path.other.table));\n\treturn ret;\n    };\n    this.getDescription=function(state,element,skeys) {\n\tif (element.cnt  === 1) {\n\t    var s=\"\";\n\t    var docs=element.docs;\n\t    var doc=docs[0];\n\t    var klen=skeys.length;\n\t    for (var jj = 0; jj < klen; jj++) {\n\t\tvar d=skeys[jj]+\"=\"+doc[skeys[jj]];;\n\t\tif (s !== \"\") {\n\t\t    s=s+\" \"+d\n\t\t} else {\n\t\t    s=d;\n\t\t}\n\t    }\n\t    return s;\n\t} else {\n\t    return element.cnt;\n\t}\n    };\n    this.selectItem=function(state,colkey,rowkey,colval,rowval,colwhere,rowwhere,colcnt,rowcnt) {\n\tconsole.log(\"Selectitem:\",colkey,rowkey,colval,rowval,colwhere,rowwhere,colcnt,rowcnt);\n\t//var colkey=state.Path.getColKey(state);\n\t//var rowkey=state.Path.getRowKey(state);\n\tvar order=state.Utils.cp(state.Path.keys.other);\n\tconsole.log(\"SelectItem:\",colkey,\"=\",colval,\"  \",rowkey,\"=\",rowval);\n\tif (state.Show.getLayoutMode(state)  === state.Show.code.layout.Map) {\n\t    if (this.selectMapKey(state,colkey,colval,colwhere,colcnt)) {\n\t\tthis.order[colkey]=state.Utils.cp(order);\n\t\t//this.flip[colkey]=this.getFlip(state);\n\t\tif (this.selectMapKey(state,rowkey,rowval,rowwhere,rowcnt)) {\n\t\t    this.order[rowkey]=state.Utils.cp(order);\n\t\t    //this.last.flip[rowkey]=this.getFlip(state);\n\t\t}\n\t\tthis.trash[colkey]=this.checkTableKeys(state);\n\t\tconsole.log(\"this.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n\t    };\n\t    //console.log(\"Path:\",JSON.stringify(state.Path))\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    setTimeout(function() {\n\t\tstate.Show.showAll(state);\t\n\t    }.bind(this),0);\n\t} else if (this.selectTableKey(state,colkey,colval,colwhere,colcnt)) {\n\t    this.order[colkey]=order;\n\t    //this.flip[colkey]=this.getFlip(state);\n\t    if (this.selectTableKey(state,rowkey,rowval,rowwhere,rowcnt)) {\n\t\tthis.order[rowkey]=state.Utils.cp(order);\n\t\t//this.last.flip[rowkey]=this.getFlip(state);\n\t    }\n\t    this.trash[colkey]=this.checkTableKeys(state);\n\t    console.log(\"this.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    setTimeout(function() {\n\t\tstate.Show.showAll(state);\n\t    }.bind(this),0);\n\t} else if (this.selectTableKey(state,rowkey,rowval,rowwhere,rowcnt)) {\n\t    this.order[rowkey]=order;\n\t    //this.last.flip[rowkey]=this.getFlip(state);\n\t    this.trash[rowkey]=this.checkTableKeys(state);\n\t    console.log(\"this.checkTableKeys Done.\",rowkey,JSON.stringify(this.trash[rowkey]));\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    setTimeout(function() {\n\t\tstate.Show.showAll(state);\n\t    }.bind(this),0);\n\t} else {\n\t    console.log(\"Unable to select:\",rowkey,colkey);\n\t}\n\tconsole.log(\"Selectitem Done:\",rowwhere,colwhere);\n    };\n    this.selectMapKey=function(state,key,val,where,cnt) { // keep abscissa\n\tconsole.log(\"Table.Selecting:\",key,\"=\",val,\", where=\",where);\n\tstate.Path.select.val[key]=[val];\n\tstate.Path.select.where[key]=where;\n\tstate.Path.select.cnt[key]=cnt;\n\tif (state.Utils.missing(state.Path.keys.path,key)) {\n\t    //console.log(\"Adding to path:\",key);\n\t    state.Path.keys.path=state.Path.keys.path.concat(key); // last path position\n\t};\n\treturn true;\n    };\n    this.selectTableKey=function(state,key,val,where,cnt) { // keep abscissa\n\tconsole.log(\"this.Selecting:\",key,\"=\",val,\", where=\",where);\n\tvar sid = state.Path.keys.other.indexOf(key);\n\tif (sid !== -1) {\n\t    state.Path.select.val[key]=[val];\n\t    state.Path.select.where[key]=where;\n\t    state.Path.select.cnt[key]=cnt;\n\t    var src=state.Path.keys.other.splice(sid, 1); // remove from path\n\t    if ( state.Utils.missing(state.Path.keys.path,src)) {\n\t\t//console.log(\"Adding to path:\",JSON.stringify(src));\n\t\tstate.Path.keys.path=state.Path.keys.path.concat(src); // last path position\n\t    };\n\t    if (cnt>1 && state.Utils.missing(state.Path.keys.trash,src)) {\n\t\tconsole.log(\"Adding \",JSON.stringify(src),\" to trash.\");\n\t\tstate.Path.keys.trash=state.Path.keys.trash.concat(src)\n\t    };\n\t    //console.log(\"Selectkey:\",JSON.stringify(setup),JSON.stringify(src));\n\t    return true;\n\t} else {\n\t    console.log(\"Missing \",key,\" in path:\",JSON.stringify(state.Path.keys));\n\t    return false;\n\t}\n    };\n    this.getPriorityIndex=function(state,arr) {\n\tvar len,ii;\n\tvar pri={};\n\tlen=arr.length;\n\tfor (ii=0;ii<len;ii++) {\n\t    pri[arr[ii]]=0;\n\t};\n\tif (this.priority !== undefined) {\n\t    len=this.priority.length\n\t    for (ii=0;ii<len;ii++) {\n\t\tvar key=this.priority[ii]\n\t\tpri[key]=len+1-ii\n\t    };\n\t};\n\treturn pri;\n    };\n    this.changePriority=function(state,key,trg) {  // key -> trg\n\tif (key  === undefined || trg  === undefined) { return;}\n\tconsole.log(\"Priority:\",key,\"->\",trg,JSON.stringify(this.priority));\n\t//if (typeof trg  === \"undefined\") {\n\tvar col=state.Path.other.table[0];\n\tvar row=state.Path.other.table[1];\n\t//var icol=0;\n\t//var irow=0;\n\tvar ikey=0;\n\tvar itrg=0;\n\tvar len=this.priority.length;\n\tfor (var ii=0;ii<len;ii++) {\n\t    if (this.priority[ii]  === col) {\n\t\t//icol=len+1-ii;\n\t    };\n\t    if  (this.priority[ii]  === row) {\n\t\t//irow=len+1-ii;\n\t    };\n\t    if  (this.priority[ii]  === key) {\n\t\tikey=len+1-ii;\n\t    }\n\t    if  (this.priority[ii]  === trg) {\n\t\titrg=len+1-ii;\n\t    }\n\t}\n\tif (itrg < ikey) {        // demote existing key\n\t    if (itrg > 0) {       // key exists on priority list\n\t\tstate.Utils.spliceArray(this.priority,len+2-itrg,0,key);  // add after\n\n\t\tconsole.log(\"Added:\",JSON.stringify(this.priority),ikey,itrg,key);\n\t\t\n\t\t//var src=\n\t\tthis.priority.splice(len+1-ikey, 1);        // remove\n\t    } else {              // key exists, target does not\n\t\t//var src=\n\t\tthis.priority.splice(len+1-ikey, 1);        // remove\n\t\tthis.priority.concat(key)\t    \n\t    }\n\t} else if (itrg > ikey) { // demote, key may not exist on priority list\n\t    if (ikey>0) {         // key exists on priority list\n\t\t//var src=\n\t\tthis.priority.splice(len+1-ikey, 1);        // remove\n\t\tstate.Utils.spliceArray(this.priority,len+1-itrg,0,key);  // add before\n\t    } else {              // key is not on priority list\n\t\tstate.Utils.spliceArray(this.priority,len+1-itrg,0,key);  // add before\n\t    }\n\t} else if (itrg === 0) { // key and target not on the priority list\n\t    this.priority.concat(key)\n\t}\n\tconsole.log(\"Changed priority:\",JSON.stringify(this.priority),ikey,itrg);\n\treturn true;\n    }\n    //this.flipTable=function(state) {\n    //    var bb=this.colrow[0];\n    //    this.colrow[0]=this.colrow[1];\n    //    this.colrow[1]=bb;\n    //    //console.log(\"Setup:\",JSON.stringify(setup));\n    //};\n    this.selectKey=function(state,key,val,where,cnt) {\n\tvar order=state.Utils.cp(state.Path.keys.other);\n\t//console.log(\"SelecRow: rowkey=\",key,\" val=\",val);\n\tconsole.log(\"SelectKey:\",key,val,where,cnt);\n\tif (state.Show.getLayoutMode(state)  === state.Show.code.layout.Map) {\n\t    if (this.selectMapKey(state,key,val,where,cnt)) {\n\t\tthis.order[key]=state.Utils.cp(order);\n\t    }\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    setTimeout(function() {\n\t\tstate.Show.showAll(state);\n\t    }.bind(this),0);\n\t} else if (this.selectTableKey(state,key,val,where,cnt)) {\n\t    this.order[key]=order;\n\t    this.trash[key]=this.checkTableKeys(state);\n\t    //console.log(\"this.checkTableKeys Done.\",rowkey,JSON.stringify(this.trash[key]));\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    setTimeout(function() {\n\t\tstate.Show.showAll(state);\n\t    }.bind(this),0);\n\t} else {\n\t    console.log(\"Unable to select:\",key);\n\t}\n\t//console.log(\"Finally:\",JSON.stringify(state.Path.keys.other));\n    };\n    this.swapTableKeys=function(state,c,r) {\n\t//console.log(\"Swapping:\",c,\"<->\",r);\n\tvar sid = state.Path.keys.other.indexOf(c);\n\tvar tid = state.Path.keys.other.indexOf(r);\n\tif (sid !== -1 && tid !== -1) {\n\t    var src=state.Path.keys.other[sid];\n\t    var trg=state.Path.keys.other[tid];\n\t    if (sid > tid) {\n\t\tstate.Path.keys.other.splice(sid, 1);\n\t\tstate.Path.keys.other.splice(tid, 1);\n\t\tstate.Path.keys.other.splice(tid, 0, src);\n\t\tstate.Path.keys.other.splice(sid, 0, trg);\n\t    } else {\n\t\tstate.Path.keys.other.splice(tid, 1);\n\t\tstate.Path.keys.other.splice(sid, 1);\n\t\tstate.Path.keys.other.splice(sid, 0, trg);\n\t\tstate.Path.keys.other.splice(tid, 0, src);\n\t    }\n\t} else {\n\t    console.log(\"Invalid keys:\",c,r,JSON.stringify(state.Path.keys));\n\t}\n    };\n    this.getPriority=function(state) {\n\treturn state.Utils.cp(this.priority);\n    };\n    this.setPriority=function(state,priority) {\n\tthis.priority=priority;\n    }\n};\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}