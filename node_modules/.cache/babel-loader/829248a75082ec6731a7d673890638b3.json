{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/SettingsComponent.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\nimport ViewIcon from '@material-ui/icons/Visibility';\nimport NoViewIcon from '@material-ui/icons/VisibilityOff';\nimport KeyIcon from '@material-ui/icons/VpnKey';\nimport ChartIcon from '@material-ui/icons/BarChart';\nimport View from './ViewComponent';\nimport Keys from './KeysComponent';\n\nvar styles = function styles(theme) {\n  return {\n    settings: {\n      marginLeft: 'auto',\n      color: 'red'\n    }\n  };\n};\n\nfunction ViewButton(props) {\n  var classes = props.classes,\n      state = props.state;\n\n  var onclick = function onclick() {\n    return state.Show.toggleView(state);\n  };\n\n  var mode = state.Show.viewMode;\n\n  if (mode === state.Show.code.view.showPath) {\n    return React.createElement(\"div\", {\n      className: classes.config,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Button, {\n      \"aria-owns\": anchorView ? 'simple-menu' : undefined,\n      \"aria-haspopup\": \"true\",\n      onClick: onclick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(ViewIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })));\n  } else {\n    return React.createElement(\"div\", {\n      className: classes.config,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Button, {\n      \"aria-owns\": anchorView ? 'simple-menu' : undefined,\n      \"aria-haspopup\": \"true\",\n      onClick: onclick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(NoViewIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })));\n  }\n}\n\nvar Settings =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Settings, _Component);\n\n  function Settings() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Settings);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Settings)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      anchorView: null,\n      anchorKeys: null\n    };\n\n    _this.keysClick = function (event) {\n      _this.setState({\n        anchorKeys: event.currentTarget\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        anchorView: null,\n        anchorKeys: null\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Settings, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state,\n          anchor = _this$props.anchor,\n          onclose = _this$props.onclose;\n      var _this$state = this.state,\n          anchorView = _this$state.anchorView,\n          anchorKeys = _this$state.anchorKeys;\n      return React.createElement(Menu, {\n        className: classes.config,\n        id: \"simple-menu\",\n        anchorEl: anchor,\n        open: Boolean(anchor),\n        onClose: onclose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(ViewButton, {\n        classes: classes,\n        state: state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(KeyButton, {\n        classes: classes,\n        state: state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.config,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Button, {\n        \"aria-owns\": anchorKeys ? 'simple-menu' : undefined,\n        \"aria-haspopup\": \"true\",\n        onClick: this.keysClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(KeyIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }))), React.createElement(Keys, {\n        classes: classes,\n        state: state,\n        anchorEl: anchorKeys,\n        onclose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Settings;\n}(Component);\n\nSettings.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Settings);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/SettingsComponent.js"],"names":["React","Component","PropTypes","withStyles","Button","Menu","MenuItem","Chip","ViewIcon","NoViewIcon","KeyIcon","ChartIcon","View","Keys","styles","theme","settings","marginLeft","color","ViewButton","props","classes","state","onclick","Show","toggleView","mode","viewMode","code","view","showPath","config","anchorView","undefined","Settings","anchorKeys","keysClick","event","setState","currentTarget","handleClose","anchor","onclose","Boolean","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\n\nimport ViewIcon from '@material-ui/icons/Visibility';\nimport NoViewIcon from '@material-ui/icons/VisibilityOff';\nimport KeyIcon from '@material-ui/icons/VpnKey';\nimport ChartIcon from '@material-ui/icons/BarChart';\n\nimport View    from './ViewComponent';\nimport Keys    from './KeysComponent';\n\nconst styles = theme => ({\n    settings: {\n        marginLeft: 'auto',\n\tcolor:'red',\n    },\n});\nfunction ViewButton(props) {\n    const {classes, state}=props;\n    var onclick=() => state.Show.toggleView(state);\n    var mode=state.Show.viewMode;\n    if (mode === state.Show.code.view.showPath) {\n\treturn (\n\t\t<div className={classes.config}>\n\t\t <Button\n                    aria-owns={anchorView ? 'simple-menu' : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={onclick}\n\t\t   >\n\t\t   {<ViewIcon />}\n                 </Button>\n\t\t</div>\n\t);\n    } else {\n\treturn (\n\t\t<div className={classes.config}>\n\t\t   <Button\n                      aria-owns={anchorView ? 'simple-menu' : undefined}\n                      aria-haspopup=\"true\"\n                      onClick={onclick}\n\t\t   >\n\t\t      {<NoViewIcon />}\n                   </Button>\n\t\t</div>\n\t);\n    }\n}\n\nclass Settings extends Component {\n    state = {anchorView:null,anchorKeys: null,};\n    keysClick = event => {this.setState({ anchorKeys: event.currentTarget });};\n    handleClose = () => {this.setState({ anchorView: null, anchorKeys:null });};\n    render() {\n        const { classes, state, anchor, onclose } = this.props;\n\tconst { anchorView,anchorKeys } = this.state;\n\treturn (\n\t\t<Menu\n\t          className={classes.config}\n                  id=\"simple-menu\"\n                  anchorEl={anchor}\n                  open={Boolean(anchor)}\n                  onClose={onclose}\n\t\t>\n\t\t<ViewButton classes={classes} state={state}/>\n\t\t<KeyButton classes={classes} state={state}/>\n\n\t\t<div className={classes.config}>\n\t\t <Button\n                    aria-owns={anchorKeys ? 'simple-menu' : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={this.keysClick}\n\t\t   >\n\t\t   {<KeyIcon />}\n                 </Button>\n\t\t</div>\n\t\t<Keys classes={classes} state={state} anchorEl={anchorKeys} onclose={this.handleClose}/>\n\t\t</Menu>\n\t);\n    }\n}\n\nSettings.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Settings);\n"]},"metadata":{},"sourceType":"module"}