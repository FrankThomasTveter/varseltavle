{"ast":null,"code":"//console.log(\"Loading ShowLib.js\");\nfunction Show() {\n  this.code = {\n    mSum: 0,\n    // cell mode\n    mSeries: 1,\n    // cell mode\n    mItem: 2,\n    // cell mode\n    mTable: 0,\n    // layout mode\n    mMap: 1 // layout mode\n\n  };\n  this.state = {\n    qtrash: 0,\n    // should we show trash contents?\n    cellMode: 0,\n    // sum, series, item\n    layoutMode: 0 // table, map\n\n  };\n\n  this.init = function (state) {\n    var par = \"Show\" + state.Utils.version;\n    state.Utils.init(par, this);\n  };\n\n  this.getDim = function (state) {\n    var colkey = state.Path.getColKey(state) || \"\";\n    var rowkey = state.Path.getRowKey(state) || \"\";\n\n    if (colkey !== \"\" && rowkey !== \"\") {\n      return 2;\n    } else if (colkey !== \"\" || rowkey !== \"\") {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  this.setLayoutMode = function (state, mode) {\n    var om = this.state.layoutMode;\n    var o = this.getLayoutMode(state);\n    this.state.layoutMode = mode;\n    var n = this.getLayoutMode(state); //console.log(\"Setting layout mode:\",mode,\":\",o,\"->\",n);\n\n    if (o !== n) {\n      this.showAll(state);\n    } else if (om !== mode) {\n      this.showMode(state);\n    }\n  };\n\n  this.setCellMode = function (state, mode) {\n    var om = this.state.cellMode;\n    var o = this.getCellMode(state);\n    this.state.cellMode = mode;\n    var n = this.getCellMode(state); //console.log(\"Setting cell mode:\",mode,\":\",o,\"->\",n);\n\n    if (o !== n) {\n      this.showAll(state);\n    } else if (om !== mode) {\n      this.showMode(state);\n    }\n  };\n\n  this.getLayoutMode = function (state) {\n    //console.log(\"Getmode init:\",this.state.layoutMode,state.Matrix.cnt);\n    var mode = this.state.layoutMode;\n\n    if (mode === this.code.mMap && state.Matrix.cnt > state.Matrix.popSeries) {\n      mode = this.code.mTable;\n    }\n\n    return mode;\n  };\n\n  this.getCellMode = function (state) {\n    var mode = this.state.cellMode;\n\n    if (mode === this.code.mSingle && state.Matrix.cnt > state.Matrix.popSingle) {\n      mode = this.code.mSeries;\n    }\n\n    if (mode === this.code.mSeries && state.Matrix.cnt > state.Matrix.popSeries) {\n      mode = this.code.mSum;\n    }\n\n    return mode;\n  };\n\n  this.showMode = function (state) {\n    // show data on screen\n    if (state.React.Mode !== undefined) {\n      state.React.Mode.show(state);\n    }\n  };\n\n  this.showButton = function (state, item, main, sel) {\n    if (main && sel) {\n      item.setAttribute(\"style\", state.Html.getButtonStyle(state.Colors.colors.table, state.Colors.colors.fg, true));\n    } else if (main && !sel) {\n      item.setAttribute(\"style\", state.Html.getButtonStyle(state.Colors.colors.table, state.Colors.colors.fg, false));\n    } else if (!main && sel) {\n      item.setAttribute(\"style\", state.Html.getButtonStyle(state.Colors.colors.rest, state.Colors.colors.fg, true));\n    } else if (!main && !sel) {\n      item.setAttribute(\"style\", state.Html.getButtonStyle(state.Colors.colors.rest, state.Colors.colors.fg, false));\n    }\n  };\n\n  this.showAll = function (state, reload) {\n    // show data on screen\n    //var documentLog = document.getElementById(\"log\");\n    state.Html.setLog(state, \"Processing\"); //console.log(\"this.Showing data.\");\n\n    if (reload === undefined || reload) {\n      state.Html.setLog(state, \"Extracting data.\");\n      setTimeout(function () {\n        state.Database.dbextract(state, function (state, matrix) {\n          // callback\n          //console.log(\"Updating matrix.\");\n          state.Path.exportAllKeys(state); //console.log(\"Showing path\");\n\n          this.showPath(state); //console.log(\"Showing trash\");\n\n          this.showConfig(state); //console.log(\"Showing matrix\");\n\n          this.showMatrix(state, matrix); //console.log(\"Pushing URL\");\n\n          state.Utils.pushUrl(state);\n          state.Html.setLog(state);\n        }.bind(this));\n      }.bind(this), 0);\n    } else {\n      console.log(\"Not updating matrix.\");\n      state.Path.exportAllKeys(state);\n      this.showPath(state);\n      this.showConfig(state);\n    }\n\n    this.showMode(state);\n    state.Html.setLog(state);\n  };\n\n  this.showPath = function (state) {\n    if (state.React.Path !== undefined) {\n      state.React.Path.showPath(state); // forceUpdate()\n    } else {\n      console.log(\"No react-path available.\");\n    }\n  };\n\n  this.showConfig = function (state) {\n    if (state.React.Config !== undefined) {\n      state.React.Config.showTrash(state); // forceUpdate()\n    } else {\n      console.log(\"No react-config available.\");\n    }\n  };\n\n  this.showMatrix = function (state, matrix) {\n    if (state.React.Dataset !== undefined) {\n      state.React.Dataset.showMatrix(state, matrix);\n    }\n  };\n\n  this.useCanvas = function (state, matrix) {\n    // check if matrix elements have max 1 data\n    // loop over matrix\n    for (var ii in matrix) {\n      for (var jj in matrix[ii]) {\n        if (matrix[ii][jj].cnt > 1) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  this.scale = function (xval, xmin, xmax, ymin, ymax) {\n    if (ymin > ymax) {\n      return ymin + (xval - xmin) * (ymax - ymin) / (xmax - xmin);\n    } else {\n      return (xval - xmin) * (ymax - ymin) / (xmax - xmin);\n    }\n  };\n}\n\n;\nexport default Show;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/ShowLib.js"],"names":["Show","code","mSum","mSeries","mItem","mTable","mMap","state","qtrash","cellMode","layoutMode","init","par","Utils","version","getDim","colkey","Path","getColKey","rowkey","getRowKey","setLayoutMode","mode","om","o","getLayoutMode","n","showAll","showMode","setCellMode","getCellMode","Matrix","cnt","popSeries","mSingle","popSingle","React","Mode","undefined","show","showButton","item","main","sel","setAttribute","Html","getButtonStyle","Colors","colors","table","fg","rest","reload","setLog","setTimeout","Database","dbextract","matrix","exportAllKeys","showPath","showConfig","showMatrix","pushUrl","bind","console","log","Config","showTrash","Dataset","useCanvas","ii","jj","scale","xval","xmin","xmax","ymin","ymax"],"mappings":"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","sourcesContent":["//console.log(\"Loading ShowLib.js\");\n\nfunction Show() {\n    this.code={mSum:0,     // cell mode\n\t       mSeries:1,  // cell mode\n\t       mItem:2,     // cell mode\n\t       mTable:0,   // layout mode\n\t       mMap:1      // layout mode\n\t      };\n    this.state={qtrash:0,       // should we show trash contents?\n\t\tcellMode:0,     // sum, series, item\n\t\tlayoutMode:0    // table, map\n\t       };\n    this.init=function(state){\n\tvar par=\"Show\"+state.Utils.version;\n\tstate.Utils.init(par,this);\n    };\n    this.getDim=function(state) {\n\tvar colkey=state.Path.getColKey(state)||\"\";\n\tvar rowkey=state.Path.getRowKey(state)||\"\";\n\tif (colkey !== \"\" && rowkey !== \"\") {\n\t    return 2;\n\t} else if (colkey !== \"\" || rowkey !== \"\") {\n\t    return 1;\n\t} else  {\n\t    return 0;\n\t}  \n    };\n    this.setLayoutMode=function(state,mode) {\n\tvar om=this.state.layoutMode;\n\tvar o=this.getLayoutMode(state);\n\tthis.state.layoutMode=mode;\n\tvar n=this.getLayoutMode(state);\n\t//console.log(\"Setting layout mode:\",mode,\":\",o,\"->\",n);\n\tif (o !== n) {\n\t    this.showAll(state);\n\t} else if (om !== mode) {\n\t    this.showMode(state);\n\t}\n    };\n    this.setCellMode=function(state,mode) {\n\tvar om=this.state.cellMode;\n\tvar o=this.getCellMode(state);\n\tthis.state.cellMode=mode;\n\tvar n=this.getCellMode(state);\n\t//console.log(\"Setting cell mode:\",mode,\":\",o,\"->\",n);\n\tif (o !== n) {\n\t    this.showAll(state);\n\t} else if (om !== mode) {\n\t    this.showMode(state);\n\t}\n    };\n    this.getLayoutMode=function(state) {\n\t//console.log(\"Getmode init:\",this.state.layoutMode,state.Matrix.cnt);\n\tvar mode=this.state.layoutMode;\n\tif (mode  === this.code.mMap && state.Matrix.cnt > state.Matrix.popSeries) {\n\t    mode=this.code.mTable;\n\t}\n\treturn mode;\n    };\n    this.getCellMode=function(state) {\n\tvar mode=this.state.cellMode;\n\tif (mode  === this.code.mSingle && state.Matrix.cnt > state.Matrix.popSingle) {\n\t    mode=this.code.mSeries;\n\t}\n\tif (mode  === this.code.mSeries && state.Matrix.cnt > state.Matrix.popSeries) {\n\t    mode=this.code.mSum;\n\t}\n\treturn mode;\n    };\n    this.showMode=function(state) { // show data on screen\n\tif (state.React.Mode !== undefined) {\n\t    state.React.Mode.show(state);\n\t}\n    };\n    this.showButton=function(state,item,main,sel) {\n\tif (main && sel) {\n\t    item.setAttribute(\"style\", state.Html.getButtonStyle(state.Colors.colors.table,state.Colors.colors.fg,true)  );\n\t} else if (main && ! sel) {\n\t    item.setAttribute(\"style\", state.Html.getButtonStyle(state.Colors.colors.table,state.Colors.colors.fg,false)  );\n\t} else if (! main && sel) {\n\t    item.setAttribute(\"style\", state.Html.getButtonStyle(state.Colors.colors.rest,state.Colors.colors.fg,true)  );\n\t} else if (! main && ! sel) {\n\t    item.setAttribute(\"style\", state.Html.getButtonStyle(state.Colors.colors.rest,state.Colors.colors.fg,false)  );\n\t}\n    };\n    this.showAll=function(state,reload) { // show data on screen\n\t//var documentLog = document.getElementById(\"log\");\n\tstate.Html.setLog(state,\"Processing\");\n\t//console.log(\"this.Showing data.\");\n\tif (reload  === undefined || reload) {\n\t    state.Html.setLog(state,\"Extracting data.\");\n\t    setTimeout(function() {\n\t\tstate.Database.dbextract(state,function (state,matrix){  // callback\n\t\t    //console.log(\"Updating matrix.\");\n\t\t    state.Path.exportAllKeys(state);\n\t\t    //console.log(\"Showing path\");\n\t\t    this.showPath(state);\n\t\t    //console.log(\"Showing trash\");\n\t\t    this.showConfig(state);\n\t\t    //console.log(\"Showing matrix\");\n\t\t    this.showMatrix(state,matrix);\n\t\t    //console.log(\"Pushing URL\");\n\t\t    state.Utils.pushUrl(state);\n\t\t    state.Html.setLog(state);\n\t\t}.bind(this));\n\t    }.bind(this),0);\n\t} else {\n\t    console.log(\"Not updating matrix.\");\n\t    state.Path.exportAllKeys(state);\n\t    this.showPath(state);\n\t    this.showConfig(state);\n\t}\n\tthis.showMode(state);\n\tstate.Html.setLog(state);\n    };\n    this.showPath=function(state) {\n\tif (state.React.Path !== undefined) {\n\t    state.React.Path.showPath(state); // forceUpdate()\n\t} else {\n\t    console.log(\"No react-path available.\");\n\t}\n    };\n    this.showConfig=function(state) {\n\tif (state.React.Config !== undefined) {\n\t    state.React.Config.showTrash(state); // forceUpdate()\n\t} else {\n\t    console.log(\"No react-config available.\");\n\t}\n    };\n    this.showMatrix=function(state,matrix) {\n\tif (state.React.Dataset !== undefined) {\n\t    state.React.Dataset.showMatrix(state,matrix);\n\t}\n    };\n    this.useCanvas=function(state,matrix) {    // check if matrix elements have max 1 data\n\t// loop over matrix\n\tfor (var ii in matrix) {\n\t    for (var jj in matrix[ii]) {\n\t\tif (matrix[ii][jj].cnt > 1) {\n\t\t    return false;\n\t\t}\n\t    }\n\t}\n\treturn true;\n    };\n    this.scale=function(xval,xmin,xmax,ymin,ymax) {\n\tif (ymin>ymax) {\n\t    return ymin + (xval-xmin)*(ymax-ymin)/(xmax-xmin);\n\t} else {\n\t    return (xval-xmin)*(ymax-ymin)/(xmax-xmin);\n\t}\n    }\n};\nexport default Show;\n"]},"metadata":{},"sourceType":"module"}