{"ast":null,"code":"var _jsxFileName = \"/home/franktt/react/varseltavle/src/react/SummaryCell.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CanvasText from './CanvasTextComponent';\n\nvar styles = function styles(theme) {\n  return {\n    pointer: {\n      cursor: \"pointer\",\n      border: \"0px\",\n      overflow: 'hidden',\n      padding: theme.spacing.unit * 0,\n      textAlign: \"center\"\n    },\n    nopointer: {\n      border: '1px solid #EEE',\n      padding: theme.spacing.unit * 0,\n      textAlign: \"center\"\n    },\n    divTableCell: {\n      border: '1px solid #EEE',\n      display: 'table-cell',\n      padding: '0px 0px'\n    },\n    divTableCellCursor: {\n      cursor: \"pointer\",\n      border: '1px solid #EEE',\n      display: 'table-cell',\n      padding: '0px 0px'\n    }\n  };\n}; //\tborderCollapse: 'collapse',\n\n\nfunction SummaryCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      onclick = props.onclick,\n      colwhere = props.colwhere,\n      rowwhere = props.rowwhere,\n      colkey = props.colkey,\n      rowkey = props.rowkey,\n      elements = props.elements,\n      plan = props.plan,\n      key = props.key,\n      label = props.label,\n      rowindex = props.rowindex; //console.log(\"Summary height:\",plan.height);\n\n  var style0 = {\n    height: plan.height + \"px\",\n    backgroundColor: '#FFF'\n  };\n  var style1 = {\n    height: plan.height + \"px\",\n    backgroundColor: '#EEE'\n  };\n\n  if (elements === undefined) {\n    if (rowindex % 2 === 1) {\n      return React.createElement(\"div\", {\n        className: classes.divTableCell,\n        style: style1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: classes.divTableCell,\n        style: style0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n    }\n  }\n\n  ;\n  var info = state.Matrix.getInfo(state, elements);\n  var cnt = info.cnt;\n  var maxlev = info.maxlev;\n  var minlev = info.minlev;\n  var title = info.title;\n  var lab = \"\";\n\n  if (label === undefined) {\n    if (cnt > 1) {\n      lab = \".\";\n    } else {\n      lab = \"\";\n    }\n\n    ;\n  }\n\n  ;\n  var invalid = minlev < 0;\n  var bgcolor = state.Colors.getLevelColor(maxlev); //var stylec={height:plan.height+\"px\",backgroundColor:bgcolor};\n  //console.log(\"SummaryCell:'\"+lab+\"' lev=\",lev,elements.length,bgcolor,lab);\n  //console.log(\"Found invalid.\",invalid,minlev,maxlev,JSON.stringify(elements));\n  //console.log(\"Summary Plan:\",JSON.stringify(plan));\n  //var data={colkey:colkey,rowkey:rowkey};\n\n  var data = 'tett';\n  return React.createElement(\"div\", {\n    className: onclick !== undefined ? classes.divTableCellCursor : classes.divTableCell,\n    key: key,\n    style: {\n      backgroundColor: bgcolor\n    },\n    onClick: onclick,\n    height: plan.height,\n    width: plan.width,\n    \"data-for\": \"cell\",\n    \"data-tip\": data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(CanvasText, {\n    state: state,\n    label: lab,\n    plan: plan,\n    key: key,\n    invalid: invalid,\n    colkey: colkey,\n    rowkey: rowkey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }));\n}\n\nSummaryCell.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SummaryCell);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/SummaryCell.js"],"names":["React","PropTypes","withStyles","CanvasText","styles","theme","pointer","cursor","border","overflow","padding","spacing","unit","textAlign","nopointer","divTableCell","display","divTableCellCursor","SummaryCell","props","classes","state","onclick","colwhere","rowwhere","colkey","rowkey","elements","plan","key","label","rowindex","style0","height","backgroundColor","style1","undefined","info","Matrix","getInfo","cnt","maxlev","minlev","title","lab","invalid","bgcolor","Colors","getLevelColor","data","width","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport CanvasText  from './CanvasTextComponent';\n\nconst styles = theme => ({\n    pointer: {\n\tcursor:\"pointer\",\n\tborder:\"0px\",\n\toverflow: 'hidden',\n\tpadding: theme.spacing.unit*0,\n\ttextAlign:\"center\",\n    },\n    nopointer: {\n\tborder:'1px solid #EEE',\n\tpadding: theme.spacing.unit*0,\n\ttextAlign:\"center\",\n    },\n    divTableCell:{\n\tborder: '1px solid #EEE',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableCellCursor:{\n\tcursor: \"pointer\",\n\tborder: '1px solid #EEE',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n});\n\n//\tborderCollapse: 'collapse',\n\nfunction SummaryCell(props) {\n    const { classes,state,onclick,\n\t    colwhere,rowwhere,colkey,rowkey,\n\t    elements,plan,key,label,rowindex } = props;\n    //console.log(\"Summary height:\",plan.height);\n    var style0={height:plan.height+\"px\",backgroundColor:'#FFF'};\n    var style1={height:plan.height+\"px\",backgroundColor:'#EEE'};\n    if (elements===undefined) {\n\tif (rowindex%2===1) {\n\t    return <div className={classes.divTableCell} style={style1}/>\n\t} else {\n\t    return <div className={classes.divTableCell} style={style0}/>\n\t}\n    };\n    var info=state.Matrix.getInfo(state,elements);\n    var cnt=info.cnt;\n    var maxlev=info.maxlev;\n    var minlev=info.minlev;\n    var title=info.title;\n    var lab=\"\";\n    if (label === undefined) {\n\tif (cnt > 1) {\n\t    lab=\".\";\n\t} else {\n\t    lab=\"\";\n\t};\n    };\n    var invalid=(minlev < 0); \n    var bgcolor=state.Colors.getLevelColor(maxlev);\n    //var stylec={height:plan.height+\"px\",backgroundColor:bgcolor};\n    //console.log(\"SummaryCell:'\"+lab+\"' lev=\",lev,elements.length,bgcolor,lab);\n    //console.log(\"Found invalid.\",invalid,minlev,maxlev,JSON.stringify(elements));\n    //console.log(\"Summary Plan:\",JSON.stringify(plan));\n    //var data={colkey:colkey,rowkey:rowkey};\n    var data='tett';\n    return (\n            <div className={(onclick !== undefined?classes.divTableCellCursor:classes.divTableCell)} key={key}\n\t         style={{backgroundColor:bgcolor}} onClick={onclick} height={plan.height} width={plan.width}\n\t         data-for='cell' data-tip={data}>\n\t\t<CanvasText state={state} label={lab} plan={plan} key={key} invalid={invalid}\n\t\t\t\t\t   colkey={colkey} rowkey={rowkey}/>\n\t    </div>\n           );\n}\n\nSummaryCell.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SummaryCell);\n"]},"metadata":{},"sourceType":"module"}