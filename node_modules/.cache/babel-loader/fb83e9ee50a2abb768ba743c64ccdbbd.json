{"ast":null,"code":"//console.log(\"Loading NavigateLib.js\");\nfunction Navigate() {\n  this.onClickPath = function (state, ttyp, tkey) {\n    var reload = false; // matrix changed?\n\n    var tid, tin, src, sec;\n    console.log(\"Clicked:\", ttyp, tkey);\n\n    if (ttyp === \"path\") {\n      // path -> table\n      tid = state.Path.keys.path.indexOf(tkey);\n\n      if (tid !== -1) {\n        src = state.Path.keys.path.splice(tid, 1); // remove from path\n\n        state.Utils.spliceArray(state.Path.keys.other, 0, 0, src); // first position (table)\n\n        reload = true;\n      }\n    } else if (ttyp === \"table\") {\n      // table -> path/other\n      tid = state.Path.keys.other.indexOf(tkey);\n      tin = state.Path.other.table.indexOf(tkey);\n      console.log(\"Tin:\", tin, \" tid:\", tid);\n\n      if (tid !== -1) {\n        src = state.Path.keys.other.splice(tid, 1); // remove from path\n\n        if (tin === 0) {\n          sec = state.Path.keys.other.splice(tid, 1); // remove from path\n        }\n\n        if (state.Path.values[tkey]) {\n          // table -> path\n          state.Path.keys.path = state.Path.keys.path.concat(src); // last path position\n        } else {\n          // table -> other\n          state.Path.keys.other = state.Path.keys.other.concat(src); // last position\n        }\n\n        if (tin === 0) {\n          src = state.Path.keys.other.splice(tid, 1); // remove from path\n\n          state.Utils.spliceArray(state.Path.keys.other, 0, 0, sec); // first position (table)\n\n          state.Utils.spliceArray(state.Path.keys.other, 0, 0, src); // first position (table)\n        }\n\n        reload = true;\n      }\n    } else if (ttyp === \"rest\") {\n      // rest -> table\n      tid = state.Path.keys.other.indexOf(tkey);\n\n      if (tid !== -1) {\n        src = state.Path.keys.other.splice(tid, 1); // remove from path\n\n        state.Utils.spliceArray(state.Path.keys.other, 0, 0, src); // first position (table)\n\n        reload = true;\n      }\n\n      ;\n    } else if (ttyp == \"trash\") {\n      tid = state.Path.keys.trash.indexOf(tkey);\n\n      if (tid !== -1) {\n        src = state.Path.keys.trash.splice(tid, 1); // remove from trash\n\n        state.Path.keys.other = state.Path.keys.other.concat(src); // last position\n\n        state.Path.values[src] = undefined;\n        reload = true;\n      }\n\n      ;\n    }\n\n    state.Show.showAll(state, reload);\n  };\n\n  this.dropCheck = function (state, ev) {\n    var check;\n    var styp = ev.dataTransfer.getData(state, \"styp\");\n    var skey = ev.dataTransfer.getData(state, \"skey\"); //var sval = ev.dataTransfer.getData(state,\"sval\");\n    //var srel = ev.dataTransfer.getData(state,\"srel\");\n\n    var ttyp = ev.target.getAttribute(state, \"ptyp\");\n    var tkey = ev.target.getAttribute(state, \"pkey\"); //var tval = ev.target.getAttribute(state,\"pval\");\n    //var trel = ev.target.getAttribute(state,\"prel\");\n\n    if (ttyp === state.Path.type.eye.ptyp) {\n      // ******************** E Y E **************\n      if (styp === state.Path.type.path.ptyp) {\n        check = true;\n      } else if (styp === state.Path.type.table.ptyp || styp === state.Path.type.rest.ptyp) {\n        //console.log(\"Value:\",skey,state.Path.keyVal(state,skey));\n        if (state.Path.keyVal(state, skey) !== undefined) {\n          check = true;\n        } else {\n          check = false;\n        }\n      } else if (styp === state.Path.type.trashRest.ptyp) {\n        if (state.Path.keyVal(state, skey) !== undefined) {\n          check = true;\n        } else {\n          check = false;\n        }\n      } else if (styp === state.Path.type.row.ptyp || styp === state.Path.type.col.ptyp || styp === state.Path.type.item.ptyp || styp === state.Path.type.rotate.ptyp) {\n        check = true;\n      } else {\n        check = false;\n      }\n    } else if (ttyp === state.Path.type.trash.ptyp || ttyp === state.Path.type.trashRest.ptyp) {\n      // ******************** T R A S H **************\n      if (styp === state.Path.type.path.ptyp || styp === state.Path.type.eye.ptyp || styp === state.Path.type.table.ptyp || styp === state.Path.type.rest.ptyp || styp === state.Path.type.trash.ptyp || styp === state.Path.type.trashRest.ptyp || styp === state.Path.type.col.ptyp || styp === state.Path.type.row.ptyp || styp === state.Path.type.item.ptyp || styp === state.Path.type.rotate.ptyp) {\n        check = true;\n      } else {\n        check = false;\n      }\n    } else if (ttyp === state.Path.type.path.ptyp) {\n      // ******************** P A T H **************\n      if (styp === state.Path.type.path.ptyp || styp === state.Path.type.eye.ptyp) {\n        check = true;\n      } else if (styp === state.Path.type.table.ptyp || styp === state.Path.type.rest.ptyp) {\n        //console.log(\"Value:\",skey,state.Path.keyVal(state,skey));\n        if (state.Path.keyVal(state, skey) !== undefined) {\n          check = true;\n        } else {\n          check = false;\n        }\n      } else if (styp === state.Path.type.trash.ptyp) {\n        check = true;\n      } else if (styp === state.Path.type.trashRest.ptyp) {\n        if (state.Path.keyVal(state, skey) !== undefined) {\n          check = true;\n        } else {\n          check = false;\n        }\n      } else {\n        check = false;\n      }\n    } else if (ttyp === state.Path.type.table.ptyp || ttyp === state.Path.type.rest.ptyp) {\n      // ******************** T A B L E / R E S T **************\n      if (styp === state.Path.type.path.ptyp || styp === state.Path.type.rest.ptyp || styp === state.Path.type.table.ptyp || styp === state.Path.type.trash.ptyp) {\n        check = true;\n      } else if (styp === state.Path.type.eye.ptyp) {\n        check = state.Path.checkNewPath(state, ttyp, tkey);\n      } else if (styp === state.Path.type.trash.ptyp) {\n        check = true;\n      } else if (styp === state.Path.type.trashRest.ptyp) {\n        check = true;\n      } else {\n        check = false;\n      }\n    } else if (ttyp === state.Path.type.row.ptyp || ttyp === state.Path.type.col.ptyp || ttyp === state.Path.type.item.ptyp) {\n      // ******************** T A B L E **************\n      if (styp === state.Path.type.eye.ptyp || styp === state.Path.type.trash.ptyp) {\n        check = true;\n      } else if (styp === state.Path.type.trash.ptyp) {\n        check = true;\n      } else if (styp === state.Path.type.rotate.ptyp) {\n        check = true;\n      } else if (styp === ttyp) {\n        check = true;\n      } else if (styp === state.Path.type.row.ptyp && ttyp === state.Path.type.col.ptyp) {\n        check = true;\n      } else if (ttyp === state.Path.type.row.ptyp && styp === state.Path.type.col.ptyp) {\n        check = true;\n      } else {\n        check = false;\n      }\n    } else if (ttyp === state.Path.type.rotate.ptyp) {\n      // ******************** R O T A T E **************\n      if (styp === state.Path.type.col.ptyp) {\n        check = true;\n      } else {\n        check = false;\n      }\n    } else {\n      check = false;\n    } //console.log(\"Checking  styp=\",styp,\"  ttyp=\",ttyp,\" check=\",check);\n\n\n    if (check) {\n      ev.preventDefault(); // this.drop check\n    }\n  };\n\n  this.drop = function (state, ev) {\n    ev.preventDefault();\n    state.Html.setLog(state, \"Processing\");\n    var styp = ev.dataTransfer.getData(state, \"styp\");\n    var skey = ev.dataTransfer.getData(state, \"skey\");\n    var sval = ev.dataTransfer.getData(state, \"sval\");\n    var srel = ev.dataTransfer.getData(state, \"srel\");\n    var ttyp = ev.target.getAttribute(state, \"ptyp\");\n    var tkey = ev.target.getAttribute(state, \"pkey\");\n    var tval = ev.target.getAttribute(state, \"pval\");\n    var trel = ev.target.getAttribute(state, \"prel\");\n    var reload = false; // matrix changed?\n\n    var tin, tid;\n\n    if (ttyp === state.Path.type.eye.ptyp) {\n      // ************ -> E Y E **************\n      if (styp === state.Path.type.path.ptyp) {\n        state.Path.moveKey(state, \"path\", skey, \"other\");\n      } else if (styp === state.Path.type.table.ptyp) {\n        reload = state.Path.moveKey(state, \"other\", skey, \"path\");\n      } else if (styp === state.Path.type.rest.ptyp) {\n        reload = state.Path.moveKey(state, \"other\", skey, \"path\");\n      } else if (styp === state.Path.type.trashRest.ptyp) {\n        state.Path.moveKey(state, \"trash\", skey, \"trash\", 0);\n      } else if (styp === state.Path.type.row.ptyp || styp === state.Path.type.col.ptyp) {} else if (styp === state.Path.type.item.ptyp) {} else if (styp === state.Path.type.rotate.ptyp) {}\n    } else if (ttyp === state.Path.type.trash.ptyp) {\n      // ************ -> T R A S H **************\n      tin = 0; // insert position\n\n      if (styp === state.Path.type.path.ptyp) {\n        reload = state.Path.moveKey(state, \"path\", skey, \"trash\", tin);\n      } else if (styp === state.Path.type.eye.ptyp) {} else if (styp === state.Path.type.table.ptyp) {\n        reload = state.Path.moveKey(state, \"other\", skey, \"trash\", tin);\n      } else if (styp === state.Path.type.rest.ptyp) {\n        state.Path.moveKey(state, \"other\", skey, \"trash\", tin);\n      } else if (styp === state.Path.type.trashRest.ptyp) {\n        if (state.Path.keyVal(state, skey) !== undefined) {\n          state.Path.select.val[skey] = \"\";\n          state.Path.select.where[skey] = \"\";\n          state.Path.select.cnt[skey] = 0;\n        } else {\n          reload = state.Path.moveKey(state, \"trash\", skey, \"trash\", tin);\n        }\n      } else if (styp === state.Path.type.col.ptyp || styp === state.Path.type.row.ptyp) {\n        // col/row -> trash\n        if (state.Path.values[skey] === undefined) {\n          state.Path.values[skey] = [];\n        }\n\n        ;\n        state.Path.values[skey].push(sval); //console.log(\"Trashed:\",skey,sval)\n\n        reload = true;\n      } else if (styp === state.Path.type.item.ptyp) {\n        // trash -> item\n        state.Path.trash.level = sval; //console.log(\"Trashlevel:\",state.Path.trash.level);\n\n        reload = true;\n      } else if (styp === state.Path.type.rotate.ptyp) {\n        state.Layout.rotate = {};\n        reload = true;\n      }\n    } else if (ttyp === state.Path.type.trashRest.ptyp) {\n      // ************ -> T R A S H R E S T **************\n      tin = state.Path.keys.trash.indexOf(tkey);\n\n      if (styp === state.Path.type.path.ptyp) {\n        reload = state.Path.moveKey(state, \"path\", skey, \"trash\", tin + 1);\n      } else if (styp === state.Path.type.eye.ptyp) {} else if (styp === state.Path.type.table.ptyp) {\n        reload = state.Path.moveTableKey(state, skey, \"trash\", tin + 1);\n      } else if (styp === state.Path.type.rest.ptyp) {\n        state.Path.moveKey(state, \"other\", skey, \"trash\", tin + 1);\n      } else if (styp === state.Path.type.trash.ptyp) {\n        state.Path.moveAllFirst(state, \"trash\", tin + 1);\n      } else if (styp === state.Path.type.trashRest.ptyp) {\n        state.Path.moveKey(state, \"trash\", skey, \"trash\", tin);\n      } else if (styp === state.Path.type.col.ptyp || styp === state.Path.type.row.ptyp) {\n        // col/row -> trash\n        if (state.Path.values[skey] === undefined) {\n          state.Path.values[skey] = [];\n        }\n\n        ;\n        state.Path.values[skey] = state.Path.values[skey].concat(sval); //console.log(\"Trashed:\",skey,sval)\n\n        reload = true;\n      } else if (styp === state.Path.type.item.ptyp) {\n        // trash -> item\n        state.Path.trash.level = sval; //console.log(\"Trashlevel:\",state.Path.trash.level);\n\n        reload = true;\n      } else if (styp === state.Path.type.rotate.ptyp) {}\n    } else if (ttyp === state.Path.type.path.ptyp) {\n      // ************ -> P A T H **************\n      tid = state.Path.keys.path.indexOf(tkey);\n\n      if (styp === state.Path.type.path.ptyp) {\n        state.Path.moveKey(state, \"path\", skey, \"path\", tid);\n      } else if (styp === state.Path.type.eye.ptyp) {\n        reload = state.Path.moveAllKey(state, \"path\", skey, \"other\", 0);\n      } else if (styp === state.Path.type.table.ptyp) {\n        if (state.Path.keyVal(state, skey) !== undefined) {\n          // check if value is set\n          reload = state.Path.moveKey(state, \"other\", skey, \"path\", tid);\n        }\n      } else if (styp === state.Path.type.rest.ptyp) {\n        if (state.Path.keyVal(state, skey) !== undefined) {\n          // check if value is set\n          reload = state.Path.moveKey(state, \"other\", skey, \"path\", tid);\n        }\n      } else if (styp === state.Path.type.trash.ptyp) {\n        if (state.Path.keyVal(state, skey) !== undefined) {\n          // check if value is set\n          reload = state.Path.moveKey(state, \"trash\", skey, \"path\", tid);\n        }\n      }\n    } else if (ttyp === state.Path.type.table.ptyp) {\n      // ************ -> T A B L E **************\n      if (styp === state.Path.type.table.ptyp) {\n        // swap positions\n        reload = state.Path.swapTableKey(state, skey, tkey);\n      } else {\n        if (styp === state.Path.type.path.ptyp) {\n          reload = state.Path.moveKey2Table(state, \"path\", skey, tkey);\n        } else if (styp === state.Path.type.eye.ptyp) {\n          if (state.Path.checkNewPath(state, ttyp, tkey)) {//state.path.makeNewPath(state,typ,tid+1);\n            //reload=true;  // matrix has changed...\n          }\n        } else if (styp === state.Path.type.rest.ptyp) {\n          reload = state.Path.moveKey2Table(state, \"other\", skey, tkey);\n        } else if (styp === state.Path.type.trash.ptyp) {\n          reload = state.Path.moveTrash2Table(state, tkey);\n        } else if (styp === state.Path.type.trashRest.ptyp) {\n          reload = state.Path.moveKey2Table(state, \"trash\", skey, tkey);\n        } else if (styp === state.Path.type.trash.ptyp) {\n          state.Path.moveTrash(state, \"other\", tin + 1);\n        } else if (styp === state.Path.type.trashRest.ptyp) {\n          reload = state.Path.moveKey(state, \"trash\", skey, \"other\", tin + 1);\n        }\n      }\n    } else if (ttyp === state.Path.type.rest.ptyp) {\n      // ************ -> R E S T **************\t\n      tid = state.Path.other.rest.indexOf(tkey);\n      tin = state.Path.keys.other.indexOf(tkey);\n\n      if (styp === state.Path.type.path.ptyp) {\n        reload = state.Path.moveKey(state, \"path\", skey, \"other\", tin);\n      } else if (styp === state.Path.type.eye.ptyp) {\n        if (state.Path.checkNewPath(state, ttyp, tkey)) {//state.path.makeNewPath(state,typ,tid+1);\n          //reload=true;  // matrix has changed...\n        }\n      } else if (styp === state.Path.type.table.ptyp) {\n        reload = state.Path.moveTableKey(state, skey, \"other\", tin - 1); // shifts when table-key is removed...\n      } else if (styp === state.Path.type.rest.ptyp) {\n        state.Path.moveKey(state, \"other\", skey, \"other\", tin);\n      }\n    } else if (ttyp === state.Path.type.row.ptyp || // ************ -> R O W / C O L **************\n    ttyp === state.Path.type.col.ptyp) {\n      if (styp === state.Path.type.eye.ptyp) {\n        // eye -> col/row\n        delete state.Path.order[tkey];\n        reload = true;\n      } else if (styp === state.Path.type.trash.ptyp) {\n        // trash -> col/row\n        //delete state.Path.order[tkey];\n        state.Path.values[tkey] = [];\n        reload = true;\n      } else if (styp === ttyp) {\n        // col/row -> col/row\n        if (state.Path.order === undefined) {\n          state.Path.order = {};\n        }\n\n        ;\n\n        if (state.Path.order[skey] === undefined) {\n          //console.log(\"Copying:\",JSON.stringify(state.Matrix.values[skey]));\n          state.Path.order[skey] = state.Utils.cp(state.Path.values[skey]);\n        }\n\n        ;\n\n        if ((state, srel === \"first\" && trel === \"last\") || srel === \"last\" && trel === \"first\") {\n          state.Utils.invertArray(state.Path.order[skey]);\n\n          if (state.Path.order[skey][0] < state.Path.order[skey][Math.min(state.Path.order[skey].length, 1)]) {\n            if (state.Database.keyCnt[skey].num === \"num\") {\n              state.Database.keyCnt[skey].order = state.Database.nasc;\n            } else {\n              state.Database.keyCnt[skey].order = state.Database.casc;\n            }\n          } else {\n            if (state.Database.keyCnt[skey].num === \"num\") {\n              state.Database.keyCnt[skey].order = state.Database.ndes;\n            } else {\n              state.Database.keyCnt[skey].order = state.Database.cdes;\n            }\n          } //console.log(\"Sorting\",skey,\":\",state.Database.keyCnt[skey].order);\n\n        } else {\n          state.Utils.moveTo(state.Path.order[skey], sval, tval); //console.log(\"Order:\",JSON.stringify(state.Path.order[skey]),skey,sval,tval);\n        }\n\n        reload = true;\n      } else if (styp === state.Path.type.rotate.ptyp) {\n        console.log(\"Rotating \", tkey);\n\n        if (state.Layout.rotate === undefined) {\n          state.Layout.rotate = {};\n        }\n\n        ;\n\n        if (state.Layout.rotate || [tkey] === undefined || state.Layout.rotate || [tkey] === \"\") {\n          state.Layout.rotate[tkey] = 'rotate';\n        } else {\n          state.Layout.rotate[tkey] = \"\";\n        }\n\n        reload = true;\n      } else if (styp === state.Path.type.row.ptyp && ttyp === state.Path.type.col.ptyp) {\n        reload = state.Layout.changePriority(state, skey, tkey);\n      } else if (ttyp === state.Path.type.row.ptyp && styp === state.Path.type.col.ptyp) {\n        reload = state.Layout.changePriority(state, skey, tkey);\n      }\n    } else if (ttyp === state.Path.type.item.ptyp) {\n      // ************ -> I T E M **************\n      if (styp === state.Path.type.trash.ptyp) {\n        // trash -> item\n        state.Path.trash.level = undefined;\n        console.log(\"Trashlevel:\", state.Path.trash.level);\n      }\n    } else if (ttyp === state.Path.type.rotate.ptyp) {\n      // ************ -> R O T **************\n      if (styp === state.Path.type.col.ptyp) {\n        // col/row -> trash\n        if (state.Layout.rotate === undefined) {\n          state.Layout.rotate = {};\n        }\n\n        ;\n\n        if (state.Layout.rotate[skey] === undefined || state.Layout.rotate[skey] === \"\") {\n          state.Layout.rotate[skey] = 'rotate';\n        } else {\n          state.Layout.rotate[skey] = \"\";\n        }\n\n        reload = true;\n      }\n    } else {\n      console.log(\"Unknown type:\", ttyp, styp);\n    }\n\n    state.Show.showAll(state, reload);\n    state.Html.setLog(state);\n  };\n\n  this.dragStart = function (state, ev) {\n    var styp = ev.target.getAttribute(state, \"ptyp\");\n    var skey = ev.target.getAttribute(state, \"pkey\");\n    var sval = ev.target.getAttribute(state, \"pval\");\n    var srel = ev.target.getAttribute(state, \"prel\"); // // mark all possible destinations...\n    //if (styp  === state.Path.type.path.ptyp) {\n    //state.Colors.setPathBorderColor(state,state.Colors.colors.bo);\n    //};\n\n    ev.dataTransfer.setData(state, \"styp\", styp);\n    ev.dataTransfer.setData(state, \"skey\", skey);\n    ev.dataTransfer.setData(state, \"sval\", sval);\n    ev.dataTransfer.setData(state, \"srel\", srel);\n  };\n\n  this.dragEnd = function (state, ev) {//var styp = ev.dataTransfer.getData(state,\"styp\");\n    //var sey = ev.dataTransfer.getData(state,\"sey\");\n    //console.log(\"this.Dropped.\");\n    // // reset destination marks to default...\n    //if (styp  === \"path\" || styp  === \"trash\"){\n    //state.Colors.setPathBorderColor(state,state.Colors.colors.bg);\n    //}\n  };\n\n  this.onClick = function (state, ttyp, tid) {\n    var reload = false; // matrix changed?\n\n    var tkey, tin, src;\n\n    if (ttyp === \"path\") {\n      // path-> other\n      var len = state.Path.keys.path.length;\n\n      for (var ii = len - 1; ii >= tid; ii--) {\n        tkey = state.Path.keys.path.splice(ii, 1); // remove from path\n\n        console.log(\"ClickPath:\", JSON.stringify(tkey[0]), JSON.stringify(tkey[0].substring(state, 0, 1)));\n\n        if (tkey[0].substring(state, 0, 1) === \"_\") {\n          console.log(\"Omitting internal variable:\", tkey);\n        } else {\n          if (state.Utils.missing(state.Path.keys.other, tkey)) {\n            state.Path.keys.other = state.Path.keys.other.concat(tkey); // last position\n          }\n\n          ;\n\n          if (state.Layout.trash[tkey] === undefined) {\n            state.Layout.trash[tkey] = [];\n          }\n\n          ;\n          var trash = state.Layout.trash[tkey];\n          state.Path.moveKeys(state, \"trash\", trash, \"other\");\n\n          if (state.Layout.order[tkey] === undefined) {\n            state.Layout.order[tkey] = [];\n          }\n\n          ;\n          var order = state.Layout.order[tkey]; //console.log(\"*** Order:\",JSON.stringify(order));\n        }\n\n        state.Path.makeOrder(state, \"other\", order);\n      } //console.log(\"###Result:\",JSON.stringify(state.Path.keys.other));\n\n\n      reload = true; //console.log(\"Onclick other-all:\",JSON.stringify(setup));\n    } else {\n      // other -> path\n      if (ttyp === \"table\") {\n        // table -> path\n        tkey = state.Path.other.table[tid];\n        tin = state.Path.keys.other.indexOf(tkey);\n        console.log(\"Table-click:\", tid, tkey, tin, JSON.stringify(state.Path.keys.other));\n\n        if (tid === state.Path.other.table.length - 1 || // last element\n        state.Path.other.rest.length === 0) {\n          // no remaining elements\n          src = state.Path.keys.other.splice(tin, 1); // remove from other\n\n          if (state.Utils.missing(state.Path.keys.path, src) && state.Path.keyVal(state, tkey) !== undefined) {\n            // check if value is set\n            state.Path.keys.path = state.Path.keys.path.concat(src); // last position\n          } else if (state.Utils.missing(state.Path.keys.trash, src)) {\n            state.Utils.spliceArray(state.Path.keys.trash, 0, 0, src); // last position\n          }\n        } else {\n          // move first element\n          var tkey2 = state.Path.other.table[1]; // get last element\n\n          src = state.Path.keys.other.splice(tin, 1); // remove first element from path\n\n          if (state.Utils.missing(state.Path.keys.path, src) && state.Path.keyVal(state, tkey) !== undefined) {\n            // check if value is set\n            state.Path.keys.path = state.Path.keys.path.concat(src); // last position\n          } else if (state.Utils.missing(state.Path.keys.trash, src)) {\n            state.Utils.spliceArray(state.Path.keys.trash, 0, 0, src); // last position\n          }\n\n          ; // keep second element\n\n          var tin2 = state.Path.keys.other.indexOf(tkey2);\n          var src2 = state.Path.keys.other.splice(tin2, 1); // remove from path\n\n          if (state.Utils.missing(state.Path.keys.other, src2)) {\n            state.Utils.spliceArray(state.Path.keys.other, 1, 0, src2);\n          } //console.log(\"Kept:\",tin,tkey,JSON.stringify(state.Path.keys.other));\n\n        }\n\n        reload = true;\n      } else if (ttyp === \"rest\") {\n        // rest -> path\n        tkey = state.Path.other.rest[tid];\n        tin = state.Path.keys.other.indexOf(tkey);\n\n        if (state.Path.keyVal(state, tkey) !== undefined) {\n          // check if value is set\n          src = state.Path.keys.other.splice(tin, 1); // remove from path\n\n          if (state.Utils.missing(state.Path.keys.path, src)) {\n            state.Path.keys.path = state.Path.keys.path.concat(src); // last position\n          } else if (state.Utils.missing(state.Path.keys.trash, src)) {\n            state.Utils.spliceArray(state.Path.keys.trash, 0, 0, src); // last position\n          }\n\n          reload = true;\n        } else {\n          src = state.Path.keys.other.splice(tin, 1); // remove from path\n\n          if (state.Utils.missing(state.Path.keys.trash, src)) {\n            state.Utils.spliceArray(state.Path.keys.trash, 0, 0, src); // last position\n          }\n        }\n      } else if (ttyp === \"trash\") {\n        // trash -> path\n        tkey = state.Path.trash.rest[tid];\n\n        if (state.Path.keyVal(state, tkey) === undefined || !state.Utils.missing(state.Path.keys.path, tkey)) {\n          // no value is set\n          tin = state.Path.keys.trash.indexOf(tkey);\n          src = state.Path.keys.trash.splice(tin, 1); // remove from path\n\n          if (state.Utils.missing(state.Path.keys.other, src)) {\n            state.Path.keys.other = state.Path.keys.other.concat(src); // last position\n          } //console.log(\"Restored:\",JSON.stringify(state.Path.keys.other));\n\n\n          reload = state.Path.other.table.length < 2;\n        } else {\n          tin = state.Path.keys.trash.indexOf(tkey);\n          src = state.Path.keys.trash.splice(tin, 1); // remove from path\n\n          if (state.Utils.missing(state.Path.keys.path, src)) {\n            state.Path.keys.path = state.Path.keys.path.concat(src); // last position\n          }\n\n          ;\n          reload = true;\n        }\n      }\n    }\n\n    state.Show.showAll(state, reload);\n  };\n}\n\n;\nexport default Navigate;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/NavigateLib.js"],"names":["Navigate","onClickPath","state","ttyp","tkey","reload","tid","tin","src","sec","console","log","Path","keys","path","indexOf","splice","Utils","spliceArray","other","table","values","concat","trash","undefined","Show","showAll","dropCheck","ev","check","styp","dataTransfer","getData","skey","target","getAttribute","type","eye","ptyp","rest","keyVal","trashRest","row","col","item","rotate","checkNewPath","preventDefault","drop","Html","setLog","sval","srel","tval","trel","moveKey","select","val","where","cnt","push","level","Layout","moveTableKey","moveAllFirst","moveAllKey","swapTableKey","moveKey2Table","moveTrash2Table","moveTrash","order","cp","invertArray","Math","min","length","Database","keyCnt","num","nasc","casc","ndes","cdes","moveTo","changePriority","dragStart","setData","dragEnd","onClick","len","ii","JSON","stringify","substring","missing","moveKeys","makeOrder","tkey2","tin2","src2"],"mappings":"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","sourcesContent":["//console.log(\"Loading NavigateLib.js\");\n    \nfunction Navigate() {\n    this.onClickPath=function(state,ttyp,tkey) {\n\tvar reload=false; // matrix changed?\n\tvar tid,tin,src,sec;\n\tconsole.log(\"Clicked:\",ttyp,tkey);\n\tif (ttyp  === \"path\") { // path -> table\n\t    tid=state.Path.keys.path.indexOf(tkey);\n\t    if (tid !== -1) {\n\t\tsrc=state.Path.keys.path.splice(tid, 1);                 // remove from path\n\t\tstate.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\t\treload=true;\n\t    }\n\t} else if (ttyp  === \"table\") { // table -> path/other\n\t    tid=state.Path.keys.other.indexOf(tkey);\n\t    tin=state.Path.other.table.indexOf(tkey);\n\t    console.log(\"Tin:\",tin,\" tid:\",tid);\n\t    if (tid !== -1) {\n\t\tsrc=state.Path.keys.other.splice(tid, 1);                 // remove from path\n\t\tif (tin===0) {\n\t\t    sec=state.Path.keys.other.splice(tid, 1);                 // remove from path\n\t\t}\n\t\tif (state.Path.values[tkey]) { // table -> path\n\t\t    state.Path.keys.path=state.Path.keys.path.concat(src); // last path position\n\t\t} else {                       // table -> other\n\t\t    state.Path.keys.other=state.Path.keys.other.concat(src); // last position\n\t\t}\n\t\tif (tin===0) {\n\t\t    src=state.Path.keys.other.splice(tid, 1);                 // remove from path\n\t\t    state.Utils.spliceArray(state.Path.keys.other,0,0,sec); // first position (table)\n\t\t    state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\t\t}\n\t\treload=true;\n\t    }\n\t} else if (ttyp === \"rest\") { // rest -> table\n\t    tid=state.Path.keys.other.indexOf(tkey);\n\t    if (tid !== -1) {\n\t\tsrc=state.Path.keys.other.splice(tid, 1);                 // remove from path\n\t\tstate.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\t\treload=true;\n\t    };\n\t} else if (ttyp == \"trash\") {\n\t    tid=state.Path.keys.trash.indexOf(tkey);\n\t    if (tid !== -1) {\n\t\tsrc=state.Path.keys.trash.splice(tid, 1);                 // remove from trash\n\t\tstate.Path.keys.other=state.Path.keys.other.concat(src); // last position\n\t\tstate.Path.values[src]=undefined;\n\t\treload=true;\n\t    };\n\t}\n\tstate.Show.showAll(state,reload);\n    };\n    this.dropCheck=function(state,ev) {\n\tvar check;\n\tvar styp = ev.dataTransfer.getData(state,\"styp\");\n\tvar skey = ev.dataTransfer.getData(state,\"skey\");\n\t//var sval = ev.dataTransfer.getData(state,\"sval\");\n\t//var srel = ev.dataTransfer.getData(state,\"srel\");\n\tvar ttyp = ev.target.getAttribute(state,\"ptyp\");\n\tvar tkey = ev.target.getAttribute(state,\"pkey\");\n\t//var tval = ev.target.getAttribute(state,\"pval\");\n\t//var trel = ev.target.getAttribute(state,\"prel\");\n\tif (ttyp  === state.Path.type.eye.ptyp) { // ******************** E Y E **************\n\t    if (styp  === state.Path.type.path.ptyp) {\n\t\tcheck=true;\n\t    } else if (styp  === state.Path.type.table.ptyp ||\n\t\t       styp  === state.Path.type.rest.ptyp) {\n\t\t//console.log(\"Value:\",skey,state.Path.keyVal(state,skey));\n\t\tif (state.Path.keyVal(state,skey) !== undefined) {\n\t\t    check=true;\n\t\t} else {\n\t\t    check=false;\n\t\t}\n\t    } else if (styp  === state.Path.type.trashRest.ptyp ) {\n\t\tif (state.Path.keyVal(state,skey) !== undefined) {\n\t\t    check=true;\n\t\t} else {\n\t\t    check=false;\n\t\t}\n\t    } else if (styp  === state.Path.type.row.ptyp ||\n\t\t       styp  === state.Path.type.col.ptyp ||\n\t\t       styp  === state.Path.type.item.ptyp ||\n\t\t       styp  === state.Path.type.rotate.ptyp) {\n\t\tcheck=true;\n\t    } else {\n\t\tcheck=false;\n\t    }\n\t} else if (ttyp  === state.Path.type.trash.ptyp ||\n\t\t   ttyp  === state.Path.type.trashRest.ptyp) {  // ******************** T R A S H **************\n\t\tif (styp  === state.Path.type.path.ptyp  ||\n\t\t    styp  === state.Path.type.eye.ptyp   ||\n\t\t    styp  === state.Path.type.table.ptyp ||\n\t\t    styp  === state.Path.type.rest.ptyp ||\n\t\t    styp  === state.Path.type.trash.ptyp ||\n\t\t    styp  === state.Path.type.trashRest.ptyp ||\n\t\t    styp  === state.Path.type.col.ptyp ||\n\t\t    styp  === state.Path.type.row.ptyp ||\n\t\t    styp  === state.Path.type.item.ptyp ||\n\t\t    styp  === state.Path.type.rotate.ptyp) {\n\t\t    check=true;\n\t\t} else {\n\t\t    check=false;\n\t\t}\n\t} else if (ttyp  === state.Path.type.path.ptyp) {  // ******************** P A T H **************\n\t    if (styp  === state.Path.type.path.ptyp||\n\t\tstyp  === state.Path.type.eye.ptyp) {\n\t\tcheck=true;\n\t    } else if (styp  === state.Path.type.table.ptyp ||\n\t\t       styp  === state.Path.type.rest.ptyp) {\n\t\t//console.log(\"Value:\",skey,state.Path.keyVal(state,skey));\n\t\tif (state.Path.keyVal(state,skey) !== undefined) {\n\t\t    check=true;\n\t\t} else {\n\t\t    check=false;\n\t\t}\n\t    } else if (styp  === state.Path.type.trash.ptyp ) {\n\t\tcheck=true;\n\t    } else if (styp  === state.Path.type.trashRest.ptyp ) {\n\t\tif (state.Path.keyVal(state,skey) !== undefined) {\n\t\t    check=true;\n\t\t} else {\n\t\t    check=false;\n\t\t}\n\t    } else {\n\t\tcheck=false;\n\t    }\n\t} else if (ttyp  === state.Path.type.table.ptyp ||\n\t\t   ttyp  === state.Path.type.rest.ptyp) {  // ******************** T A B L E / R E S T **************\n\t\tif (styp  === state.Path.type.path.ptyp||\n\t\t    styp  === state.Path.type.rest.ptyp||\n\t\t    styp  === state.Path.type.table.ptyp||\n\t\t    styp  === state.Path.type.trash.ptyp) {\n\t\t    check=true;\n\t\t} else if (styp  === state.Path.type.eye.ptyp) {\n\t\t    check=state.Path.checkNewPath(state,ttyp,tkey);\n\t\t} else if (styp  === state.Path.type.trash.ptyp ) {\n\t\t    check=true;\n\t\t} else if (styp  === state.Path.type.trashRest.ptyp ) {\n\t\t    check=true;\n\t\t} else {\n\t\t    check=false;\n\t\t}\n\t} else if (ttyp  === state.Path.type.row.ptyp||\n\t\t   ttyp  === state.Path.type.col.ptyp||\n\t\t   ttyp  === state.Path.type.item.ptyp) {  // ******************** T A B L E **************\n\t\tif (styp  === state.Path.type.eye.ptyp ||\n\t\t    styp  === state.Path.type.trash.ptyp) {\n\t\t    check=true;\n\t\t} else if (styp  === state.Path.type.trash.ptyp ) {\n\t\t    check=true;\n\t\t} else if (styp  === state.Path.type.rotate.ptyp ) {\n\t\t    check=true;\n\t\t} else if (styp  === ttyp) {\n\t\t    check=true;\n\t\t} else if (styp  ===  state.Path.type.row.ptyp && ttyp  ===  state.Path.type.col.ptyp) {\n\t\t    check=true;\n\t\t} else if (ttyp  ===  state.Path.type.row.ptyp && styp  ===  state.Path.type.col.ptyp) {\n\t\t    check=true;\n\t\t} else {\n\t\t    check=false;\n\t\t}\n\t} else if (ttyp  === state.Path.type.rotate.ptyp) {  // ******************** R O T A T E **************\n\t    if (styp  === state.Path.type.col.ptyp) {\n\t\tcheck=true;\n\t    } else {\n\t\tcheck=false;\n\t    }\n\t} else {\n\t    check=false;\n\t}\n\t//console.log(\"Checking  styp=\",styp,\"  ttyp=\",ttyp,\" check=\",check);\n\tif (check) {\n\t    ev.preventDefault(); // this.drop check\n\t}\n    };\n    this.drop=function(state,ev) {\n\tev.preventDefault();\n\tstate.Html.setLog(state,\"Processing\");\n\tvar styp = ev.dataTransfer.getData(state,\"styp\");\n\tvar skey = ev.dataTransfer.getData(state,\"skey\");\n\tvar sval = ev.dataTransfer.getData(state,\"sval\");\n\tvar srel = ev.dataTransfer.getData(state,\"srel\");\n\tvar ttyp = ev.target.getAttribute(state,\"ptyp\");\n\tvar tkey = ev.target.getAttribute(state,\"pkey\");\n\tvar tval = ev.target.getAttribute(state,\"pval\");\n\tvar trel = ev.target.getAttribute(state,\"prel\");\n\tvar reload=false; // matrix changed?\n\tvar tin,tid;\n\tif (ttyp  === state.Path.type.eye.ptyp) { // ************ -> E Y E **************\n\t    if (styp  === state.Path.type.path.ptyp) { \n\t\tstate.Path.moveKey(state,\"path\",skey,\"other\");\n\t    } else if (styp  === state.Path.type.table.ptyp) {\n\t\treload=state.Path.moveKey(state,\"other\",skey,\"path\");\n\t    } else if (styp  === state.Path.type.rest.ptyp) { \n\t\treload=state.Path.moveKey(state,\"other\",skey,\"path\");\n\t    } else if (styp  === state.Path.type.trashRest.ptyp ) {\n\t\tstate.Path.moveKey(state,\"trash\",skey,\"trash\",0);\n\t    } else if (styp  === state.Path.type.row.ptyp ||\n\t\t       styp  === state.Path.type.col.ptyp) {\n\t    } else if (styp  === state.Path.type.item.ptyp) {\n\t    } else if (styp  === state.Path.type.rotate.ptyp) {\n\t    }\n\t} else if (ttyp  === state.Path.type.trash.ptyp) {  // ************ -> T R A S H **************\n\t    tin=0; // insert position\n\t    if (styp  === state.Path.type.path.ptyp) {\n\t\treload=state.Path.moveKey(state,\"path\",skey,\"trash\",tin);\n\t    } else if (styp  === state.Path.type.eye.ptyp) {\n\t    } else if (styp  === state.Path.type.table.ptyp) {\n\t\treload=state.Path.moveKey(state,\"other\",skey,\"trash\",tin);\n\t    } else if (styp  === state.Path.type.rest.ptyp) {\n\t\tstate.Path.moveKey(state,\"other\",skey,\"trash\",tin);\n\t    } else if (styp  === state.Path.type.trashRest.ptyp) {\n\t\tif (state.Path.keyVal(state,skey) !== undefined) {\n\t\t    state.Path.select.val[skey]=\"\";\n\t\t    state.Path.select.where[skey]=\"\";\n\t\t    state.Path.select.cnt[skey]=0;\n\t\t} else {\n\t\t    reload=state.Path.moveKey(state,\"trash\",skey,\"trash\",tin);\n\t\t}\n\t    } else if (styp  === state.Path.type.col.ptyp ||\n\t\t       styp  === state.Path.type.row.ptyp) { // col/row -> trash\n\t\t    if (state.Path.values[skey]  === undefined) {\n\t\t\tstate.Path.values[skey]=[];\n\t\t    };\n\t\tstate.Path.values[skey].push(sval);\n\t\t//console.log(\"Trashed:\",skey,sval)\n\t\treload=true;\n\t    } else if (styp  === state.Path.type.item.ptyp) { // trash -> item\n\t\tstate.Path.trash.level=sval;\n\t\t//console.log(\"Trashlevel:\",state.Path.trash.level);\n\t\treload=true;\n\t    } else if (styp  === state.Path.type.rotate.ptyp) {\n\t\tstate.Layout.rotate={};\n\t\treload=true;\n\t    }\n\t} else if (ttyp  === state.Path.type.trashRest.ptyp) {// ************ -> T R A S H R E S T **************\n\t    tin=state.Path.keys.trash.indexOf(tkey);\n\t    if (styp  === state.Path.type.path.ptyp) {\n\t\treload=state.Path.moveKey(state,\"path\",skey,\"trash\",tin+1);\n\t    } else if (styp  === state.Path.type.eye.ptyp) {\n\t    } else if (styp  === state.Path.type.table.ptyp) {\n\t\treload=state.Path.moveTableKey(state,skey,\"trash\",tin+1);\n\t    } else if (styp  === state.Path.type.rest.ptyp) {\n\t\tstate.Path.moveKey(state,\"other\",skey,\"trash\",tin+1);\n\t    } else if (styp  === state.Path.type.trash.ptyp) {\n\t\tstate.Path.moveAllFirst(state,\"trash\",tin+1);\n\t    } else if (styp  === state.Path.type.trashRest.ptyp) {\n\t\tstate.Path.moveKey(state,\"trash\",skey,\"trash\",tin);\n\t    } else if (styp  === state.Path.type.col.ptyp ||\n\t\t       styp  === state.Path.type.row.ptyp) { // col/row -> trash\n\t\t    if (state.Path.values[skey]  === undefined) {state.Path.values[skey]=[];};\n\t\tstate.Path.values[skey]=state.Path.values[skey].concat(sval);\n\t\t//console.log(\"Trashed:\",skey,sval)\n\t\treload=true;\n\t    } else if (styp  === state.Path.type.item.ptyp) { // trash -> item\n\t\tstate.Path.trash.level=sval;\n\t\t//console.log(\"Trashlevel:\",state.Path.trash.level);\n\t\treload=true;\n\t    } else if (styp  === state.Path.type.rotate.ptyp) {\n\t    }\n\t} else if (ttyp  === state.Path.type.path.ptyp) {    // ************ -> P A T H **************\n\t    tid=state.Path.keys.path.indexOf(tkey);\n\t    if (styp  === state.Path.type.path.ptyp) {\n\t\tstate.Path.moveKey(state,\"path\",skey,\"path\",tid);\n\t    } else if (styp  === state.Path.type.eye.ptyp) {\n\t\treload=state.Path.moveAllKey(state,\"path\",skey,\"other\",0);\n\t    } else if (styp  === state.Path.type.table.ptyp) {\n\t\tif (state.Path.keyVal(state,skey) !== undefined) { // check if value is set\n\t\t    reload=state.Path.moveKey(state,\"other\",skey,\"path\",tid);\n\t\t}\n\t    } else if (styp  === state.Path.type.rest.ptyp) {\n\t\tif (state.Path.keyVal(state,skey) !== undefined) { // check if value is set\n\t\t    reload=state.Path.moveKey(state,\"other\",skey,\"path\",tid);\n\t\t}\n\t    } else if (styp  === state.Path.type.trash.ptyp ) {\t\n\t\tif (state.Path.keyVal(state,skey) !== undefined) { // check if value is set\n\t\t    reload=state.Path.moveKey(state,\"trash\",skey,\"path\",tid);\n\t\t}\n\t    }\n\t} else if (ttyp  === state.Path.type.table.ptyp) {// ************ -> T A B L E **************\n\t    if (styp  === state.Path.type.table.ptyp) { // swap positions\n\t\treload=state.Path.swapTableKey(state,skey,tkey);\n\t    } else {\n\t\tif (styp  === state.Path.type.path.ptyp) {\n\t\t    reload=state.Path.moveKey2Table(state,\"path\",skey,tkey);\n\t\t} else if (styp  === state.Path.type.eye.ptyp) {\n\t\t    if (state.Path.checkNewPath(state,ttyp,tkey)) {\n\t\t\t//state.path.makeNewPath(state,typ,tid+1);\n\t\t\t//reload=true;  // matrix has changed...\n\t\t    }\n\t\t} else if (styp  === state.Path.type.rest.ptyp) {\n\t\t    reload=state.Path.moveKey2Table(state,\"other\",skey,tkey);\t\t\n\t\t} else if (styp  === state.Path.type.trash.ptyp) {\n\t\t    reload=state.Path.moveTrash2Table(state,tkey);\t\t\n\t\t} else if (styp  === state.Path.type.trashRest.ptyp) {\n\t\t    reload=state.Path.moveKey2Table(state,\"trash\",skey,tkey);\t\t\n\t\t} else if (styp  === state.Path.type.trash.ptyp) {\n\t\t    state.Path.moveTrash(state,\"other\",tin+1);\n\t\t} else if (styp  === state.Path.type.trashRest.ptyp) {\n\t\t    reload=state.Path.moveKey(state,\"trash\",skey,\"other\",tin+1);\n\t\t}\n\t    }\n\t} else if (ttyp  === state.Path.type.rest.ptyp) { // ************ -> R E S T **************\t\n\t    tid=state.Path.other.rest.indexOf(tkey);\n\t    tin=state.Path.keys.other.indexOf(tkey);\n\t    if (styp  === state.Path.type.path.ptyp) {\n\t\treload=state.Path.moveKey(state,\"path\",skey,\"other\",tin);\n\t    } else if (styp  === state.Path.type.eye.ptyp) {\n\t\tif (state.Path.checkNewPath(state,ttyp,tkey)) {\n\t\t    //state.path.makeNewPath(state,typ,tid+1);\n\t\t    //reload=true;  // matrix has changed...\n\t\t}\n\t    } else if (styp  === state.Path.type.table.ptyp) {\n\t\treload=state.Path.moveTableKey(state,skey,\"other\",tin-1); // shifts when table-key is removed...\n\t    } else if (styp  === state.Path.type.rest.ptyp) {\n\t\tstate.Path.moveKey(state,\"other\",skey,\"other\",tin);\n\t    }\n\t} else if (ttyp  === state.Path.type.row.ptyp|| // ************ -> R O W / C O L **************\n\t\t   ttyp  === state.Path.type.col.ptyp) {\n\t    if (styp  === state.Path.type.eye.ptyp) { // eye -> col/row\n\t\tdelete state.Path.order[tkey];\n\t\treload=true;\n\t    } else if (styp  === state.Path.type.trash.ptyp) { // trash -> col/row\n\t\t//delete state.Path.order[tkey];\n\t\tstate.Path.values[tkey]=[];\n\t\treload=true;\n\t    } else if (styp  === ttyp) { // col/row -> col/row\n\t\tif (state.Path.order  === undefined) {state.Path.order={};};\n\t\tif (state.Path.order[skey]  === undefined) {\n\t\t    //console.log(\"Copying:\",JSON.stringify(state.Matrix.values[skey]));\n\t\t    state.Path.order[skey]=state.Utils.cp(state.Path.values[skey]);\n\t\t};\n\t\tif ((state,srel  === \"first\" && trel  === \"last\" ) || \n\t\t    (srel  === \"last\" && trel  === \"first\" )) {\n\t\t    state.Utils.invertArray(state.Path.order[skey]);\n\t\t    if (state.Path.order[skey][0] < state.Path.order[skey][Math.min(state.Path.order[skey].length,1)]) {\n\t\t\tif (state.Database.keyCnt[skey].num === \"num\") {\n\t\t\t    state.Database.keyCnt[skey].order=state.Database.nasc;\n\t\t\t} else {\n\t\t\t    state.Database.keyCnt[skey].order=state.Database.casc;\n\t\t\t}\n\t\t    } else {\n\t\t\tif (state.Database.keyCnt[skey].num === \"num\") {\n\t\t\t    state.Database.keyCnt[skey].order=state.Database.ndes;\n\t\t\t} else {\n\t\t\t    state.Database.keyCnt[skey].order=state.Database.cdes;\n\t\t\t}\n\t\t    }\n\t\t    //console.log(\"Sorting\",skey,\":\",state.Database.keyCnt[skey].order);\n\t\t} else {\n\t\t    state.Utils.moveTo(state.Path.order[skey],sval,tval);\n\t\t    //console.log(\"Order:\",JSON.stringify(state.Path.order[skey]),skey,sval,tval);\n\t\t}\n\t\treload=true;\n\t    } else if (styp  === state.Path.type.rotate.ptyp) {\n\t\tconsole.log(\"Rotating \",tkey);\n\t\tif (state.Layout.rotate  === undefined) {state.Layout.rotate ={};};\n\t\tif (state.Layout.rotate||[tkey]  === undefined || state.Layout.rotate||[tkey]  === \"\") {\n\t\t    state.Layout.rotate[tkey]='rotate';\n\t\t} else {\n\t\t    state.Layout.rotate[tkey]=\"\";\n\t\t}\n\t\treload=true;\n\t    } else if (styp  ===  state.Path.type.row.ptyp && ttyp  ===  state.Path.type.col.ptyp) {\n\t\treload=state.Layout.changePriority(state,skey,tkey);\n\t    } else if (ttyp  ===  state.Path.type.row.ptyp && styp  ===  state.Path.type.col.ptyp) {\n\t\treload=state.Layout.changePriority(state,skey,tkey);\n\t    }\n\t} else if (ttyp  === state.Path.type.item.ptyp) { // ************ -> I T E M **************\n\t    if (styp  === state.Path.type.trash.ptyp) { // trash -> item\n\t\tstate.Path.trash.level=undefined;\n\t\tconsole.log(\"Trashlevel:\",state.Path.trash.level);\n\n\t    }\n\t} else if (ttyp  === state.Path.type.rotate.ptyp) { // ************ -> R O T **************\n\t    if (styp  === state.Path.type.col.ptyp) { // col/row -> trash\n\t\tif (state.Layout.rotate  === undefined) {state.Layout.rotate ={};};\n\t\tif (state.Layout.rotate[skey]  === undefined || state.Layout.rotate[skey]  === \"\") {\n\t\t    state.Layout.rotate[skey]='rotate';\n\t\t} else {\n\t\t    state.Layout.rotate[skey]=\"\";\n\t\t}\n\t\treload=true;\n\t    }\n\t} else {\n\t    console.log(\"Unknown type:\",ttyp,styp);\n\t}\n\tstate.Show.showAll(state,reload);\n\tstate.Html.setLog(state);\n    };\n    this.dragStart=function(state,ev) {\n\tvar styp=ev.target.getAttribute(state,\"ptyp\");\n\tvar skey=ev.target.getAttribute(state,\"pkey\");\n\tvar sval=ev.target.getAttribute(state,\"pval\");\n\tvar srel=ev.target.getAttribute(state,\"prel\");\n\t// // mark all possible destinations...\n\t//if (styp  === state.Path.type.path.ptyp) {\n\t//state.Colors.setPathBorderColor(state,state.Colors.colors.bo);\n\t//};\n\tev.dataTransfer.setData(state,\"styp\",styp);\n\tev.dataTransfer.setData(state,\"skey\",skey);\n\tev.dataTransfer.setData(state,\"sval\",sval);\n\tev.dataTransfer.setData(state,\"srel\",srel);\n    };\n    this.dragEnd=function(state,ev) {\n\t//var styp = ev.dataTransfer.getData(state,\"styp\");\n\t//var sey = ev.dataTransfer.getData(state,\"sey\");\n\t//console.log(\"this.Dropped.\");\n\t// // reset destination marks to default...\n\t//if (styp  === \"path\" || styp  === \"trash\"){\n\t//state.Colors.setPathBorderColor(state,state.Colors.colors.bg);\n\t//}\n    };\n    this.onClick=function(state,ttyp,tid) {\n\tvar reload=false; // matrix changed?\n\tvar tkey,tin,src;\n\tif (ttyp  === \"path\") { // path-> other\n\t    var len=state.Path.keys.path.length\n\t    for (var ii = len-1;ii>=tid;ii--) {\n\t\ttkey=state.Path.keys.path.splice(ii, 1);    // remove from path\n\t\tconsole.log(\"ClickPath:\",JSON.stringify(tkey[0]),JSON.stringify(tkey[0].substring(state,0,1)));\n\t\tif (tkey[0].substring(state,0,1) === \"_\") {\n\t\t    console.log(\"Omitting internal variable:\",tkey);\n\t\t} else {\n\t\t    if (state.Utils.missing(state.Path.keys.other,tkey)) {\n\t\t\tstate.Path.keys.other=state.Path.keys.other.concat(tkey);         // last position\n\t\t    };\n\t\t    if (state.Layout.trash[tkey]  === undefined) {state.Layout.trash[tkey]=[];};\n\t\t    var trash=state.Layout.trash[tkey];\n\t\t    state.Path.moveKeys(state,\"trash\",trash,\"other\");\n\t\t    if (state.Layout.order[tkey]  === undefined) {state.Layout.order[tkey]=[];};\n\t\t    var order=state.Layout.order[tkey];\n\t\t    //console.log(\"*** Order:\",JSON.stringify(order));\n\t\t}\n\t\tstate.Path.makeOrder(state,\"other\",order);\n\t    }\n\t    //console.log(\"###Result:\",JSON.stringify(state.Path.keys.other));\n\t    reload=true;\n\t    //console.log(\"Onclick other-all:\",JSON.stringify(setup));\n\t} else {              // other -> path\n\t    if (ttyp  === \"table\") { // table -> path\n\t\ttkey=state.Path.other.table[tid];\n\t\ttin=state.Path.keys.other.indexOf(tkey);\n\t\tconsole.log(\"Table-click:\",tid,tkey,tin,JSON.stringify(state.Path.keys.other));\n\t\tif (tid  === state.Path.other.table.length-1 || // last element\n\t\t    state.Path.other.rest.length  === 0 ){       // no remaining elements\n\t\t    src=state.Path.keys.other.splice(tin, 1);    // remove from other\n\t\t    if (state.Utils.missing(state.Path.keys.path,src)&& state.Path.keyVal(state,tkey) !== undefined) { // check if value is set\n\t\t\tstate.Path.keys.path=state.Path.keys.path.concat(src);         // last position\n\t\t    } else if (state.Utils.missing(state.Path.keys.trash,src)) {\n\t\t\tstate.Utils.spliceArray(state.Path.keys.trash,0,0,src);         // last position\n\t\t    }\n\t\t} else { // move first element\n\t\t    var tkey2=state.Path.other.table[1];           // get last element\n\t\t    src=state.Path.keys.other.splice(tin, 1);   // remove first element from path\n\t\t    if (state.Utils.missing(state.Path.keys.path,src) && state.Path.keyVal(state,tkey) !== undefined) { // check if value is set\n\t\t\tstate.Path.keys.path=state.Path.keys.path.concat(src);         // last position\n\t\t    } else if (state.Utils.missing(state.Path.keys.trash,src)) {\n\t\t\tstate.Utils.spliceArray(state.Path.keys.trash,0,0,src);         // last position\n\t\t    };\n\t\t    // keep second element\n\t\t    var tin2=state.Path.keys.other.indexOf(tkey2);\n\t\t    var src2=state.Path.keys.other.splice(tin2, 1);    // remove from path\n\t\t    if (state.Utils.missing(state.Path.keys.other,src2)) {\n\t\t\tstate.Utils.spliceArray(state.Path.keys.other,1,0,src2);\n\t\t    }\n\t\t    //console.log(\"Kept:\",tin,tkey,JSON.stringify(state.Path.keys.other));\n\t\t}\n\t\treload=true;\n\t    } else if (ttyp  === \"rest\") {  // rest -> path\n\t\ttkey=state.Path.other.rest[tid];\n\t\ttin=state.Path.keys.other.indexOf(tkey);\n\t\tif (state.Path.keyVal(state,tkey) !== undefined) { // check if value is set\n\t\t    src=state.Path.keys.other.splice(tin, 1);    // remove from path\n\t\t    if (state.Utils.missing(state.Path.keys.path,src)) {\n\t\t\tstate.Path.keys.path=state.Path.keys.path.concat(src);         // last position\n\t\t    } else if (state.Utils.missing(state.Path.keys.trash,src)) {\n\t\t\tstate.Utils.spliceArray(state.Path.keys.trash,0,0,src);         // last position\n\t\t    }\n\t\t    reload=true;\n\t\t} else {\n\t\t    src=state.Path.keys.other.splice(tin, 1);    // remove from path\n\t\t    if (state.Utils.missing(state.Path.keys.trash,src)) {\n\t\t\tstate.Utils.spliceArray(state.Path.keys.trash,0,0,src);         // last position\n\t\t    }\n\t\t}\n\t    } else if (ttyp  === \"trash\") { // trash -> path\n\t\ttkey=state.Path.trash.rest[tid];\n\t\tif (state.Path.keyVal(state,tkey)  === undefined || !state.Utils.missing(state.Path.keys.path,tkey)) { // no value is set\n\t\t    tin=state.Path.keys.trash.indexOf(tkey);\n\t\t    src=state.Path.keys.trash.splice(tin, 1);    // remove from path\n\t\t    if (state.Utils.missing(state.Path.keys.other,src)) {\n\t\t\tstate.Path.keys.other=state.Path.keys.other.concat(src);         // last position\n\t\t    }\n\t\t    //console.log(\"Restored:\",JSON.stringify(state.Path.keys.other));\n\t\t    reload=(state.Path.other.table.length<2);\n\t\t} else {\n\t\t    tin=state.Path.keys.trash.indexOf(tkey);\n\t\t    src=state.Path.keys.trash.splice(tin, 1);    // remove from path\n\t\t    if (state.Utils.missing(state.Path.keys.path,src)) {\n\t\t\tstate.Path.keys.path=state.Path.keys.path.concat(src);         // last position\n\t\t    };\n\t\t    reload=true;\n\t\t}\n\t    }\n\t}\n\tstate.Show.showAll(state,reload);\n    }\n};\nexport default Navigate;\n"]},"metadata":{},"sourceType":"module"}