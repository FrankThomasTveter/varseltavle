{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _SelectInput = _interopRequireDefault(require(\"./SelectInput\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _mergeClasses = _interopRequireDefault(require(\"../styles/mergeClasses\"));\n\nvar _ArrowDropDown = _interopRequireDefault(require(\"../internal/svg-icons/ArrowDropDown\"));\n\nvar _Input = _interopRequireDefault(require(\"../Input\"));\n\nvar _InputBase = require(\"../InputBase/InputBase\");\n\nvar _NativeSelect = require(\"../NativeSelect/NativeSelect\");\n\nvar _NativeSelectInput = _interopRequireDefault(require(\"../NativeSelect/NativeSelectInput\")); // @inheritedComponent Input\n// To replace with InputBase in v4.0.0\n\n\nvar styles = _NativeSelect.styles;\nexports.styles = styles;\n\nfunction Select(props, context) {\n  var autoWidth = props.autoWidth,\n      children = props.children,\n      classes = props.classes,\n      displayEmpty = props.displayEmpty,\n      IconComponent = props.IconComponent,\n      input = props.input,\n      inputProps = props.inputProps,\n      MenuProps = props.MenuProps,\n      multiple = props.multiple,\n      native = props.native,\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      open = props.open,\n      renderValue = props.renderValue,\n      SelectDisplayProps = props.SelectDisplayProps,\n      variant = props.variant,\n      other = (0, _objectWithoutProperties2.default)(props, [\"autoWidth\", \"children\", \"classes\", \"displayEmpty\", \"IconComponent\", \"input\", \"inputProps\", \"MenuProps\", \"multiple\", \"native\", \"onClose\", \"onOpen\", \"open\", \"renderValue\", \"SelectDisplayProps\", \"variant\"]);\n  var inputComponent = native ? _NativeSelectInput.default : _SelectInput.default;\n  var fcs = (0, _InputBase.formControlState)({\n    props: props,\n    context: context,\n    states: ['variant']\n  });\n  return _react.default.cloneElement(input, (0, _extends2.default)({\n    // Most of the logic is implemented in `SelectInput`.\n    // The `Select` component is a simple API wrapper to expose something better to play with.\n    inputComponent: inputComponent,\n    inputProps: (0, _extends2.default)({\n      children: children,\n      IconComponent: IconComponent,\n      variant: fcs.variant,\n      type: undefined\n    }, native ? {} : {\n      autoWidth: autoWidth,\n      displayEmpty: displayEmpty,\n      MenuProps: MenuProps,\n      multiple: multiple,\n      onClose: onClose,\n      onOpen: onOpen,\n      open: open,\n      renderValue: renderValue,\n      SelectDisplayProps: SelectDisplayProps\n    }, inputProps, {\n      classes: inputProps ? (0, _mergeClasses.default)({\n        baseClasses: classes,\n        newClasses: inputProps.classes,\n        Component: Select\n      }) : classes\n    }, input ? input.props.inputProps : {})\n  }, other));\n}\n\nSelect.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * If true, the width of the popover will automatically be set according to the items inside the\n   * menu, otherwise it will be at least the width of the select input.\n   */\n  autoWidth: _propTypes.default.bool,\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * If `true`, the selected item is displayed even if its value is empty.\n   * You can only use it when the `native` property is `false` (default).\n   */\n  displayEmpty: _propTypes.default.bool,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),\n\n  /**\n   * An `Input` element; does not have to be a material-ui specific `Input`.\n   */\n  input: _propTypes.default.element,\n\n  /**\n   * Attributes applied to the `input` element.\n   * When `native` is `true`, the attributes are applied on the `select` element.\n   */\n  inputProps: _propTypes.default.object,\n\n  /**\n   * Properties applied to the [`Menu`](/api/menu) element.\n   */\n  MenuProps: _propTypes.default.object,\n\n  /**\n   * If true, `value` must be an array and the menu will support multiple selections.\n   * You can only use it when the `native` property is `false` (default).\n   */\n  multiple: _propTypes.default.bool,\n\n  /**\n   * If `true`, the component will be using a native `select` element.\n   */\n  native: _propTypes.default.bool,\n\n  /**\n   * Callback function fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value`.\n   * @param {object} [child] The react element that was selected when `native` is `false` (default).\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback\n   */\n  onClose: _propTypes.default.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback\n   */\n  onOpen: _propTypes.default.func,\n\n  /**\n   * Control `select` open state.\n   * You can only use it when the `native` property is `false` (default).\n   */\n  open: _propTypes.default.bool,\n\n  /**\n   * Render the selected value.\n   * You can only use it when the `native` property is `false` (default).\n   *\n   * @param {*} value The `value` provided to the component.\n   * @returns {ReactElement}\n   */\n  renderValue: _propTypes.default.func,\n\n  /**\n   * Properties applied to the clickable div element.\n   */\n  SelectDisplayProps: _propTypes.default.object,\n\n  /**\n   * The input value.\n   * This property is required when the `native` property is `false` (default).\n   */\n  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool]))]),\n\n  /**\n   * The variant to use.\n   */\n  variant: _propTypes.default.oneOf(['standard', 'outlined', 'filled'])\n} : {};\nSelect.defaultProps = {\n  autoWidth: false,\n  displayEmpty: false,\n  IconComponent: _ArrowDropDown.default,\n  input: _react.default.createElement(_Input.default, null),\n  multiple: false,\n  native: false\n};\nSelect.contextTypes = {\n  muiFormControl: _propTypes.default.object\n};\nSelect.muiName = 'Select';\n\nvar _default = (0, _withStyles.default)(_NativeSelect.styles, {\n  name: 'MuiSelect'\n})(Select);\n\nexports.default = _default;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/node_modules/@material-ui/core/Select/Select.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","styles","_extends2","_objectWithoutProperties2","_react","_propTypes","_SelectInput","_withStyles","_mergeClasses","_ArrowDropDown","_Input","_InputBase","_NativeSelect","_NativeSelectInput","Select","props","context","autoWidth","children","classes","displayEmpty","IconComponent","input","inputProps","MenuProps","multiple","native","onClose","onOpen","open","renderValue","SelectDisplayProps","variant","other","inputComponent","fcs","formControlState","states","cloneElement","type","undefined","baseClasses","newClasses","Component","propTypes","process","env","NODE_ENV","bool","node","object","isRequired","oneOfType","string","func","element","onChange","number","arrayOf","oneOf","defaultProps","createElement","contextTypes","muiFormControl","muiName","_default","name"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _SelectInput = _interopRequireDefault(require(\"./SelectInput\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _mergeClasses = _interopRequireDefault(require(\"../styles/mergeClasses\"));\n\nvar _ArrowDropDown = _interopRequireDefault(require(\"../internal/svg-icons/ArrowDropDown\"));\n\nvar _Input = _interopRequireDefault(require(\"../Input\"));\n\nvar _InputBase = require(\"../InputBase/InputBase\");\n\nvar _NativeSelect = require(\"../NativeSelect/NativeSelect\");\n\nvar _NativeSelectInput = _interopRequireDefault(require(\"../NativeSelect/NativeSelectInput\"));\n\n// @inheritedComponent Input\n// To replace with InputBase in v4.0.0\nvar styles = _NativeSelect.styles;\nexports.styles = styles;\n\nfunction Select(props, context) {\n  var autoWidth = props.autoWidth,\n      children = props.children,\n      classes = props.classes,\n      displayEmpty = props.displayEmpty,\n      IconComponent = props.IconComponent,\n      input = props.input,\n      inputProps = props.inputProps,\n      MenuProps = props.MenuProps,\n      multiple = props.multiple,\n      native = props.native,\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      open = props.open,\n      renderValue = props.renderValue,\n      SelectDisplayProps = props.SelectDisplayProps,\n      variant = props.variant,\n      other = (0, _objectWithoutProperties2.default)(props, [\"autoWidth\", \"children\", \"classes\", \"displayEmpty\", \"IconComponent\", \"input\", \"inputProps\", \"MenuProps\", \"multiple\", \"native\", \"onClose\", \"onOpen\", \"open\", \"renderValue\", \"SelectDisplayProps\", \"variant\"]);\n  var inputComponent = native ? _NativeSelectInput.default : _SelectInput.default;\n  var fcs = (0, _InputBase.formControlState)({\n    props: props,\n    context: context,\n    states: ['variant']\n  });\n  return _react.default.cloneElement(input, (0, _extends2.default)({\n    // Most of the logic is implemented in `SelectInput`.\n    // The `Select` component is a simple API wrapper to expose something better to play with.\n    inputComponent: inputComponent,\n    inputProps: (0, _extends2.default)({\n      children: children,\n      IconComponent: IconComponent,\n      variant: fcs.variant,\n      type: undefined\n    }, native ? {} : {\n      autoWidth: autoWidth,\n      displayEmpty: displayEmpty,\n      MenuProps: MenuProps,\n      multiple: multiple,\n      onClose: onClose,\n      onOpen: onOpen,\n      open: open,\n      renderValue: renderValue,\n      SelectDisplayProps: SelectDisplayProps\n    }, inputProps, {\n      classes: inputProps ? (0, _mergeClasses.default)({\n        baseClasses: classes,\n        newClasses: inputProps.classes,\n        Component: Select\n      }) : classes\n    }, input ? input.props.inputProps : {})\n  }, other));\n}\n\nSelect.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * If true, the width of the popover will automatically be set according to the items inside the\n   * menu, otherwise it will be at least the width of the select input.\n   */\n  autoWidth: _propTypes.default.bool,\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * If `true`, the selected item is displayed even if its value is empty.\n   * You can only use it when the `native` property is `false` (default).\n   */\n  displayEmpty: _propTypes.default.bool,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),\n\n  /**\n   * An `Input` element; does not have to be a material-ui specific `Input`.\n   */\n  input: _propTypes.default.element,\n\n  /**\n   * Attributes applied to the `input` element.\n   * When `native` is `true`, the attributes are applied on the `select` element.\n   */\n  inputProps: _propTypes.default.object,\n\n  /**\n   * Properties applied to the [`Menu`](/api/menu) element.\n   */\n  MenuProps: _propTypes.default.object,\n\n  /**\n   * If true, `value` must be an array and the menu will support multiple selections.\n   * You can only use it when the `native` property is `false` (default).\n   */\n  multiple: _propTypes.default.bool,\n\n  /**\n   * If `true`, the component will be using a native `select` element.\n   */\n  native: _propTypes.default.bool,\n\n  /**\n   * Callback function fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value`.\n   * @param {object} [child] The react element that was selected when `native` is `false` (default).\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback\n   */\n  onClose: _propTypes.default.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback\n   */\n  onOpen: _propTypes.default.func,\n\n  /**\n   * Control `select` open state.\n   * You can only use it when the `native` property is `false` (default).\n   */\n  open: _propTypes.default.bool,\n\n  /**\n   * Render the selected value.\n   * You can only use it when the `native` property is `false` (default).\n   *\n   * @param {*} value The `value` provided to the component.\n   * @returns {ReactElement}\n   */\n  renderValue: _propTypes.default.func,\n\n  /**\n   * Properties applied to the clickable div element.\n   */\n  SelectDisplayProps: _propTypes.default.object,\n\n  /**\n   * The input value.\n   * This property is required when the `native` property is `false` (default).\n   */\n  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool]))]),\n\n  /**\n   * The variant to use.\n   */\n  variant: _propTypes.default.oneOf(['standard', 'outlined', 'filled'])\n} : {};\nSelect.defaultProps = {\n  autoWidth: false,\n  displayEmpty: false,\n  IconComponent: _ArrowDropDown.default,\n  input: _react.default.createElement(_Input.default, null),\n  multiple: false,\n  native: false\n};\nSelect.contextTypes = {\n  muiFormControl: _propTypes.default.object\n};\nSelect.muiName = 'Select';\n\nvar _default = (0, _withStyles.default)(_NativeSelect.styles, {\n  name: 'MuiSelect'\n})(Select);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}