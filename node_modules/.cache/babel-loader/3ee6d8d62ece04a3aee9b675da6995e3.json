{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/Table1DComponent.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell'; //import SummaryCell from './SummaryCell';\n//import SeriesCell from './SeriesCell';\n//console.log(\"Inside Table.\")\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      height: '100%',\n      width: '100%'\n    },\n    paper: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'left'\n    },\n    table: {\n      textAlign: 'left',\n      padding: theme.spacing.unit * 2,\n      cursor: \"pointer\",\n      height: '100%',\n      width: '100%'\n    },\n    cell: {\n      cursor: \"pointer\"\n    }\n  };\n};\n\nfunction getStep(state, colvalues, cellMode) {\n  var step = 1;\n\n  if (cellMode === state.Show.code.cell.Series) {\n    step = Math.max(1, Math.ceil(colvalues.length / 20));\n  }\n\n  return step;\n}\n\nfunction onCellClick(event) {\n  var rowid = event.target.getAttribute(\"rowid\");\n  event.target.innerHTML = rowid;\n}\n\nfunction renderZeroRow(classes, state, colkey, colvalues, step) {\n  return React.createElement(TableRow, {\n    key: '1',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    key: \"0\",\n    state: state,\n    index: '0',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"No data\"));\n}\n\n;\n\nfunction DataRows(props) {\n  var classes = props.classes,\n      state = props.state,\n      step = props.step,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey,\n      rowvalues = props.rowvalues,\n      mode = props.mode;\n  return renderZeroRow(classes, state, colkey, colvalues, step);\n}\n\nfunction HdrRow(props) {\n  var classes = props.classes,\n      state = props.state,\n      step = props.step,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey; //, rowvalues\n\n  return React.createElement(TableRow, {\n    key: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.cell,\n    key: \"col-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }));\n}\n\nfunction Details(props) {\n  var classes = props.classes,\n      state = props.state; // classes, \n\n  var colkey = state.Path.getColKey(state) || \"\";\n  var rowkey = state.Path.getRowKey(state) || \"\";\n  var colvalues = state.Path.filterKeys(state, state.Matrix.values[colkey] || [\"\"]);\n  var rowvalues = state.Path.filterKeys(state, state.Matrix.values[rowkey] || [\"\"]);\n  var cellMode = state.Show.getCellMode();\n  var step = getStep(state, colvalues, cellMode);\n  console.log(\"Colkey:\", colkey, \" colval:\", JSON.stringify(state.Matrix.values[colkey] || [\"\"]));\n  console.log(\"Rowkey:\", rowkey, \" rowval:\", JSON.stringify(state.Matrix.values[rowkey] || [\"\"]));\n  return React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(HdrRow, {\n    classes: classes,\n    state: state,\n    step: step,\n    colkey: colkey,\n    colvalues: colvalues,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(DataRows, {\n    classes: classes,\n    state: state,\n    step: step,\n    colkey: colkey,\n    colvalues: colvalues,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    mode: cellMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }))));\n}\n\nvar Table1D =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Table1D, _Component);\n\n  function Table1D(props) {\n    var _this;\n\n    _classCallCheck(this, Table1D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table1D).call(this, props));\n    _this.state = props.state;\n    return _this;\n  }\n\n  _createClass(Table1D, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state;\n      return React.createElement(\"div\", {\n        className: classes.root,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Details, {\n        state: state,\n        classes: classes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Table1D;\n}(Component);\n\nTable1D.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Table1D);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/Table1DComponent.js"],"names":["React","Component","PropTypes","withStyles","Paper","Grid","Table","TableBody","TableRow","TableHead","TableCell","styles","theme","root","flexGrow","height","width","paper","padding","spacing","unit","textAlign","table","cursor","cell","getStep","state","colvalues","cellMode","step","Show","code","Series","Math","max","ceil","length","onCellClick","event","rowid","target","getAttribute","innerHTML","renderZeroRow","classes","colkey","DataRows","props","rowkey","rowvalues","mode","HdrRow","Details","Path","getColKey","getRowKey","filterKeys","Matrix","values","getCellMode","console","log","JSON","stringify","Table1D","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB,C,CAEA;AACA;AAEA;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,IAAI,EAAE;AACFC,MAAAA,QAAQ,EAAE,CADR;AAETC,MAAAA,MAAM,EAAE,MAFC;AAGTC,MAAAA,KAAK,EAAE;AAHE,KADe;AAMrBC,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEN,KAAK,CAACO,OAAN,CAAcC,IAAd,GAAqB,CAD3B;AAEHC,MAAAA,SAAS,EAAE;AAFR,KANc;AAUrBC,IAAAA,KAAK,EAAE;AACHD,MAAAA,SAAS,EAAE,MADR;AAEHH,MAAAA,OAAO,EAAEN,KAAK,CAACO,OAAN,CAAcC,IAAd,GAAqB,CAF3B;AAGVG,MAAAA,MAAM,EAAE,SAHE;AAIVR,MAAAA,MAAM,EAAE,MAJE;AAKVC,MAAAA,KAAK,EAAE;AALG,KAVc;AAiBrBQ,IAAAA,IAAI,EAAG;AAACD,MAAAA,MAAM,EAAE;AAAT;AAjBc,GAAL;AAAA,CAApB;;AAoBA,SAASE,OAAT,CAAiBC,KAAjB,EAAuBC,SAAvB,EAAiCC,QAAjC,EAA2C;AACvC,MAAIC,IAAI,GAAC,CAAT;;AACA,MAAID,QAAQ,KAAKF,KAAK,CAACI,IAAN,CAAWC,IAAX,CAAgBP,IAAhB,CAAqBQ,MAAtC,EAA8C;AAACH,IAAAA,IAAI,GAACI,IAAI,CAACC,GAAL,CAAS,CAAT,EAAWD,IAAI,CAACE,IAAL,CAAUR,SAAS,CAACS,MAAV,GAAiB,EAA3B,CAAX,CAAL;AAAiD;;AAChG,SAAOP,IAAP;AACH;;AACD,SAASQ,WAAT,CAAqBC,KAArB,EAA4B;AACxB,MAAIC,KAAK,GAACD,KAAK,CAACE,MAAN,CAAaC,YAAb,CAA0B,OAA1B,CAAV;AACAH,EAAAA,KAAK,CAACE,MAAN,CAAaE,SAAb,GAAyBH,KAAzB;AACH;;AAED,SAASI,aAAT,CAAuBC,OAAvB,EAA+BlB,KAA/B,EAAqCmB,MAArC,EAA4ClB,SAA5C,EAAsDE,IAAtD,EAA4D;AACxD,SAAQ,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAE,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACP,oBAAC,SAAD;AAAY,IAAA,GAAG,KAAf;AAAsB,IAAA,KAAK,EAAEH,KAA7B;AAAoC,IAAA,KAAK,EAAE,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADO,CAAR;AAGH;;AAAA;;AACD,SAASoB,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,MACbH,OADa,GACwDG,KADxD,CACbH,OADa;AAAA,MACJlB,KADI,GACwDqB,KADxD,CACJrB,KADI;AAAA,MACGG,IADH,GACwDkB,KADxD,CACGlB,IADH;AAAA,MACSgB,MADT,GACwDE,KADxD,CACSF,MADT;AAAA,MACiBlB,SADjB,GACwDoB,KADxD,CACiBpB,SADjB;AAAA,MAC4BqB,MAD5B,GACwDD,KADxD,CAC4BC,MAD5B;AAAA,MACoCC,SADpC,GACwDF,KADxD,CACoCE,SADpC;AAAA,MAC+CC,IAD/C,GACwDH,KADxD,CAC+CG,IAD/C;AAErB,SAAOP,aAAa,CAACC,OAAD,EAASlB,KAAT,EAAemB,MAAf,EAAsBlB,SAAtB,EAAgCE,IAAhC,CAApB;AACH;;AACD,SAASsB,MAAT,CAAgBJ,KAAhB,EAAuB;AAAA,MACXH,OADW,GACyCG,KADzC,CACXH,OADW;AAAA,MACFlB,KADE,GACyCqB,KADzC,CACFrB,KADE;AAAA,MACKG,IADL,GACyCkB,KADzC,CACKlB,IADL;AAAA,MACWgB,MADX,GACyCE,KADzC,CACWF,MADX;AAAA,MACmBlB,SADnB,GACyCoB,KADzC,CACmBpB,SADnB;AAAA,MAC8BqB,MAD9B,GACyCD,KADzC,CAC8BC,MAD9B,EACgD;;AACnE,SAAQ,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEJ,OAAO,CAACpB,IAA9B;AAAoC,IAAA,GAAG,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,CAAR;AAGH;;AACD,SAAS4B,OAAT,CAAiBL,KAAjB,EAAwB;AAAA,MACZH,OADY,GACOG,KADP,CACZH,OADY;AAAA,MACHlB,KADG,GACOqB,KADP,CACHrB,KADG,EACc;;AAClC,MAAImB,MAAM,GAAGnB,KAAK,CAAC2B,IAAN,CAAWC,SAAX,CAAqB5B,KAArB,KAA6B,EAA1C;AACA,MAAIsB,MAAM,GAAGtB,KAAK,CAAC2B,IAAN,CAAWE,SAAX,CAAqB7B,KAArB,KAA6B,EAA1C;AACA,MAAIC,SAAS,GAAGD,KAAK,CAAC2B,IAAN,CAAWG,UAAX,CAAsB9B,KAAtB,EAA4BA,KAAK,CAAC+B,MAAN,CAAaC,MAAb,CAAoBb,MAApB,KAA6B,CAAC,EAAD,CAAzD,CAAhB;AACA,MAAII,SAAS,GAAGvB,KAAK,CAAC2B,IAAN,CAAWG,UAAX,CAAsB9B,KAAtB,EAA4BA,KAAK,CAAC+B,MAAN,CAAaC,MAAb,CAAoBV,MAApB,KAA6B,CAAC,EAAD,CAAzD,CAAhB;AACA,MAAIpB,QAAQ,GAAIF,KAAK,CAACI,IAAN,CAAW6B,WAAX,EAAhB;AACA,MAAI9B,IAAI,GAACJ,OAAO,CAACC,KAAD,EAAOC,SAAP,EAAiBC,QAAjB,CAAhB;AACAgC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBhB,MAAtB,EAA6B,UAA7B,EAAwCiB,IAAI,CAACC,SAAL,CAAerC,KAAK,CAAC+B,MAAN,CAAaC,MAAb,CAAoBb,MAApB,KAA6B,CAAC,EAAD,CAA5C,CAAxC;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBb,MAAtB,EAA6B,UAA7B,EAAwCc,IAAI,CAACC,SAAL,CAAerC,KAAK,CAAC+B,MAAN,CAAaC,MAAb,CAAoBV,MAApB,KAA6B,CAAC,EAAD,CAA5C,CAAxC;AACA,SAAQ;AAAM,IAAA,KAAK,EAAE;AAAChC,MAAAA,KAAK,EAAE,MAAR;AAAgBD,MAAAA,MAAM,EAAE;AAAxB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE6B,OAAjB;AAA0B,IAAA,KAAK,EAAElB,KAAjC;AAAwC,IAAA,IAAI,EAAEG,IAA9C;AAAoD,IAAA,MAAM,EAAEgB,MAA5D;AAAoE,IAAA,SAAS,EAAElB,SAA/E;AAA0F,IAAA,MAAM,EAAEqB,MAAlG;AAA0G,IAAA,SAAS,EAAEC,SAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADG,EAIH,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEL,OAAnB;AAA4B,IAAA,KAAK,EAAElB,KAAnC;AAA0C,IAAA,IAAI,EAAEG,IAAhD;AAAsD,IAAA,MAAM,EAAEgB,MAA9D;AAAsE,IAAA,SAAS,EAAElB,SAAjF;AAA4F,IAAA,MAAM,EAAEqB,MAApG;AAA4G,IAAA,SAAS,EAAEC,SAAvH;AAAkI,IAAA,IAAI,EAAErB,QAAxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJG,CADI,CAAR;AAUF;;IAEIoC,O;;;;;AACF,mBAAYjB,KAAZ,EAAmB;AAAA;;AAAA;;AACtB,iFAAMA,KAAN;AACA,UAAKrB,KAAL,GAAWqB,KAAK,CAACrB,KAAjB;AAFsB;AAGlB;;;;wCACmB,CAAE;;;6BACb;AAAA,wBACkB,KAAKqB,KADvB;AAAA,UACDH,OADC,eACDA,OADC;AAAA,UACQlB,KADR,eACQA,KADR;AAET,aACI;AAAK,QAAA,SAAS,EAAEkB,OAAO,CAAC/B,IAAxB;AAA+B,QAAA,KAAK,EAAE;AAACG,UAAAA,KAAK,EAAE,MAAR;AAAgBD,UAAAA,MAAM,EAAE;AAAxB,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE6B,OAAO,CAACtB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACd,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEI,KAAhB;AAAuB,QAAA,OAAO,EAAEkB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADc,CADL,CADH,CADJ,CADJ;AAWD;;;;EAnBmB3C,S;;AAsBtB+D,OAAO,CAACC,SAAR,GAAoB;AAChBrB,EAAAA,OAAO,EAAE1C,SAAS,CAACgE,MAAV,CAAiBC;AADV,CAApB;AAIA,eAAehE,UAAU,CAACQ,MAAD,CAAV,CAAmBqD,OAAnB,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\n\n//import SummaryCell from './SummaryCell';\n//import SeriesCell from './SeriesCell';\n\n//console.log(\"Inside Table.\")\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n\theight: '100%',\n\twidth: '100%',\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'left',\n    },\n    table: {\n        textAlign: 'left',\n        padding: theme.spacing.unit * 2,\n\tcursor: \"pointer\",\n\theight: '100%',\n\twidth: '100%',\n    },\n    cell : {cursor: \"pointer\",},\n});\n\nfunction getStep(state,colvalues,cellMode) {\n    var step=1;\n    if (cellMode === state.Show.code.cell.Series) {step=Math.max(1,Math.ceil(colvalues.length/20));}\n    return step;\n}\nfunction onCellClick(event) {\n    var rowid=event.target.getAttribute(\"rowid\");\n    event.target.innerHTML = rowid;\n}\n\nfunction renderZeroRow(classes,state,colkey,colvalues,step) {\n    return (<TableRow key={'1'}>\n\t    <TableCell  key={`0`} state={state} index={'0'}>No data</TableCell>\n\t    </TableRow>);\n};\nfunction DataRows(props) {\n    const { classes, state, step, colkey, colvalues, rowkey, rowvalues, mode } = props;\n    return renderZeroRow(classes,state,colkey,colvalues,step);\n}\nfunction HdrRow(props) {\n    const { classes, state, step, colkey, colvalues, rowkey } = props; //, rowvalues\n    return (<TableRow key={0}>\n\t      <TableCell className={classes.cell} key={`col-1`}></TableCell>\n\t     </TableRow>);\n}\nfunction Details(props) {\n    const { classes, state } = props; // classes, \n    var colkey = state.Path.getColKey(state)||\"\";\n    var rowkey = state.Path.getRowKey(state)||\"\";\n    var colvalues = state.Path.filterKeys(state,state.Matrix.values[colkey]||[\"\"]);\n    var rowvalues = state.Path.filterKeys(state,state.Matrix.values[rowkey]||[\"\"]);\n    var cellMode  = state.Show.getCellMode();\n    var step=getStep(state,colvalues,cellMode);\n    console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(state.Matrix.values[colkey]||[\"\"]));\n    console.log(\"Rowkey:\",rowkey,\" rowval:\",JSON.stringify(state.Matrix.values[rowkey]||[\"\"]));\n    return (<div  style={{width: '100%', height: '100%'}}>\n        <Table>\n\t    <TableHead>\n\t      <HdrRow classes={classes} state={state} step={step} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues}/>\n\t    </TableHead>\n\t    <TableBody>\n\t      <DataRows classes={classes} state={state} step={step} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues} mode={cellMode}/>\n\t    </TableBody>\n        </Table>\n           </div>);\n }\n\nclass Table1D extends Component {\n    constructor(props) {\n\tsuper(props);\n\tthis.state=props.state;\n    }\n    componentDidMount() {} \n    render() {\n    const { classes, state } = this.props;\n    return (\n        <div className={classes.root}  style={{width: '100%', height: '100%'}}>\n            <Grid container spacing={24}>\n               <Grid item xs={12} > \n                  { <Paper className={classes.table}>\n\t\t    <Details state={state} classes={classes}/>\n                    </Paper>}\n               </Grid>\n            </Grid>\n\t</div>\n    );\n  }\n}\n\nTable1D.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Table1D);\n"]},"metadata":{},"sourceType":"module"}