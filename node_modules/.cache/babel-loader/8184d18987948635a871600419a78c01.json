{"ast":null,"code":"var _jsxFileName = \"/home/franktt/react/varseltavle/src/react/SummaryCell.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\n\nvar styles = function styles(theme) {\n  return {\n    pointer: {\n      cursor: \"pointer\",\n      border: \"0px\",\n      overflow: 'hidden',\n      padding: theme.spacing.unit * 0,\n      textAlign: \"center\"\n    },\n    nopointer: {\n      border: \"0px\",\n      padding: theme.spacing.unit * 0,\n      textAlign: \"center\"\n    },\n    divTableCell: {\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    },\n    divTableCellCursor: {\n      cursor: \"pointer\",\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    }\n  };\n}; //\tborderCollapse: 'collapse',\n\n\nfunction SummaryCell(props) {\n  var state = props.state,\n      classes = props.classes,\n      onclick = props.onclick,\n      colwhere = props.colwhere,\n      rowwhere = props.rowwhere,\n      elements = props.elements,\n      mode = props.mode;\n  var cnt = 0;\n  var lev = -1;\n  var elen = elements.length;\n\n  for (var ee = 0; ee < elen; ee++) {\n    cnt = cnt + elements[ee].cnt;\n    lev = Math.max(lev, elements[ee].lev);\n  }\n\n  ;\n  var label = \"\";\n\n  if (mode === undefined) {\n    if (cnt > 1) {\n      label = cnt;\n    }\n\n    ;\n  } else {\n    label = \"long description\" + elements.length;\n  }\n\n  ;\n  var bgcolor = state.Colors.getLevelColor(lev);\n  var cursor = classes.divTableCell;\n\n  if (onclick !== undefined) {\n    cursor = classes.divTableCellCursor;\n  }\n\n  var title = \"\";\n\n  if (colwhere !== \"\" && rowwhere !== \"\") {\n    title = \"(\" + colwhere + \") AND (\" + rowwhere + \")\";\n  } else if (colwhere !== \"\") {\n    title = colwhere;\n  } else if (rowwhere !== \"\") {\n    title = rowwhere;\n  } //{bgcolor}\n  //console.log(\"SummaryCell:\",label,\" lev=\",lev,elements.length,bgcolor);\n\n\n  return React.createElement(\"div\", {\n    className: cursor,\n    style: {\n      backgroundColor: bgcolor\n    },\n    onClick: onclick,\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, label);\n}\n\nSummaryCell.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SummaryCell);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/SummaryCell.js"],"names":["React","PropTypes","withStyles","TableCell","styles","theme","pointer","cursor","border","overflow","padding","spacing","unit","textAlign","nopointer","divTableCell","display","divTableCellCursor","SummaryCell","props","state","classes","onclick","colwhere","rowwhere","elements","mode","cnt","lev","elen","length","ee","Math","max","label","undefined","bgcolor","Colors","getLevelColor","title","backgroundColor","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\n\n\nconst styles = theme => ({\n    pointer: {\n\tcursor:\"pointer\",\n\tborder:\"0px\",\n\toverflow: 'hidden',\n\tpadding: theme.spacing.unit*0,\n\ttextAlign:\"center\",\n    },\n    nopointer: {\n\tborder:\"0px\",\n\tpadding: theme.spacing.unit*0,\n\ttextAlign:\"center\",\n    },\n    divTableCell:{\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableCellCursor:{\n\tcursor: \"pointer\",\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n});\n\n//\tborderCollapse: 'collapse',\n\nfunction SummaryCell(props) {\n    const { state,classes,onclick,\n\t    colwhere,rowwhere,\n\t    elements, mode } = props;\n    var cnt=0;\n    var lev=-1;\n    var elen=elements.length;\n    for (var ee=0;ee<elen;ee++) {\n        cnt=cnt+elements[ee].cnt;\n        lev=Math.max(lev,elements[ee].lev);\n    }; \n    var label=\"\";\n    if (mode === undefined) {\n\tif (cnt > 1) {label=cnt;};\n    } else {\n\tlabel=\"long description\" + elements.length;\n    };\n    var bgcolor=state.Colors.getLevelColor(lev);\n    var cursor=classes.divTableCell;\n    if (onclick !== undefined) {\n\tcursor=classes.divTableCellCursor;\n    }\n    var title=\"\";\n    if (colwhere !== \"\" && rowwhere !== \"\") {\n\ttitle=\"(\"+colwhere+\") AND (\"+rowwhere+\")\";\n    } else if (colwhere !== \"\") {\n\ttitle=colwhere;\n    } else if (rowwhere !== \"\") {\n\ttitle=rowwhere;\n    }\n    //{bgcolor}\n    //console.log(\"SummaryCell:\",label,\" lev=\",lev,elements.length,bgcolor);\n    return (\n            <div className={cursor} style={{backgroundColor:bgcolor}} onClick={onclick} title={title}>\n\t    {label}\n\t</div>\n    );\n}\n\nSummaryCell.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SummaryCell);\n"]},"metadata":{},"sourceType":"module"}