{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/Table2DComponent.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport SummaryCell from './SummaryCell';\nimport SeriesCell from './SeriesCell'; //console.log(\"Inside Table.\")\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      height: '100%',\n      width: '100%'\n    },\n    table: {\n      textAlign: 'left',\n      padding: theme.spacing.unit * 0,\n      height: '100%',\n      width: '100%',\n      borderStyle: 'solid'\n    },\n    row: {\n      alignItems: \"stretch\"\n    },\n    cell: {\n      cursor: \"pointer\"\n    }\n  };\n}; //function onCellClick(event) {\n//    var rowid=event.target.getAttribute(\"rowid\");\n//    event.target.innerHTML = rowid;\n//}\n//function onCellClick(event) {\n//    var rowid=event.target.getAttribute(\"rowid\");\n//    event.target.innerHTML = rowid;\n//}\n\n\nfunction getStep(state, colvalues, cellMode) {\n  var step = 1;\n\n  if (cellMode === state.Show.code.mSeries) {\n    step = Math.max(1, Math.ceil(colvalues.length / 20));\n  }\n\n  return step;\n}\n\nfunction getElements(state, colvalues, rowval, index, step) {} // ---------------- DATA\n\n\nfunction FirstDataCell(props) {\n  var classes = props.classes,\n      rowval = props.rowval,\n      onclick = props.onclick,\n      title = props.title; //console.log(\"Making first data cell.\");\n\n  return React.createElement(TableCell, {\n    className: classes.cell,\n    onClick: onclick,\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, rowval);\n}\n\nfunction DataCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      elements = props.elements,\n      mode = props.mode,\n      other = _objectWithoutProperties(props, [\"classes\", \"state\", \"elements\", \"mode\"]);\n\n  if (elements === undefined) {\n    return React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    });\n  } else if (mode === state.Show.code.mSum) {\n    return React.createElement(SummaryCell, Object.assign({}, other, {\n      state: state,\n      elements: elements,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(SeriesCell, Object.assign({}, other, {\n      state: state,\n      elements: elements,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n}\n\nfunction renderDataCell(classes, state, colkey, colvalues, rowkey, rowval, rowindex, rowwhere, range, mode, step, val, index) {\n  var title = state.Database.getWhereDetail(colkey, colvalues[index]); //console.log(\"Making data cell:\",rowval,val,index,step,JSON.stringify(colvalues));\n\n  if ((index - 1) % step === 0) {\n    // get elements and range\n    var elements = state.Matrix.getMatrixElements(colvalues, rowval, state.React.matrix, index, step); // get count and colwhere\n\n    var cnt = Math.min(values.length, index + step) - index;\n    var colwhere = state.Matrix.geWhere(state, colkey, colvalues, index, step); // make onclick and title\n\n    var onclick = function onclick() {\n      return state.Layout.selectItem(state, colkey, rowkey, colvalues[index], rowval, colwhere, rowwhere, cnt, 1);\n    };\n\n    return React.createElement(DataCell, {\n      className: classes.cell,\n      state: state,\n      key: \"col-\".concat(index),\n      index: index,\n      onclick: onclick,\n      title: title,\n      colkey: colkey,\n      rowkey: rowkey,\n      colval: val,\n      rowval: rowval,\n      colwhere: colwhere,\n      rowwhere: rowwhere,\n      elements: elements,\n      mode: mode,\n      step: step,\n      range: range,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    });\n  } else {\n    return null;\n  }\n}\n\nfunction dataRow(classes, state, colkey, rowkey, colvalues, mode, step, rowval, rowindex) {\n  var rowwhere = state.Database.getWhereDetail(rowkey, rowval);\n\n  var onclick = function onclick() {\n    return state.Layout.selectKey(state, rowkey, rowval, rowwhere, 1);\n  };\n\n  var range = [undefined, undefined];\n\n  if (state.React.matrix !== undefined) {\n    range = state.Matrix.getRange(state, state.React.matrix, colvalues, [rowval]);\n  }\n\n  ;\n  console.log(\"We have a matrix(\", rowval, \") with range:\", JSON.stringify(range));\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderDataCell(classes, state, colkey, colvalues, rowkey, rowval, rowindex, rowwhere, range, mode, step, val, index);\n  };\n\n  return React.createElement(TableRow, {\n    key: rowindex.toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(FirstDataCell, {\n    classes: classes,\n    key: '0',\n    rowval: rowval,\n    onclick: onclick,\n    title: rowwhere,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), colvalues.map(mapFunction));\n}\n\n;\n\nfunction renderZeroRow(classes, state, colkey, colvalues, step) {\n  return React.createElement(TableRow, {\n    key: '1',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    key: \"0\",\n    state: state,\n    index: '0',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"No data\"));\n}\n\n;\n\nfunction DataRows(props) {\n  var classes = props.classes,\n      state = props.state,\n      step = props.step,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey,\n      rowvalues = props.rowvalues,\n      mode = props.mode; //console.log(\"Making data rows.\",rowkey,JSON.stringify(rowvalues));\n\n  var mapFunction = function mapFunction(val, index) {\n    return dataRow(classes, state, colkey, rowkey, colvalues, mode, step, val, index);\n  };\n\n  if (rowvalues.length === 0) {\n    return renderZeroRow(classes, state, colkey, colvalues, step);\n  } else {\n    return rowvalues.map(mapFunction);\n  }\n} // ---------------- HDR\n\n\nfunction FirstHdrCell(props) {\n  var colkey = props.colkey,\n      rowkey = props.rowkey;\n  var label = rowkey + \"\\\\\" + colkey; //console.log(\"Making first header cell.\",label);\n\n  return React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, label);\n}\n\nfunction renderHdrCell(classes, state, colkey, colvalues, rowkey, step, val, index) {\n  if ((index - 1) % step === 0) {\n    //console.log(\"HdrCell:\",index,step);\n    var colwhere = \"\";\n    var cnt = 0;\n    var clen = colvalues.length;\n\n    for (var kk = index; kk < Math.min(clen, index + step); kk++) {\n      if (colwhere !== \"\") {\n        colwhere = colwhere + \" or \";\n      }\n\n      colwhere = colwhere + state.Database.getWhereDetail(colkey, colvalues[kk]);\n      cnt = cnt + 1;\n    }\n\n    ;\n\n    var onclick = function onclick() {\n      return state.Layout.selectKey(state, colkey, colvalues[index], colwhere, cnt);\n    };\n\n    var title = colwhere;\n    return React.createElement(TableCell, {\n      className: classes.cell,\n      key: \"col-\".concat(index),\n      index: index,\n      onClick: onclick,\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, val);\n  } else {\n    return null;\n  }\n}\n\nfunction HdrRow(props) {\n  var classes = props.classes,\n      state = props.state,\n      step = props.step,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey; //, rowvalues\n  //console.log(\"Making header row.\",colkey,JSON.stringify(colvalues));\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderHdrCell(classes, state, colkey, colvalues, rowkey, step, val, index);\n  };\n\n  return React.createElement(TableRow, {\n    key: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(FirstHdrCell, {\n    colkey: colkey,\n    rowkey: rowkey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), colvalues.map(mapFunction));\n} // ---------------- Details\n\n\nfunction Details(props) {\n  var classes = props.classes,\n      state = props.state; // classes, \n\n  var colkey = state.Path.getColKey(state) || \"\";\n  var rowkey = state.Path.getRowKey(state) || \"\";\n  var colvalues = state.Path.filterKeys(state, state.Matrix.values[colkey] || [\"\"]);\n  var rowvalues = state.Path.filterKeys(state, state.Matrix.values[rowkey] || [\"\"]);\n  var cellMode = state.Show.getCellMode();\n  var step = getStep(state, colvalues, cellMode);\n  console.log(\"Colkey:\", colkey, \" colval:\", JSON.stringify(state.Matrix.values[colkey] || [\"\"]));\n  console.log(\"Rowkey:\", rowkey, \" rowval:\", JSON.stringify(state.Matrix.values[rowkey] || [\"\"]));\n  return React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(HdrRow, {\n    classes: classes,\n    state: state,\n    step: step,\n    colkey: colkey,\n    colvalues: colvalues,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  })), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(DataRows, {\n    classes: classes,\n    state: state,\n    step: step,\n    colkey: colkey,\n    colvalues: colvalues,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    mode: cellMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }))));\n}\n\nvar Table2D =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Table2D, _Component);\n\n  function Table2D(props) {\n    var _this;\n\n    _classCallCheck(this, Table2D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table2D).call(this, props));\n    _this.state = props.state;\n    return _this;\n  }\n\n  _createClass(Table2D, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state;\n      console.log(\"##### Rendering Table2D.\");\n      return React.createElement(\"div\", {\n        className: classes.root,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Details, {\n        state: state,\n        classes: classes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Table2D;\n}(Component);\n\nTable2D.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Table2D);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/Table2DComponent.js"],"names":["React","Component","PropTypes","withStyles","Paper","Grid","Table","TableBody","TableRow","TableHead","TableCell","SummaryCell","SeriesCell","styles","theme","root","flexGrow","height","width","table","textAlign","padding","spacing","unit","borderStyle","row","alignItems","cell","cursor","getStep","state","colvalues","cellMode","step","Show","code","mSeries","Math","max","ceil","length","getElements","rowval","index","FirstDataCell","props","classes","onclick","title","DataCell","elements","mode","other","undefined","mSum","renderDataCell","colkey","rowkey","rowindex","rowwhere","range","val","Database","getWhereDetail","Matrix","getMatrixElements","matrix","cnt","min","values","colwhere","geWhere","Layout","selectItem","dataRow","selectKey","getRange","console","log","JSON","stringify","mapFunction","toString","map","renderZeroRow","DataRows","rowvalues","FirstHdrCell","label","renderHdrCell","clen","kk","HdrRow","Details","Path","getColKey","getRowKey","filterKeys","getCellMode","Table2D","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\n\nimport SummaryCell from './SummaryCell';\nimport SeriesCell from './SeriesCell';\n\n//console.log(\"Inside Table.\")\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n\theight: '100%',\n\twidth: '100%',\n    },\n    table: {\n        textAlign: 'left',\n        padding: theme.spacing.unit * 0,\n\theight: '100%',\n\twidth: '100%',\n\tborderStyle: 'solid',\n    },\n    row  :{alignItems: \"stretch\"},\n    cell : {cursor: \"pointer\"},\n});\n\n\n//function onCellClick(event) {\n//    var rowid=event.target.getAttribute(\"rowid\");\n//    event.target.innerHTML = rowid;\n//}\n//function onCellClick(event) {\n//    var rowid=event.target.getAttribute(\"rowid\");\n//    event.target.innerHTML = rowid;\n//}\nfunction getStep(state,colvalues,cellMode) {\n    var step=1;\n    if (cellMode === state.Show.code.mSeries) {step=Math.max(1,Math.ceil(colvalues.length/20));}\n    return step;\n}\nfunction getElements(state,colvalues,rowval,index,step) {\n}\n\n// ---------------- DATA\nfunction FirstDataCell (props) {\n    const { classes, rowval, onclick, title } = props;\n    //console.log(\"Making first data cell.\");\n    return (<TableCell className={classes.cell} onClick={onclick} title={title}>{rowval}</TableCell>);\n}\nfunction DataCell(props) {\n    const {classes,state,elements,mode,...other}=props;\n    if (elements===undefined) {\n\treturn <TableCell/>\n    } else if (mode===state.Show.code.mSum) {\n\treturn <SummaryCell {...other} state={state} elements={elements}/>\n    } else {\n\treturn <SeriesCell {...other} state={state} elements={elements}/>\n    }\n}\nfunction renderDataCell(classes,state,colkey,colvalues,rowkey,rowval,rowindex,rowwhere,range,mode,step,val,index) {\n    var title=state.Database.getWhereDetail(colkey,colvalues[index]);\n    //console.log(\"Making data cell:\",rowval,val,index,step,JSON.stringify(colvalues));\n    if ((index-1)%step === 0) {\n\t// get elements and range\n\tvar elements=state.Matrix.getMatrixElements(colvalues,rowval,state.React.matrix,index,step);\n\t// get count and colwhere\n        var cnt = Math.min(values.length,index+step)-index;\n        var colwhere = state.Matrix.geWhere(state,colkey,colvalues,index,step);\n\t// make onclick and title\n\tvar onclick=() => state.Layout.selectItem(state,colkey,rowkey,colvalues[index],rowval,colwhere,rowwhere,cnt,1);\n\treturn (<DataCell className={classes.cell} state={state} key={`col-${index}`} index={index} onclick={onclick} title={title} \n\t\tcolkey={colkey} rowkey={rowkey} colval={val} rowval={rowval} colwhere={colwhere} rowwhere={rowwhere} \n\t\telements={elements} mode={mode} step={step} range={range}/>);\n    } else {\n\treturn null;\n    }\n}\nfunction dataRow(classes,state,colkey,rowkey,colvalues,mode,step,rowval,rowindex) {\n    var rowwhere=state.Database.getWhereDetail(rowkey,rowval);\n    var onclick=() => state.Layout.selectKey(state,rowkey,rowval,rowwhere,1);\n    var range=[undefined,undefined];\n    if (state.React.matrix!==undefined) {\n\trange=state.Matrix.getRange(state,state.React.matrix,colvalues,[rowval]);\n    };\n    console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n    var mapFunction= (val,index)=>renderDataCell(classes,state,colkey,colvalues,rowkey,rowval,rowindex,rowwhere,range,mode,step,val,index);\n    return (<TableRow key={rowindex.toString()}>\n\t    <FirstDataCell classes={classes} key={'0'} rowval={rowval} onclick={onclick} title={rowwhere}/>\n\t    {colvalues.map(mapFunction)}\n\t    </TableRow>);\n};\nfunction renderZeroRow(classes,state,colkey,colvalues,step) {\n    return (<TableRow key={'1'}>\n\t    <TableCell  key={`0`} state={state} index={'0'}>No data</TableCell>\n\t    </TableRow>);\n};\nfunction DataRows(props) {\n    const { classes, state, step, colkey, colvalues, rowkey, rowvalues, mode } = props;\n    //console.log(\"Making data rows.\",rowkey,JSON.stringify(rowvalues));\n    var mapFunction= (val,index)=>dataRow(classes,state,colkey,rowkey,colvalues,mode,step,val,index);\n    if (rowvalues.length===0) {\n\treturn renderZeroRow(classes,state,colkey,colvalues,step);\n    } else {\n\treturn (rowvalues.map(mapFunction));\n    }\n}\n// ---------------- HDR\nfunction FirstHdrCell (props) {\n    const { colkey, rowkey } = props;\n    var label=rowkey + \"\\\\\" + colkey;\n    //console.log(\"Making first header cell.\",label);\n    return (<TableCell>{label}</TableCell>);\n}\nfunction renderHdrCell(classes,state,colkey,colvalues,rowkey,step,val,index) {\n    if ((index-1)%step === 0) {\n\t//console.log(\"HdrCell:\",index,step);\n        var colwhere = \"\";\n        var cnt=0\n\tvar clen=colvalues.length;\n        for (var kk=index;kk<Math.min(clen,index+step);kk++) {\n            if (colwhere !== \"\") {colwhere=colwhere + \" or \";}\n            colwhere=colwhere + state.Database.getWhereDetail(colkey,colvalues[kk]);\n            cnt=cnt+1;\n        };               \n\tvar onclick=() => state.Layout.selectKey(state,colkey,colvalues[index],colwhere,cnt);\n\tvar title=colwhere;\n\treturn (<TableCell className={classes.cell} key={`col-${index}`} index={index} onClick={onclick} title={title}>{val}</TableCell>);\n    } else {\n\treturn null;\n    }\n}\nfunction HdrRow(props) {\n    const { classes, state, step, colkey, colvalues, rowkey } = props; //, rowvalues\n    //console.log(\"Making header row.\",colkey,JSON.stringify(colvalues));\n    var mapFunction= (val,index)=>renderHdrCell(classes,state,colkey,colvalues,rowkey,step,val,index);\n    return (<TableRow key={0}>\n\t      <FirstHdrCell colkey={colkey} rowkey={rowkey}/>\n\t      {colvalues.map(mapFunction)}\n\t     </TableRow>);\n}\n// ---------------- Details\nfunction Details(props) {\n    const { classes, state } = props; // classes, \n    var colkey = state.Path.getColKey(state)||\"\";\n    var rowkey = state.Path.getRowKey(state)||\"\";\n    var colvalues = state.Path.filterKeys(state,state.Matrix.values[colkey]||[\"\"]);\n    var rowvalues = state.Path.filterKeys(state,state.Matrix.values[rowkey]||[\"\"]);\n    var cellMode  = state.Show.getCellMode();\n    var step=getStep(state,colvalues,cellMode);\n    console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(state.Matrix.values[colkey]||[\"\"]));\n    console.log(\"Rowkey:\",rowkey,\" rowval:\",JSON.stringify(state.Matrix.values[rowkey]||[\"\"]));\n    return (<div  style={{width: '100%', height: '100%'}}>\n        <Table>\n\t    <TableHead>\n\t      <HdrRow classes={classes} state={state} step={step} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues}/>\n\t    </TableHead>\n\t    <TableBody>\n\t      <DataRows classes={classes} state={state} step={step} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues} mode={cellMode}/>\n\t    </TableBody>\n        </Table>\n           </div>);\n }\nclass Table2D extends Component {\n    constructor(props) {\n\tsuper(props);\n\tthis.state=props.state;\n    }\n    componentDidMount() {} \n    render() {\n\tconst { classes, state } = this.props;\n\tconsole.log(\"##### Rendering Table2D.\");\n\treturn (<div className={classes.root}  style={{width: '100%', height: '100%'}}>\n\t\t   <Grid container spacing={24}>\n\t\t      <Grid item xs={12} > \n                         { <Paper className={classes.table}>\n\t\t              <Details state={state} classes={classes}/>\n                           </Paper>}\n                      </Grid>\n                   </Grid>\n\t        </div>);\n    }\n}\n\nTable2D.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Table2D);\n"]},"metadata":{},"sourceType":"module"}