{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/config/KeyComponent.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport SelIcon from '@material-ui/icons/Star';\nimport TabIcon from '@material-ui/icons/Apps';\n\nvar styles = function styles(theme) {\n  return {\n    key: {\n      display: 'inline-block',\n      marginRight: 'auto'\n    },\n    selectchip: {\n      margin: theme.spacing.unit,\n      cursor: \"pointer\",\n      color: \"red\",\n      borderColor: \"blue\"\n    },\n    tablechip: {\n      margin: theme.spacing.unit,\n      cursor: \"pointer\",\n      color: \"green\",\n      borderColor: \"blue\"\n    },\n    restchip: {\n      margin: theme.spacing.unit,\n      cursor: \"pointer\",\n      color: \"blue\",\n      borderColor: \"blue\"\n    },\n    trashchip: {\n      margin: theme.spacing.unit,\n      cursor: \"pointer\",\n      color: \"gray\",\n      borderColor: \"gray\"\n    },\n    othchip: {\n      margin: theme.spacing.unit,\n      color: \"red\",\n      borderColor: \"red\"\n    }\n  };\n};\n\nfunction getChipClass(classes, keytype, keyactive) {\n  if (keytype === \"select\") {\n    if (keyactive) {\n      return classes.selectchip;\n    } else {\n      return classes.trashchip;\n    }\n\n    ;\n  } else if (keytype === \"table\") {\n    return classes.tablechip;\n  } else if (keytype === \"rest\") {\n    return classes.restchip;\n  } else if (keytype === \"trash\") {\n    return classes.trashchip;\n  } else {\n    return classes.othchip;\n  }\n\n  ;\n}\n\n;\n\nfunction getChipIcon(keytype) {\n  if (keytype === \"select\") {\n    return React.createElement(SelIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    });\n  } else if (keytype === \"table\") {\n    return React.createElement(TabIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    });\n  } else if (keytype === \"rest\") {\n    return null;\n  } else if (keytype === \"trash\") {\n    return null;\n  } else {\n    return null;\n  }\n\n  ;\n}\n\nvar Key =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Key, _Component);\n\n  function Key() {\n    _classCallCheck(this, Key);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Key).apply(this, arguments));\n  }\n\n  _createClass(Key, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state,\n          keyitem = _this$props.keyitem,\n          keytype = _this$props.keytype,\n          keyactive = _this$props.keyactive;\n      var chip = getChipClass(classes, keytype, keyactive); //console.log(\"Chip:\",keyitem,keytype,keyactive);\n\n      var icon = getChipIcon(keytype);\n\n      var onclick = function onclick() {\n        return state.Navigate.onClickPath(state, 'trash', keyitem);\n      };\n\n      return React.createElement(\"div\", {\n        className: classes.key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Chip, {\n        icon: icon,\n        label: keyitem,\n        onClick: onclick,\n        className: chip,\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Key;\n}(Component);\n\nKey.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Key);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/config/KeyComponent.js"],"names":["React","Component","PropTypes","withStyles","Button","Chip","SelIcon","TabIcon","styles","theme","key","display","marginRight","selectchip","margin","spacing","unit","cursor","color","borderColor","tablechip","restchip","trashchip","othchip","getChipClass","classes","keytype","keyactive","getChipIcon","Key","props","state","keyitem","chip","icon","onclick","Navigate","onClickPath","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport SelIcon from '@material-ui/icons/Star';\nimport TabIcon from '@material-ui/icons/Apps';\n\nconst styles = theme => ({\n    key: {\n\tdisplay: 'inline-block',\n        marginRight: 'auto',\n    },\n    selectchip: {\n        margin: theme.spacing.unit,\n\tcursor: \"pointer\",\n        color:\"red\",\n        borderColor:\"blue\",\n    },\n    tablechip: {\n        margin: theme.spacing.unit,\n\tcursor: \"pointer\",\n        color:\"green\",\n        borderColor:\"blue\",\n    },\n    restchip: {\n        margin: theme.spacing.unit,\n\tcursor: \"pointer\",\n        color:\"blue\",\n        borderColor:\"blue\",\n    },\n    trashchip: {\n        margin: theme.spacing.unit,\n\tcursor: \"pointer\",\n        color:\"gray\",\n        borderColor:\"gray\",\n    },\n    othchip: {\n        margin: theme.spacing.unit,\n        color:\"red\",\n        borderColor:\"red\",\n  },\n});\nfunction getChipClass(classes,keytype,keyactive) {\n    if (keytype === \"select\") {\n\tif (keyactive) {\n\t    return classes.selectchip;\n\t} else {\n\t    return classes.trashchip\n\t};\n    } else if (keytype === \"table\") {\n\treturn classes.tablechip\n    } else if (keytype === \"rest\") {\n\t    return classes.restchip\n    } else if (keytype === \"trash\") {\n\treturn classes.trashchip\n    } else  {\n\treturn classes.othchip\n    };\n};\nfunction getChipIcon(keytype) {\n    if (keytype === \"select\") {\n\treturn <SelIcon/>;\n    } else if (keytype === \"table\") {\n\treturn <TabIcon/>;\n    } else if (keytype === \"rest\") {\n\treturn null;\n    } else if (keytype === \"trash\") {\n\treturn null;\n    } else  {\n\treturn null;\n    };\n}\n\nclass Key extends Component {\n    render() {\n        const { classes, state, keyitem, keytype, keyactive } = this.props;\n\tvar chip=getChipClass(classes,keytype,keyactive);\n\t//console.log(\"Chip:\",keyitem,keytype,keyactive);\n\tvar icon=getChipIcon(keytype);\n\tvar onclick=() => state.Navigate.onClickPath(state,'trash',keyitem);\n\treturn (\n\t\t<div className={classes.key}>\n\t \t   <Chip\n\t              icon={icon}\n\t              label={keyitem}\n\t              onClick={onclick}\n\t              className={chip}\n\t              variant=\"outlined\"\n\t\t   />\n\t\t</div>\n\t);\n    }\n}\n\nKey.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Key);\n"]},"metadata":{},"sourceType":"module"}