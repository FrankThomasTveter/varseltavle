{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/Table2DComponent.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { StickyTable, Row, Cell } from 'react-sticky-table';\nimport 'react-sticky-table/dist/react-sticky-table.css';\nimport SummaryCell from 'SummaryCell';\nimport SeriesCell from 'SeriesCell';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid'; //import TableCell from '@material-ui/core/TableCell';\n//import TableSortLabel from '@material-ui/core/TableSortLabel';\n\nconsole.log(\"Inside Table.\");\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      height: '100%',\n      width: '100%'\n    },\n    paper: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'left'\n    },\n    table: {\n      textAlign: 'left',\n      padding: theme.spacing.unit * 2,\n      cursor: \"pointer\",\n      height: '100%',\n      width: '100%'\n    },\n    cell: {\n      cursor: \"pointer\"\n    }\n  };\n}; //function onCellClick(event) {\n//    var rowid=event.target.getAttribute(\"rowid\");\n//    event.target.innerHTML = rowid;\n//}\n\n\nfunction getStep(state, colvalues, cellMode) {\n  var step = 1;\n\n  if (cellMode === state.Show.code.mSeries) {\n    step = Math.max(1, Math.ceil(colvalues.length / 20));\n  }\n\n  return step;\n}\n\nfunction FirstDataCell(props) {\n  var rowkey = props.rowkey,\n      onclick = props.onclick,\n      title = props.title;\n  return React.createElement(Cell, {\n    onClick: onclick,\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"rowkey \");\n}\n\nfunction FirstHdrCell(props) {\n  var colkey = props.colkey,\n      rowkey = props.rowkey;\n  return React.createElement(Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"rowkey + \\\"\\\\\\\\\\\" + colkey \");\n} // ---------------- DATA\n\n\nfunction DataCell(props) {\n  var state = props.state,\n      mode = props.mode,\n      other = _objectWithoutProperties(props, [\"state\", \"mode\"]);\n\n  if (mode === state.Show.code.mSum) {\n    return React.createElement(SummaryCell, Object.assign({}, other, {\n      state: state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(SeriesCell, Object.assign({}, other, {\n      state: state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n}\n\nfunction renderDataCell(classes, state, colkey, colvalues, rowkey, rowval, rowindex, rowwhere, mode, step, val, index) {\n  var title = state.Database.getWhereDetail(colkey, colvalues[index]);\n\n  if ((index - 1) % step === 0) {\n    var clen = colvalues.length; // get elements and range\n\n    var elements = undefined;\n    var range = [undefined, undefined];\n\n    if (state.React.matrix !== undefined) {\n      range = state.Matrix.getRange(state.React.matrix, colvalues, [rowval]);\n\n      for (var kk = index; kk < Math.min(clen, index + step); kk++) {\n        var element = state.Matrix.getMatrixElement(colvalues[kk], rowval, state.React.matrix);\n\n        if (element === undefined) {} else {\n          //console.log(\"Found:\",colvalues[kk],rowval);\n          if (elements === undefined) {\n            elements = [];\n          }\n\n          ;\n          elements.push(element);\n        }\n      }\n\n      ;\n    } // get count and colwhere\n\n\n    var cnt = 0;\n    var colwhere = \"\";\n\n    for (var kk = index; kk < Math.min(clen, index + step); kk++) {\n      if (colwhere != \"\") {\n        colwhere = colwhere + \" or \";\n      }\n\n      colwhere = colwhere + state.Database.getWhereDetail(colkey, colvalues[kk]);\n      cnt = cnt + 1;\n    }\n\n    ; // make onclick and title\n\n    var onclick = function onclick() {\n      return state.Layout.selectItem(colkey, rowkey, colvalues[index], rowval, colwhere, rowwhere, cnt, 1);\n    };\n\n    var title = colwhere;\n    return React.createElement(DataCell, {\n      classes: classes,\n      state: state,\n      key: \"dat-\".concat(colkey, \"-\").concat(rowkey),\n      index: index,\n      onclick: onclick,\n      title: title,\n      colkey: colkey,\n      rowkey: rowkey,\n      colval: colval,\n      rowval: rowval,\n      colwhere: colwhere,\n      rowwhere: rowwhere,\n      elements: elements,\n      mode: mode,\n      step: step,\n      range: range,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    });\n  } else {\n    return;\n  }\n}\n\nfunction dataRow(classes, state, colkey, rowkey, colvalues, mode, step, rowval, rowindex) {\n  var rowwhere = state.Database.getWhereDetail(rowkey, rowval);\n\n  var onclick = function onclick() {\n    return state.Layout.selectKey(rowkey, rowval, rowwhere, cnt);\n  };\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderDataCell(classes, state, colkey, rowkey, rowval, rowindex, rowwhere, mode, step, val, index);\n  };\n\n  return React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(FirstDataCell, {\n    rowkey: rowkey,\n    onclick: onclick,\n    title: rowwhere,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), colvalues.map(mapFunction));\n}\n\n;\n\nfunction renderZeroRow(classes, state, colkey, colvalues, step) {\n  return React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Cell, {\n    classes: classes,\n    state: state,\n    key: \"col\",\n    index: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }));\n}\n\n;\n\nfunction DataRows(props) {\n  var classes = props.classes,\n      state = props.state,\n      step = props.step,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey,\n      rowvalues = props.rowvalues,\n      mode = props.mode;\n\n  var mapFunction = function mapFunction(val, index) {\n    return dataRow(classes, state, colkey, rowkey, colvalues, mode, step, val, index);\n  };\n\n  if (rowvalues.length === 0) {\n    return renderZeroRow(classes, state, colkey, colvalues, step);\n  } else {\n    return rowvalues.map(mapFunction);\n  }\n} // ---------------- HDR\n\n\nfunction renderHdrCell(classes, state, colkey, colvalues, rowkey, step, val, index) {\n  var title = state.Database.getWhereDetail(colkey, colvalues[index]);\n\n  if ((index - 1) % step === 0) {\n    var colwhere = \"\";\n    var cnt = 0;\n    var clen = colvalues.length;\n\n    for (var kk = index; kk < Math.min(clen, index + step); kk++) {\n      if (colwhere != \"\") {\n        colwhere = colwhere + \" or \";\n      }\n\n      colwhere = colwhere + state.Database.getWhereDetail(colkey, colvalues[kk]);\n      cnt = cnt + 1;\n    }\n\n    ;\n\n    var onclick = function onclick() {\n      return state.Layout.selectKey(colkey, colvalues[index], colwhere, cnt);\n    };\n\n    var title = colwhere;\n    return React.createElement(Cell, {\n      classes: classes,\n      state: state,\n      key: \"col-\".concat(colkey),\n      index: index,\n      onclick: onclick,\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    });\n  } else {\n    return;\n  }\n}\n\nfunction HdrRow(props) {\n  var classes = props.classes,\n      state = props.state,\n      step = props.step,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey; //, rowvalues\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderHdrCell(classes, state, colkey, colvalues, rowkey, step, val, index);\n  };\n\n  return React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(FirstHdrCell, {\n    colkey: colkey,\n    rowkey: rowkey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), colvalues.map(mapFunction));\n} // ---------------- Details\n\n\nfunction Details(props) {\n  var state = props.state; // classes, \n\n  var colkey = state.Path.getColKey(state) || \"\";\n  var rowkey = state.Path.getRowKey(state) || \"\";\n  var colvalues = state.Path.filterKeys(state, state.Matrix.values[colkey] || [\"\"]);\n  var rowvalues = state.Path.filterKeys(state, state.Matrix.values[rowkey] || [\"\"]);\n  var cellMode = state.Show.getCellMode();\n  var step = getStep(state, colvalues, cellMode);\n  return React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(StickyTable, {\n    state: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(HdrRow, {\n    state: state,\n    step: step,\n    colkey: colkey,\n    colvalues: colvalues,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(DataRows, {\n    state: state,\n    step: step,\n    colkey: colkey,\n    colvalues: colvalues,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    mode: cellMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  })));\n}\n\nvar Table =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Table, _Component);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = props.state;\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state;\n      console.log(\"##### Rendering Table2D.\");\n      return React.createElement(\"div\", {\n        className: classes.root,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Details, {\n        state: state,\n        classes: classes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Table;\n}(Component);\n\nTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Table);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/Table2DComponent.js"],"names":["React","Component","PropTypes","withStyles","StickyTable","Row","Cell","SummaryCell","SeriesCell","Paper","Grid","console","log","styles","theme","root","flexGrow","height","width","paper","padding","spacing","unit","textAlign","table","cursor","cell","getStep","state","colvalues","cellMode","step","Show","code","mSeries","Math","max","ceil","length","FirstDataCell","props","rowkey","onclick","title","FirstHdrCell","colkey","DataCell","mode","other","mSum","renderDataCell","classes","rowval","rowindex","rowwhere","val","index","Database","getWhereDetail","clen","elements","undefined","range","matrix","Matrix","getRange","kk","min","element","getMatrixElement","push","cnt","colwhere","Layout","selectItem","colval","dataRow","selectKey","mapFunction","map","renderZeroRow","DataRows","rowvalues","renderHdrCell","HdrRow","Details","Path","getColKey","getRowKey","filterKeys","values","getCellMode","Table","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { StickyTable, Row, Cell } from 'react-sticky-table';\nimport 'react-sticky-table/dist/react-sticky-table.css';\nimport SummaryCell from 'SummaryCell';\nimport SeriesCell from 'SeriesCell';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\n//import TableCell from '@material-ui/core/TableCell';\n//import TableSortLabel from '@material-ui/core/TableSortLabel';\n\nconsole.log(\"Inside Table.\")\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n\theight: '100%',\n\twidth: '100%',\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'left',\n    },\n    table: {\n        textAlign: 'left',\n        padding: theme.spacing.unit * 2,\n\tcursor: \"pointer\",\n\theight: '100%',\n\twidth: '100%',\n    },\n    cell : {cursor: \"pointer\",},\n});\n\n//function onCellClick(event) {\n//    var rowid=event.target.getAttribute(\"rowid\");\n//    event.target.innerHTML = rowid;\n//}\nfunction getStep(state,colvalues,cellMode) {\n    var step=1;\n    if (cellMode === state.Show.code.mSeries) {step=Math.max(1,Math.ceil(colvalues.length/20));}\n    return step;\n}\nfunction FirstDataCell (props) {\n    const { rowkey, onclick, title } = props;\n    return (<Cell onClick={onclick} title={title}>rowkey </Cell>);\n}\nfunction FirstHdrCell (props) {\n    const { colkey, rowkey } = props;\n    return (<Cell>rowkey + \"\\\\\" + colkey </Cell>);\n}\n// ---------------- DATA\nfunction DataCell(props) {\n    const {state,mode,...other}=props;\n    if (mode===state.Show.code.mSum) {\n\treturn <SummaryCell {...other} state={state}/>\n    } else {\n\treturn <SeriesCell {...other} state={state}/>\n    }\n}\nfunction renderDataCell(classes,state,colkey,colvalues,rowkey,rowval,rowindex,rowwhere,mode,step,val,index) {\n    var title=state.Database.getWhereDetail(colkey,colvalues[index]);\n    if ((index-1)%step === 0) {\n\tvar clen=colvalues.length;\n\t// get elements and range\n        var elements=undefined\n\tvar range=[undefined,undefined];\n\tif (state.React.matrix!==undefined) {\n\t    range=state.Matrix.getRange(state.React.matrix,colvalues,[rowval]);\n            for (var kk=index;kk<Math.min(clen,index+step);kk++) {\n\t\tvar element=state.Matrix.getMatrixElement(colvalues[kk],rowval,state.React.matrix);\n\t\tif (element === undefined) {\n\t\t} else {\n                    //console.log(\"Found:\",colvalues[kk],rowval);\n                    if (elements===undefined) {elements=[];};\n                    elements.push(element);\n\t\t}\n            };               \n\t}\n\t// get count and colwhere\n        var cnt=0;\n        var colwhere = \"\";\n        for (var kk=index;kk<Math.min(clen,index+step);kk++) {\n\t    if (colwhere != \"\") {colwhere=colwhere + \" or \";}\n\t    colwhere=colwhere + state.Database.getWhereDetail(colkey,colvalues[kk]);\n\t    cnt=cnt+1;\n        };               \n\t// make onclick and title\n\tvar onclick=() => state.Layout.selectItem(colkey,rowkey,colvalues[index],rowval,colwhere,rowwhere,cnt,1);\n\tvar title=colwhere;\n\treturn (<DataCell classes={classes} state={state} key={`dat-${colkey}-${rowkey}`} index={index} onclick={onclick} title={title} \n\t\tcolkey={colkey} rowkey={rowkey} colval={colval} rowval={rowval} colwhere={colwhere} rowwhere={rowwhere} \n\t\telements={elements} mode={mode} step={step} range={range}/>);\n    } else {\n\treturn;\n    }\n}\nfunction dataRow(classes,state,colkey,rowkey,colvalues,mode,step,rowval,rowindex) {\n    var rowwhere=state.Database.getWhereDetail(rowkey,rowval);\n    var onclick=() => state.Layout.selectKey(rowkey,rowval,rowwhere,cnt);\n    var mapFunction= (val,index)=>renderDataCell(classes,state,colkey,rowkey,rowval,rowindex,rowwhere,mode,step,val,index);\n    return (<Row><FirstDataCell rowkey={rowkey} onclick={onclick} title={rowwhere}/>{colvalues.map(mapFunction)}</Row>);\n};\nfunction renderZeroRow(classes,state,colkey,colvalues,step) {\n    return <Row><Cell classes={classes} state={state} key={`col`} index={0}/></Row>;\n};\nfunction DataRows(props) {\n    const { classes, state, step, colkey,colvalues, rowkey, rowvalues, mode } = props;\n    var mapFunction= (val,index)=>dataRow(classes,state,colkey,rowkey,colvalues,mode,step,val,index);\n    if (rowvalues.length===0) {\n\treturn renderZeroRow(classes,state,colkey,colvalues,step);\n    } else {\n\treturn (rowvalues.map(mapFunction));\n    }\n}\n// ---------------- HDR\nfunction renderHdrCell(classes,state,colkey,colvalues,rowkey,step,val,index) {\n    var title=state.Database.getWhereDetail(colkey,colvalues[index]);\n    if ((index-1)%step === 0) {\n        var colwhere = \"\";\n        var cnt=0\n\tvar clen=colvalues.length;\n        for (var kk=index;kk<Math.min(clen,index+step);kk++) {\n            if (colwhere != \"\") {colwhere=colwhere + \" or \";}\n            colwhere=colwhere + state.Database.getWhereDetail(colkey,colvalues[kk]);\n            cnt=cnt+1;\n        };               \n\tvar onclick=() => state.Layout.selectKey(colkey,colvalues[index],colwhere,cnt);\n\tvar title=colwhere;\n\treturn (<Cell classes={classes} state={state} key={`col-${colkey}`} index={index} onclick={onclick} title={title}/>);\n    } else {\n\treturn;\n    }\n}\nfunction HdrRow(props) {\n    const { classes, state, step, colkey, colvalues, rowkey } = props; //, rowvalues\n    var mapFunction= (val,index)=>renderHdrCell(classes,state,colkey,colvalues,rowkey,step,val,index);\n    return (<Row><FirstHdrCell colkey={colkey} rowkey={rowkey}/>{colvalues.map(mapFunction)}</Row>);\n}\n// ---------------- Details\nfunction Details(props) {\n    const { state } = props; // classes, \n    var colkey = state.Path.getColKey(state)||\"\";\n    var rowkey = state.Path.getRowKey(state)||\"\";\n    var colvalues = state.Path.filterKeys(state,state.Matrix.values[colkey]||[\"\"]);\n    var rowvalues = state.Path.filterKeys(state,state.Matrix.values[rowkey]||[\"\"]);\n    var cellMode  = state.Show.getCellMode();\n    var step=getStep(state,colvalues,cellMode);\n    return (<div  style={{width: '100%', height: '100%'}}>\n        <StickyTable state={state}>\n\t      <HdrRow   state={state} step={step} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues}/>\n\t      <DataRows state={state} step={step} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues} mode={cellMode}/>\n        </StickyTable>\n           </div>);\n }\nclass Table extends Component {\n    constructor(props) {\n\tsuper(props);\n\tthis.state=props.state;\n    }\n    componentDidMount() {} \n    render() {\n\tconst { classes, state } = this.props;\n\tconsole.log(\"##### Rendering Table2D.\");\n\treturn (<div className={classes.root}  style={{width: '100%', height: '100%'}}>\n\t\t   <Grid container spacing={24}>\n\t\t      <Grid item xs={12} > \n                         { <Paper className={classes.table}>\n\t\t              <Details state={state} classes={classes}/>\n                           </Paper>}\n                      </Grid>\n                   </Grid>\n\t        </div>);\n    }\n}\n\nTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Table);\n"]},"metadata":{},"sourceType":"module"}