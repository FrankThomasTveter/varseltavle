{"ast":null,"code":"import _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/CanvasTextComponent.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nvar border = 4;\n\nvar styles = function styles(theme) {\n  return {\n    pointer: {\n      cursor: \"pointer\",\n      padding: theme.spacing.unit * 0.1\n    },\n    nopointer: {\n      padding: theme.spacing.unit * 0.1\n    }\n  };\n};\n\nfunction getTextWidth(txt, fontname, fontsize) {\n  if (getTextWidth.c === undefined) {\n    getTextWidth.c = document.createElement('canvas');\n    getTextWidth.ctx = getTextWidth.c.getContext('2d');\n  }\n\n  if (fontname !== undefined) {\n    getTextWidth.ctx.font = fontsize + ' ' + fontname;\n  }\n\n  return getTextWidth.ctx.measureText(txt).width;\n}\n\n;\n\nfunction getTextHeight(fontname, fontsize) {\n  if (getTextHeight.c === undefined) {\n    getTextHeight.c = document.createElement('canvas');\n    getTextHeight.ctx = getTextHeight.c.getContext('2d');\n  }\n\n  if (fontname !== undefined) {\n    getTextHeight.ctx.font = fontsize + ' ' + fontname;\n  }\n\n  return getTextHeight.ctx.measureText('M').width;\n}\n\nfunction updateCanvas(item) {\n  var _item$props = item.props,\n      state = _item$props.state,\n      label = _item$props.label,\n      rotate = _item$props.rotate;\n  var cnv = item.refs.text;\n  var ctx = cnv.getContext('2d'); //var cnvheight = cnv.height;\n\n  ctx.save(); //ctx.translate(newx, newy);\n  //ctx.font = \"40px Courier\"\n\n  ctx.textAlign = \"left\"; //left right center\n  //ctx.rect(0,0,100,100);\n  //ctx.stroke();\n\n  if (rotate !== undefined) {\n    ctx.translate(item.width - border, item.height - border);\n    ctx.rotate(-Math.PI / 2); //console.log(\"Pos:\",0,-20);\n\n    ctx.fillText(label, 0, 0); // labelXposition\n  } else {\n    ctx.fillText(label, border, item.height - border); // labelXposition\n  }\n\n  ;\n  ctx.restore(); //ctx.rect(0,0,item.width,item.height);\n  //ctx.stroke();\n  //console.log(\"Label:\",label,item.width,item.height);\n  //console.log(\"CanvasText:\",cnv.width,cnv.height);\n}\n\nvar CanvasTextComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CanvasTextComponent, _React$Component);\n\n  function CanvasTextComponent(props) {\n    var _this;\n\n    _classCallCheck(this, CanvasTextComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CanvasTextComponent).call(this, props));\n    var state = props.state;\n    return _this;\n  }\n\n  _createClass(CanvasTextComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      updateCanvas(this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          onclick = _this$props.onclick,\n          title = _this$props.title,\n          label = _this$props.label,\n          rotate = _this$props.rotate,\n          other = _objectWithoutProperties(_this$props, [\"classes\", \"onclick\", \"title\", \"label\", \"rotate\"]);\n\n      var cursor = classes.nopointer;\n\n      if (onclick !== undefined) {\n        cursor = classes.pointer;\n      }\n\n      this.width = getTextWidth(label) + 2 * border;\n      this.height = getTextHeight() + 2 * border;\n\n      if (rotate !== undefined) {\n        // rotate width/height\n        var buff = this.width;\n        this.width = this.height;\n        this.height = buff;\n      }\n\n      return React.createElement(\"canvas\", Object.assign({}, other, {\n        className: cursor,\n        classes: classes,\n        onClick: onclick,\n        title: title,\n        ref: \"text\",\n        width: this.width,\n        height: this.height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CanvasTextComponent;\n}(React.Component);\n\nCanvasTextComponent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CanvasTextComponent);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/CanvasTextComponent.js"],"names":["React","Component","PropTypes","withStyles","border","styles","theme","pointer","cursor","padding","spacing","unit","nopointer","getTextWidth","txt","fontname","fontsize","c","undefined","document","createElement","ctx","getContext","font","measureText","width","getTextHeight","updateCanvas","item","props","state","label","rotate","cnv","refs","text","save","textAlign","translate","height","Math","PI","fillText","restore","CanvasTextComponent","classes","onclick","title","other","buff","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst border=4;\n\nconst styles = theme => ({\n    pointer: {\n\tcursor:\"pointer\",\n\tpadding: theme.spacing.unit*0.1,\n    },\n    nopointer: {\n\tpadding: theme.spacing.unit*0.1,\n    },\n});\n\nfunction getTextWidth(txt, fontname, fontsize){\n    if(getTextWidth.c === undefined){\n        getTextWidth.c=document.createElement('canvas');\n        getTextWidth.ctx=getTextWidth.c.getContext('2d');\n    }\n    if (fontname !== undefined) {\n\tgetTextWidth.ctx.font = fontsize + ' ' + fontname;\n    }\n    return getTextWidth.ctx.measureText(txt).width;\n};\nfunction getTextHeight(fontname, fontsize){\n    if(getTextHeight.c === undefined){\n        getTextHeight.c=document.createElement('canvas');\n        getTextHeight.ctx=getTextHeight.c.getContext('2d');\n    }\n    if (fontname !== undefined) {\n\tgetTextHeight.ctx.font = fontsize + ' ' + fontname;\n    }\n    return getTextHeight.ctx.measureText('M').width;\n}\nfunction updateCanvas(item) {\n    const {state,label,rotate} = item.props;\n    const cnv=item.refs.text;\n    const ctx = cnv.getContext('2d');\n    //var cnvheight = cnv.height;\n    ctx.save();\n    //ctx.translate(newx, newy);\n    //ctx.font = \"40px Courier\"\n    ctx.textAlign = \"left\"; //left right center\n    //ctx.rect(0,0,100,100);\n    //ctx.stroke();\n    if (rotate !== undefined) {\n\tctx.translate(item.width-border,item.height-border);\n\tctx.rotate(-Math.PI/2);\n\t//console.log(\"Pos:\",0,-20);\n\tctx.fillText(label, 0, 0); // labelXposition\n    } else {\n\tctx.fillText(label, border, item.height-border); // labelXposition\n    };\n    ctx.restore();\n    //ctx.rect(0,0,item.width,item.height);\n    //ctx.stroke();\n    //console.log(\"Label:\",label,item.width,item.height);\n    //console.log(\"CanvasText:\",cnv.width,cnv.height);\n}\n    \n\nclass CanvasTextComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        const {state} = props;\n    };\n    componentDidMount() {\n        updateCanvas(this);\n    }\n    render() {\n        const { classes, onclick, title, label, rotate, ...other } = this.props;\n\tvar cursor=classes.nopointer;\n\tif (onclick !== undefined) {\n\t    cursor=classes.pointer;\n\t}\n\tthis.width=getTextWidth(label) + 2*border;\n\tthis.height=getTextHeight() + 2*border;\n\tif (rotate !== undefined) { // rotate width/height\n\t    var buff=this.width;\n\t    this.width=this.height;\n\t    this.height=buff;\n\t}\n        return (\n\t\t<canvas {...other} className={cursor} classes={classes} onClick={onclick} title={title} ref=\"text\" width={this.width} height={this.height}/>\n        );\n    }\n}\n\nCanvasTextComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CanvasTextComponent);\n"]},"metadata":{},"sourceType":"module"}