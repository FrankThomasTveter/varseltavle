{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/MapComponent.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport homePageImg from '../images/homePageImg.png';\nimport Tooltip from './TooltipContainer'; //console.log(\"Inside Map.\")\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'left'\n    },\n    paperImage: {\n      textAlign: 'center',\n      padding: theme.spacing.unit * 2\n    },\n    homePageImg: {\n      maxWidth: '100%'\n    }\n  };\n};\n\nfunction Details(props) {\n  var classes = props.classes,\n      state = props.state; // classes, element\n\n  var colkey = state.Path.getColKey(state) || \"\";\n  var rowkey = state.Path.getRowKey(state) || \"\";\n  var colvalues = state.Path.filterKeys(state, state.Matrix.values[colkey] || [\"\"]);\n  var rowvalues = state.Path.filterKeys(state, state.Matrix.values[rowkey] || [\"\"]);\n  var cellMode = state.Layout.getCellMode(state);\n  console.log(\"Keys:\", colkey, rowkey, \" mode:\", cellMode);\n  console.log(\"Colvalues:\", JSON.stringify(colvalues));\n  console.log(\"Rowvalues:\", JSON.stringify(rowvalues));\n  return React.createElement(\"img\", {\n    alt: \"homepage\",\n    className: classes.homePageImg,\n    src: homePageImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  });\n}\n\nvar Map =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Map, _Component);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this, props));\n\n    _this.updateWindowDimensions = function () {\n      _this.width = window.innerWidth;\n      _this.height = window.innerHeight;\n      _this.bbx = _this.el.getBoundingClientRect(); //console.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n\n    _this.state = {};\n    var state = props.state;\n    state.React.Map = _assertThisInitialized(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"showMap\",\n    value: function showMap() {\n      console.log(\"Rebuilding Map.\");\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n  }, {\n    key: \"element\",\n    value: function element(el) {\n      if (el !== undefined && el !== null) {\n        this.el = el;\n        this.bbx = this.el.getBoundingClientRect(); //console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n      }\n\n      ;\n    }\n  }, {\n    key: \"clickHandler\",\n    value: function clickHandler() {\n      console.log('on click handler ....');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state;\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.paperImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Details, {\n        state: state,\n        classes: classes,\n        element: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.paperImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"The map layout is not implemented...\"))), React.createElement(Tooltip, {\n        state: state,\n        classes: {\n          button: classes.button\n        },\n        element: this,\n        type: 'cell',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nMap.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Map);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/MapComponent.js"],"names":["React","Component","PropTypes","withStyles","Paper","Grid","homePageImg","Tooltip","styles","theme","root","flexGrow","paper","padding","spacing","unit","textAlign","paperImage","maxWidth","Details","props","classes","state","colkey","Path","getColKey","rowkey","getRowKey","colvalues","filterKeys","Matrix","values","rowvalues","cellMode","Layout","getCellMode","console","log","JSON","stringify","Map","updateWindowDimensions","width","window","innerWidth","height","innerHeight","bbx","el","getBoundingClientRect","forceUpdate","addEventListener","undefined","button","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,OAAP,MAAqB,oBAArB,C,CAEA;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,IAAI,EAAE;AACFC,MAAAA,QAAQ,EAAE;AADR,KADe;AAIrBC,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAcC,IAAd,GAAqB,CAD3B;AAEHC,MAAAA,SAAS,EAAE;AAFR,KAJc;AAQrBC,IAAAA,UAAU,EAAE;AACRD,MAAAA,SAAS,EAAE,QADH;AAERH,MAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAcC,IAAd,GAAqB;AAFtB,KARS;AAYrBT,IAAAA,WAAW,EAAE;AACTY,MAAAA,QAAQ,EAAE;AADD;AAZQ,GAAL;AAAA,CAApB;;AAiBA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,MACZC,OADY,GACOD,KADP,CACZC,OADY;AAAA,MACHC,KADG,GACOF,KADP,CACHE,KADG,EACc;;AAClC,MAAIC,MAAM,GAAGD,KAAK,CAACE,IAAN,CAAWC,SAAX,CAAqBH,KAArB,KAA6B,EAA1C;AACA,MAAII,MAAM,GAAGJ,KAAK,CAACE,IAAN,CAAWG,SAAX,CAAqBL,KAArB,KAA6B,EAA1C;AACA,MAAIM,SAAS,GAAGN,KAAK,CAACE,IAAN,CAAWK,UAAX,CAAsBP,KAAtB,EAA4BA,KAAK,CAACQ,MAAN,CAAaC,MAAb,CAAoBR,MAApB,KAA6B,CAAC,EAAD,CAAzD,CAAhB;AACA,MAAIS,SAAS,GAAGV,KAAK,CAACE,IAAN,CAAWK,UAAX,CAAsBP,KAAtB,EAA4BA,KAAK,CAACQ,MAAN,CAAaC,MAAb,CAAoBL,MAApB,KAA6B,CAAC,EAAD,CAAzD,CAAhB;AACA,MAAIO,QAAQ,GAAIX,KAAK,CAACY,MAAN,CAAaC,WAAb,CAAyBb,KAAzB,CAAhB;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBd,MAApB,EAA2BG,MAA3B,EAAkC,QAAlC,EAA2CO,QAA3C;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBC,IAAI,CAACC,SAAL,CAAeX,SAAf,CAAzB;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBC,IAAI,CAACC,SAAL,CAAeP,SAAf,CAAzB;AACA,SAAO;AAAK,IAAA,GAAG,EAAE,UAAV;AAAsB,IAAA,SAAS,EAAEX,OAAO,CAACf,WAAzC;AAAsD,IAAA,GAAG,EAAEA,WAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH;;IAEKkC,G;;;;;AACF,eAAYpB,KAAZ,EAAmB;AAAA;;AAAA;;AACtB,6EAAMA,KAAN;;AADsB,UAYnBqB,sBAZmB,GAYM,YAAM;AAC3B,YAAKC,KAAL,GAAYC,MAAM,CAACC,UAAnB;AACP,YAAKC,MAAL,GAAYF,MAAM,CAACG,WAAnB;AACA,YAAKC,GAAL,GAAS,MAAKC,EAAL,CAAQC,qBAAR,EAAT,CAHkC,CAIlC;AACI,KAjBkB;;AAAA,UAyBnB3B,KAzBmB,GAyBX,EAzBW;AAAA,QAEfA,KAFe,GAENF,KAFM,CAEfE,KAFe;AAGtBA,IAAAA,KAAK,CAACtB,KAAN,CAAYwC,GAAZ;AAHsB;AAIlB;;;;8BACS;AACbJ,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,WAAKa,WAAL;AACI;;;wCACmB;AAChBP,MAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkC,KAAKV,sBAAvC;AACH;;;4BAOOO,E,EAAI;AACf,UAAIA,EAAE,KAAKI,SAAP,IAAoBJ,EAAE,KAAK,IAA/B,EAAqC;AACjC,aAAKA,EAAL,GAAQA,EAAR;AACA,aAAKD,GAAL,GAAS,KAAKC,EAAL,CAAQC,qBAAR,EAAT,CAFiC,CAGjC;AACH;;AAAA;AACG;;;mCAIc;AACXb,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH;;;6BACQ;AAAA,wBACsB,KAAKjB,KAD3B;AAAA,UACGC,OADH,eACGA,OADH;AAAA,UACYC,KADZ,eACYA,KADZ;AAEL,aACI;AAAK,QAAA,SAAS,EAAED,OAAO,CAACX,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEW,OAAO,CAACJ,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACxB,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEK,KAAhB;AAAuB,QAAA,OAAO,EAAED,OAAhC;AAAyC,QAAA,OAAO,EAAE,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADwB,CADR,CADJ,EAMI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEA,OAAO,CAACJ,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADJ,CANJ,CADJ,EAaV,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEK,KAAhB;AAAuB,QAAA,OAAO,EAAE;AAAC+B,UAAAA,MAAM,EAAChC,OAAO,CAACgC;AAAhB,SAAhC;AAAyD,QAAA,OAAO,EAAE,IAAlE;AAAwE,QAAA,IAAI,EAAE,MAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbU,CADJ;AAiBH;;;;EAnDapD,S;;AAsDlBuC,GAAG,CAACc,SAAJ,GAAgB;AACZjC,EAAAA,OAAO,EAAEnB,SAAS,CAACqD,MAAV,CAAiBC;AADd,CAAhB;AAIA,eAAerD,UAAU,CAACK,MAAD,CAAV,CAAmBgC,GAAnB,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport homePageImg from '../images/homePageImg.png';\nimport Tooltip  from './TooltipContainer';\n\n//console.log(\"Inside Map.\")\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'left',\n    },\n    paperImage: {\n        textAlign: 'center',\n        padding: theme.spacing.unit * 2,\n    },\n    homePageImg: {\n        maxWidth: '100%',\n    }\n});\n\nfunction Details(props) {\n    const { classes, state } = props; // classes, element\n    var colkey = state.Path.getColKey(state)||\"\";\n    var rowkey = state.Path.getRowKey(state)||\"\";\n    var colvalues = state.Path.filterKeys(state,state.Matrix.values[colkey]||[\"\"]);\n    var rowvalues = state.Path.filterKeys(state,state.Matrix.values[rowkey]||[\"\"]);\n    var cellMode  = state.Layout.getCellMode(state);\n    console.log(\"Keys:\",colkey,rowkey,\" mode:\",cellMode);\n    console.log(\"Colvalues:\",JSON.stringify(colvalues));\n    console.log(\"Rowvalues:\",JSON.stringify(rowvalues));\n    return <img alt={\"homepage\"} className={classes.homePageImg} src={homePageImg}></img>;\n}\n\nclass Map extends Component {\n    constructor(props) {\n\tsuper(props);\n\tconst {state} = props;\n\tstate.React.Map=this;\n    };\n    showMap() {\n\tconsole.log(\"Rebuilding Map.\");\n\tthis.forceUpdate();\n    };\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    } \n    updateWindowDimensions = () => {\n        this.width= window.innerWidth;\n\tthis.height=window.innerHeight;\n\tthis.bbx=this.el.getBoundingClientRect();\n\t//console.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n    element(el) {\n\tif (el !== undefined && el !== null) {\n\t    this.el=el;\n\t    this.bbx=this.el.getBoundingClientRect();\n\t    //console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n\t};\n    };\n    state = {\n\n    };\n    clickHandler() {\n        console.log('on click handler ....');\n    }\n    render() {\n        const { classes, state } = this.props;\n        return (\n            <div className={classes.root}>\n                <Grid container spacing={24}>\n                    <Grid item xs={12}>\n                        {   <Paper className={classes.paperImage}>\n\t\t\t\t<Details state={state} classes={classes} element={this}/>\n                            </Paper>}\n                    </Grid>\n                    <Grid item sm={12} xs={12}>\n                        <Paper className={classes.paperImage}>\n                            The map layout is not implemented...\n                        </Paper>\n                    </Grid>\n                </Grid>\n\t\t<Tooltip state={state} classes={{button:classes.button}} element={this} type={'cell'}/>\n\t    </div>\n        );\n    }\n}\n\nMap.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Map);\n"]},"metadata":{},"sourceType":"module"}