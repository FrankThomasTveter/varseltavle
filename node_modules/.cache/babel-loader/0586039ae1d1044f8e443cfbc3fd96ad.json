{"ast":null,"code":"import _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/SeriesCell.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CanvasGraph from './CanvasGraphComponent'; //\ttextAlign: \"center\",\n\nvar styles = function styles(theme) {\n  return {\n    pointer: {\n      textAlign: \"center\",\n      cursor: \"pointer\",\n      padding: 0,\n      overflow: 'hidden',\n      tableLayout: 'fixed'\n    },\n    nopointer: {\n      textAlign: \"center\",\n      padding: 0,\n      overflow: 'hidden',\n      tableLayout: 'fixed'\n    },\n    div: {\n      overflow: 'hidden',\n      tableLayout: 'fixed'\n    },\n    divTableCell: {\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    },\n    divTableCellCursor: {\n      cursor: \"pointer\",\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    }\n  };\n}; //\tpadding: \"0px\";\n//\ttextAlign: \"center\",\n\n\nfunction SeriesCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      onclick = props.onclick,\n      colwhere = props.colwhere,\n      rowwhere = props.rowwhere,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      index = props.index,\n      rowindex = props.rowindex,\n      elements = props.elements,\n      range = props.range,\n      plan = props.plan,\n      key = props.key,\n      other = _objectWithoutProperties(props, [\"classes\", \"state\", \"onclick\", \"colwhere\", \"rowwhere\", \"colkey\", \"colvalues\", \"index\", \"rowindex\", \"elements\", \"range\", \"plan\", \"key\"]);\n\n  var style0 = {\n    height: plan.height + \"px\",\n    backgroundColor: '#FFF'\n  };\n  var style1 = {\n    height: plan.height + \"px\",\n    backgroundColor: '#EEE'\n  };\n\n  if (elements === undefined) {\n    if (rowindex % 2 === 1) {\n      return React.createElement(\"div\", {\n        className: classes.divTableCell,\n        style: style1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: classes.divTableCell,\n        style: style0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n    }\n  }\n\n  ;\n  var info = state.Matrix.getInfo(state, elements);\n  var cnt = info.cnt;\n  var maxlev = info.maxlev;\n  var minlev = info.minlev;\n  var title = info.title;\n  var bgcolor = state.Colors.getLevelColor(maxlev); //console.log(\"SeriesCell:\",JSON.stringify(elements));\n  //console.log(\"SeriesCell:\",lev,cnt,JSON.stringify(range));\n  //console.log(\"Series Plan:\",JSON.stringify(plan));\n\n  return React.createElement(\"div\", {\n    className: onclick !== undefined ? classes.divTableCellCursor : classes.divTableCell,\n    key: key,\n    style: {\n      backgroundColor: bgcolor\n    },\n    onClick: onclick,\n    title: title,\n    height: plan.height,\n    width: plan.width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(CanvasGraph, Object.assign({}, other, {\n    state: state,\n    range: range,\n    colkey: colkey,\n    colvalues: colvalues,\n    index: index,\n    onclick: onclick,\n    title: title,\n    elements: elements,\n    level: lev,\n    plan: plan,\n    bgcolor: bgcolor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })));\n}\n\nSeriesCell.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SeriesCell);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/SeriesCell.js"],"names":["React","PropTypes","withStyles","CanvasGraph","styles","theme","pointer","textAlign","cursor","padding","overflow","tableLayout","nopointer","div","divTableCell","border","display","divTableCellCursor","SeriesCell","props","classes","state","onclick","colwhere","rowwhere","colkey","colvalues","index","rowindex","elements","range","plan","key","other","style0","height","backgroundColor","style1","undefined","info","Matrix","getInfo","cnt","maxlev","minlev","title","bgcolor","Colors","getLevelColor","width","lev","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CanvasGraph from './CanvasGraphComponent';\n\n//\ttextAlign: \"center\",\nconst styles = theme => ({\n    pointer: {\n\ttextAlign: \"center\",\n\tcursor:\"pointer\",\n\tpadding: 0,\n\toverflow: 'hidden',\n\ttableLayout: 'fixed',\n    },\n    nopointer: {\n\ttextAlign: \"center\",\n\tpadding: 0,\n\toverflow: 'hidden',\n\ttableLayout: 'fixed',\n    },\n    div: {\n\toverflow: 'hidden',\n\ttableLayout: 'fixed',\n    },\n    divTableCell:{\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableCellCursor:{\n\tcursor: \"pointer\",\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n});\n//\tpadding: \"0px\";\n//\ttextAlign: \"center\",\nfunction SeriesCell(props) {\n    const { classes,state,onclick,\n\t    colwhere,rowwhere,colkey,colvalues,index,rowindex,\n\t    elements,range,plan,key,...other } = props;\n\n    var style0={height:plan.height+\"px\",backgroundColor:'#FFF'};\n    var style1={height:plan.height+\"px\",backgroundColor:'#EEE'};\n    if (elements===undefined) {\n\tif (rowindex%2===1) {\n\t    return <div className={classes.divTableCell} style={style1}/>\n\t} else {\n\t    return <div className={classes.divTableCell} style={style0}/>\n\t}\n    };\n    var info=state.Matrix.getInfo(state,elements);\n    var cnt=info.cnt;\n    var maxlev=info.maxlev;\n    var minlev=info.minlev;\n    var title=info.title;\n    var bgcolor=state.Colors.getLevelColor(maxlev);\n    //console.log(\"SeriesCell:\",JSON.stringify(elements));\n    //console.log(\"SeriesCell:\",lev,cnt,JSON.stringify(range));\n    //console.log(\"Series Plan:\",JSON.stringify(plan));\n    return(\n\t    <div className={(onclick !== undefined?classes.divTableCellCursor:classes.divTableCell)} key={key}\n\t         style={{backgroundColor:bgcolor}} onClick={onclick} title={title} height={plan.height} width={plan.width}>\n  \t       <CanvasGraph {...other} state={state} range={range} colkey={colkey} colvalues={colvalues} index={index}\n\t          onclick={onclick} title={title} elements={elements} level={lev} plan={plan} bgcolor={bgcolor}/>  \n\t     </div>\n    );\n}\n\n\n\nSeriesCell.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SeriesCell);\n"]},"metadata":{},"sourceType":"module"}