{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/CellTooltip.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ReactTooltip from 'react-tooltip';\nimport Button from '@material-ui/core/Button';\nimport SubTable from './SubTableComponent';\nimport InfoIcon from '@material-ui/icons/Info'; //import CancelIcon from '@material-ui/icons/Cancel';\n\nvar styles = function styles(theme) {\n  return {\n    button: {\n      color: 'white',\n      \"&$buttonDisabled\": {\n        color: theme.palette.primary.main\n      }\n    },\n    buttonDisabled: {}\n  };\n};\n\nfunction FullDetails(props) {\n  var state = props.state,\n      data = props.data,\n      tooltip = props.tooltip; //state,classes,element\n\n  var keys = [];\n  state.Utils.cpArray(keys, state.Path.tooltip.keys);\n  state.Utils.remArray(keys, state.Path.keys.path);\n  state.Utils.remArray(keys, state.Path.other.table);\n  keys = state.Utils.keepHash(keys, tooltip);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(SubTable, {\n    state: state,\n    keys: keys,\n    subs: tooltip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n}\n\n;\n\nfunction GeneralDetails(props) {\n  var classes = props.classes,\n      data = props.data,\n      onclick = props.onclick; // state,element\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.button,\n    onClick: onclick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(InfoIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })));\n}\n\n; //\t    <h3>Rowkey: {data.rowkey} Colkey: {data.colkey}</h3>\n//\t    <p>Some details.</p>\n\nfunction Tooltip(props) {\n  var state = props.state,\n      classes = props.classes,\n      data = props.data,\n      element = props.element;\n  var tooltip = state.Matrix.getTooltip(state, data);\n  var available = state.Matrix.checkTooltip(state, data);\n\n  if (available) {\n    return React.createElement(FullDetails, {\n      state: state,\n      classes: classes,\n      data: data,\n      tooltip: tooltip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n  } else {\n    var onclick = function onclick() {\n      console.log(\"Clicked me\");\n      state.Matrix.addTooltip(state, data);\n      element.update();\n    };\n\n    return React.createElement(GeneralDetails, {\n      state: state,\n      classes: classes,\n      data: data,\n      onclick: onclick,\n      tooltip: tooltip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    });\n  }\n}\n\n;\n\nvar CellTooltip =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CellTooltip, _Component);\n\n  function CellTooltip(props) {\n    var _this;\n\n    _classCallCheck(this, CellTooltip);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CellTooltip).call(this, props));\n    var state = props.state;\n    state.React.Tooltip = _assertThisInitialized(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CellTooltip, [{\n    key: \"rebuild\",\n    value: function rebuild() {\n      console.log(\"Rebuilding tooltip.\");\n      ReactTooltip.rebuild();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      console.log(\"Rebuilding tooltip.\");\n      this.forceUpdate();\n      ReactTooltip.rebuild();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state;\n      var available = state.Matrix.checkTooltip(state, data);\n      var delay = available ? 0 : 500; //console.log(\"##### Rendering CellTooltip.\");\n\n      return React.createElement(ReactTooltip, {\n        id: \"cell\",\n        getContent: function getContent(dataTip) {\n          if (dataTip == null) {\n            return null;\n          } else {\n            var _data = JSON.parse(dataTip); //console.log(\"Tooltip:\",JSON.stringify(dataTip),JSON.stringify(data));\n\n\n            return React.createElement(Tooltip, {\n              state: state,\n              classes: classes,\n              data: _data,\n              element: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 79\n              },\n              __self: this\n            });\n          }\n        },\n        effect: \"solid\",\n        delayHide: 500,\n        delayShow: 200,\n        delayUpdate: 500,\n        place: 'bottom',\n        border: true,\n        type: 'light',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }); // {console.log(\"Datatip:\",dataTip);\n      //\t\t\t\t  \n    }\n  }]);\n\n  return CellTooltip;\n}(Component);\n\n;\nCellTooltip.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CellTooltip);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/CellTooltip.js"],"names":["React","Component","PropTypes","withStyles","ReactTooltip","Button","SubTable","InfoIcon","styles","theme","button","color","palette","primary","main","buttonDisabled","FullDetails","props","state","data","tooltip","keys","Utils","cpArray","Path","remArray","path","other","table","keepHash","GeneralDetails","classes","onclick","Tooltip","element","Matrix","getTooltip","available","checkTooltip","console","log","addTooltip","update","CellTooltip","rebuild","forceUpdate","delay","dataTip","JSON","parse","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ReactTooltip from 'react-tooltip'\nimport Button from '@material-ui/core/Button';\nimport SubTable  from './SubTableComponent';\n\nimport InfoIcon from '@material-ui/icons/Info';\n//import CancelIcon from '@material-ui/icons/Cancel';\n\n\nconst styles = theme => ({\n    button: {\n\tcolor:'white',\n\t\"&$buttonDisabled\": {\n            color: theme.palette.primary.main,\n\t},\n    },\n    buttonDisabled: {},\n});\nfunction FullDetails(props){\n    const {state,data,tooltip}=props; //state,classes,element\n    var keys=[];\n    state.Utils.cpArray(keys,state.Path.tooltip.keys);\n    state.Utils.remArray(keys,state.Path.keys.path);\n    state.Utils.remArray(keys,state.Path.other.table);\n    keys=state.Utils.keepHash(keys,tooltip);\n    return (<div>\n\t       <SubTable state={state} keys={keys} subs={tooltip}/>\n\t    </div>\n\t   );\n};\nfunction GeneralDetails(props) {\n    const {classes,data,onclick}=props; // state,element\n    return (<div>\n\t    <Button className={classes.button} onClick={onclick}><InfoIcon/></Button>\n\t    </div>\n\t   );\n};\n//\t    <h3>Rowkey: {data.rowkey} Colkey: {data.colkey}</h3>\n//\t    <p>Some details.</p>\nfunction Tooltip(props) {\n    const {state,classes,data,element}=props;\n    var tooltip=state.Matrix.getTooltip(state,data);\n    var available=state.Matrix.checkTooltip(state,data);\n    if (available) {\n\treturn (<FullDetails state={state} classes={classes} data={data} tooltip={tooltip}/>);\n    } else {\n\tvar onclick=() => {console.log(\"Clicked me\");state.Matrix.addTooltip(state,data);element.update();}\n\treturn (<GeneralDetails state={state} classes={classes} data={data} onclick={onclick} tooltip={tooltip}/>);\n    }\n};\nclass CellTooltip extends Component {\n    constructor(props) {\n\tsuper(props);\n\tconst {state} = props;\n\tstate.React.Tooltip=this;\n    };\n    rebuild() {\n\tconsole.log(\"Rebuilding tooltip.\");\n\tReactTooltip.rebuild();\n    };\n    update() {\n\tconsole.log(\"Rebuilding tooltip.\");\n\tthis.forceUpdate();\n\tReactTooltip.rebuild();\n    };\n    render() {\n\tconst { classes, state } = this.props;\n\tvar available=state.Matrix.checkTooltip(state,data);\n\tvar delay=(available?0:500);\n\t//console.log(\"##### Rendering CellTooltip.\");\n\treturn (<ReactTooltip id='cell' \n\t\tgetContent={(dataTip) =>{if (dataTip==null) {\n\t\t    return null;\n\t\t} else {\n\t\t    const data=JSON.parse(dataTip);\n\t\t    //console.log(\"Tooltip:\",JSON.stringify(dataTip),JSON.stringify(data));\n\t\t    return (<Tooltip state={state} classes={classes} data={data} element={this}/>);\n\t\t}}}\n\t\teffect='solid'\n\t\tdelayHide={500}\n\t\tdelayShow={200}\n\t\tdelayUpdate={500}\n\t\tplace={'bottom'}\n\t\tborder={true}\n\t\ttype={'light'}\n\t\t/>);\n\t// {console.log(\"Datatip:\",dataTip);\n\t//\t\t\t\t  \n    };\n};\nCellTooltip.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CellTooltip);\n"]},"metadata":{},"sourceType":"module"}