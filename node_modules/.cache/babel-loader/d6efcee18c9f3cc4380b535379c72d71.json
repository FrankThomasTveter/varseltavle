{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/Table0DComponent.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport SummaryCell from './SummaryCell';\nimport SeriesCell from './SeriesCell';\nimport CanvasText from './CanvasTextComponent';\nimport Text from './TextComponent'; //\toverflow: 'hidden',\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      height: '100%'\n    },\n    paper: {\n      tableLayout: 'fixed',\n      padding: 0,\n      margin: 0\n    },\n    divTable: {\n      display: 'table',\n      width: '100%'\n    },\n    divTableRow: {\n      display: 'table-row'\n    },\n    divTableCell: {\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '3px 3px'\n    },\n    divTableCellCursor: {\n      cursor: \"pointer\",\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    },\n    divTableHead: {\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    },\n    divTableHeading: {\n      display: 'table-header-group'\n    },\n    divTableHeadingCenter: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    divTableFoot: {\n      backgroundColor: '#DDD',\n      display: 'table-footer-group',\n      fontWeight: 'bold'\n    },\n    divTableBody: {\n      display: 'table-row-group'\n    }\n  };\n};\n\nfunction getTextWidth(txt, fontname, fontsize) {\n  if (getTextWidth.c === undefined) {\n    getTextWidth.c = document.createElement('canvas');\n    getTextWidth.ctx = getTextWidth.c.getContext('2d');\n  }\n\n  if (fontname !== undefined) {\n    getTextWidth.ctx.font = fontsize + ' ' + fontname;\n  }\n\n  return getTextWidth.ctx.measureText(txt).width;\n}\n\n;\n\nfunction getTextHeight(fontname, fontsize) {\n  if (getTextHeight.c === undefined) {\n    getTextHeight.c = document.createElement('canvas');\n    getTextHeight.ctx = getTextHeight.c.getContext('2d');\n  }\n\n  if (fontname !== undefined) {\n    getTextHeight.ctx.font = fontsize + ' ' + fontname;\n  }\n\n  return getTextHeight.ctx.measureText('M').width;\n}\n\nfunction maxWidth(values, border) {\n  var swidth = 0;\n  var mwidth = 0;\n  var lenv = values.length;\n\n  for (var ii = 0; ii < lenv; ii++) {\n    var cwidth = getTextWidth(values[ii]) + 2 * border;\n\n    if (cwidth > mwidth) {\n      mwidth = cwidth;\n    }\n\n    swidth = swidth + cwidth;\n  }\n\n  return {\n    max: mwidth,\n    sum: swidth\n  };\n}\n\nfunction setPlan(plan, set) {\n  var keys = Object.keys(set);\n  var lenk = keys.length;\n\n  for (var ii = 0; ii < lenk; ii++) {\n    var key = keys[ii];\n    var val = set[key];\n    plan[key] = val;\n  }\n\n  ;\n}\n\nfunction makePlan(state, label, values, iwidth, iheight, border, cellMode) {\n  var plan = {\n    cell: {\n      rotate: false,\n      step: 1,\n      border: border,\n      width: 100,\n      height: 100,\n      xoffset: 0,\n      yoffset: 0\n    },\n    hdr: {\n      rotate: false,\n      step: 1,\n      border: border,\n      width: 100,\n      height: 100,\n      xoffset: 0,\n      yoffset: 0\n    },\n    row: {\n      rotate: false,\n      step: 1,\n      border: border,\n      width: 100,\n      height: 100,\n      xoffset: 0,\n      yoffset: 0\n    },\n    col: {\n      rotate: false,\n      step: 1,\n      border: border,\n      width: 100,\n      height: 100,\n      xoffset: 0,\n      yoffset: 0\n    }\n  };\n\n  if (iwidth <= 0 || cellMode === state.Show.code.cell.Sum) {\n    return plan;\n  } // text boundaries\n\n\n  var ww = maxWidth(values, border);\n  var zwidth = getTextWidth(label) + 2 * border; //props.theme.spacing.unit;\n\n  var zheight = getTextHeight(label) + 2 * border; //props.theme.spacing.unit;\n  // table boundaries\n\n  var mheight = getTextHeight() + 2 * border; //props.theme.spacing.unit;\n\n  var hwidth = zwidth + mheight;\n  var width = iwidth - hwidth; // calculate cell width...\n\n  var mwidth = ww.max;\n  var swidth = ww.sum;\n  var lenc = values.length;\n  var hh, hw, ch, cw, hx, rot, stp;\n\n  if (mwidth * lenc < width) {\n    // horisontal\n    rot = false;\n    stp = 1;\n    cw = width / lenc;\n    hh = mheight;\n    hx = (cw - mwidth) / 2; //console.log(\"Plan (normal):\",JSON.stringify(plan));\n  } else if (mheight * lenc < width) {\n    // rotate\n    rot = true;\n    stp = 1;\n    cw = width / lenc;\n    hh = mwidth;\n    hx = (cw - mheight) / 2; //console.log(\"Plan (rot):\",JSON.stringify(plan),lenc,cw*lenc);\n  } else {\n    // rotate and use steps\n    rot = true;\n    stp = Math.ceil(lenc * mheight / width);\n    cw = plan.step * width / lenc;\n    hh = mwidth;\n    hx = (cw - mheight) / 2; //console.log(\"Plan (rot+step):\",JSON.stringify(plan),lenc,height,width);\n  } // calculate cell height\n\n\n  var height = iheight - plan.hdr.height;\n  ch = Math.min(mheight * 10, height);\n  hw = hwidth;\n  setPlan(plan.cell, {\n    width: cw,\n    height: ch\n  });\n  setPlan(plan.hdr, {\n    width: hw,\n    height: hh\n  });\n  setPlan(plan.col, {\n    width: cw,\n    height: hh,\n    xoffset: hx,\n    step: stp,\n    rotate: rot\n  });\n  setPlan(plan.row, {\n    width: hw,\n    height: ch\n  }); //console.log(\"Plan (finally):\",JSON.stringify(plan),mheight,mwidth,height,width);\n\n  return plan;\n} // ---------------- DATA\n\n\nfunction DataCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      elements = props.elements,\n      mode = props.mode,\n      plan = props.plan,\n      rowindex = props.rowindex,\n      other = _objectWithoutProperties(props, [\"classes\", \"state\", \"elements\", \"mode\", \"plan\", \"rowindex\"]);\n\n  if (elements === undefined) {\n    if (rowindex % 2 === 1) {\n      return React.createElement(\"div\", {\n        className: classes.divTableCell,\n        style: {\n          backgroundColor: '#EEE'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: classes.divTableCell,\n        style: {\n          backgroundColor: '#FFF'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      });\n    }\n  } else if (mode === state.Show.code.cell.Sum) {\n    return React.createElement(SummaryCell, Object.assign({}, other, {\n      state: state,\n      elements: elements,\n      plan: plan,\n      rowindex: rowindex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })); //return null;\n  } else {\n    return React.createElement(SeriesCell, Object.assign({}, other, {\n      state: state,\n      elements: elements,\n      plan: plan,\n      rowindex: rowindex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })); //return null;\n  }\n}\n\n;\n\nfunction renderDataSeries(classes, state, rowkey, rowvalues, range, plan, val, index) {\n  var title = state.Database.getWhereDetail(rowkey, rowvalues[index]); //console.log(\"Making data cell:\",rowval,val,index,plan,JSON.stringify(rowvalues));\n\n  if ((index - 1) % plan.step === 0) {\n    // get elements and range\n    //console.log(\"Processing:\",val,rowvalues[index],plan.step);\n    var elements = state.Matrix.getMatrixRowElements(\"\", rowvalues, state.React.matrix, index, plan.step); // get count and rowwhere\n\n    var cnt = Math.min(rowvalues.length, index + plan.step) - index;\n    var rowwhere = state.Database.getColWhere(rowkey, rowvalues, index, plan.step); // make onclick and title\n\n    var onclick = function onclick() {\n      return state.Navigate.selectKey(state, rowkey, val, rowwhere, 1);\n    };\n\n    return React.createElement(DataCell, {\n      classes: classes,\n      state: state,\n      key: val,\n      index: index,\n      onclick: onclick,\n      title: title,\n      rowkey: \"\",\n      rowvalues: [\"\"],\n      rowval: \"\",\n      rowwhere: rowwhere,\n      colkey: rowkey,\n      colvalues: rowvalues,\n      colval: val,\n      elements: elements,\n      plan: plan,\n      range: range,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    });\n  } else {\n    return null;\n  }\n}\n\n;\n\nfunction renderDataSum(classes, state, rowkey, rowindex, doc, plan, skey, bgcolor, index) {\n  if (doc === undefined) {\n    if (rowindex % 2 === 1) {\n      return React.createElement(\"div\", {\n        className: classes.divTableCell,\n        style: {\n          backgroundColor: '#EEE'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: classes.divTableCell,\n        style: {\n          backgroundColor: '#FFF'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      });\n    }\n  } else {\n    var val = doc[skey] || \"\"; //console.log(\"Key:\",skey,\" Val:\",JSON.stringify(val));\n\n    return React.createElement(\"div\", {\n      className: classes.divTableCell,\n      style: {\n        backgroundColor: bgcolor\n      },\n      key: skey,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, val);\n  }\n}\n\n;\n\nfunction renderDoc(classes, state, rowkey, rowval, rowindex, skeys, plan, doc, lev, index) {\n  var rowwhere = state.Database.getWhereDetail(rowkey, rowval);\n\n  var onclick = function onclick() {\n    return state.Navigate.selectKey(state, rowkey, rowval, rowwhere, 1);\n  }; //console.log(\"Making data cols.\",rowval,colkey,JSON.stringify(colvalues));\n  //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n\n\n  var bgcolor = state.Colors.getLevelColor(lev);\n\n  var mapFunction = function mapFunction(skey, index) {\n    return renderDataSum(classes, state, rowkey, rowindex, doc, plan, skey, bgcolor, index);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.divTableRow,\n    key: rowindex.toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, skeys.map(mapFunction));\n}\n\n;\n\nfunction dataRowSum(classes, state, rowkey, rowvalues, skeys, plan, rowval, rowindex) {\n  var rowwhere = state.Database.getWhereDetail(rowkey, rowval);\n\n  var onclick = function onclick() {\n    return state.Navigate.selectKey(state, rowkey, rowval, rowwhere, 1);\n  }; //console.log(\"Making data cols.\",rowval,colkey,JSON.stringify(colvalues));\n  //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n\n\n  var element = state.Matrix.getMatrixElement(\"\", rowval, state.React.matrix);\n\n  if (element === undefined) {\n    return React.createElement(\"div\", {\n      className: classes.divTableRow,\n      key: rowindex.toString(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    });\n  } else if (element.docs.length < 10) {\n    var lev = element.lev;\n\n    var mapFunction = function mapFunction(doc, index) {\n      return renderDoc(classes, state, rowkey, rowval, rowindex, skeys, plan, doc, lev, index);\n    };\n\n    return element.docs.map(mapFunction);\n  } else {\n    return React.createElement(\"div\", {\n      className: classes.divTableRow,\n      key: rowindex.toString(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"...\");\n  }\n\n  ;\n}\n\n;\n\nfunction dataRowSeries(classes, state, rowkey, rowvalues, plan) {\n  //console.log(\"Making data cols.\",rowval,colkey,JSON.stringify(colvalues));\n  //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n  var range = [undefined, undefined];\n\n  if (state.React.matrix !== undefined) {\n    range = state.Matrix.getRange(state, state.React.matrix, [\"\"], rowvalues); //console.log(\"Range:\",JSON.stringify(range));\n  }\n\n  ;\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderDataSeries(classes, state, rowkey, rowvalues, range, plan, val, index);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.divTableRow,\n    key: rowkey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, rowvalues.map(mapFunction));\n}\n\n;\n\nfunction renderZeroRow(classes, state, plan) {\n  return React.createElement(\"div\", {\n    className: classes.divTableRow,\n    key: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.divTableCell,\n    width: plan.cell.width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, \"No data available\"));\n}\n\n;\n\nfunction DataRows(props) {\n  var classes = props.classes,\n      state = props.state,\n      plan = props.plan,\n      rowkey = props.rowkey,\n      rowvalues = props.rowvalues,\n      cellMode = props.cellMode,\n      skeys = props.skeys;\n\n  if (rowvalues.length === 0) {\n    return renderZeroRow(classes, state, plan);\n  } else if (cellMode === state.Show.code.cell.Sum) {\n    var mapFunction = function mapFunction(val, index) {\n      return dataRowSum(classes, state, rowkey, rowvalues, skeys, plan, val, index);\n    };\n\n    var arr = rowvalues.map(mapFunction);\n    return arr;\n  } else {\n    return dataRowSeries(classes, state, rowkey, rowvalues, plan);\n  }\n} // ---------------- HDR\n\n\nfunction FirstHdrCell(props) {\n  var classes = props.classes,\n      label = props.label,\n      plan = props.plan;\n  var width = plan.hdr.width;\n  var height = plan.hdr.height; //console.log(\"Making first header cell.\",label,width,height);\n\n  if (label !== \"\") {\n    return React.createElement(\"div\", {\n      className: classes.divTableHeadingCenter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, label);\n  } else {\n    return null;\n  }\n\n  ;\n}\n\nfunction renderHdrSum(classes, state, rowkey, plan, val, index) {\n  //console.log(\"HdrCell:\",val);\n  var cursor = classes.divTableCell;\n  return React.createElement(\"div\", {\n    className: cursor,\n    style: {\n      backgroundColor: '#DDD'\n    },\n    key: \"col-\".concat(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, val);\n}\n\nfunction renderHdrSeries(classes, state, rowkey, rowvalues, plan, val, index) {\n  if ((index - 1) % plan.step === 0) {\n    //console.log(\"HdrCell:\",index,plan.step);\n    var cnt = Math.min(rowvalues.length, index + plan.step) - index;\n    var rowwhere = state.Database.getColWhere(rowkey, rowvalues, index, plan.step);\n\n    var onclick = function onclick() {\n      return state.Navigate.selectKey(state, rowkey, val, rowwhere, cnt);\n    };\n\n    var title = rowwhere;\n    var cursor = classes.divTableCell;\n\n    if (onclick !== undefined) {\n      cursor = classes.divTableCellCursor;\n    }\n\n    return React.createElement(\"div\", {\n      className: cursor,\n      onClick: onclick,\n      style: {\n        backgroundColor: '#DDD'\n      },\n      title: title,\n      key: \"col-\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(CanvasText, {\n      state: state,\n      index: index,\n      plan: plan.col,\n      label: val,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }));\n  } else {\n    return null;\n  }\n}\n\nfunction HdrRow(props) {\n  var classes = props.classes,\n      state = props.state,\n      plan = props.plan,\n      rowkey = props.rowkey,\n      rowvalues = props.rowvalues,\n      label = props.label,\n      skeys = props.skeys,\n      cellMode = props.cellMode; //, rowvalues\n\n  if (cellMode === state.Show.code.cell.Sum) {\n    var mapFunction = function mapFunction(val, index) {\n      return renderHdrSum(classes, state, rowkey, plan, val, index);\n    }; //console.log(\"Making header Sum row.\",label,rowkey,JSON.stringify(skeys));\n\n\n    return React.createElement(\"div\", {\n      className: classes.divTableRow,\n      key: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(FirstHdrCell, {\n      classes: classes,\n      label: label,\n      plan: plan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }), skeys.map(mapFunction));\n  } else {\n    var mapFunction = function mapFunction(val, index) {\n      return renderHdrSeries(classes, state, rowkey, rowvalues, plan, val, index);\n    }; //console.log(\"Making header Series row.\",label,rowkey,JSON.stringify(rowvalues));\n\n\n    return null; //\treturn (<div className={classes.divTableRow} key={0}>\n    //\t\t   {rowvalues.map(mapFunction)}\n    //\t\t</div>);\n  }\n} // ---------------- Details\n\n\nfunction Details(props) {\n  var classes = props.classes,\n      state = props.state,\n      element = props.element; // classes, \n\n  var cellMode = state.Show.getCellMode(state);\n  var colkey = state.Path.getColKey(state) || \"\";\n  var rowkey = state.Path.getRowKey(state) || \"\";\n\n  if (state.React.matrix === undefined) {\n    return React.createElement(\"div\", {\n      className: classes.divTable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.divTableBody,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.devTableCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, \"No Matrix defined\")));\n  } else {\n    var colvalues = state.Path.filterKeys(state, state.Matrix.values[colkey] || [\"\"]);\n    var rowvalues = state.Path.filterKeys(state, state.Matrix.values[rowkey] || [\"\"]);\n    var skeys = state.Matrix.sortedKeys(state, state.Matrix.keyCnt); //DOM.style.font\n\n    var border = 2;\n    var label = rowkey;\n    var width = 0.8 * window.innerWidth;\n    var height = 0.8 * (window.innerHeight - 200);\n    var plan = makePlan(state, label, rowvalues, width, height, border, cellMode); //console.log(\"Plan:\",JSON.stringify(plan));\n    //console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(colvalues));\n    //console.log(\"Rowkey:\",rowkey,\" rowval:\",JSON.stringify(rowvalues));\n    //console.log(\"skeys: \",JSON.stringify(skeys));\n\n    return React.createElement(\"div\", {\n      className: classes.divTable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.divTableBody,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(HdrRow, {\n      classes: classes,\n      state: state,\n      key: \"hdr\",\n      plan: plan,\n      rowkey: rowkey,\n      rowvalues: rowvalues,\n      label: label,\n      cellMode: cellMode,\n      skeys: skeys,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }), React.createElement(DataRows, {\n      classes: classes,\n      state: state,\n      key: \"data\",\n      plan: plan,\n      rowkey: rowkey,\n      rowvalues: rowvalues,\n      cellMode: cellMode,\n      skeys: skeys,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    })));\n  }\n}\n\n;\n\nvar Table0D =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Table0D, _Component);\n\n  function Table0D(props) {\n    var _this;\n\n    _classCallCheck(this, Table0D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table0D).call(this, props)); //this.state=props.state;\n\n    _this.updateWindowDimensions = function () {\n      _this.width = window.innerWidth;\n      _this.height = window.innerHeight;\n      _this.bbx = _this.el.getBoundingClientRect(); //console.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n\n    return _this;\n  }\n\n  _createClass(Table0D, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n  }, {\n    key: \"element\",\n    value: function element(el) {\n      if (el !== undefined && el !== null) {\n        this.el = el;\n        this.bbx = this.el.getBoundingClientRect(); //console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n      }\n\n      ;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state; //console.log(\"##### Rendering Table0D.\");\n\n      return React.createElement(\"div\", {\n        ref: function ref(el) {\n          _this2.element(el);\n        },\n        className: classes.root,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(Details, {\n        state: state,\n        classes: classes,\n        element: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Table0D;\n}(Component);\n\nTable0D.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Table0D);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/Table0DComponent.js"],"names":["React","Component","PropTypes","withStyles","Paper","Grid","SummaryCell","SeriesCell","CanvasText","Text","styles","theme","root","height","paper","tableLayout","padding","margin","divTable","display","width","divTableRow","divTableCell","border","divTableCellCursor","cursor","divTableHead","divTableHeading","divTableHeadingCenter","justifyContent","divTableFoot","backgroundColor","fontWeight","divTableBody","getTextWidth","txt","fontname","fontsize","c","undefined","document","createElement","ctx","getContext","font","measureText","getTextHeight","maxWidth","values","swidth","mwidth","lenv","length","ii","cwidth","max","sum","setPlan","plan","set","keys","Object","lenk","key","val","makePlan","state","label","iwidth","iheight","cellMode","cell","rotate","step","xoffset","yoffset","hdr","row","col","Show","code","Sum","ww","zwidth","zheight","mheight","hwidth","lenc","hh","hw","ch","cw","hx","rot","stp","Math","ceil","min","DataCell","props","classes","elements","mode","rowindex","other","renderDataSeries","rowkey","rowvalues","range","index","title","Database","getWhereDetail","Matrix","getMatrixRowElements","matrix","cnt","rowwhere","getColWhere","onclick","Navigate","selectKey","renderDataSum","doc","skey","bgcolor","renderDoc","rowval","skeys","lev","Colors","getLevelColor","mapFunction","toString","map","dataRowSum","element","getMatrixElement","docs","dataRowSeries","getRange","renderZeroRow","DataRows","arr","FirstHdrCell","renderHdrSum","renderHdrSeries","HdrRow","Details","getCellMode","colkey","Path","getColKey","getRowKey","devTableCell","colvalues","filterKeys","sortedKeys","keyCnt","window","innerWidth","innerHeight","Table0D","updateWindowDimensions","bbx","el","getBoundingClientRect","addEventListener","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport SummaryCell from './SummaryCell';\nimport SeriesCell  from './SeriesCell';\nimport CanvasText  from './CanvasTextComponent';\nimport Text        from './TextComponent';\n\n//\toverflow: 'hidden',\n\nconst styles = theme => ({\n    root: {\n\theight: '100%',\n    },\n    paper: {\n\ttableLayout: 'fixed',\n\tpadding:0,\n\tmargin:0,\n    },\n    divTable :{\n\tdisplay: 'table',\n\twidth: '100%',\n    },\n    divTableRow:  {\n\tdisplay: 'table-row',\n    },\n    divTableCell:{\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '3px 3px',\n    },\n    divTableCellCursor:{\n\tcursor: \"pointer\",\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableHead : {\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableHeading : {\n\tdisplay: 'table-header-group',\n    },\n    divTableHeadingCenter : {\n\tdisplay: 'flex',\n\tjustifyContent: 'center',\n    },\n    divTableFoot : {\n\tbackgroundColor: '#DDD',\n\tdisplay: 'table-footer-group',\n\tfontWeight: 'bold',\n    },\n    divTableBody : {\n\tdisplay: 'table-row-group',\n    }\n});\n\nfunction getTextWidth(txt, fontname, fontsize){\n    if(getTextWidth.c === undefined){\n        getTextWidth.c=document.createElement('canvas');\n        getTextWidth.ctx=getTextWidth.c.getContext('2d');\n    }\n    if (fontname !== undefined) {\n\tgetTextWidth.ctx.font = fontsize + ' ' + fontname;\n    }\n    return getTextWidth.ctx.measureText(txt).width;\n};\nfunction getTextHeight(fontname, fontsize){\n    if(getTextHeight.c === undefined){\n        getTextHeight.c=document.createElement('canvas');\n        getTextHeight.ctx=getTextHeight.c.getContext('2d');\n    }\n    if (fontname !== undefined) {\n\tgetTextHeight.ctx.font = fontsize + ' ' + fontname;\n    }\n    return getTextHeight.ctx.measureText('M').width;\n}\nfunction maxWidth(values,border) {\n    var swidth=0;\n    var mwidth=0;\n    var lenv=values.length;\n    for (var ii=0;ii<lenv;ii++) {\n\tvar cwidth = getTextWidth(values[ii])+2*border;\n\tif (cwidth > mwidth) {\n\t    mwidth=cwidth;\n\t}\n\tswidth=swidth+cwidth;\n    }\n    return {max:mwidth,sum:swidth};\n}\nfunction setPlan(plan,set) {\n    var keys=Object.keys(set);\n    var lenk=keys.length;\n    for (var ii=0; ii<lenk; ii++) {\n\tvar key=keys[ii];\n\tvar val=set[key];\n\tplan[key]=val;\n    };\n}\nfunction makePlan(state,label,values,iwidth,iheight,border,cellMode) {\n    var plan={cell:{rotate:false,step:1,border:border,width:100,height:100,xoffset:0,yoffset:0}, \n\t      hdr:{rotate:false,step:1,border:border,width:100,height:100,xoffset:0,yoffset:0},\n\t      row:{rotate:false,step:1,border:border,width:100,height:100,xoffset:0,yoffset:0},\n\t      col:{rotate:false,step:1,border:border,width:100,height:100,xoffset:0,yoffset:0}};\n    if (iwidth <= 0 || cellMode === state.Show.code.cell.Sum) {return plan;}\n    // text boundaries\n    var ww=maxWidth(values,border);\n    var zwidth =getTextWidth(label) + 2 * border;   //props.theme.spacing.unit;\n    var zheight=getTextHeight(label) + 2 * border;  //props.theme.spacing.unit;\n    // table boundaries\n    var mheight=getTextHeight() + 2 * border;       //props.theme.spacing.unit;\n    var hwidth=zwidth + mheight;\n    var width=iwidth-hwidth;\n    // calculate cell width...\n    var mwidth=ww.max;\n    var swidth=ww.sum;\n    var lenc=values.length;\n    var hh, hw, ch, cw, hx, rot, stp;\n    if (mwidth*lenc < width) { // horisontal\n\trot=false;\n\tstp=1\n\tcw=width/lenc;\n\thh=mheight;\n\thx=(cw-mwidth)/2;\n\t//console.log(\"Plan (normal):\",JSON.stringify(plan));\n    } else if (mheight*lenc < width) { // rotate\n\trot=true;\n\tstp=1\n\tcw=width/lenc;\n\thh=mwidth;\n\thx=(cw-mheight)/2;\n\t//console.log(\"Plan (rot):\",JSON.stringify(plan),lenc,cw*lenc);\n    } else { // rotate and use steps\n\trot=true;\n\tstp=Math.ceil(lenc*mheight/width);\n\tcw=plan.step*width/lenc;\n\thh=mwidth;\n\thx=(cw-mheight)/2;\n\t//console.log(\"Plan (rot+step):\",JSON.stringify(plan),lenc,height,width);\n    }\n    // calculate cell height\n    var height=iheight-plan.hdr.height;\n    ch=Math.min(mheight*10,height);\n    hw=hwidth;\n    setPlan(plan.cell,{width:cw,height:ch});\n    setPlan(plan.hdr, {width:hw,height:hh});\n    setPlan(plan.col, {width:cw,height:hh,xoffset:hx,step:stp,rotate:rot});\n    setPlan(plan.row, {width:hw,height:ch});\n    //console.log(\"Plan (finally):\",JSON.stringify(plan),mheight,mwidth,height,width);\n    return plan;\n}\n// ---------------- DATA\nfunction DataCell(props) {\n    const {classes,state,elements,mode,plan,rowindex,...other}=props;\n    if (elements===undefined) {\n\tif (rowindex%2===1) {\n\t    return <div className={classes.divTableCell} style={{backgroundColor:'#EEE'}}/>\n\t} else {\n\t    return <div className={classes.divTableCell} style={{backgroundColor:'#FFF'}}/>\n\t}\n    } else if (mode===state.Show.code.cell.Sum) {\n\treturn <SummaryCell {...other} state={state} elements={elements} plan={plan} rowindex={rowindex}/>\n\t//return null;\n    } else {\n\treturn <SeriesCell {...other} state={state} elements={elements} plan={plan} rowindex={rowindex}/>\n\t//return null;\n    }\n};\nfunction renderDataSeries(classes,state,rowkey,rowvalues,range,plan,val,index) {\n    var title=state.Database.getWhereDetail(rowkey,rowvalues[index]);\n    //console.log(\"Making data cell:\",rowval,val,index,plan,JSON.stringify(rowvalues));\n    if ((index-1)%plan.step === 0) {\n\t// get elements and range\n\t//console.log(\"Processing:\",val,rowvalues[index],plan.step);\n\tvar elements=state.Matrix.getMatrixRowElements(\"\",rowvalues,state.React.matrix,index,plan.step);\n\t// get count and rowwhere\n        var cnt = Math.min(rowvalues.length,index+plan.step)-index;\n        var rowwhere = state.Database.getColWhere(rowkey,rowvalues,index,plan.step);\n\t// make onclick and title\n\tvar onclick=() => state.Navigate.selectKey(state,rowkey,val,rowwhere,1);\n\treturn (<DataCell classes={classes} state={state} key={val} index={index} onclick={onclick} title={title} \n\t\trowkey={\"\"} rowvalues={[\"\"]} rowval={\"\"} rowwhere={rowwhere}\n\t\tcolkey={rowkey} colvalues={rowvalues} colval={val} \n\t\telements={elements} plan={plan} range={range}/>);\n    } else {\n\treturn null;\n    }\n};\nfunction renderDataSum(classes,state,rowkey,rowindex,doc,plan,skey,bgcolor,index){\n    if (doc===undefined) {\n\tif (rowindex%2===1) {\n\t    return <div className={classes.divTableCell} style={{backgroundColor:'#EEE'}}/>\n\t} else {\n\t    return <div className={classes.divTableCell} style={{backgroundColor:'#FFF'}}/>\n\t}\n    } else {    \n\tvar val=doc[skey]||\"\";\n\t//console.log(\"Key:\",skey,\" Val:\",JSON.stringify(val));\n\treturn (\n            <div className={classes.divTableCell} style={{backgroundColor:bgcolor}} key={skey}>\n\t\t{val}\n\t    </div>\n\t);\n    }\n};\nfunction renderDoc(classes,state,rowkey,rowval,rowindex,skeys,plan,doc,lev,index) {\n    var rowwhere=state.Database.getWhereDetail(rowkey,rowval);\n    var onclick=() => state.Navigate.selectKey(state,rowkey,rowval,rowwhere,1);\n    //console.log(\"Making data cols.\",rowval,colkey,JSON.stringify(colvalues));\n    //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n    var bgcolor=state.Colors.getLevelColor(lev);\n    var mapFunction= (skey,index)=>renderDataSum(classes,state,rowkey,rowindex,doc,plan,skey,bgcolor,index);\n    return (<div className={classes.divTableRow} key={rowindex.toString()}>\n\t    {skeys.map(mapFunction)}\n\t    </div>);\n};\nfunction dataRowSum(classes,state,rowkey,rowvalues,skeys,plan,rowval,rowindex) {\n    var rowwhere=state.Database.getWhereDetail(rowkey,rowval);\n    var onclick=() => state.Navigate.selectKey(state,rowkey,rowval,rowwhere,1);\n    //console.log(\"Making data cols.\",rowval,colkey,JSON.stringify(colvalues));\n    //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n    var element=state.Matrix.getMatrixElement(\"\",rowval,state.React.matrix);\n    if (element === undefined) {\n\treturn (<div className={classes.divTableRow} key={rowindex.toString()}>\n\t\t</div>);\n    } else if (element.docs.length < 10) {\n        var lev=element.lev;\n\tvar mapFunction= (doc,index)=>renderDoc(classes,state,rowkey,rowval,rowindex,skeys,plan,doc,lev,index);\n\treturn element.docs.map(mapFunction);\n    } else {\n\treturn (<div className={classes.divTableRow} key={rowindex.toString()}>\n\t\t{\"...\"}\n\t\t</div>);\n    };\n};\nfunction dataRowSeries(classes,state,rowkey,rowvalues,plan) {\n    //console.log(\"Making data cols.\",rowval,colkey,JSON.stringify(colvalues));\n    //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n    var range=[undefined,undefined];\n    if (state.React.matrix!==undefined) {\n\trange=state.Matrix.getRange(state,state.React.matrix,[\"\"],rowvalues);\n\t//console.log(\"Range:\",JSON.stringify(range));\n    };\n    var mapFunction= (val,index)=>renderDataSeries(classes,state,rowkey,rowvalues,range,plan,val,index);\n    return (<div className={classes.divTableRow} key={rowkey}>\n\t    {rowvalues.map(mapFunction)}\n\t    </div>);\n};\nfunction renderZeroRow(classes,state,plan) {\n    return (<div className={classes.divTableRow} key={1}>\n\t       <div className={classes.divTableCell} width={plan.cell.width}>No data available</div>\n\t    </div>);\n};\nfunction DataRows(props) {\n    const { classes, state, plan, rowkey, rowvalues, cellMode, skeys } = props;\n    if (rowvalues.length===0) {\n\treturn renderZeroRow(classes,state,plan);\n    } else if (cellMode === state.Show.code.cell.Sum) {\n\tvar mapFunction= (val,index)=>dataRowSum(classes,state,rowkey,rowvalues,skeys,plan,val,index);\n\tvar arr=rowvalues.map(mapFunction);\n\treturn arr;\n    } else {\n\treturn dataRowSeries(classes,state,rowkey,rowvalues,plan);\n    }\n}\n// ---------------- HDR\nfunction FirstHdrCell (props) {\n    const { classes, label, plan } = props;\n    var width=plan.hdr.width;\n    var height=plan.hdr.height;\n    //console.log(\"Making first header cell.\",label,width,height);\n    if (label !== \"\") {\n\treturn (<div className={classes.divTableHeadingCenter} >\n\t\t{label}\n\t\t</div>);\n    } else {\n\treturn null;\n    };\n}\nfunction renderHdrSum(classes,state,rowkey,plan,val,index) {\n    //console.log(\"HdrCell:\",val);\n    var cursor=classes.divTableCell;\n    return (<div className={cursor} style={{backgroundColor:'#DDD'}} key={`col-${index}`} >\n\t    {val}\n \t    </div> );\n}\nfunction renderHdrSeries(classes,state,rowkey,rowvalues,plan,val,index) {\n    if ((index-1)%plan.step === 0) {\n\t//console.log(\"HdrCell:\",index,plan.step);\n        var cnt = Math.min(rowvalues.length,index+plan.step)-index;\n        var rowwhere = state.Database.getColWhere(rowkey,rowvalues,index,plan.step);\n\tvar onclick=() => state.Navigate.selectKey(state,rowkey,val,rowwhere,cnt);\n\tvar title=rowwhere;\n\tvar cursor=classes.divTableCell;\n\tif (onclick !== undefined) {\n\t    cursor=classes.divTableCellCursor;\n\t}\n\treturn (<div className={cursor} onClick={onclick} style={{backgroundColor:'#DDD'}} title={title} key={`col-${index}`} >\n\t\t   <CanvasText state={state} index={index} plan={plan.col} label={val}></CanvasText>\n \t        </div> );\n     } else {\n\treturn null;\n    }\n}\nfunction HdrRow(props) {\n    const { classes, state, plan, rowkey, rowvalues, label, skeys, cellMode } = props; //, rowvalues\n    if (cellMode === state.Show.code.cell.Sum) {\n\tvar mapFunction= (val,index)=>renderHdrSum(classes,state,rowkey,plan,val,index);\n\t//console.log(\"Making header Sum row.\",label,rowkey,JSON.stringify(skeys));\n\treturn (<div className={classes.divTableRow} key={0}>\n\t\t   <FirstHdrCell classes={classes} label={label} plan={plan}/>\n\t\t   {skeys.map(mapFunction)}\n\t\t</div>);\n    } else {\n\tvar mapFunction= (val,index)=>renderHdrSeries(classes,state,rowkey,rowvalues,plan,val,index);\n\t//console.log(\"Making header Series row.\",label,rowkey,JSON.stringify(rowvalues));\n\treturn null;\n//\treturn (<div className={classes.divTableRow} key={0}>\n//\t\t   {rowvalues.map(mapFunction)}\n//\t\t</div>);\n    }\n}\n// ---------------- Details\nfunction Details(props) {\n    const { classes, state, element } = props; // classes, \n    var cellMode  = state.Show.getCellMode(state);\n    var colkey = state.Path.getColKey(state)||\"\";\n    var rowkey = state.Path.getRowKey(state)||\"\";\n    if (state.React.matrix === undefined) {\n\treturn (<div className={classes.divTable}>\n\t\t   <div className={classes.divTableBody}>\n\t\t      <div className={classes.devTableCell}>\n\t\t         {\"No Matrix defined\"}\n\t\t      </div>\n\t\t   </div>\n\t\t</div>\n\t       );\n    } else {\n\tvar colvalues = state.Path.filterKeys(state,state.Matrix.values[colkey]||[\"\"]);\n\tvar rowvalues = state.Path.filterKeys(state,state.Matrix.values[rowkey]||[\"\"]);\n\tvar skeys = state.Matrix.sortedKeys(state,state.Matrix.keyCnt);\n\t//DOM.style.font\n\tvar border=2;\n\tvar label=rowkey;\n\tvar width=0.8*window.innerWidth;\n\tvar height=0.8*(window.innerHeight-200);\n\tvar plan=makePlan(state,label,rowvalues,width,height,border,cellMode);\n\t//console.log(\"Plan:\",JSON.stringify(plan));\n\t//console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(colvalues));\n\t//console.log(\"Rowkey:\",rowkey,\" rowval:\",JSON.stringify(rowvalues));\n\t//console.log(\"skeys: \",JSON.stringify(skeys));\n\treturn (<div className={classes.divTable}>\n\t\t   <div className={classes.divTableBody}>\n\t\t      <HdrRow classes={classes} state={state} key={\"hdr\"} plan={plan} rowkey={rowkey} rowvalues={rowvalues} label={label} cellMode={cellMode} skeys={skeys}/>\n\t\t      <DataRows classes={classes} state={state} key={\"data\"} plan={plan} rowkey={rowkey} rowvalues={rowvalues} cellMode={cellMode} skeys={skeys}/>\n\t\t   </div>\n\t\t</div>\n\t       );\n    }\n};\n\nclass Table0D extends Component {\n    constructor(props) {\n\tsuper(props);\n\t//this.state=props.state;\n    }\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    } \n    updateWindowDimensions = () => {\n        this.width= window.innerWidth;\n\tthis.height=window.innerHeight;\n\tthis.bbx=this.el.getBoundingClientRect();\n\t//console.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n    element(el) {\n\tif (el !== undefined && el !== null) {\n\t    this.el=el;\n\t    this.bbx=this.el.getBoundingClientRect();\n\t    //console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n\t};\n    };\n    render() {\n\tconst { classes, state } = this.props;\n\t//console.log(\"##### Rendering Table0D.\");\n\treturn (<div ref={el=>{this.element(el)}} className={classes.root}  style={{width: '100%', height: '100%'}}>\n\t\t <Grid container spacing={24}>\n\t\t  <Grid item xs={12} > \n                   { <Paper className={classes.paper}>\n\t\t       <Details state={state} classes={classes} element={this}/>\n                     </Paper>}\n                  </Grid>\n                 </Grid>\n\t        </div>);\n\t}\n}\n\nTable0D.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Table0D);\n"]},"metadata":{},"sourceType":"module"}