{"ast":null,"code":"//console.log(\"Loading DatabaseLib.js\");\nvar alasql = window.alasql;\n\nfunction Database() {\n  this.cnt = 0;\n  this.keyCnt = {};\n  this.values = {};\n  this.epoch0 = 0;\n  this.regfile = \"register\"; // register file (shows current datfile)\n\n  this.datfile = \"\"; // json data file\n\n  this.arrayConstructor = [].constructor;\n  this.objectConstructor = {}.constructor;\n  this.casc = 0; // key is sorted ascending\n\n  this.cdes = 1; // key is sorted descending\n\n  this.nasc = 2; // key is sorted ascending\n\n  this.ndes = 3; // key is sorted descending\n\n  this.delay = 100000; // server-polling period in ms\n\n  this.ready = true; // can we poll server or is another poll running\n\n  this.log = \"\";\n  this.mod = \"\";\n\n  this.init = function (state) {\n    var par = \"Database\";\n    state.Utils.init(par, this);\n  };\n\n  this.keytrgMissing = -1;\n  this.keytrgNull = 0;\n  this.keytrgValue = 1;\n  this.keytrgMin = 2;\n  this.keytrgMax = 3;\n\n  this.getKeytrg = function (state, key, val) {\n    if (Array.isArray(val)) {\n      var ret = this.keytrgMissing;\n      var lenv = val.length;\n\n      for (var ii = 0; ii < lenv; ii++) {\n        ret = Math.max(ret, this.getKeytrg(state, key, val[ii]));\n      }\n\n      return ret;\n    } else {\n      if (val === \"null\") {\n        return this.keytrgNull;\n      } else if (val === \"MIN(\" + key + \")\") {\n        // this is a function\n        return this.keytrgMin;\n      } else if (val === \"MAX(\" + key + \")\") {\n        // this is a function\n        return this.keytrgMax;\n      } else if (val === undefined) {\n        return this.keytrgMissing;\n      } else if (val === null) {\n        return this.keytrgNull;\n      } else {\n        return this.keytrgVal;\n      }\n\n      ;\n    }\n\n    ;\n  };\n\n  this.makeKeytrg = function (state, key, keytrg, val) {\n    if (keytrg === this.keytrgMissing) {\n      return \"missing\";\n    } else if (keytrg === this.keytrgNull) {\n      return \"null\";\n    } else if (keytrg === this.keytrgMin) {\n      return \"MIN(\" + key + \")\";\n    } else if (keytrg === this.keytrgMax) {\n      return \"MAX(\" + key + \")\";\n    } else {\n      return val;\n    }\n\n    ;\n  };\n\n  this.update = function (state) {\n    this.setTime(state);\n    this.load(state);\n    setTimeout(function () {\n      return function () {\n        this.update(state);\n      };\n    }, this.delay);\n  };\n\n  this.load = function (state) {\n    //console.log(\"Loading...\",this.cnt++);\n    state.Default.loadDefault(state, [this.loadRegister, this.loadData]);\n  };\n\n  this.getKeyValues = function (state, key) {\n    //console.log(\"Database:\",JSON.stringify(state.Database.values));\n    var vals = state.Database.values[key];\n\n    if (vals !== undefined) {\n      return vals;\n    } else {\n      return [];\n    }\n  };\n\n  this.loadRegister = function (state, callbacks) {\n    //console.log(\"loadRegister\");\n    if (this.ready) {\n      // make sure we do not re-load if we are already loading\n      this.ready = false;\n      state.Html.setFootnote(state, \"Server-request: \" + this.regfile);\n      state.Html.setProgress(state, true);\n      var regHttp = new XMLHttpRequest();\n      regHttp.addEventListener(\"progress\", function (e) {\n        return state.Html.progressInfo(state, e);\n      }); //regHttp.addEventListener(\"load\",(e)=>state.Html.loadInfo(state,e));\n\n      regHttp.addEventListener(\"error\", function (e) {\n        return state.Html.errorInfo(state, e);\n      });\n      regHttp.addEventListener(\"abort\", function (e) {\n        return state.Html.abortInfo(state, e);\n      });\n\n      regHttp.onreadystatechange = function () {\n        this.ready = true;\n\n        if (regHttp.readyState === 4) {\n          if (regHttp.status === 200) {\n            //console.log(regHttp.responseText);\n            var file = regHttp.responseText;\n\n            if (file !== this.datfile) {\n              // load new data\n              this.datfile = file;\n              var callback = callbacks.shift();\n\n              if (callback !== undefined) {\n                setTimeout(callback(state, file, callbacks), 0.1);\n              }\n            } else {\n              state.Html.setFootnote(state);\n              state.Html.setProgress(state, false);\n            }\n          } else {\n            state.Html.setFootnote(state, \"Unable to load \" + this.regfile);\n            state.Html.setProgress(state, false); //state.Html.setConsole(this.regfile+\" error\");\n          }\n        } else {\n          state.Html.setFootnote(state, this.regfile + \" error\");\n          state.Html.setProgress(state, false);\n        }\n\n        ;\n      }.bind(this);\n\n      regHttp.responseType = \"\";\n      regHttp.overrideMimeType(\"text/text\");\n      regHttp.open(\"GET\", \"data/\" + this.regfile, true);\n      regHttp.setRequestHeader('cache-control', 'no-cache, must-revalidate, post-check=0, pre-check=0');\n      regHttp.setRequestHeader('cache-control', 'max-age=0');\n      regHttp.setRequestHeader('expires', '0');\n      regHttp.setRequestHeader('expires', 'Tue, 01 Jan 1980 1:00:00 GMT');\n      regHttp.setRequestHeader('pragma', 'no-cache');\n      regHttp.send();\n    } else {\n      //state.Html.setConsole(\"\");\n      state.Html.setFootnote(state, \"Already waiting for reply...\");\n      state.Html.setProgress(state, true);\n    }\n\n    ;\n  }.bind(this);\n\n  this.loadData = function (state, file, callbacks) {\n    //console.log(\"loadData\");\n    if (this.ready) {\n      // make sure we do not re-load if we are already loading\n      this.ready = false;\n      state.Html.setFootnote(state, \"Server-request: \" + this.datfile);\n      state.Html.setProgress(state, true);\n      var datHttp = new XMLHttpRequest();\n      datHttp.addEventListener(\"progress\", function (e) {\n        return state.Html.progressInfo(state, e);\n      }); //datHttp.addEventListener(\"load\",(e)=>state.Html.loadInfo(state,e));\n\n      datHttp.addEventListener(\"error\", function (e) {\n        return state.Html.errorInfo(state, e);\n      });\n      datHttp.addEventListener(\"abort\", function (e) {\n        return state.Html.abortInfo(state, e);\n      });\n\n      datHttp.onreadystatechange = function () {\n        this.ready = true;\n\n        if (datHttp.readyState === 4) {\n          if (datHttp.status === 200) {\n            //console.log(\"Loaded \"+this.datfile);\n            //state.Html.setConsole(\"100%\");\n            state.Html.broadcast(state, \"Loaded \" + this.datfile);\n            state.Html.setFootnote(state, \"Creating database\");\n            console.log(\"Creating database from \" + file);\n            setTimeout(function () {\n              this.dbInsert(state, datHttp.responseText);\n              state.Html.setFootnote(state, \"Extracting data.\");\n              setTimeout(function () {\n                this.makeWhere(state); // update where-expressions...\n\n                state.Show.showAll(state);\n                state.Html.setFootnote(state);\n                var callback = callbacks.shift();\n\n                if (callback !== undefined) {\n                  //console.log(\"Found callback\");\n                  setTimeout(callback(state, callbacks), 0);\n                } else {//console.log(\"No callback\");\n                }\n              }.bind(this), 0.1);\n            }.bind(this), 0.1);\n          } else {\n            state.Html.setFootnote(state, \"Unable to load \" + file);\n            state.Html.setProgress(state, false);\n            state.Html.setConsole(file + \" error\");\n          }\n        }\n      }.bind(this);\n\n      datHttp.responseType = \"\";\n      datHttp.overrideMimeType(\"text/text\");\n      datHttp.open(\"GET\", \"data/\" + this.datfile, true);\n      datHttp.setRequestHeader('cache-control', 'no-cache, must-revalidate, post-check=0, pre-check=0');\n      datHttp.setRequestHeader('cache-control', 'max-age=0');\n      datHttp.setRequestHeader('expires', '0');\n      datHttp.setRequestHeader('expires', 'Tue, 01 Jan 1980 1:00:00 GMT');\n      datHttp.setRequestHeader('pragma', 'no-cache');\n      datHttp.send();\n    } else {\n      state.Html.setConsole(\"\");\n      state.Html.setFootnote(state, \"Already waiting for reply...\");\n      state.Html.setProgress(state, true);\n    }\n\n    ;\n  }.bind(this);\n\n  this.getTime = function (state, s) {\n    var nn = s.match(/\\d+/g).map(Number);\n    var date0 = new Date(Date.UTC(nn[0], nn[1] - 1, nn[2], nn[3], nn[4], nn[5], ((nn[6] || '') + '000').slice(0, 3))); // modification time\n    //console.log(\"Gettime:\",s,JSON.stringify(nn));\n\n    return date0.getTime();\n  };\n\n  this.setTime = function (state) {\n    var d = new Date();\n    var epoch = d.getTime(); //console.log(\"Times:\",epoch,this.epoch0);\n\n    if (this.epoch0 !== undefined) {\n      var age = epoch - this.epoch0;\n      this.mod = this.getTimeDiff(state, age);\n\n      if (state.React !== undefined && state.React.Status !== undefined) {\n        state.React.Status.setAge(state, this.mod); //console.log(\"Age:\",epoch,this.epoch0,age);\n      }\n    }\n  };\n\n  this.dbInsert = function (state, raw) {\n    try {\n      // set home\n      //console.log(\"Parsing JSON.\");\n      var json = JSON.parse(raw);\n      var len = json.data.length;\n\n      for (var ii = 0; ii < len; ii++) {\n        json.data[ii][\"cnt\"] = ii;\n      } // get modified date\n      //console.log(\"Setting time.\");\n\n\n      this.epoch0 = this.getTime(state, json.epoch); // data file time\n\n      this.setTime(state); // data file time\n      // make database for raw data\n\n      this.makeTable(state); // reset key counts and range\n\n      this.cnt = 0;\n      this.keyCnt = {}; // reset key-count\n      // put data into databse\n      //console.log(\"inserting\");\n\n      var data = [];\n      var home = state.Path.home.val;\n      var hkeys = Object.keys(home);\n      var homeKeys = [];\n      var delayKeys = [];\n      var lenh = hkeys.length;\n\n      for (var ii = 0; ii < lenh; ii++) {\n        var key = hkeys[ii];\n\n        if (this.getKeytrg(state, key, home[key]) <= this.keytrgValue) {\n          homeKeys.push(key);\n        } else {\n          delayKeys.push(key);\n        }\n      }\n\n      var rcnt = this.extractData(state, data, {}, \"\", json.data, homeKeys, home); //console.log(\"Count:\",rcnt);\n      //console.log(\"Data:\",JSON.stringify(data));\n\n      this.dataToDb(state, data);\n      var nrec = this.sanityCheck(state); // sanity check\n\n      console.log(\"Initially:\", data.length, \" Extracted:\", rcnt, ' Database:', nrec);\n      this.postProcess(state); // update distinct Database.values[key]\n\n      if (delayKeys.length > 0) {\n        // delayed home selection (MAX() and MIN())\n        this.makeWhere(state, delayKeys, home);\n        var where = this.getWhere(state, delayKeys);\n        var docs = this.getDocs(state, where);\n        this.dataToDb(state, docs);\n        this.postProcess(state); // update distinct Database.values[key]\n      }\n\n      ;\n      state.Path.makePath(state); // initialise path\n      //console.log(\"Indexing and cleaning up.\");\n\n      this.dbindex(state, state.Path.other.table); // make indexes\n\n      this.dbindex(state, state.Path.other.rest); // make indexes\n      //state.Path.checkTableKeys(state);\n\n      state.Html.broadcast(state, \"Database is ready.\"); //console.log(\"Database is ready.\");\n    } catch (e) {\n      alert(e);\n    }\n\n    ;\n  };\n\n  this.updateKeyCnt = function (state, key, val) {\n    if (this.keyCnt[key] === undefined) {\n      this.keyCnt[key] = {\n        cnt: 0,\n        type: \"num\",\n        order: this.nasc\n      };\n    }\n\n    this.keyCnt[key].cnt = this.keyCnt[key].cnt + 1;\n\n    if (this.keyCnt[key].type === \"num\" && isNaN(val)) {\n      this.keyCnt[key].type = \"nan\";\n      this.keyCnt[key].order = this.casc;\n    }\n  };\n\n  this.postProcess = function (state) {\n    // update meta-data\n    var keys = Object.keys(state.Database.keyCnt);\n    var lenk = keys.length;\n\n    for (var ii = 0; ii < lenk; ii++) {\n      var key = keys[ii]; // make list of values in Database for each key\n\n      state.Database.values[key] = [];\n      var sql = \"select DISTINCT \" + key + \" AS \" + key + \" FROM alarm\";\n      var dd0 = alasql(sql);\n      var lend = dd0.length;\n\n      for (var jj = 0; jj < lend; jj++) {\n        var doc = dd0[jj];\n        state.Database.values[key].push(doc[key]);\n      }\n\n      ;\n    }\n\n    ;\n  };\n\n  this.extractData = function (state, data, parent, key, raw, hkeys, home) {\n    // insert records into db (recursive)\n    var rcnt = 0;\n    var kk, kii, child, dkey; //console.log(\"Processing {\",state.Utils.toString(parent),\"} '\",key,\"' (\",state.Utils.toString(raw),\")\");\n\n    var wii = this.whatIsIt(raw);\n\n    if (wii === \"Object\" && key === \"\") {\n      //console.log(\"Found object (\",state.Utils.toString(parent),\")\");\n      child = state.Utils.cp(parent); // loop over plain values first\n\n      for (kk in raw) {\n        kii = this.whatIsIt(raw[kk]);\n\n        if (kii === \"value\") {\n          child[kk] = raw[kk];\n        }\n      } // loop over sub-objects\n\n\n      var nn = 0;\n\n      for (kk in raw) {\n        kii = this.whatIsIt(raw[kk]);\n\n        if (kii !== \"value\") {\n          nn = nn + 1;\n          rcnt = rcnt + this.extractData(state, data, child, kk, raw[kk], hkeys, home);\n        }\n      }\n\n      if (nn === 0) {\n        // insert \n        //console.log(\"Object was empty.\");\n        rcnt = rcnt + this.extractData(state, data, child, null, null, hkeys, home);\n      }\n    } else if (wii === \"Object\" && key !== \"\") {\n      //console.log(\"Found object key '\",key,\"' (\",state.Utils.toString(parent),\")\");\n      child = state.Utils.cp(parent); // loop over plain values first\n\n      for (kk in raw) {\n        child[key] = kk;\n        rcnt = rcnt + this.extractData(state, data, child, \"\", raw[kk], hkeys, home);\n      }\n    } else if (wii === \"Array\") {\n      //console.log(\"Found array key '\",key,\"' (\",state.Utils.toString(parent),\")\");\n      var dlen = raw.length;\n\n      for (var ii = 0; ii < dlen; ii++) {\n        rcnt = rcnt + this.extractData(state, data, parent, key, raw[ii], hkeys, home);\n      }\n    } else {\n      //console.log(\"Found key '\",key,\"' \",wii,\" (\",state.Utils.toString(parent),\")\");\n      var keep = true;\n      var doc = state.Utils.cp(parent);\n\n      if (raw !== null) {\n        if (key === \"\") {\n          doc.value = raw;\n        } else {\n          doc[key] = raw;\n        }\n      } // check if home criteria is met\n\n\n      var lenh = hkeys.length;\n\n      for (var ii = 0; ii < lenh; ii++) {\n        var key = hkeys[ii];\n        var vals = home[key];\n        var lenv = vals.length;\n        var found = false;\n\n        for (var jj = 0; jj < lenv; jj++) {\n          if (vals[jj] === doc[key] || vals[jj] === \"\" && doc[key] === undefined) {\n            found = true;\n          }\n        }\n\n        if (!found) {\n          keep = false;\n        }\n\n        ;\n      }\n\n      if (keep) {\n        //console.log(\"Updating internal raw structure\",JSON.stringify(setup));\n        for (dkey in doc) {\n          var val = doc[dkey];\n          this.updateKeyCnt(state, dkey, val); //// this takes too much time...\n          //if (this.values[dkey]  === undefined) {\n          //\tthis.values[dkey]=[];\n          //  };\n          ////console.log(\"Setup:\",JSON.stringify(setup));\n          ////console.log(\"Key:\",key,JSON.stringify(this.values));\n          //if (this.values[dkey].indexOf(val)  === -1 ) { // value not in range\n          //    this.values[dkey].push(val); // add value to range\n          //};\n        }\n\n        ; //console.log(\">>> Inserting:\",state.Utils.toString(doc));\n\n        rcnt = rcnt + 1;\n        this.cnt = this.cnt + 1; //if (this.cnt < 10) { // debug purposes\n\n        var keys = state.Threshold.setThresholds(doc); //for (key in keys) {\n        //this.updateKeyCnt(state,key,doc[key]);\n        //};\n\n        data.push(doc); //} else {\n        //console.log(\"Ignoring:\",lenh,JSON.stringify(hkeys),JSON.stringify(home),JSON.stringify(doc));\n      }\n    }\n\n    return rcnt;\n  };\n\n  this.dbextract = function (state, showFunc) {\n    // extract data from db and show\n    // extract data from db and insert into data-array\n    // var parent={};//{test:{$exists:false}};\n    var docs;\n    var where = this.getWhere(state);\n    var docs0 = this.getCntDocs(state, where);\n    var nrec = docs0[0].cnt;\n    var m = {};\n    state.Matrix.cnt = nrec;\n\n    if (nrec > state.Matrix.popSeries) {\n      // only use counts...\n      state.Matrix.initKeyCnt(state);\n      var buff = [];\n      state.Utils.cpArray(buff, state.Path.keys.path);\n      state.Utils.cpArray(buff, state.Path.keys.other);\n      state.Utils.cpArray(buff, state.Path.trash);\n      state.Matrix.mapKeyCnt(state, where, nrec, buff); //console.log(\"Setup:\",\n      //\t    JSON.stringify(state.Matrix.values),\n      //\t    JSON.stringify(state.Matrix.keyCnt));\n\n      state.Path.exportAllKeys(state); // can not export keys before we have a cnt-map\n\n      state.Matrix.sortMatrixValues(state); //console.log(\"Count:\",JSON.stringify(docs));\n      // add \"undefined\" range of keys that are not present in every doc...\n\n      state.Matrix.makeMatrixCnt(state, where, state.Path.other.table, m);\n    } else {\n      console.log(\"Database where:\", where);\n      docs = this.getDocs(state, where); // get all docs\n      //console.log(\">>>Extraction key (where='\",where,\"') Docs:\",docs.length);\n\n      state.Matrix.initKeyCnt(state);\n      state.Matrix.mapKeys(state, docs);\n      state.Matrix.addMapKeys(state, docs); //console.log(\"Setup=\",JSON.stringify(setup));\n      //console.log (\"Maprange:\",JSON.stringify(state.Matrix.values));\n      // subset contains the keys being displayed in matrix...\n\n      state.Path.exportAllKeys(state); // can not export keys before we have a cnt-map\n\n      state.Matrix.sortMatrixValues(state); // make matrix\n\n      state.Matrix.makeMatrix(state, docs, m); //console.log (\"Matrix:\",JSON.stringify(m));\n    }\n\n    showFunc(state, m);\n  };\n\n  this.dbindex = function (state, ks) {\n    // make indexes on all keys\n    var s = \"\";\n    var klen = ks.length;\n\n    for (var ii = 0; ii < klen; ii++) {\n      //alasql(\"CREATE INDEX ? ON TABLE alarm.?\",ks[ii],ks[ii]);\n      s = s + \" \" + ks[ii];\n    }\n\n    ; //console.log(\"Indexes:\",s);\n  };\n\n  this.getTitleDynamic = function (state, key, val) {\n    var ret;\n\n    if (state.Database.values[key] === undefined) {\n      ret = val;\n    } else {\n      var keytrg = this.getKeytrg(state, key, val);\n\n      if (val === \"null\") {\n        ret = key + \" is NULL\";\n      } else if (keytrg === this.keytrgMax) {\n        // this is a function\n        var parse = state.Utils.getMax(state.Database.values[key]);\n\n        if (parse === undefined) {\n          ret = key + \" is NULL\";\n        } else {\n          ret = parse;\n        }\n\n        ;\n      } else if (keytrg === this.keytrgMin) {\n        // this is a function\n        var parse = state.Utils.getMin(state.Database.values[key]);\n\n        if (parse === undefined) {\n          ret = key + \" is NULL\";\n        } else {\n          ret = parse;\n        }\n\n        ;\n      } else {\n        ret = val;\n      }\n\n      ;\n    }\n\n    ;\n    return ret;\n  };\n\n  this.getWhereDynamic = function (state, key, val) {\n    var ret;\n\n    if (state.Database.values[key] === undefined) {\n      ret = state.Database.getWhereDetail(key, val);\n    } else {\n      var keytrg = this.getKeytrg(state, key, val);\n\n      if (keytrg === this.keytrgMax) {\n        // this is a function\n        var parse = state.Utils.getMax(state.Database.values[key]); //console.log(\"parseWhere:\",key,parse,JSON.stringify(state.Database.values[key]));\n\n        if (parse === undefined) {\n          ret = key + \" is NULL\";\n        } else {\n          ret = key + \"='\" + parse + \"'\";\n        }\n\n        ;\n      } else if (keytrg === this.keytrgMin) {\n        // this is a function\n        var parse = state.Utils.getMin(state.Database.values[key]);\n\n        if (parse === undefined) {\n          ret = key + \" is NULL\";\n        } else {\n          ret = key + \"='\" + parse + \"'\";\n        }\n\n        ;\n      } else {\n        ret = state.Database.getWhereDetail(key, val);\n      }\n\n      ;\n    }\n\n    ;\n    console.log(\"GetWhere:\", key, val, ret);\n    return ret;\n  };\n\n  this.getWhereDetail = function (key, val) {\n    if (val === undefined || val === null || val === \"\") {\n      return key + ' is NULL';\n    } else {\n      return key + '=\"' + val + '\"';\n    }\n\n    ;\n  };\n\n  this.getWhere = function (state, keys, vals) {\n    var where = \"\"; //console.log(\"Path:\",JSON.stringify(state.Path.keys));\n\n    if (keys === undefined) {\n      keys = state.Path.keys.path;\n      vals = state.Path.select.val;\n    }\n\n    ;\n\n    if (vals === undefined) {\n      vals = [];\n    }\n\n    ;\n\n    if (keys !== undefined) {\n      var plen = keys.length;\n\n      for (var ii = 0; ii < plen; ii++) {\n        var key = keys[ii];\n        var whereKey = state.Database.parseWhere(state, key, vals[key]);\n        console.log(\"Wherekey:\", ii, key, JSON.stringify(vals), JSON.stringify(vals[key]), \"'\" + whereKey + \"'\");\n\n        if (whereKey === undefined || whereKey === null || whereKey === \"\") {\n          if (where !== \"\") {\n            where = where + ' AND ';\n          }\n\n          ;\n          where = where + key + ' is NULL';\n        } else {\n          if (where !== \"\") {\n            where = where + ' AND ';\n          }\n\n          ;\n          where = where + \"(\" + whereKey + \")\";\n        }\n      }\n\n      ;\n\n      if (where !== \"\") {\n        where = \" WHERE \" + where;\n      } //console.log(\"Where=|\"+where+\"|\")\n\n    }\n\n    ;\n    return where;\n  };\n\n  this.addWhere = function (iwhere, whereKey) {\n    var where = iwhere;\n\n    if (whereKey !== undefined && whereKey !== null && whereKey !== \"\") {\n      if (where !== \"\") {\n        where = where + ' AND ' + \"(\" + whereKey + \")\";\n      } else {\n        where = ' WHERE ' + \"(\" + whereKey + \")\";\n      }\n    }\n\n    return where;\n  };\n\n  this.getColWhere = function (key, values, index, step) {\n    var clen = values.length;\n    var where = \"\";\n\n    for (var kk = index; kk < Math.min(clen, index + step); kk++) {\n      if (where !== \"\") {\n        where = where + \" or \";\n      }\n\n      where = where + this.getWhereDetail(key, values[kk]);\n    }\n\n    ;\n    return where;\n  };\n\n  this.makeWhere = function (state, keys, vals) {\n    if (keys === undefined) {\n      state.Path.keys.path.forEach(function (item, index) {\n        this.setWhere(state, item, state.Path.select.val);\n      }.bind(this));\n    } else {\n      keys.forEach(function (item, index) {\n        this.setWhere(state, item, vals);\n      }.bind(this));\n    }\n  };\n\n  this.setWhere = function (state, key, vals) {\n    var where = this.parseWhere(state, key, vals);\n    state.Path.where[key] = where;\n  };\n\n  this.parseWhere = function (state, key, vals) {\n    var where = \"\";\n\n    if (vals === undefined) {\n      vals = [];\n    }\n\n    ;\n    var lenv = vals.length;\n\n    for (var ii = 0; ii < lenv; ii++) {\n      var val = vals[ii];\n\n      if (where !== \"\") {\n        where = where + \" OR \";\n      }\n\n      ;\n      where = where + state.Database.getWhereDynamic(state, key, val);\n      console.log(\"From getWhereDynamic:\", key, \":\", val, \":\", where);\n    }\n\n    ;\n    return where;\n  };\n\n  this.getGroup = function (keys) {\n    var group = \"\";\n    var plen = keys.length;\n\n    for (var ii = 0; ii < plen; ii++) {\n      var key = keys[ii];\n\n      if (group !== \"\") {\n        group = group + ',';\n      }\n\n      ;\n      group = group + key;\n    }\n\n    ;\n\n    if (group !== \"\") {\n      group = \" GROUP BY \" + group;\n    }\n\n    return group;\n  };\n\n  this.getCols = function (keys) {\n    var cols = \"\";\n    var plen = keys.length;\n\n    for (var ii = 0; ii < plen; ii++) {\n      var key = keys[ii];\n      cols = cols + key;\n\n      if (cols !== \"\") {\n        cols = cols + ',';\n      }\n\n      ;\n    }\n\n    ;\n    return cols;\n  };\n\n  this.getAll = function (state) {\n    var cols = \"\";\n    var plen = state.Path.keys.other.length;\n\n    for (var ii = 0; ii < plen; ii++) {\n      var key = state.Path.keys.other[ii];\n      cols = cols + key;\n\n      if (cols !== \"\") {\n        cols = cols + ',';\n      }\n\n      ;\n    }\n\n    ;\n    return cols;\n  };\n\n  this.getCntDocs = function (state, where, keys) {\n    var sql, dd;\n    var body = \"count(*) AS cnt, max(level) AS maxlev, min(level) AS minlev, max(lat) AS maxlat, min(lat) AS minlat, max(lon) AS maxlon, min(lon) AS minlon FROM alarm\";\n\n    if (keys === undefined) {\n      sql = \"select \" + body + where; //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\n      dd = alasql(sql); //console.log(\"initial count:\",dd[0].cnt,JSON.stringify(dd0));\n      //console.log(\"Cnt:\",JSON.stringify(dd));\n\n      return dd;\n    } else {\n      var cols = this.getCols(keys);\n      var group = this.getGroup(keys);\n      sql = \"select \" + cols + body + where + group; //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\n      dd = alasql(sql); //console.log(\"Cnt:\",JSON.stringify(dd),JSON.stringify(keys));\n\n      return dd;\n    }\n  };\n\n  this.getDocs = function (state, where) {\n    var dd;\n    dd = alasql(\"select * FROM alarm\" + where);\n    return dd;\n  };\n\n  this.makeTable = function (state) {\n    alasql('DROP TABLE IF EXISTS alarm; CREATE TABLE alarm;');\n  };\n\n  this.dataToDb = function (state, data) {\n    alasql.tables.alarm.data = data;\n  };\n\n  this.getKeyCnt = function (state, key, where) {\n    var sql = \"select \" + key + \",count(*) AS cnt FROM alarm\" + where + \" GROUP BY \" + key;\n    return alasql(sql);\n  };\n\n  this.whatIsIt = function (object) {\n    // determine object type\n    if (object === null) {\n      return \"null\";\n    } else if (object.constructor === this.arrayConstructor) {\n      return \"Array\";\n    } else if (object.constructor === this.objectConstructor) {\n      return \"Object\";\n    } else {\n      return \"value\";\n    }\n  };\n\n  this.getTimeDiff = function (state, dt) {\n    var s = \"\";\n\n    if (dt === undefined || isNaN(state, dt)) {\n      return s;\n    }\n\n    ;\n    var msec = Math.abs(state, dt);\n    var dd = Math.floor(state, (state, msec / 1000 / 60) / 60 / 24);\n    msec -= dd * 1000 * 60 * 60 * 24;\n    var hh = Math.floor(state, (state, msec / 1000) / 60 / 60);\n    msec -= hh * 1000 * 60 * 60;\n    var mm = Math.floor(state, msec / 1000 / 60);\n    msec -= mm * 1000 * 60;\n    var ss = Math.floor(state, msec / 1000);\n    msec -= ss * 1000;\n\n    if (dt < 0) {\n      s = \"-\";\n    } else if (dt > 0) {\n      s = \"+\";\n    } else {\n      s = \"0\";\n    }\n\n    if (dd !== 0) s = s + \" \" + state.Utils.numberWithCommas(dd) + \"d\";\n    if (hh !== 0) s = s + \" \" + hh + \"h\";\n    if (mm !== 0) s = s + \" \" + mm + \"m\"; //if (ss !== 0) s=s+\" \"+ss+\"s\";\n\n    return s;\n  };\n\n  this.sanityCheck = function (state) {\n    var sql = \"select count(*) AS cnt, max(level) AS lev FROM alarm\";\n    var dd0 = alasql(sql);\n    var nrec = dd0[0].cnt;\n    return nrec;\n  };\n}\n\n;\nexport default Database;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/DatabaseLib.js"],"names":["alasql","window","Database","cnt","keyCnt","values","epoch0","regfile","datfile","arrayConstructor","constructor","objectConstructor","casc","cdes","nasc","ndes","delay","ready","log","mod","init","state","par","Utils","keytrgMissing","keytrgNull","keytrgValue","keytrgMin","keytrgMax","getKeytrg","key","val","Array","isArray","ret","lenv","length","ii","Math","max","undefined","keytrgVal","makeKeytrg","keytrg","update","setTime","load","setTimeout","Default","loadDefault","loadRegister","loadData","getKeyValues","vals","callbacks","Html","setFootnote","setProgress","regHttp","XMLHttpRequest","addEventListener","e","progressInfo","errorInfo","abortInfo","onreadystatechange","readyState","status","file","responseText","callback","shift","bind","responseType","overrideMimeType","open","setRequestHeader","send","datHttp","broadcast","console","dbInsert","makeWhere","Show","showAll","setConsole","getTime","s","nn","match","map","Number","date0","Date","UTC","slice","d","epoch","age","getTimeDiff","React","Status","setAge","raw","json","JSON","parse","len","data","makeTable","home","Path","hkeys","Object","keys","homeKeys","delayKeys","lenh","push","rcnt","extractData","dataToDb","nrec","sanityCheck","postProcess","where","getWhere","docs","getDocs","makePath","dbindex","other","table","rest","alert","updateKeyCnt","type","order","isNaN","lenk","sql","dd0","lend","jj","doc","parent","kk","kii","child","dkey","wii","whatIsIt","cp","dlen","keep","value","found","Threshold","setThresholds","dbextract","showFunc","docs0","getCntDocs","m","Matrix","popSeries","initKeyCnt","buff","cpArray","path","trash","mapKeyCnt","exportAllKeys","sortMatrixValues","makeMatrixCnt","mapKeys","addMapKeys","makeMatrix","ks","klen","getTitleDynamic","getMax","getMin","getWhereDynamic","getWhereDetail","select","plen","whereKey","parseWhere","stringify","addWhere","iwhere","getColWhere","index","step","clen","min","forEach","item","setWhere","getGroup","group","getCols","cols","getAll","dd","body","tables","alarm","getKeyCnt","object","dt","msec","abs","floor","hh","mm","ss","numberWithCommas"],"mappings":"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","sourcesContent":["//console.log(\"Loading DatabaseLib.js\");\n\nconst alasql = window.alasql;\n\nfunction Database() {\n    this.cnt=0;\n    this.keyCnt={};\n    this.values= {};\n    this.epoch0=0;\n    this.regfile=\"register\";      // register file (shows current datfile)\n    this.datfile=\"\";              // json data file\n    this.arrayConstructor=[].constructor;\n    this.objectConstructor={}.constructor;\n    this.casc=0; // key is sorted ascending\n    this.cdes=1; // key is sorted descending\n    this.nasc=2; // key is sorted ascending\n    this.ndes=3; // key is sorted descending\n    this.delay=100000;  // server-polling period in ms\n    this.ready=true;     // can we poll server or is another poll running\n    this.log=\"\";\n    this.mod=\"\";\n    this.init=function(state){\n\tvar par=\"Database\";\n\tstate.Utils.init(par,this);\n    };\n    this.keytrgMissing=-1;\n    this.keytrgNull=0;\n    this.keytrgValue=1;\n    this.keytrgMin=2;\n    this.keytrgMax=3;\n    this.getKeytrg=function(state,key,val) {\n\tif (Array.isArray(val)) {\n\t    var ret=this.keytrgMissing;\n\t    var lenv=val.length;\n            for (var ii=0;ii<lenv;ii++) {\n\t\tret=Math.max(ret,this.getKeytrg(state,key,val[ii]));\n            }\n\t    return ret;\n\t} else { \n\t    if (val === \"null\") {\n\t\treturn this.keytrgNull;\n\t    } else if (val===\"MIN(\"+key+\")\") { // this is a function\n\t\treturn this.keytrgMin;\n\t    } else if (val===\"MAX(\"+key+\")\") { // this is a function\n\t\treturn this.keytrgMax;\n\t    } else if (val === undefined) {\n\t\treturn this.keytrgMissing;\n\t    } else if (val === null) {\n\t\treturn this.keytrgNull;\n\t    } else {\n\t\treturn this.keytrgVal;\n\t    };\n\t};\n    };\n    this.makeKeytrg=function(state,key,keytrg,val) {\n\tif (keytrg === this.keytrgMissing) {\n\t    return \"missing\";\n\t} else if (keytrg === this.keytrgNull) {\n\t    return \"null\";\n\t} else if (keytrg === this.keytrgMin) {\n\t    return \"MIN(\"+key+\")\"\n\t} else if (keytrg === this.keytrgMax) {\n\t    return \"MAX(\"+key+\")\"\n\t} else {\n\t    return val;\n\t};\n    };\n    this.update=function(state) {\n\tthis.setTime(state);\n\tthis.load(state);\n\tsetTimeout(()=>function() {this.update(state)},this.delay);\n    };\n    this.load=function(state) {\n\t//console.log(\"Loading...\",this.cnt++);\n\tstate.Default.loadDefault(state,[this.loadRegister,\n\t\t\t\t\t this.loadData,\n\t\t\t\t\t //function(state,callbacks){console.log(\">>> Default:\",JSON.stringify(state.Default.trash));}\n\t\t\t\t\t]);\n    };\n    this.getKeyValues=function(state, key) {\n\t//console.log(\"Database:\",JSON.stringify(state.Database.values));\n\tvar vals=state.Database.values[key];\n\tif (vals !== undefined) {\n\t    return vals;\n\t} else {\n\t    return [];\n\t}\n    };\n    this.loadRegister=function(state, callbacks ) {\n\t//console.log(\"loadRegister\");\n\tif (this.ready) { // make sure we do not re-load if we are already loading\n\t    this.ready=false;\n\t    state.Html.setFootnote(state, \"Server-request: \"+this.regfile);\n\t    state.Html.setProgress(state, true);\n\t    var regHttp = new XMLHttpRequest();\n\t    regHttp.addEventListener(\"progress\",(e)=>state.Html.progressInfo(state,e));\n\t    //regHttp.addEventListener(\"load\",(e)=>state.Html.loadInfo(state,e));\n\t    regHttp.addEventListener(\"error\",(e)=>state.Html.errorInfo(state,e));\n\t    regHttp.addEventListener(\"abort\",(e)=>state.Html.abortInfo(state,e));\n\t    regHttp.onreadystatechange = function() {\n\t\tthis.ready=true;\n\t\tif (regHttp.readyState  === 4) {\n\t\t    if (regHttp.status  === 200) {\n\t\t\t//console.log(regHttp.responseText);\n\t\t\tvar file = regHttp.responseText;\n\t\t\tif (file !== this.datfile) { // load new data\n\t    \t\t    this.datfile=file;\n\t\t\t    var callback=callbacks.shift();\n\t\t\t    if (callback !== undefined) {\n\t\t\t\tsetTimeout(callback(state,file,callbacks),0.1);\n\t\t\t    }\n\t\t\t} else {\n\t\t\t    state.Html.setFootnote(state);\n\t\t\t    state.Html.setProgress(state, false);\n\t\t\t}\n\t\t    } else {\n\t\t\tstate.Html.setFootnote(state,\"Unable to load \"+this.regfile);\n\t\t\tstate.Html.setProgress(state, false);\n\t\t\t//state.Html.setConsole(this.regfile+\" error\");\n\t\t    }\n\t\t} else {\n\t\t    state.Html.setFootnote(state,this.regfile+\" error\");\t\t\n\t\t    state.Html.setProgress(state, false);\n\t\t};\n\t    }.bind(this);\n\t    regHttp.responseType=\"\";\n\t    regHttp.overrideMimeType(\"text/text\");\n\t    regHttp.open(\"GET\", \"data/\"+this.regfile, true);\n\t    regHttp.setRequestHeader('cache-control', 'no-cache, must-revalidate, post-check=0, pre-check=0');\n\t    regHttp.setRequestHeader('cache-control', 'max-age=0');\n\t    regHttp.setRequestHeader('expires', '0');\n\t    regHttp.setRequestHeader('expires', 'Tue, 01 Jan 1980 1:00:00 GMT');\n\t    regHttp.setRequestHeader('pragma', 'no-cache');\n\t    regHttp.send(); \n\t} else {\n\t    //state.Html.setConsole(\"\");\n\t    state.Html.setFootnote(state,\"Already waiting for reply...\");\n\t    state.Html.setProgress(state, true);\n\t};\n    }.bind(this);\n    this.loadData=function(state,file, callbacks ) {\n\t//console.log(\"loadData\");\n\tif (this.ready) { // make sure we do not re-load if we are already loading\n\t    this.ready=false;\n\t    state.Html.setFootnote(state, \"Server-request: \"+this.datfile);\n\t    state.Html.setProgress(state, true);\n\t    var datHttp = new XMLHttpRequest();\n\t    datHttp.addEventListener(\"progress\",(e)=>state.Html.progressInfo(state,e));\n\t    //datHttp.addEventListener(\"load\",(e)=>state.Html.loadInfo(state,e));\n\t    datHttp.addEventListener(\"error\",(e)=>state.Html.errorInfo(state,e));\n\t    datHttp.addEventListener(\"abort\",(e)=>state.Html.abortInfo(state,e));\n\t    datHttp.onreadystatechange = function() {\n\t\tthis.ready=true;\n\t\tif (datHttp.readyState  === 4) {\n\t\t    if (datHttp.status  === 200) {\n\t\t\t//console.log(\"Loaded \"+this.datfile);\n\t\t\t//state.Html.setConsole(\"100%\");\n\t\t\tstate.Html.broadcast(state,\"Loaded \"+this.datfile);\n\t    \t\tstate.Html.setFootnote(state,\"Creating database\");\n\t\t\tconsole.log(\"Creating database from \"+file);\n\t\t\tsetTimeout(function() {\n\t\t\t    this.dbInsert(state,datHttp.responseText);\n\t    \t\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t\t\t    setTimeout(function() {\n\t\t\t\tthis.makeWhere(state); // update where-expressions...\n\t\t\t\tstate.Show.showAll(state);\n\t\t\t\tstate.Html.setFootnote(state);\n\t\t\t\tvar callback=callbacks.shift();\n\t\t\t\tif (callback !== undefined) {\n\t\t\t\t    //console.log(\"Found callback\");\n\t\t\t    \t    setTimeout(callback(state,callbacks),0);\n\t\t\t\t} else {\n\t\t\t\t    //console.log(\"No callback\");\n\t\t\t\t}\n\t\t\t    }.bind(this),0.1);\n\t\t\t}.bind(this),0.1);\n\t\t    } else {\n\t    \t\tstate.Html.setFootnote(state,\"Unable to load \"+file);\n\t\t\tstate.Html.setProgress(state, false);\n\t\t\tstate.Html.setConsole(file+\" error\");\n\t\t    }\n\t\t}\n\t    }.bind(this);\n\t    datHttp.responseType=\"\";\n\t    datHttp.overrideMimeType(\"text/text\");\n\t    datHttp.open(\"GET\", \"data/\"+this.datfile, true);\n\t    datHttp.setRequestHeader('cache-control', 'no-cache, must-revalidate, post-check=0, pre-check=0');\n\t    datHttp.setRequestHeader('cache-control', 'max-age=0');\n\t    datHttp.setRequestHeader('expires', '0');\n\t    datHttp.setRequestHeader('expires', 'Tue, 01 Jan 1980 1:00:00 GMT');\n\t    datHttp.setRequestHeader('pragma', 'no-cache');\n\t    datHttp.send(); \n\t} else {\n\t    state.Html.setConsole(\"\");\n\t    state.Html.setFootnote(state, \"Already waiting for reply...\");\n\t    state.Html.setProgress(state, true);\n\t};\n    }.bind(this);\n    this.getTime=function(state,s) {\n\tvar nn = s.match(/\\d+/g).map(Number);\n\tvar date0 = new Date(Date.UTC(nn[0],nn[1]-1,nn[2],nn[3],nn[4],nn[5],\n\t\t\t\t      ((nn[6]||'')+'000').slice(0,3))); // modification time\n\t//console.log(\"Gettime:\",s,JSON.stringify(nn));\n\treturn date0.getTime();\n    };\n    this.setTime=function(state) {\n\tvar d = new Date();\n\tvar epoch=d.getTime();\n\t//console.log(\"Times:\",epoch,this.epoch0);\n\tif (this.epoch0 !== undefined) {\n\t    var age = epoch - this.epoch0;\n\t    this.mod=this.getTimeDiff(state,age);\n\t    if (state.React !== undefined && state.React.Status !== undefined) {\n\t\tstate.React.Status.setAge(state,this.mod);\n\t\t//console.log(\"Age:\",epoch,this.epoch0,age);\n\t    }\n\t}\n    };\n    this.dbInsert=function(state,raw) {\n\ttry {\n\t    // set home\n\t    //console.log(\"Parsing JSON.\");\n\t    var json = JSON.parse(raw);\n\t    var len=json.data.length\n\t    for (var ii=0;ii<len;ii++) {\n\t\tjson.data[ii][\"cnt\"]=ii\n\t    }\n\t    // get modified date\n\t    //console.log(\"Setting time.\");\n\t    this.epoch0=this.getTime(state,json.epoch);     // data file time\n\t    this.setTime(state);     // data file time\n\t    // make database for raw data\n\t    this.makeTable(state);\n\t    // reset key counts and range\n\t    this.cnt=0;\n\t    this.keyCnt={}; // reset key-count\n\t    // put data into databse\n\t    //console.log(\"inserting\");\n\t    var data=[];\n\t    var home=state.Path.home.val;\n\t    var hkeys=Object.keys(home);\n\t    var homeKeys=[];\n\t    var delayKeys=[];\n\t    var lenh=hkeys.length;\n            for (var ii=0;ii<lenh;ii++) {\n\t\tvar key=hkeys[ii];\n\t\tif (this.getKeytrg(state,key,home[key]) <= this.keytrgValue) {\n\t\t    homeKeys.push(key);\n\t\t} else {\n\t\t    delayKeys.push(key);\n\t\t}\n            }\n\t    var rcnt=this.extractData(state,data,{},\"\",json.data,homeKeys,home);\n\t    //console.log(\"Count:\",rcnt);\n\t    //console.log(\"Data:\",JSON.stringify(data));\n\t    this.dataToDb(state,data);\n\t    var nrec=this.sanityCheck(state)\t    // sanity check\n\t    console.log(\"Initially:\",data.length,\" Extracted:\",rcnt,' Database:',nrec);\n\t    this.postProcess(state); // update distinct Database.values[key]\n\t    if (delayKeys.length > 0) {// delayed home selection (MAX() and MIN())\n\t\tthis.makeWhere(state,delayKeys,home);\n\t\tvar where=this.getWhere(state,delayKeys);\n\t\tvar docs=this.getDocs(state,where);\n\t\tthis.dataToDb(state,docs)\n\t\tthis.postProcess(state); // update distinct Database.values[key]\n\t    };\n\t    state.Path.makePath(state); // initialise path\n\t    //console.log(\"Indexing and cleaning up.\");\n\t    this.dbindex(state,state.Path.other.table); // make indexes\n\t    this.dbindex(state,state.Path.other.rest); // make indexes\n\t    //state.Path.checkTableKeys(state);\n\t    state.Html.broadcast(state,\"Database is ready.\");\n\t    //console.log(\"Database is ready.\");\n\t} catch (e) {\n\t    alert(e);\n\t};\n    };\n    this.updateKeyCnt=function(state,key,val) {\n\tif (this.keyCnt[key] === undefined) {\n\t    this.keyCnt[key]={cnt:0,type:\"num\",order:this.nasc};\n\t}\n\tthis.keyCnt[key].cnt=(this.keyCnt[key].cnt)+1;\n\tif (this.keyCnt[key].type  === \"num\" && isNaN(val)) {\n\t    this.keyCnt[key].type=\"nan\";\n\t    this.keyCnt[key].order=this.casc;\n\t}\n    };\n    this.postProcess=function(state) { // update meta-data\n\tvar keys=Object.keys(state.Database.keyCnt);\n\tvar lenk=keys.length;\n\tfor (var ii=0;ii<lenk;ii++) {\n\t    var key=keys[ii];\n\t    // make list of values in Database for each key\n\t    state.Database.values[key]=[];\n\t    var sql=\"select DISTINCT \"+key+\" AS \"+key+\" FROM alarm\";\n\t    var dd0=alasql(sql);\n\t    var lend=dd0.length;\n\t    for (var jj=0;jj<lend;jj++) {\n\t\tvar doc=dd0[jj];\n\t\tstate.Database.values[key].push(doc[key]);\n\t    };\n\t};\n    };\n    this.extractData=function(state,data,parent,key,raw,hkeys,home) { // insert records into db (recursive)\n\tvar rcnt=0;\n\tvar kk,kii,child,dkey;\n\t//console.log(\"Processing {\",state.Utils.toString(parent),\"} '\",key,\"' (\",state.Utils.toString(raw),\")\");\n\tvar wii=this.whatIsIt(raw);\n\tif (wii  === \"Object\" && key  === \"\") {\n\t    //console.log(\"Found object (\",state.Utils.toString(parent),\")\");\n\t    child=state.Utils.cp(parent);\n\t    // loop over plain values first\n\t    for (kk in raw) {\n\t\tkii=this.whatIsIt(raw[kk]);\n\t\tif (kii  === \"value\") {\n\t\t    child[kk]=raw[kk];\n\t\t}\n\t    }\n\t    // loop over sub-objects\n\t    var nn=0;\n\t    for (kk in raw) {\n\t\tkii=this.whatIsIt(raw[kk]);\n\t\tif (kii !== \"value\") {\n\t\t    nn=nn+1;\n\t\t    rcnt=rcnt+this.extractData(state,data,child,kk,raw[kk],hkeys,home);\n\t\t}\n\t    }\n\t    if (nn  === 0) { // insert \n\t\t//console.log(\"Object was empty.\");\n\t\trcnt=rcnt+this.extractData(state,data,child,null,null,hkeys,home);\n\t    }\n\t} else if (wii  === \"Object\" && key !== \"\") {\n\t    //console.log(\"Found object key '\",key,\"' (\",state.Utils.toString(parent),\")\");\n\t    child=state.Utils.cp(parent);\n\t    // loop over plain values first\n\t    for (kk in raw) {\n\t\tchild[key]=kk;\n\t\trcnt=rcnt+this.extractData(state,data,child,\"\",raw[kk],hkeys,home);\n\t    }\n\t} else if (wii  === \"Array\") {\n\t    //console.log(\"Found array key '\",key,\"' (\",state.Utils.toString(parent),\")\");\n\t    var dlen = raw.length;\n\t    for (var ii = 0; ii < dlen; ii++) {\n\t\trcnt=rcnt+this.extractData(state,data,parent,key,raw[ii],hkeys,home);\n\t    }\n\t} else {\n\t    //console.log(\"Found key '\",key,\"' \",wii,\" (\",state.Utils.toString(parent),\")\");\n\t    var keep=true;\n\t    var doc=state.Utils.cp(parent);\n\t    if (raw !== null) {\n\t\tif (key  === \"\") {\n\t\t    doc.value=raw;\n\t\t} else {\n\t\t    doc[key]=raw;\n\t\t}\n\t    }\n\t    // check if home criteria is met\n\t    var lenh=hkeys.length;\n\t    for (var ii=0;ii<lenh;ii++) {\n\t\tvar key=hkeys[ii];\n\t\tvar vals=home[key];\n\t\tvar lenv=vals.length;\n\t\tvar found=false;\n\t\tfor (var jj=0;jj<lenv;jj++){\n\t\t    if (vals[jj]===doc[key] || (vals[jj]===\"\" && doc[key]===undefined)) {\n\t\t\tfound=true;\n\t\t    }\n\t\t}\n\t\tif (!found) {\n\t\t    keep=false;\n\t\t};\n\t    }\n\t    if (keep) {\n\t\t//console.log(\"Updating internal raw structure\",JSON.stringify(setup));\n\t\tfor (dkey in doc) {\n\t\t    var val=doc[dkey];\n\t\t    this.updateKeyCnt(state,dkey,val);\n\t\t    //// this takes too much time...\n\t\t    //if (this.values[dkey]  === undefined) {\n\t\t    //\tthis.values[dkey]=[];\n\t\t    //  };\n\t\t    ////console.log(\"Setup:\",JSON.stringify(setup));\n\t\t    ////console.log(\"Key:\",key,JSON.stringify(this.values));\n    \t\t    //if (this.values[dkey].indexOf(val)  === -1 ) { // value not in range\n\t\t    //    this.values[dkey].push(val); // add value to range\n\t\t    //};\n\t\t};\n\t\t//console.log(\">>> Inserting:\",state.Utils.toString(doc));\n\t\trcnt=rcnt+1;\n\t\tthis.cnt=this.cnt+1;\n\t\t//if (this.cnt < 10) { // debug purposes\n\t\tvar keys=state.Threshold.setThresholds(doc);\n\t\t//for (key in keys) {\n\t\t//this.updateKeyCnt(state,key,doc[key]);\n\t\t//};\n\t\tdata.push(doc);\n\t    //} else {\n\t\t//console.log(\"Ignoring:\",lenh,JSON.stringify(hkeys),JSON.stringify(home),JSON.stringify(doc));\n\t    }\n\t}\n\treturn rcnt;\n    };\n    this.dbextract=function(state,showFunc) { // extract data from db and show\n\t// extract data from db and insert into data-array\n\t// var parent={};//{test:{$exists:false}};\n\tvar docs;\n\tvar where = this.getWhere(state);\n\tvar docs0=this.getCntDocs(state,where);\n\tvar nrec= docs0[0].cnt;\n\tvar m={};\n\tstate.Matrix.cnt=nrec;\n\tif (nrec > state.Matrix.popSeries) { // only use counts...\n\t    state.Matrix.initKeyCnt(state);\n\t    var buff=[];\n\t    state.Utils.cpArray(buff,state.Path.keys.path);\n\t    state.Utils.cpArray(buff,state.Path.keys.other);\n\t    state.Utils.cpArray(buff,state.Path.trash);\n\t    state.Matrix.mapKeyCnt(state,where,nrec,buff);\n\t    //console.log(\"Setup:\",\n\t    //\t    JSON.stringify(state.Matrix.values),\n\t    //\t    JSON.stringify(state.Matrix.keyCnt));\n\t    state.Path.exportAllKeys(state); // can not export keys before we have a cnt-map\n\t    state.Matrix.sortMatrixValues(state);\n\t    //console.log(\"Count:\",JSON.stringify(docs));\n\t    // add \"undefined\" range of keys that are not present in every doc...\n\t    state.Matrix.makeMatrixCnt(state,where,state.Path.other.table,m);\n\t} else {\n\t    console.log(\"Database where:\",where);\n\t    docs=this.getDocs(state,where); // get all docs\n\t    //console.log(\">>>Extraction key (where='\",where,\"') Docs:\",docs.length);\n\t    state.Matrix.initKeyCnt(state);\n\t    state.Matrix.mapKeys(state,docs);\n\t    state.Matrix.addMapKeys(state,docs);\n\t    //console.log(\"Setup=\",JSON.stringify(setup));\n\t    //console.log (\"Maprange:\",JSON.stringify(state.Matrix.values));\n\t    // subset contains the keys being displayed in matrix...\n\t    state.Path.exportAllKeys(state); // can not export keys before we have a cnt-map\n\t    state.Matrix.sortMatrixValues(state);\n\t    // make matrix\n\t    state.Matrix.makeMatrix(state,docs,m);\n\t    //console.log (\"Matrix:\",JSON.stringify(m));\n\t}\n\tshowFunc(state,m);\n    };\n    this.dbindex=function(state,ks) { // make indexes on all keys\n\tvar s=\"\";\n\tvar klen = ks.length;\n\tfor (var ii = 0; ii < klen; ii++) {\n\t    //alasql(\"CREATE INDEX ? ON TABLE alarm.?\",ks[ii],ks[ii]);\n\t    s=s+\" \"+ks[ii];\n\t};\n\t//console.log(\"Indexes:\",s);\n    };\n    this.getTitleDynamic=function(state,key,val) {\n\tvar ret;\n\tif (state.Database.values[key] === undefined) {\n\t    ret=val;\n\t} else {\n\t    var keytrg=this.getKeytrg(state,key,val);\n\t    if (val === \"null\") {\n\t\tret=key + \" is NULL\";\n\t    } else if (keytrg === this.keytrgMax) { // this is a function\n\t\tvar parse=state.Utils.getMax(state.Database.values[key]);\n\t\tif (parse === undefined) {\n\t\t    ret=key + \" is NULL\";\n\t\t} else {\n\t\t    ret=parse;\n\t\t};\n\t    } else if (keytrg === this.keytrgMin) { // this is a function\n\t\tvar parse=state.Utils.getMin(state.Database.values[key]);\n\t\tif (parse === undefined) {\n\t\t    ret=key + \" is NULL\";\n\t\t} else {\n\t\t    ret=parse;\n\t\t};\n\t    } else {\n\t\tret=val;\n\t    };\n\t};\n\treturn ret;\n    };\n    this.getWhereDynamic=function(state,key,val) {\n\tvar ret;\n\tif (state.Database.values[key] === undefined) {\n\t    ret=state.Database.getWhereDetail(key,val);\n\t} else {\n\t    var keytrg=this.getKeytrg(state,key,val);\n\t    if (keytrg === this.keytrgMax) { // this is a function\n\t\tvar parse=state.Utils.getMax(state.Database.values[key]);\n\t\t//console.log(\"parseWhere:\",key,parse,JSON.stringify(state.Database.values[key]));\n\t\tif (parse === undefined) {\n\t\t    ret=key + \" is NULL\";\n\t\t} else {\n\t\t    ret=key + \"='\"+parse+\"'\";\n\t\t};\n\t    } else if (keytrg === this.keytrgMin) { // this is a function\n\t\tvar parse=state.Utils.getMin(state.Database.values[key]);\n\t\tif (parse === undefined) {\n\t\t    ret=key + \" is NULL\";\n\t\t} else {\n\t\t    ret=key + \"='\"+parse+\"'\";\n\t\t};\n\t    } else{\n\t\tret=state.Database.getWhereDetail(key,val);\n\t    };\n\t};\n\tconsole.log(\"GetWhere:\",key,val,ret);\n\treturn ret;\n    };\n    this.getWhereDetail=function(key,val) {\n\tif (val  === undefined ||\n\t    val  === null ||\n\t    val  === \"\") {\n\t    return key +' is NULL';\n\t} else {\n\t    return key + '=\"'+val+'\"'\n\t};\n    };\n    this.getWhere=function(state,keys,vals) {\n\tvar where=\"\";\n\t//console.log(\"Path:\",JSON.stringify(state.Path.keys));\n\tif (keys === undefined) {\n\t    keys=state.Path.keys.path;\n\t    vals=state.Path.select.val;\n\t};\n\tif (vals === undefined) {vals=[];};\n\tif (keys !== undefined) {\n\t    var plen = keys.length;\n\t    for (var ii = 0; ii < plen; ii++) {\n\t\tvar key=keys[ii];\n\t\tvar whereKey=state.Database.parseWhere(state,key,vals[key])\n\t\tconsole.log(\"Wherekey:\",ii,key,JSON.stringify(vals),\n\t\t\t    JSON.stringify(vals[key]),\"'\"+whereKey+\"'\");\n\t\tif (whereKey  === undefined ||\n\t\t    whereKey  === null ||\n\t\t    whereKey  === \"\" ) {\n\t\t    if (where !== \"\") { where = where +  ' AND ';};\n\t\t    where= where + key +' is NULL';\n\t\t} else {\n\t\t    if (where !== \"\") { where = where +  ' AND ';};\n\t\t    where=where + \"(\"+ whereKey+\")\";\n\t\t}\n\t    };\n\t    if (where !== \"\") {where=\" WHERE \"+where;}\n\t    //console.log(\"Where=|\"+where+\"|\")\n\t};\n\treturn where;\n    };\n    this.addWhere=function(iwhere,whereKey) {\n\tvar where=iwhere;\n\tif (whereKey  !== undefined &&\n\t    whereKey  !== null &&\n\t    whereKey  !== \"\" ) {\n\t    if (where !== \"\") {\n\t\twhere = where +  ' AND ' + \"(\"+ whereKey+\")\";\n\t    } else {\n\t\twhere = ' WHERE ' + \"(\"+ whereKey+\")\";\n\t    }\n\t}\n\treturn where;\n    };\n    this.getColWhere=function(key,values,index,step) {\n\tvar clen=values.length;\n\tvar where=\"\";\n        for (var kk=index;kk<Math.min(clen,index+step);kk++) {\n\t    if (where !== \"\") {where=where + \" or \";}\n\t    where=where + this.getWhereDetail(key,values[kk]);\n        };               \n\treturn where;\n    };\n    this.makeWhere=function(state,keys,vals) {\n\tif (keys === undefined) {\n\t    state.Path.keys.path.forEach(function(item,index) {this.setWhere(state,item,state.Path.select.val);}.bind(this));\n\t} else {\n\t    keys.forEach(function(item,index) {this.setWhere(state,item,vals);}.bind(this));\n\t}\n    };\n    this.setWhere=function(state,key,vals) {\n\tvar where=this.parseWhere(state,key,vals);\n\tstate.Path.where[key]=where;\n    };\n    this.parseWhere=function(state,key,vals) {\n\tvar where=\"\";\n\tif (vals === undefined) {vals=[];};\n\tvar lenv=vals.length\n\tfor (var ii=0;ii<lenv;ii++) {\n\t    var val=vals[ii]\n\t    if (where !== \"\") { where=where + \" OR \";};\n\t    where = where + state.Database.getWhereDynamic(state,key,val);\n\t    console.log(\"From getWhereDynamic:\",key,\":\",val,\":\",where);\n\t};\n\treturn where;\n    };\n    this.getGroup=function(keys) {\n\tvar group=\"\";\n\tvar plen = keys.length;\n\tfor (var ii = 0; ii < plen; ii++) {\n\t    var key=keys[ii];\n\t    if (group !== \"\") { group = group +  ',';};\n\t    group= group + key;\n\t};\n\tif (group !== \"\") {group=\" GROUP BY \"+group;}\n\treturn group;\n    };\n    this.getCols=function(keys) {\n\tvar cols=\"\";\n\tvar plen = keys.length;\n\tfor (var ii = 0; ii < plen; ii++) {\n\t    var key=keys[ii];\n\t    cols= cols + key;\n\t    if (cols !== \"\") { cols = cols +  ',';};\n\t};\n\treturn cols;\n    };\n    this.getAll=function(state) {\n\tvar cols=\"\";\n\tvar plen = state.Path.keys.other.length;\n\tfor (var ii = 0; ii < plen; ii++) {\n\t    var key=state.Path.keys.other[ii];\n\t    cols= cols + key;\n\t    if (cols !== \"\") { cols = cols +  ',';};\n\t};\n\treturn cols;\n    };\n    this.getCntDocs=function(state,where,keys) {\n\tvar sql,dd;\n\tvar body=\"count(*) AS cnt, max(level) AS maxlev, min(level) AS minlev, max(lat) AS maxlat, min(lat) AS minlat, max(lon) AS maxlon, min(lon) AS minlon FROM alarm\";\n\tif (keys  === undefined) {\n\t    sql=\"select \"+body+where;\n\t    //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\t    dd=alasql(sql);\n\t    //console.log(\"initial count:\",dd[0].cnt,JSON.stringify(dd0));\n\t    //console.log(\"Cnt:\",JSON.stringify(dd));\n\t    return dd;\n\t} else {\n\t    var cols = this.getCols(keys);\n\t    var group = this.getGroup(keys);\n\t    sql=\"select \"+cols+body+\n    \t\twhere+group;\n\t    //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\t    dd=alasql(sql);\n\t    //console.log(\"Cnt:\",JSON.stringify(dd),JSON.stringify(keys));\n\t    return dd\n\t}\n    };\n    this.getDocs=function(state,where) {\n\tvar dd;\n\tdd=alasql(\"select * FROM alarm\"+where);\n\treturn dd;\n    };\n    this.makeTable=function(state) {\n\talasql('DROP TABLE IF EXISTS alarm; CREATE TABLE alarm;');\n    };\n    this.dataToDb=function(state,data) {\n\talasql.tables.alarm.data = data;\n    };\n    this.getKeyCnt=function(state,key,where){\n\tvar sql=\"select \"+key+\",count(*) AS cnt FROM alarm\"+\n\t    where+\" GROUP BY \"+key;\n\treturn alasql(sql);\n    };\n    this.whatIsIt=function(object) { // determine object type\n\tif (object  === null) {\n\t    return \"null\";\n\t} else if (object.constructor  === this.arrayConstructor) {\n\t    return \"Array\";\n\t}\n\telse if (object.constructor  === this.objectConstructor) {\n\t    return \"Object\";\n\t}\n\telse {\n\t    return \"value\";\n\t}\n    };\n    this.getTimeDiff=function(state,dt) {\n\tvar s=\"\";\n\tif (dt  === undefined || isNaN(state,dt)) {return s;};\n\tvar msec=Math.abs(state,dt);\n\tvar dd = Math.floor(state,((state,(msec / 1000) / 60) / 60) / 24);\n\tmsec -= dd * 1000 * 60 * 60 * 24;\n\tvar hh = Math.floor(state,((state,msec / 1000) / 60) / 60);\n\tmsec -= hh * 1000 * 60 * 60;\n\tvar mm = Math.floor(state,(msec / 1000) / 60);\n\tmsec -= mm * 1000 * 60;\n\tvar ss = Math.floor(state,msec / 1000);\n\tmsec -= ss * 1000;\n\tif (dt<0) {\n\t    s=\"-\";\n\t} else if (dt > 0) {\n\t    s=\"+\";\n\t} else {\n\t    s=\"0\";\n\t}\n\tif (dd !== 0) s=s+\" \"+state.Utils.numberWithCommas(dd)+\"d\";\n\tif (hh !== 0) s=s+\" \"+hh+\"h\";\n\tif (mm !== 0) s=s+\" \"+mm+\"m\";\n\t//if (ss !== 0) s=s+\" \"+ss+\"s\";\n\treturn s;\n    }\n    this.sanityCheck=function(state) {\n\tvar sql=\"select count(*) AS cnt, max(level) AS lev FROM alarm\";\n\tvar dd0=alasql(sql);\n\tvar nrec= dd0[0].cnt;\n\treturn nrec;\n    }\n};\n\nexport default Database;\n"]},"metadata":{},"sourceType":"module"}