{"ast":null,"code":"//console.log(\"Loading PathLib.js\");\nfunction Path() {\n  this.keys = {\n    path: [],\n    other: [],\n    trash: []\n  };\n  this.other = {\n    table: [],\n    rest: []\n  };\n  this.trash = {\n    rest: [],\n    level: undefined\n  };\n  this.values = {}; // trash-values\n\n  this.select = {\n    val: {},\n    where: {},\n    cnt: {}\n  };\n  this.ignore = [\"max\", \"min\"];\n  this.type = {\n    path: {\n      ityp: -1,\n      ptyp: \"path\"\n    },\n    eye: {\n      ityp: 0,\n      ptyp: \"eye\"\n    },\n    table: {\n      ityp: 1,\n      ptyp: \"table\"\n    },\n    rest: {\n      ityp: 2,\n      ptyp: \"rest\"\n    },\n    trash: {\n      ityp: 3,\n      ptyp: \"trash\"\n    },\n    trashRest: {\n      ityp: 4,\n      ptyp: \"trashRest\"\n    },\n    row: {\n      ityp: 5,\n      ptyp: \"row\"\n    },\n    col: {\n      ityp: 6,\n      ptyp: \"col\"\n    },\n    item: {\n      ityp: 7,\n      ptyp: \"item\"\n    },\n    rotate: {\n      ityp: 8,\n      ptyp: \"rotate\"\n    }\n  };\n  this.order = undefined; // how to order data\t    \n\n  this.init = function (state) {\n    var par = \"Path\" + state.Utils.version;\n    state.Utils.init(par, this);\n  };\n\n  this.toggleSelect = function (state, key, val) {\n    var vals = state.Path.select.val[key];\n    console.log(\"toggleSelect:\", key, val, JSON.stringify(vals));\n\n    if (vals !== undefined) {\n      var vid = vals.indexOf(val);\n\n      if (vid !== -1) {\n        // remove item\n        var src = vals.splice(vid, 1);\n\n        if (vals.length == 0) {\n          // can never be totally empty...\n          vals.push(\"MAX(\" + key + \")\");\n        }\n\n        state.Path.select.val[key] = vals;\n      } else {\n        state.Path.select.val[key].push(val); // add item\n      }\n\n      state.Path.select.where[key] = this.makeWhere(state, key);\n      state.Path.select.cnt[key] = this.makeCnt(state, key);\n      console.log(\"Finally Vals:\", key, JSON.stringify(state.Path.select.val[key]));\n    }\n  };\n\n  this.makeWhere = function (state, key) {\n    var where = \"\";\n    var vals = state.Path.select.val[key];\n\n    if (vals === undefined) {\n      vals = [];\n    }\n\n    ;\n    var lenv = vals.length;\n\n    for (var ii = 0; ii < lenv; ii++) {\n      var val = vals[ii];\n\n      if (where !== \"\") {\n        where = where + \" OR \";\n      }\n\n      ;\n\n      if (val === \"null\") {\n        where = where + key + \" is NULL\";\n      } else if (val[val.length - 1] === \")\") {\n        // this is a function\n        where = where + key + \"=(SELECT \" + val + \" FROM ALARM)\";\n      } else {\n        where = where + key + \"='\" + val + \"'\";\n      }\n    }\n\n    ;\n    return where;\n  };\n\n  this.makeCnt = function (state, key) {\n    return state.Path.select.val[key].length;\n  };\n\n  this.getOrderValues = function (state, skey) {\n    if (state.Path.order === undefined) {\n      state.Path.order = {};\n    }\n\n    ;\n\n    if (state.Path.order[skey] === undefined) {\n      //console.log(\"Copying:\",JSON.stringify(Matrix.values[skey]));\n      state.Path.order[skey] = state.Utils.cp(state.Matrix.values[skey]);\n    } else {\n      var vals = state.Matrix.values[skey];\n      var plen = vals;\n\n      for (var ii = 0; ii < plen; ii++) {\n        var val = vals[ii];\n\n        if (state.Path.order[skey].indexOf(val) === -1) {\n          state.Path.order[skey].push(val);\n        }\n      }\n\n      ;\n    }\n\n    ;\n    return state.Path.order[skey];\n  };\n\n  this.bumpOrder = function (state, skey, value) {\n    console.log(\"Bump order:\", skey, value);\n    var vid = state.Path.order[skey].indexOf(value);\n\n    if (vid !== -1 && vid > 0) {\n      var src = state.Path.order[skey].splice(vid, 1); // remove from array   \n\n      state.Utils.spliceArray(state.Path.order[skey], vid - 1, 0, src);\n    }\n\n    ;\n    state.Show.showConfig(state);\n  };\n\n  this.makePath = function (state) {\n    // note that not all keys are present in the data!\n    //console.log(\"Entering makepath.\",JSON.stringify(this.keys));\n    var ii, key;\n    var pathSet = [];\n\n    if (this.keys.path === undefined) {\n      this.keys.path = [];\n    }\n\n    ;\n\n    if (this.keys.other === undefined) {\n      this.keys.other = [];\n    }\n\n    ;\n\n    if (this.keys.trash === undefined) {\n      this.keys.trash = [];\n    }\n\n    ;\n\n    if (this.keys.path.length > 0 || this.keys.other.length > 0 || this.keys.trash.length > 0) {\n      // remove duplicates\n      //console.log(\"Filtering.\");\n      var olen;\n      this.keys.path = this.keys.path.filter(this.Unique);\n      this.keys.other = this.keys.other.filter(this.Unique);\n      this.keys.trash = this.keys.trash.filter(this.Unique); //console.log(\"setup:\",JSON.stringify(setup));\n      //console.log(\"Remove invalid keys from path.\");\n      // remove invalid keys from path\n\n      var plen = this.keys.path.length;\n\n      for (ii = 0; ii < plen; ii++) {\n        key = this.keys.path[ii];\n\n        if (state.Database.keyCnt[key] === undefined) {\n          this.keys.path.splice(ii, 1);\n          ii = ii - 1;\n          plen = plen - 1;\n        }\n      } //console.log(\"Remove invalid keys from other.\");\n      // remove invalid keys from other\n\n\n      olen = this.keys.other.length;\n\n      for (ii = 0; ii < olen; ii++) {\n        key = this.keys.other[ii];\n\n        if (state.Database.keyCnt[key] === undefined) {\n          this.other.rest.splice(ii, 1);\n          ii = ii - 1;\n          olen = olen - 1;\n        }\n      } //console.log(\"Remove invalid keys from trash.\");\n      // remove invalid keys from trash\n\n\n      olen = this.keys.trash.length;\n\n      for (ii = 0; ii < olen; ii++) {\n        key = this.keys.trash[ii];\n\n        if (state.Database.keyCnt[key] === undefined) {\n          this.trash.rest.splice(ii, 1);\n          ii = ii - 1;\n          olen = olen - 1;\n        }\n      } //console.log(\"Update trash with keys.\");\n      // we already have a path, update trash with new keys\n\n\n      for (key in state.Database.keyCnt) {\n        if (this.keys.path.indexOf(key) === -1 && this.keys.other.indexOf(key) === -1 && this.keys.trash.indexOf(key) === -1) {\n          pathSet[key] = \"trash\";\n          this.select.val[key] = \"\";\n          this.select.where[key] = \"\";\n          this.select.cnt[key] = 0;\n          this.keys.trash.push(key);\n        }\n      }\n    } else {\n      // new path...\n      //console.log(\"New path\");\n      // ...define this.select.val for all keys in input data\n      for (key in state.Database.keyCnt) {\n        pathSet[key] = \"data\";\n      }\n\n      ;\n      this.keys.path = [];\n      this.other.table = [];\n      this.other.rest = [];\n      this.trash.rest = [];\n      this.trash.values = {};\n      this.select.val = {}; // no values are set so far\n\n      this.select.where = {};\n      this.select.cnt = {}; //console.log(\"Copy default trash keys.\",JSON.stringify(state.Default.trash));\n      // copy default trash keys (that are used) to trash...\n\n      if (state.Default.trash !== undefined) {\n        var tlen = state.Default.trash.length;\n\n        for (ii = 0; ii < tlen; ii++) {\n          key = state.Default.trash[ii];\n\n          if (pathSet[key] !== undefined) {\n            if (state.Utils.missing(this.keys.trash, key)) {\n              this.keys.trash.push(key);\n            }\n\n            ;\n\n            if (state.Utils.missing(this.trash.rest, key)) {\n              this.trash.rest.push(key);\n            }\n\n            ;\n            pathSet[key] = undefined; // ignore key from now on...\n          }\n        } //console.log(\"Pathset:\",JSON.stringify(pathSet),JSON.stringify(state.Default.trash));\n\n      }\n\n      ; //console.log(\"Copy default other keys.\");\n      //console.log(\"Added trash:\",JSON.stringify(setup));\n      // copy default other keys (that are used) to other...\n\n      if (state.Default.other !== undefined) {\n        var klen = state.Default.other.length;\n\n        for (ii = 0; ii < klen; ii++) {\n          key = state.Default.other[ii];\n\n          if (pathSet[key] !== undefined) {\n            // key not present in input data\n            if (state.Utils.missing(this.keys.other, key)) {\n              this.keys.other.push(key);\n            }\n\n            ;\n            pathSet[key] = \"found\";\n          }\n        }\n      } //console.log(\"Add missing keys.\");\n      // add missing keys to path\n\n\n      for (key in state.Database.keyCnt) {\n        if (state.Utils.missing(this.keys.trash, key)) {\n          if (pathSet[key] === \"data\") {\n            if (state.Utils.missing(this.keys.other, key)) {\n              this.keys.other.push(key);\n            }\n\n            ; //console.log(\"Added key:\",key);\n\n            pathSet[key] = \"added\";\n          }\n        }\n\n        ;\n      }\n\n      ; // add undefined values in values\n      // for (key in state.Database.keyCnt) {\n      //     if (state.Database.keyCnt[key].cnt<state.Database.cnt) {\n      // \tstate.Database.values[key].push(undefined);\n      //     }\n      // }\n      // // sort sub-path according to count...\n      // this.keys.other=this.keys.other.sort(function(state,a, b) {\n      //     if (state.Database.values[a]  === undefined) {\n      // \treturn -1;\n      //     } else if (state.Database.values[b]  === undefined) {\n      // \treturn 1;\n      //     } else {\n      // \treturn state.Database.values[a].length - state.Database.values[b].length\n      //     }\n      // });\n      //console.log(\"Push other keys to table and rest.\");\n\n      var glen = this.keys.other.length;\n\n      for (ii = 0; ii < glen; ii++) {\n        key = this.keys.other[ii];\n\n        if (ii < 2) {\n          this.other.table.push(key);\n        } else {\n          this.other.rest.push(key);\n        }\n      }\n    } //console.log(\"keys:\",JSON.stringify(state.Database.values));\n    //console.log(\"Completed makepath.\");\n\n  };\n\n  this.getIndex = function (state, trg) {\n    return this.keys.path.indexOf(trg);\n  };\n\n  this.exportAllKeys = function (state) {\n    // export keys from \"all\" to \"rest\"\n    this.other.table = [];\n    this.other.rest = [];\n    var jj = 0;\n    var key, ii;\n\n    if (this.keys.other !== undefined) {\n      var olen = this.keys.other.length;\n\n      for (ii = 0; ii < olen; ii++) {\n        key = this.keys.other[ii];\n\n        if (state.Matrix.keyCnt[key] !== undefined && state.Matrix.keyCnt[key] > 0) {\n          if (jj < 2) {\n            this.other.table.push(key);\n            jj = jj + 1;\n          } else {\n            this.other.rest.push(key);\n          }\n        }\n      }\n\n      ;\n    }\n\n    this.trash.rest = [];\n\n    if (this.keys.trash !== undefined) {\n      var tlen = this.keys.trash.length;\n\n      for (ii = 0; ii < tlen; ii++) {\n        key = this.keys.trash[ii];\n\n        if (this.ignore.indexOf(key) === -1) {\n          //if (state.Matrix.keyCnt[key] !== undefined) {\n          this.trash.rest.push(key);\n        }\n      }\n    }\n\n    ; //this.sortTableKeys(state);\n    //console.log(\"Exported:\",JSON.stringify(this.other));\n  }; // get X-priority, {colx,coly1,coly2...)\n\n\n  this.sortTableKeys = function (state) {\n    // make priority index\n    var arr = state.Utils.cp(this.other.table);\n    var pri = state.Layout.getPriorityIndex(state, arr); // sort the array according to priority\n\n    this.other.table = arr.sort(function (a, b) {\n      if (a === \"\") {\n        return 1;\n      } else if (b === \"\") {\n        return -1;\n      } else if (pri[a] < pri[b]) {\n        return 1;\n      } else if (pri[a] > pri[b]) {\n        return -1;\n      } else {\n        return 0;\n      }\n    }); //console.log(\"TableKeys:\",JSON.stringify(this.other.table),\n    //\t\" Pri:\",JSON.stringify(state.Layout.priority),\n    //\t\" P:\",JSON.stringify(pri));\n\n    return;\n  };\n\n  this.keyVal = function (state, key) {\n    if (this.select.val[key] !== undefined && this.select.val[key] !== null && this.select.val[key] !== \"\") {\n      return this.select.val[key];\n    } else {\n      return;\n    }\n  };\n\n  this.keyValOk = function (state, val) {\n    var ok = true;\n\n    if (this.trash.level === undefined) {// no level threshold defined, val is ok\n    } else if (state.Matrix.levCnt[val] === undefined) {\n      // val does not occur, how strange...\n      ok = false; //console.log(\"keyValOk -- no levcnt or level\",val);\n    } else {\n      // val occurs and level threshold defined...\n      ok = false;\n\n      for (var lev in state.Matrix.levCnt[val]) {\n        if (this.trash.level === null && lev !== null) {\n          ok = true;\n        } else if (this.trash.level === -1 && lev !== null && lev !== -1) {\n          ok = true;\n        } else if (this.trash.level >= 0 && lev !== null && lev !== -1 && lev < this.trash.level) {\n          ok = true;\n        } //console.log(\"Checking \",val,lev,this.trash.level,\"=>\",ok);\n\n      } //if (! ok) {\n      //\tconsole.log(\"keyValOk -- no valid level\",val,JSON.stringify(state.Matrix.levCnt[val]),this.trash.level);\n      //}\n\n    }\n\n    return ok;\n  };\n\n  this.makeOrder = function (state, typ, order) {\n    // rearrange setup according to order...\n    if (order !== undefined) {\n      var buff = [];\n\n      for (var kk = 0; kk < order.length; kk++) {\n        if (order[kk] !== \"\") {\n          var sin = this.keys[typ].indexOf(order[kk]);\n\n          if (sin !== -1) {\n            var src = this.keys[typ].splice(sin, 1); // remove from path\n\n            buff = buff.concat(src);\n          }\n        }\n      }\n\n      state.Utils.spliceArray(this.keys[typ], 0, 0, buff);\n    }\n  };\n\n  this.moveKey = function (state, styp, skey, ttyp, tid) {\n    var sid = this.keys[styp].indexOf(skey);\n\n    if (sid !== -1) {\n      var src = this.keys[styp].splice(sid, 1); // remove from path\n\n      if (tid === undefined || tid === -1) {\n        this.keys[ttyp] = this.keys[ttyp].concat(src); // last position\n      } else {\n        state.Utils.spliceArray(this.keys[ttyp], tid, 0, src);\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveKeys = function (state, styp, skeys, ttyp, tid) {\n    var len = skeys.length;\n\n    for (var ss = 0; ss < len; ss++) {\n      var skey = skeys[ss];\n      var sid = this.keys[styp].indexOf(skey);\n\n      if (sid !== -1) {\n        var src = this.keys[styp].splice(sid, 1); // remove from path\n\n        if (tid === undefined || tid === -1) {\n          this.keys[ttyp] = this.keys[ttyp].concat(src); // last position\n        } else {\n          state.Utils.spliceArray(this.keys[ttyp], tid, 0, src);\n        }\n      }\n    }\n  };\n\n  this.swapTableKey = function (state, skey, tkey) {\n    var sid = this.other.table.indexOf(skey);\n    var tid = this.other.table.indexOf(tkey);\n\n    if (tid !== sid && this.other.table.length > 1) {\n      var tin2 = this.keys.other.indexOf(this.other.table[1]);\n      var tkey2 = this.keys.other.splice(tin2, 1); // remove from array\n\n      state.Utils.spliceArray(this.keys.other, 0, 0, tkey2); //console.log(\"Swapped:\",tkey2,tkey,JSON.stringify(this.keys.other));\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.delTableKey = function (state, key) {\n    var secondkey;\n    var secondind;\n    var sid = this.keys.other.indexOf(key);\n\n    if (sid !== -1) {\n      var sin = this.other.table.indexOf(key);\n      var save = sin === 0;\n\n      if (save) {\n        secondkey = this.other.table[1];\n        secondind = this.pullKey(state, \"other\", secondkey);\n      }\n\n      this.pullKey(state, \"other\", key);\n\n      if (save && secondind !== undefined && secondind !== -1) {\n        this.pushKey(state, \"other\", secondkey, secondind);\n      }\n\n      return sin;\n    }\n  };\n\n  this.moveTableKey = function (state, skey, ttyp, tid) {\n    var sid = this.keys.other.indexOf(skey);\n\n    if (sid !== -1) {\n      //var sin=\n      this.delTableKey(state, skey);\n\n      if (tid === undefined || tid === -1) {\n        this.keys[ttyp] = this.keys[ttyp].concat(skey); // last position\n      } else {\n        state.Utils.spliceArray(this.keys[ttyp], tid, 0, skey);\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveKey2Table = function (state, styp, skey, tkey) {\n    //console.log(\"MoveKey2Table:\",JSON.stringify(this.keys));\n    var tid = this.keys.other.indexOf(tkey);\n    var sid = this.keys[styp].indexOf(skey);\n\n    if (tid !== -1 && sid !== -1 && skey !== tkey) {\n      // exists and is not the same\n      this.keys[styp][sid] = tkey;\n      this.keys.other[tid] = skey;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveTrash2Table = function (state, tkey) {\n    var secondkey;\n    var secondind;\n    var tid = this.other.table.indexOf(tkey);\n\n    if (tid !== -1) {\n      var save = tid === 0;\n\n      if (save) {\n        secondkey = this.other.table[1];\n        secondind = this.pullKey(state, \"other\", secondkey);\n      }\n\n      ;\n      var tin = this.keys.other.indexOf(tkey);\n      this.moveTrash(state, \"other\", tin + 1);\n\n      if (save && secondind !== undefined && secondind !== -1) {\n        this.pushKey(state, \"other\", secondkey, secondind);\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveTrash = function (state, ttyp, tin) {\n    state.Utils.spliceArray(this.keys[ttyp], tin, 0, this.keys.trash);\n    this.keys.trash = [];\n  };\n\n  this.moveAllKey = function (state, styp, skey, ttyp, tid) {\n    var lenp = this.keys[styp].length;\n    var sid = this.keys[styp].indexOf(skey);\n\n    if (sid !== -1) {\n      var src = this.keys[styp].splice(sid, lenp - sid);\n      state.Utils.spliceArray(this.keys[ttyp], tid, 0, src);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveAllFirst = function (state, ttyp, tin) {\n    var tlen = this.keys[ttyp].length;\n    var src = this.keys[ttyp].splice(tin, tlen - tin);\n    state.Utils.spliceArray(this.keys[ttyp], 0, 0, src);\n  };\n\n  this.filterKeys = function (state, arr) {\n    var out = [];\n    var alen = arr.length;\n\n    for (var ii = 0; ii < alen; ii++) {\n      var val = arr[ii];\n\n      if (this.keyValOk(state, val)) {\n        out.push(val);\n      }\n    } //console.log(\"CheckOk \",JSON.stringify(arr),\"->\",JSON.stringify(out));\n\n\n    return out;\n  };\n\n  this.pullArrayKey = function (state, array, key) {\n    var sin = array.indexOf(key);\n\n    if (sin !== -1) {\n      //var src=\n      array.splice(sin, 1); // remove from path\n    }\n\n    ;\n    return sin;\n  }; //////////////////////////////// COL/ROW FUNCTIONS ///////////////////////\n\n\n  this.getColKey = function (state) {\n    var arr = state.Utils.cp(this.other.table);\n    var pri = state.Layout.getPriorityIndex(state, arr);\n\n    if (state.Show.getLayoutMode(state) === state.Show.code.layout.Map) {\n      return \"_lon\";\n    } else if (pri[this.other.table[0]] >= pri[this.other.table[1]]) {\n      return this.other.table[0];\n    } else {\n      return this.other.table[1];\n    }\n  };\n\n  this.getRowKey = function (state) {\n    var arr = state.Utils.cp(this.other.table);\n    var pri = state.Layout.getPriorityIndex(state, arr);\n\n    if (state.Show.getLayoutMode(state) === state.Show.code.layout.Map) {\n      return \"_lat\";\n    } else if (pri[this.other.table[0]] >= pri[this.other.table[1]]) {\n      return this.other.table[1];\n    } else {\n      return this.other.table[0];\n    }\n  };\n\n  this.pushKey = function (state, typ, key, ind) {\n    if (key !== undefined && key !== \"\") {\n      state.Utils.spliceArray(this.keys[typ], ind, 0, key);\n    }\n  };\n\n  this.pullKey = function (state, typ, key) {\n    var sin = this.keys[typ].indexOf(key);\n\n    if (sin !== -1) {\n      var src = this.keys[typ].splice(sin, 1); // remove from path\n\n      if (src !== key) {\n        console.log(\"System error:\", src, key);\n      }\n\n      return sin;\n    }\n\n    ;\n  };\n\n  this.pushColKey = function (state, key) {\n    if (key !== undefined && key !== \"\") {\n      state.Utils.spliceArray(this.keys.other, 0, 0, key);\n    }\n  };\n\n  this.pushRowKey = function (state, key) {\n    if (key !== undefined && key !== \"\") {\n      state.Utils.spliceArray(this.keys.other, 1, 0, key);\n    }\n  };\n\n  this.checkNewPath = function (state, styp, skey) {\n    // check if values are defined for path\n    var ok, ii;\n    var sid = this.keys.path.indexOf(skey);\n\n    if (styp === this.type.table.ptyp) {\n      ok = true;\n      var lent = this.other.table.length - 1;\n\n      if (sid !== undefined) {\n        lent = sid + 1;\n      }\n\n      ;\n\n      for (ii = 0; ii <= lent; ii++) {\n        var key = this.other.table[ii];\n\n        if (this.keyVal(state, key) === undefined) {\n          ok = false;\n        }\n      }\n    } else if (styp === this.type.rest.ptyp) {\n      ok = this.checkNewPath(state, this.type.table.ptyp);\n\n      if (ok) {\n        var lenr = this.other.rest.length - 1;\n\n        if (sid !== undefined) {\n          lenr = sid + 1;\n        }\n\n        ;\n\n        for (ii = 0; ii <= lenr; ii++) {\n          key = this.other.rest[ii];\n\n          if (this.keyVal(state, key) === undefined) {\n            ok = false;\n          }\n        }\n      }\n    }\n\n    return ok;\n  }; //values[key]=values[key].filter(this.Unique);\n\n\n  this.Unique = function (value, index, self) {\n    return self.indexOf(value) === index;\n  };\n}\n\n;\nexport default Path;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/PathLib.js"],"names":["Path","keys","path","other","trash","table","rest","level","undefined","values","select","val","where","cnt","ignore","type","ityp","ptyp","eye","trashRest","row","col","item","rotate","order","init","state","par","Utils","version","toggleSelect","key","vals","console","log","JSON","stringify","vid","indexOf","src","splice","length","push","makeWhere","makeCnt","lenv","ii","getOrderValues","skey","cp","Matrix","plen","bumpOrder","value","spliceArray","Show","showConfig","makePath","pathSet","olen","filter","Unique","Database","keyCnt","Default","tlen","missing","klen","glen","getIndex","trg","exportAllKeys","jj","sortTableKeys","arr","pri","Layout","getPriorityIndex","sort","a","b","keyVal","keyValOk","ok","levCnt","lev","makeOrder","typ","buff","kk","sin","concat","moveKey","styp","ttyp","tid","sid","moveKeys","skeys","len","ss","swapTableKey","tkey","tin2","tkey2","delTableKey","secondkey","secondind","save","pullKey","pushKey","moveTableKey","moveKey2Table","moveTrash2Table","tin","moveTrash","moveAllKey","lenp","moveAllFirst","filterKeys","out","alen","pullArrayKey","array","getColKey","getLayoutMode","code","layout","Map","getRowKey","ind","pushColKey","pushRowKey","checkNewPath","lent","lenr","index","self"],"mappings":"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","sourcesContent":["//console.log(\"Loading PathLib.js\");\n\nfunction Path() {\n    this.keys={path:[],\n\t       other:[],\n\t       trash:[]\n\t      };\n    this.other={table:[],\n\t\trest:[]\n\t       };\n    this.trash={rest:[],\n\t\tlevel:undefined\n\t       };\n    this.values={}; // trash-values\n    this.select={val:{},where:{},cnt:{}};\n    this.ignore=[\"max\",\"min\"];\n    this.type = {\n\tpath :      {ityp:-1,ptyp:\"path\"},\n\teye :       {ityp:0, ptyp:\"eye\"},\n\ttable :     {ityp:1, ptyp:\"table\"},\n\trest :      {ityp:2, ptyp:\"rest\"},\n\ttrash :     {ityp:3, ptyp:\"trash\"},\n\ttrashRest : {ityp:4, ptyp:\"trashRest\"},\n\trow :       {ityp:5, ptyp:\"row\"},\n\tcol :       {ityp:6, ptyp:\"col\"},\n\titem :      {ityp:7, ptyp:\"item\"},\n\trotate :    {ityp:8, ptyp:\"rotate\"}\n    };\n    this.order=undefined; // how to order data\t    \n    this.init=function(state){\n\tvar par=\"Path\"+state.Utils.version;\n\tstate.Utils.init(par,this);\n    };\n    this.toggleSelect=function(state,key,val) {\n\tvar vals=state.Path.select.val[key];\n\tconsole.log(\"toggleSelect:\",key,val,JSON.stringify(vals));\n\tif (vals !== undefined) {\n\t    var vid=vals.indexOf(val)\n\t    if (vid !== -1) {  // remove item\n\t\tvar src=vals.splice(vid,1);\n\t\tif (vals.length==0) { // can never be totally empty...\n\t\t    vals.push(\"MAX(\"+key+\")\");\n\t\t}\n\t\tstate.Path.select.val[key]=vals;\n\t    } else {\n\t\tstate.Path.select.val[key].push(val); // add item\n\t    }\n\t    state.Path.select.where[key]=this.makeWhere(state,key);\n\t    state.Path.select.cnt[key]=this.makeCnt(state,key);\n\t    console.log(\"Finally Vals:\",key,JSON.stringify(state.Path.select.val[key]));\n\t}\n    };\n    this.makeWhere=function(state,key) {\n\tvar where=\"\";\n\tvar vals=state.Path.select.val[key];\n\tif (vals === undefined) {vals=[];};\n\tvar lenv=vals.length\n\tfor (var ii=0;ii<lenv;ii++) {\n\t    var val=vals[ii]\n\t    if (where !== \"\") { where=where + \" OR \";};\n\t    if (val === \"null\") {\n\t\twhere = where + key + \" is NULL\";\n\t    } else if (val[val.length-1]===\")\") { // this is a function\n\t\twhere = where + key + \"=(SELECT \"+val+\" FROM ALARM)\";\n\t    } else {\n\t\twhere = where + key + \"='\"+val+\"'\";\n\t    }\n\t};\n\treturn where;\n    };\n    this.makeCnt=function(state,key) {\n\treturn state.Path.select.val[key].length;\n    };\n    this.getOrderValues=function(state,skey){\n        if (state.Path.order === undefined) {state.Path.order={};};\n        if (state.Path.order[skey] === undefined) {\n            //console.log(\"Copying:\",JSON.stringify(Matrix.values[skey]));\n            state.Path.order[skey]=state.Utils.cp(state.Matrix.values[skey]);\n        } else {\n\t    var vals = state.Matrix.values[skey];\n\t    var plen = vals;\n\t    for (var ii = 0; ii < plen; ii++) {\n\t\tvar val=vals[ii];\n\t\tif (state.Path.order[skey].indexOf(val)===-1) {\n\t\t    state.Path.order[skey].push(val);\n\t\t}\n\t    };\n\t};\n\treturn state.Path.order[skey];\n    };\n    this.bumpOrder=function(state,skey,value) {\n\tconsole.log(\"Bump order:\",skey,value);\n\tvar vid=state.Path.order[skey].indexOf(value);\n\tif (vid !== -1 && vid > 0) {\n\t    var src=state.Path.order[skey].splice(vid, 1); // remove from array   \n\t    state.Utils.spliceArray(state.Path.order[skey],vid-1,0,src);\n\t};\n\tstate.Show.showConfig(state);\n    };\n    this.makePath=function(state) { // note that not all keys are present in the data!\n\t//console.log(\"Entering makepath.\",JSON.stringify(this.keys));\n\tvar ii,key;\n\tvar pathSet=[];\n\tif (this.keys.path === undefined) {this.keys.path=[];};\n\tif (this.keys.other === undefined) {this.keys.other=[];};\n\tif (this.keys.trash === undefined) {this.keys.trash=[];};\n\tif (this.keys.path.length > 0 ||\n\t    this.keys.other.length > 0 ||\n\t    this.keys.trash.length > 0) {\n\t    // remove duplicates\n\t    //console.log(\"Filtering.\");\n\t    var olen;\n\t    this.keys.path=this.keys.path.filter(this.Unique);\n\t    this.keys.other=this.keys.other.filter(this.Unique);\n\t    this.keys.trash=this.keys.trash.filter(this.Unique);\n\t    //console.log(\"setup:\",JSON.stringify(setup));\n\t    //console.log(\"Remove invalid keys from path.\");\n\t    // remove invalid keys from path\n\t    var plen = this.keys.path.length;\n\t    for (ii = 0; ii < plen; ii++) {\n\t\tkey=this.keys.path[ii];\n\t\tif (state.Database.keyCnt[key]  === undefined) {\n\t\t    this.keys.path.splice(ii, 1);\n\t\t    ii=ii-1;\n\t\t    plen=plen-1;\n\t\t}\n\t    }\n\t    //console.log(\"Remove invalid keys from other.\");\n\t    // remove invalid keys from other\n\t    olen = this.keys.other.length;\n\t    for (ii = 0; ii < olen; ii++) {\n\t\tkey=this.keys.other[ii];\n\t\tif (state.Database.keyCnt[key]  === undefined) {\n\t\t    this.other.rest.splice(ii, 1);\n\t\t    ii=ii-1;\n\t\t    olen=olen-1;\n\t\t}\n\t    }\n\t    //console.log(\"Remove invalid keys from trash.\");\n\t    // remove invalid keys from trash\n\t    olen = this.keys.trash.length;\n\t    for (ii = 0; ii < olen; ii++) {\n\t\tkey=this.keys.trash[ii];\n\t\tif (state.Database.keyCnt[key]  === undefined) {\n\t\t    this.trash.rest.splice(ii, 1);\n\t\t    ii=ii-1;\n\t\t    olen=olen-1;\n\t\t}\n\t    }\n\t    //console.log(\"Update trash with keys.\");\n\t    // we already have a path, update trash with new keys\n\t    for (key in state.Database.keyCnt) {\n\t\tif (this.keys.path.indexOf(key)  === -1 && \n\t\t    this.keys.other.indexOf(key)  === -1 && \n\t\t    this.keys.trash.indexOf(key)  === -1) {\n\t\t    pathSet[key]=\"trash\";\n\t\t    this.select.val[key]=\"\";\n\t\t    this.select.where[key]=\"\";\n\t\t    this.select.cnt[key]=0;\n\t\t    this.keys.trash.push(key);\n\t\t}\n\t    }\n\t} else {\n\t    // new path...\n\t    //console.log(\"New path\");\n\t    // ...define this.select.val for all keys in input data\n\t    for (key in state.Database.keyCnt) {\n\t\tpathSet[key]=\"data\";\n\t    };\n\t    this.keys.path=[];\n\t    this.other.table=[]\n\t    this.other.rest=[]\n\t    this.trash.rest=[];\n\t    this.trash.values={};\n\t    this.select.val={}; // no values are set so far\n\t    this.select.where={}\n\t    this.select.cnt={}\n\t    //console.log(\"Copy default trash keys.\",JSON.stringify(state.Default.trash));\n\t    // copy default trash keys (that are used) to trash...\n\t    if (state.Default.trash !== undefined) {\n\t\tvar tlen = state.Default.trash.length;\n\t\tfor (ii = 0; ii < tlen; ii++) {\n\t\t    key=state.Default.trash[ii];\n\t\t    if (pathSet[key] !== undefined) {\n\t\t\tif (state.Utils.missing(this.keys.trash,key)) { \n\t\t\t    this.keys.trash.push(key);\n\t\t\t};\n\t\t\tif (state.Utils.missing(this.trash.rest,key)) {\n\t\t\t    this.trash.rest.push(key);\n\t\t\t};\n\t\t\tpathSet[key]=undefined; // ignore key from now on...\n\t\t    }\n\t\t}\n\t\t//console.log(\"Pathset:\",JSON.stringify(pathSet),JSON.stringify(state.Default.trash));\n\t    };\n\t    //console.log(\"Copy default other keys.\");\n\t    //console.log(\"Added trash:\",JSON.stringify(setup));\n\t    // copy default other keys (that are used) to other...\n\t    if (state.Default.other !== undefined) {\n\t\tvar klen = state.Default.other.length;\n\t\tfor (ii = 0; ii < klen; ii++) {\n\t\t    key=state.Default.other[ii];\n\t\t    if (pathSet[key] !== undefined) { // key not present in input data\n\t\t\tif (state.Utils.missing(this.keys.other,key)) {\n\t\t\t    this.keys.other.push(key);\n\t\t\t};\n\t\t\tpathSet[key]=\"found\";\n\t\t    }\n\t\t}\n\t    }\n\t    //console.log(\"Add missing keys.\");\n\t    // add missing keys to path\n\t    for (key in state.Database.keyCnt) {\n\t\tif (state.Utils.missing(this.keys.trash,key)) {\n\t\t    if (pathSet[key] === \"data\") {\n\t\t\tif (state.Utils.missing(this.keys.other,key)) {\n\t\t\t    this.keys.other.push(key);\n\t\t\t};\n\t\t\t//console.log(\"Added key:\",key);\n\t\t\tpathSet[key] = \"added\";\n\t\t    }\n\t\t};\n\t    };\n\t    // add undefined values in values\n\t    // for (key in state.Database.keyCnt) {\n\t    //     if (state.Database.keyCnt[key].cnt<state.Database.cnt) {\n\t    // \tstate.Database.values[key].push(undefined);\n\t    //     }\n\t    // }\n\t    // // sort sub-path according to count...\n\t    // this.keys.other=this.keys.other.sort(function(state,a, b) {\n\t    //     if (state.Database.values[a]  === undefined) {\n\t    // \treturn -1;\n\t    //     } else if (state.Database.values[b]  === undefined) {\n\t    // \treturn 1;\n\t    //     } else {\n\t    // \treturn state.Database.values[a].length - state.Database.values[b].length\n\t    //     }\n\t    // });\n\t    //console.log(\"Push other keys to table and rest.\");\n\t    var glen = this.keys.other.length;\n\t    for (ii = 0; ii < glen; ii++) {\n\t\tkey=this.keys.other[ii];\n\t\tif (ii<2) {\n\t\t    this.other.table.push(key);\n\t\t} else {\n\t\t    this.other.rest.push(key);\n\t\t}\n\t    }\n\t}\n\t//console.log(\"keys:\",JSON.stringify(state.Database.values));\n\t//console.log(\"Completed makepath.\");\n    };\n    this.getIndex=function(state,trg) {\n\treturn this.keys.path.indexOf(trg);\n    };\n    this.exportAllKeys=function(state) { // export keys from \"all\" to \"rest\"\n\tthis.other.table=[];\n\tthis.other.rest=[];\n\tvar jj=0;\n\tvar key,ii;\n\tif (this.keys.other !== undefined) {\n\t    var olen=this.keys.other.length;\n\t    for (ii=0;ii<olen;ii++) {\n\t\tkey=this.keys.other[ii];\n\t\tif (state.Matrix.keyCnt[key] !== undefined &&\n\t\t    state.Matrix.keyCnt[key] > 0) {\n\t\t    if (jj < 2) {\n\t\t\tthis.other.table.push(key);\n\t\t\tjj=jj+1;\n\t\t    } else {\n\t\t\tthis.other.rest.push(key);\n\t\t    }\n\t\t}\n\t    };\n\t}\n\tthis.trash.rest=[];\n\tif (this.keys.trash !== undefined) {\n\t    var tlen=this.keys.trash.length;\n\t    for (ii=0;ii<tlen;ii++) {\n\t\tkey=this.keys.trash[ii];\n\t\tif (this.ignore.indexOf(key) === -1) {\n\t\t    //if (state.Matrix.keyCnt[key] !== undefined) {\n\t\t    this.trash.rest.push(key);\n\t\t}\n\t    }\n\t};\n\t//this.sortTableKeys(state);\n\t//console.log(\"Exported:\",JSON.stringify(this.other));\n    }\n\n    // get X-priority, {colx,coly1,coly2...)\n    this.sortTableKeys=function(state){\n\t// make priority index\n\tvar arr=state.Utils.cp(this.other.table);\n\tvar pri=state.Layout.getPriorityIndex(state,arr);\n\t// sort the array according to priority\n\tthis.other.table=arr.sort(function(a,b){\n\t    if (a  === \"\") { \n\t\treturn 1;\n\t    } else if (b  === \"\") {\n\t\treturn -1;\n\t    } else if (pri[a]<pri[b]) { \n\t\treturn 1;\n\t    } else if (pri[a]>pri[b]) {\n\t\treturn -1;\n\t    } else {\n\t\treturn 0;\n\t    }\n\t});\n\t//console.log(\"TableKeys:\",JSON.stringify(this.other.table),\n\t//\t\" Pri:\",JSON.stringify(state.Layout.priority),\n\t//\t\" P:\",JSON.stringify(pri));\n\treturn\n    };\n    this.keyVal=function(state,key) {\n\tif (this.select.val[key] !== undefined &&\n\t    this.select.val[key] !== null &&\n\t    this.select.val[key] !== \"\") {\n\t    return this.select.val[key];\n\t} else {\n\t    return;\n\t}\n    }    \n    \n    this.keyValOk=function(state,val) {\n\tvar ok=true;\n\tif (this.trash.level === undefined) { // no level threshold defined, val is ok\n\t} else if (state.Matrix.levCnt[val]  === undefined) { // val does not occur, how strange...\n\t    ok=false;\n\t    //console.log(\"keyValOk -- no levcnt or level\",val);\n\t} else { // val occurs and level threshold defined...\n\t    ok=false;\n\t    for (var lev in state.Matrix.levCnt[val]) {\n\t\tif (this.trash.level  === null && lev !== null) {\n\t\t    ok=true;\n\t\t} else if (this.trash.level  === -1 && (lev !== null && lev !== -1)) {\n\t\t    ok=true;\n\t\t} else if (this.trash.level >= 0 && (lev !== null && lev !== -1 && lev < this.trash.level )) {\n\t\t    ok=true;\n\t\t}\n\t\t//console.log(\"Checking \",val,lev,this.trash.level,\"=>\",ok);\n\t    }\n\t    //if (! ok) {\n\t    //\tconsole.log(\"keyValOk -- no valid level\",val,JSON.stringify(state.Matrix.levCnt[val]),this.trash.level);\n\t    //}\n\t}\n\treturn ok;\n    };\n    this.makeOrder=function(state,typ,order) { // rearrange setup according to order...\n\tif (order !== undefined) {\n\t    var buff=[];\n\t    for (var kk=0; kk < order.length ;kk++){\n\t\tif (order[kk] !== \"\") {\n\t\t    var sin=this.keys[typ].indexOf(order[kk]);\n\t\t    if (sin !== -1) {\n\t\t\tvar src=this.keys[typ].splice(sin, 1); // remove from path\n\t\t\tbuff=buff.concat(src);\n\t\t    }\n\t\t}\n\t    }\n\t    state.Utils.spliceArray(this.keys[typ],0,0,buff);\n\t}\n    };\n    this.moveKey=function(state,styp,skey,ttyp,tid) {\n\tvar sid=this.keys[styp].indexOf(skey);\n\tif (sid !== -1) {\n\t    var src=this.keys[styp].splice(sid, 1);    // remove from path\n\t    if (tid  === undefined || tid  === -1) {\n\t\tthis.keys[ttyp]=this.keys[ttyp].concat(src);         // last position\n\t    } else {\n\t\tstate.Utils.spliceArray(this.keys[ttyp],tid, 0, src);\n\t    }\n\t    return true;\n\t}else {\n\t    return false;\n\t}\n    };\n    this.moveKeys=function(state,styp,skeys,ttyp,tid) {\n\tvar len=skeys.length\n\tfor (var ss=0;ss<len;ss++) {\n\t    var skey=skeys[ss];\n\t    var sid=this.keys[styp].indexOf(skey);\n\t    if (sid !== -1) {\n\t\tvar src=this.keys[styp].splice(sid, 1);    // remove from path\n\t\tif (tid  === undefined || tid  === -1) {\n\t\t    this.keys[ttyp]=this.keys[ttyp].concat(src);         // last position\n\t\t} else {\n\t\t    state.Utils.spliceArray(this.keys[ttyp],tid, 0, src);\n\t\t}\n\t    }\n\t}\n    };\n    this.swapTableKey=function(state,skey,tkey) {\n\tvar sid=this.other.table.indexOf(skey);\n\tvar tid=this.other.table.indexOf(tkey);\n\tif (tid !== sid && this.other.table.length > 1) {\n\t    var tin2=this.keys.other.indexOf(this.other.table[1]);\n\t    var tkey2=this.keys.other.splice(tin2, 1);    // remove from array\n\t    state.Utils.spliceArray(this.keys.other,0, 0, tkey2);\n\t    //console.log(\"Swapped:\",tkey2,tkey,JSON.stringify(this.keys.other));\n\t    return true;\n\t} else {\n\t    return false;\n\t}\n    };\n    this.delTableKey=function(state,key) {\n\tvar secondkey;\n\tvar secondind;\n\tvar sid=this.keys.other.indexOf(key);\n\tif (sid !== -1) {\n\t    var sin=this.other.table.indexOf(key);\n\t    var save=(sin  === 0);\n\t    if (save) {\n\t\tsecondkey=this.other.table[1];\n\t\tsecondind=this.pullKey(state,\"other\",secondkey);\n\t    }\n\t    this.pullKey(state,\"other\",key);\n\t    if (save && secondind !== undefined && secondind !== -1) {\n\t\tthis.pushKey(state,\"other\",secondkey,secondind);\n\t    }\n\t    return sin;\n\t}\n    };\n    this.moveTableKey=function(state,skey,ttyp,tid) {\n\tvar sid=this.keys.other.indexOf(skey);\n\tif (sid !== -1) {\n\t    //var sin=\n\t    this.delTableKey(state,skey);\n\t    if (tid  === undefined || tid  === -1) {\n\t\tthis.keys[ttyp]=this.keys[ttyp].concat(skey);         // last position\n\t    } else {\n\t\tstate.Utils.spliceArray(this.keys[ttyp],tid, 0, skey);\n\t    }\n\t    return true;\n\t}else {\n\t    return false;\n\t}\n    };\n    this.moveKey2Table=function(state,styp,skey,tkey) {\n\t//console.log(\"MoveKey2Table:\",JSON.stringify(this.keys));\n\tvar tid=this.keys.other.indexOf(tkey);\n\tvar sid=this.keys[styp].indexOf(skey)\n\tif (tid !== -1 && sid !== -1 && skey !== tkey) { // exists and is not the same\n\t    this.keys[styp][sid]=tkey\n\t    this.keys.other[tid]=skey\n\t    return true;\n\t} else {\n\t    return false;\n\t}\n    };\n    this.moveTrash2Table=function(state,tkey) {\n\tvar secondkey;\n\tvar secondind;\n\tvar tid=this.other.table.indexOf(tkey);\n\tif (tid !== -1) {\n\t    var save=(tid  === 0);\n\t    if (save) {\n\t\tsecondkey=this.other.table[1];\n\t\tsecondind=this.pullKey(state,\"other\",secondkey);\n\t    };\n\t    var tin=this.keys.other.indexOf(tkey);\n\t    this.moveTrash(state,\"other\",tin+1);\n\t    if (save && secondind !== undefined && secondind !== -1) {\n\t\tthis.pushKey(state,\"other\",secondkey,secondind);\n\t    }\n\t    return true;\n\t} else {\n\t    return false;\n\t}\n    };\n    this.moveTrash=function(state,ttyp,tin) {\n\tstate.Utils.spliceArray(this.keys[ttyp],tin, 0, this.keys.trash);\n\tthis.keys.trash=[];\n    };\n    this.moveAllKey=function(state,styp,skey,ttyp,tid) {\n\tvar lenp=this.keys[styp].length;\n\tvar sid=this.keys[styp].indexOf(skey);\n\tif (sid !== -1) {\n\t    var src=this.keys[styp].splice(sid,lenp-sid);\n\t    state.Utils.spliceArray(this.keys[ttyp],tid,0,src);\n\t    return true;\n\t} else {\n\t    return false;\n\t}\n    };\n    this.moveAllFirst=function(state,ttyp,tin) {\n\tvar tlen=this.keys[ttyp].length;\n\tvar src=this.keys[ttyp].splice(tin,tlen-tin);\n\tstate.Utils.spliceArray(this.keys[ttyp],0, 0,src);\n    };\n    this.filterKeys=function(state,arr) {\n\tvar out=[];\n\tvar alen=arr.length;\n\tfor(var ii=0; ii<alen; ii++) {\n\t    var val=arr[ii];\n\t    if (this.keyValOk(state,val)) {\n\t\tout.push(val);\n\t    }\n\t}\n\t//console.log(\"CheckOk \",JSON.stringify(arr),\"->\",JSON.stringify(out));\n\treturn out;\n    };\n    this.pullArrayKey=function(state,array,key) {\n\tvar sin=array.indexOf(key);\n\tif (sin !== -1) {\n\t    //var src=\n\t    array.splice(sin, 1);    // remove from path\n\t};\n\treturn sin;\n    };\n    //////////////////////////////// COL/ROW FUNCTIONS ///////////////////////\n    this.getColKey=function(state) {\n\tvar arr=state.Utils.cp(this.other.table);\n\tvar pri=state.Layout.getPriorityIndex(state,arr);\n\tif (state.Show.getLayoutMode(state) === state.Show.code.layout.Map) {\n\t    return \"_lon\";\n\t} else if (pri[this.other.table[0]] >= pri[this.other.table[1]]) {\n\t    return this.other.table[0];\n\t} else {\n\t    return this.other.table[1];\n\t}\n    };\n    this.getRowKey=function(state) {\n\tvar arr=state.Utils.cp(this.other.table);\n\tvar pri=state.Layout.getPriorityIndex(state,arr);\n\tif (state.Show.getLayoutMode(state) === state.Show.code.layout.Map) {\n\t    return \"_lat\";\n\t} else if (pri[this.other.table[0]] >= pri[this.other.table[1]]) {\n\t    return this.other.table[1];\n\t} else {\n\t    return this.other.table[0];\n\t}\n    };\n    this.pushKey=function(state,typ,key,ind) {\n\tif (key !== undefined && key !== \"\") {\n\t    state.Utils.spliceArray(this.keys[typ], ind, 0, key);\n\t}\n    };\n    this.pullKey=function(state,typ,key) {\n\tvar sin=this.keys[typ].indexOf(key);\n\tif (sin !== -1) {\n\t    var src=this.keys[typ].splice(sin, 1);    // remove from path\n\t    if (src !== key) {console.log(\"System error:\",src,key);}\n\t    return sin;\n\t};\n    };\n    this.pushColKey=function(state,key) {\n\tif (key !== undefined && key !== \"\") {\n\t    state.Utils.spliceArray(this.keys.other,0, 0, key);\n\t}\n    };\n    this.pushRowKey=function(state,key) {\n\tif (key !== undefined && key !== \"\") {\n\t    state.Utils.spliceArray(this.keys.other,1, 0, key);\n\t}\n    };\n    this.checkNewPath=function(state,styp,skey) { // check if values are defined for path\n\tvar ok,ii;\n\tvar sid=this.keys.path.indexOf(skey);\n\tif (styp  === this.type.table.ptyp) {\n\t    ok=true;\n\t    var lent=this.other.table.length-1;\n\t    if (sid !== undefined) {lent=sid+1;};\n\t    for (ii = 0; ii <= lent; ii++) {\n\t\tvar key=this.other.table[ii];\n\t\tif (this.keyVal(state,key)  === undefined) {\n\t\t    ok=false;\n\t\t}\n\t    }\n\t} else if (styp  === this.type.rest.ptyp) {\n\t    ok=this.checkNewPath(state,this.type.table.ptyp);\n\t    if (ok) {\n\t\tvar lenr=this.other.rest.length-1;\n\t\tif (sid !== undefined) {lenr=sid+1;};\n\t\tfor (ii = 0; ii <= lenr; ii++) {\n\t\t    key=this.other.rest[ii];\n\t\t    if (this.keyVal(state,key)  === undefined) {\n\t\t\tok=false;\n\t\t    }\n\t\t}\n\t    }\n\t}\n\treturn ok;\n    };\n    //values[key]=values[key].filter(this.Unique);\n    this.Unique=function(value, index, self) { \n\treturn self.indexOf(value)  === index;\n    }\n};\nexport default Path;\n"]},"metadata":{},"sourceType":"module"}