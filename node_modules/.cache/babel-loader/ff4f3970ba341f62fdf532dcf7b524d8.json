{"ast":null,"code":"import _classCallCheck from\"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/inherits\";import _slicedToArray from\"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Component,useState}from\"react\";import{withStyles}from'@material-ui/core/styles';import{teal_palette}from'../mui/metMuiThemes';import{render}from'react-dom';import ReactGlobe from'react-globe';import defmarkers from'./markers';import markerRenderer from'./markerRenderer';import'./styles.css';import texture from'./globe_dark.jpg';var footAndHeaderheight=\"100px\";function getTooltipContent(marker){return\"\".concat(marker.city,\" (Value: \").concat(marker.value,\")\");}var styles=function styles(theme){return{content:{},root:{height:'100%',padding:0,margin:0,border:'5px solid red'},dataset:{overflow:'hidden',height:'100%'},map:{overflow:'hidden',height:'100%'}};};function Map(props){var classes=props.classes,state=props.state,markers=props.markers;console.log(\"rendering map...\");//  const [markers, setMarkers] = useState([]);\nvar _useState=useState(null),_useState2=_slicedToArray(_useState,2),event=_useState2[0],setEvent=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),details=_useState4[0],setDetails=_useState4[1];function onClickMarker(marker,markerObject,event){console.log(\"Clicked marker...\",marker.id);// setEvent({\n//   type: 'CLICK',\n//   marker,\n//   markerObjectID: markerObject.uuid,\n//   pointerEventPosition: { x: event.clientX, y: event.clientY },\n// });\n//setDetails(getTooltipContent(marker));\n}function onDefocus(previousCoordinates,event){//setEvent({\n//  type: 'DEFOCUS',\n//  previousCoordinates,\n//  pointerEventPosition: { x: event.clientX, y: event.clientY },\n//});\n//setDetails(null);\n}return React.createElement(\"div\",{className:\"App\"},React.createElement(ReactGlobe,{markers:markers,focus:[65,15],zoom:2,initialCoordinates:[65,20],onClickMarker:onClickMarker,markerOptions:{renderer:markerRenderer,getTooltipContent:getTooltipContent},focusOptions:{animationDuration:1000,distanceRadiusScale:1.75,easingFunction:['Bounce','InOut']},onDefocus:onDefocus}));}var EarthMap=/*#__PURE__*/function(_Component){_inherits(EarthMap,_Component);function EarthMap(props){var _this;_classCallCheck(this,EarthMap);_this=_possibleConstructorReturn(this,_getPrototypeOf(EarthMap).call(this,props));var state=props.state;state.React.Map=_assertThisInitialized(_this);return _this;}_createClass(EarthMap,[{key:\"element\",value:function element(el){if(el!==undefined&&el!==null){this.el=el;};}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,classes=_this$props.classes,state=_this$props.state;return React.createElement(\"div\",{ref:function ref(el){_this2.element(el);},className:classes.root,style:{position:'fixed',marginLeft:'0%',width:'90%',height:'calc(95% - '+footAndHeaderheight+')',overflow:'hidden'}},React.createElement(Map,{state:state,markers:defmarkers}));}}]);return EarthMap;}(Component);export default withStyles(styles)(EarthMap);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/MapComponent.js"],"names":["React","Component","useState","withStyles","teal_palette","render","ReactGlobe","defmarkers","markerRenderer","texture","footAndHeaderheight","getTooltipContent","marker","city","value","styles","theme","content","root","height","padding","margin","border","dataset","overflow","map","Map","props","classes","state","markers","console","log","event","setEvent","details","setDetails","onClickMarker","markerObject","id","onDefocus","previousCoordinates","renderer","animationDuration","distanceRadiusScale","easingFunction","EarthMap","el","undefined","element","position","marginLeft","width"],"mappings":"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","sourcesContent":["import React, {Component, useState} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport {teal_palette} from '../mui/metMuiThemes';\n\nimport { render } from 'react-dom';\nimport ReactGlobe from 'react-globe';\n\nimport defmarkers from './markers';\nimport markerRenderer from './markerRenderer';\n\nimport './styles.css';\nimport texture from './globe_dark.jpg';\n\nconst footAndHeaderheight = \"100px\";\n\nfunction getTooltipContent(marker) {\n  return `${marker.city} (Value: ${marker.value})`;\n}\n\nconst styles = theme => ({\n    content: {},\n    root: {\n\theight: '100%',\n\tpadding:0,\n\tmargin:0,\n\tborder: '5px solid red'\n    },\n    dataset: {\n\toverflow: 'hidden',\n\theight: '100%',\n    },\n    map: {\n\toverflow: 'hidden',\n\theight: '100%',\n    },\n});\n\nfunction Map(props) {\n  const { classes, state, markers } = props;\n  console.log(\"rendering map...\");\n//  const [markers, setMarkers] = useState([]);\n  const [event, setEvent] = useState(null);\n  const [details, setDetails] = useState(null);\n  function onClickMarker(marker, markerObject, event) {\n    console.log(\"Clicked marker...\",marker.id)\n   // setEvent({\n   //   type: 'CLICK',\n   //   marker,\n   //   markerObjectID: markerObject.uuid,\n   //   pointerEventPosition: { x: event.clientX, y: event.clientY },\n   // });\n   //setDetails(getTooltipContent(marker));\n  }\n  function onDefocus(previousCoordinates, event) {\n    //setEvent({\n    //  type: 'DEFOCUS',\n    //  previousCoordinates,\n    //  pointerEventPosition: { x: event.clientX, y: event.clientY },\n    //});\n    //setDetails(null);\n  }\n  return (\n    <div className=\"App\">\n      <ReactGlobe \n         markers={markers}\n         focus={[65,15]} \n         zoom={2} \n         initialCoordinates={[65,20]}\n         onClickMarker={onClickMarker}\n         markerOptions={{renderer: markerRenderer,\n\t\t\t getTooltipContent:getTooltipContent,\n         }}\n         focusOptions={{\n           animationDuration: 1000,\n           distanceRadiusScale: 1.75,\n           easingFunction: ['Bounce', 'InOut'],\n         }}\n         onDefocus={onDefocus}\n      />\n    </div>\n  );\n}\n\nclass EarthMap extends Component {\n    constructor(props) {\n\tsuper(props);\n\tconst {state} = props;\n\tstate.React.Map=this;\n    };    \n    element(el) {\n\tif (el !== undefined && el !== null) {\n\t    this.el=el;\n\t};\n    };\n  render() {\n      const { classes, state } = this.props;\n      return (<div ref={el=>{this.element(el)}}\n\t         className={classes.root}\n\t         style={{position:'fixed', marginLeft:'0%',width: '90%', height: 'calc(95% - '+footAndHeaderheight+')',overflow:'hidden'}} >\n\t         <Map state={state} markers={defmarkers}/>\n\t      </div>\n\t     );\n  }\n}\n\nEarthMap.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(EarthMap);\n"]},"metadata":{},"sourceType":"module"}