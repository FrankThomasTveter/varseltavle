{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/DatasetComponent.js\";\nimport React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport Path from \"./PathComponent\";\nimport Table from \"./TableComponent\";\nimport List from \"./ListComponent\";\nimport Map from \"./MapComponent\";\nimport Progress from './Progress'; //console.log(\"Inside Dataset.\")\n\nvar styles = function styles(theme) {\n  return {\n    dataset: {},\n    content: {}\n  };\n}; //        maxWidth: theme.spacing.getMaxWidth.maxWidth,\n\n\nfunction Switcher(props) {\n  var state = props.state,\n      classes = props.classes,\n      progress = props.progress; //var skeys=state.Matrix.sortedKeys(state,state.Matrix.keyCnt);\n  //var dim        = state.Layout.getDim(state)\n\n  var mode = state.Layout.getLayoutMode(props.state); //console.log(\">>>>>> Switcher Dim:\",dim,\" mode:\",mode);\n\n  if (mode === state.Layout.modes.layout.Map) {\n    return React.createElement(Map, {\n      state: state,\n      classes: classes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  } else if (progress) {\n    // processing\n    return React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        margin: '0 auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Progress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  } else if (mode === state.Layout.modes.layout.Table) {\n    return React.createElement(Table, {\n      state: state,\n      classes: classes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  } else if (mode === state.Layout.modes.layout.List) {\n    return React.createElement(List, {\n      state: state,\n      classes: classes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  }\n}\n\n;\n\nvar Dataset =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dataset, _Component);\n\n  function Dataset(props) {\n    var _this;\n\n    _classCallCheck(this, Dataset);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dataset).call(this, props));\n    var state = props.state;\n    state.React.Dataset = _assertThisInitialized(_this);\n    _this.state = {\n      progress: false\n    };\n    return _this;\n  }\n\n  _createClass(Dataset, [{\n    key: \"showMatrix\",\n    value: function showMatrix(state, matrix) {\n      state.React.matrix = matrix;\n      this.forceUpdate(); //console.log(\"Datacomponent matrix:\",JSON.stringify(state.React.matrix));\n    }\n  }, {\n    key: \"setProgress\",\n    value: function setProgress(state, active) {\n      state.React.Dataset.setState({\n        progress: active\n      }); //this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state;\n      return React.createElement(\"div\", {\n        className: classes.dataset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Path, {\n        state: state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Switcher, {\n        state: state,\n        classes: {\n          content: classes.content\n        },\n        progress: this.state.progress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Dataset;\n}(Component);\n\nDataset.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Dataset);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/DatasetComponent.js"],"names":["React","Component","withStyles","PropTypes","Path","Table","List","Map","Progress","styles","theme","dataset","content","Switcher","props","state","classes","progress","mode","Layout","getLayoutMode","modes","layout","width","margin","Dataset","matrix","forceUpdate","active","setState","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {withStyles} from \"@material-ui/core\";\nimport PropTypes from  \"prop-types\";\nimport Path      from  \"./PathComponent\";\nimport Table     from  \"./TableComponent\";\nimport List      from  \"./ListComponent\";\nimport Map       from  \"./MapComponent\";\nimport Progress  from './Progress';\n\n//console.log(\"Inside Dataset.\")\n\nconst styles = theme => ({\n    dataset:{},\n    content:{},\n});\n//        maxWidth: theme.spacing.getMaxWidth.maxWidth,\n\nfunction Switcher(props) {\n    const { state, classes, progress } = props;\n    //var skeys=state.Matrix.sortedKeys(state,state.Matrix.keyCnt);\n    //var dim        = state.Layout.getDim(state)\n    var mode       = state.Layout.getLayoutMode(props.state);\n    //console.log(\">>>>>> Switcher Dim:\",dim,\" mode:\",mode);\n    if (mode === state.Layout.modes.layout.Map) {\n\treturn (<Map   state={state}   classes={classes}/>);\n    } else if (progress) { // processing\n\treturn (<div style={{width:'100%',margin:'0 auto'}}>\n\t          <Progress/>\n\t       </div>);\n    } else if (mode === state.Layout.modes.layout.Table) {\n\treturn (<Table state={state}   classes={classes}/>);\n    } else if (mode === state.Layout.modes.layout.List) {\n\treturn (<List  state={state}   classes={classes}/>);\n    }\n};\n\nclass Dataset extends Component {\n    constructor(props) {\n        super(props);\n        const {state} = props;\n        state.React.Dataset=this;\n\tthis.state={progress:false};\n    };\n    showMatrix(state,matrix) {\n\tstate.React.matrix=matrix;\n\tthis.forceUpdate();\n\t//console.log(\"Datacomponent matrix:\",JSON.stringify(state.React.matrix));\n    };\n    setProgress(state,active) {\n\tstate.React.Dataset.setState({progress:active});\n\t//this.forceUpdate();\n    };\n    render() {\n        const { classes, state } = this.props;\n        return (\n            <div className={classes.dataset}>\n                <Path     state={state}/>\n\t\t<Switcher state={state} classes={{content:classes.content}} progress={this.state.progress}/>\n            </div>\n        );\n    }\n\n}\n\nDataset.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Dataset);\n"]},"metadata":{},"sourceType":"module"}