{"ast":null,"code":"import React from'react';import{withStyles}from'@material-ui/core/styles';import CanvasText from'./CanvasTextComponent';var styles=function styles(theme){return{divTableCell:{border:'1px solid #EEE',display:'table-cell',padding:'0px 0px'},divTableCellCursor:{cursor:\"pointer\",border:'1px solid #EEE',display:'table-cell',padding:'0px 0px'}};};//\tborderCollapse: 'collapse',\nfunction SummaryCell(props){var classes=props.classes,state=props.state,onclick=props.onclick,index=props.index,rowindex=props.rowindex,colkey=props.colkey,rowkey=props.rowkey,colvalues=props.colvalues,rowval=props.rowval,elements=props.elements,plan=props.plan,key=props.key,label=props.label;console.log(\"Summary height:\",plan.height);var style0={height:plan.height+\"px\",backgroundColor:'#FFF'};var style1={height:plan.height+\"px\",backgroundColor:'#EEE'};if(elements===undefined){if(rowindex%2===1){return React.createElement(\"div\",{className:classes.divTableCell,style:style1});}else{return React.createElement(\"div\",{className:classes.divTableCell,style:style0});}};var info=state.Matrix.getInfo(state,elements);var cnt=info.cnt;var maxlev=info.maxlev;var minlev=info.minlev;var lab=\"\";if(label===undefined){if(cnt>1){lab=\".\";}else{lab=\"\";};};var invalid=minlev<0;var bgcolor=state.Colors.getLevelBgColor(maxlev);var fgcolor=state.Colors.getLevelFgColor(maxlev);//console.log(\"Sending color:\",fgcolor);\n//var stylec={height:plan.height+\"px\",backgroundColor:bgcolor};\n//console.log(\"SummaryCell:'\"+lab+\"' lev=\",lev,elements.length,bgcolor,lab);\n//console.log(\"Found invalid.\",invalid,minlev,maxlev,JSON.stringify(elements));\n//console.log(\"Summary Plan:\",JSON.stringify(plan));\n//var data={colkey:colkey,rowkey:rowkey};\nvar data=JSON.stringify({rowkey:rowkey,rowval:rowval,colkey:colkey,colvalues:colvalues,index:index,step:plan.step});return React.createElement(\"div\",{className:onclick!==undefined?classes.divTableCellCursor:classes.divTableCell,key:key,style:{color:fgcolor,backgroundColor:bgcolor},onClick:onclick,height:plan.height,width:plan.width,\"data-for\":\"cell\",\"data-tip\":data},React.createElement(CanvasText,{state:state,label:lab,plan:plan,key:key,invalid:invalid,index:index,colkey:colkey,rowkey:rowkey,colvalues:colvalues,rowval:rowval,color:fgcolor}));}export default withStyles(styles)(SummaryCell);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/SummaryCell.js"],"names":["React","withStyles","CanvasText","styles","theme","divTableCell","border","display","padding","divTableCellCursor","cursor","SummaryCell","props","classes","state","onclick","index","rowindex","colkey","rowkey","colvalues","rowval","elements","plan","key","label","console","log","height","style0","backgroundColor","style1","undefined","info","Matrix","getInfo","cnt","maxlev","minlev","lab","invalid","bgcolor","Colors","getLevelBgColor","fgcolor","getLevelFgColor","data","JSON","stringify","step","color","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport CanvasText  from './CanvasTextComponent';\n\nconst styles = theme => ({\n    divTableCell:{\n\tborder: '1px solid #EEE',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableCellCursor:{\n\tcursor: \"pointer\",\n\tborder: '1px solid #EEE',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n});\n\n//\tborderCollapse: 'collapse',\n\nfunction SummaryCell(props) {\n    const { classes,state,onclick,index,rowindex,\n\t    colkey,rowkey,colvalues,rowval,\n\t    elements,plan,key,label } = props;\n    console.log(\"Summary height:\",plan.height);\n    var style0={height:(plan.height)+\"px\",backgroundColor:'#FFF'};\n    var style1={height:(plan.height)+\"px\",backgroundColor:'#EEE'};\n    if (elements===undefined) {\n\tif (rowindex%2===1) {\n\t    return <div className={classes.divTableCell} style={style1}/>\n\t} else {\n\t    return <div className={classes.divTableCell} style={style0}/>\n\t}\n    };\n    var info=state.Matrix.getInfo(state,elements);\n    var cnt=info.cnt;\n    var maxlev=info.maxlev;\n    var minlev=info.minlev;\n    var lab=\"\";\n    if (label === undefined) {\n\tif (cnt > 1) {\n\t    lab=\".\";\n\t} else {\n\t    lab=\"\";\n\t};\n    };\n    var invalid=(minlev < 0); \n    var bgcolor=state.Colors.getLevelBgColor(maxlev);\n    var fgcolor=state.Colors.getLevelFgColor(maxlev);\n    //console.log(\"Sending color:\",fgcolor);\n    //var stylec={height:plan.height+\"px\",backgroundColor:bgcolor};\n    //console.log(\"SummaryCell:'\"+lab+\"' lev=\",lev,elements.length,bgcolor,lab);\n    //console.log(\"Found invalid.\",invalid,minlev,maxlev,JSON.stringify(elements));\n    //console.log(\"Summary Plan:\",JSON.stringify(plan));\n    //var data={colkey:colkey,rowkey:rowkey};\n    var data=JSON.stringify({rowkey:rowkey,rowval:rowval,colkey:colkey,colvalues:colvalues,index:index,step:plan.step}); \n    return (\n            <div className={(onclick !== undefined?classes.divTableCellCursor:classes.divTableCell)} key={key}\n\t         style={{color:fgcolor,backgroundColor:bgcolor}} onClick={onclick} height={plan.height} width={plan.width}\n\t         data-for='cell' data-tip={data}>\n\t\t<CanvasText state={state} label={lab} plan={plan} key={key} invalid={invalid} index={index}\n\t\t\t\t\t   colkey={colkey} rowkey={rowkey} colvalues={colvalues} rowval={rowval} color={fgcolor}/>\n\t    </div>\n           );\n}\n\nSummaryCell.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SummaryCell);\n"]},"metadata":{},"sourceType":"module"}