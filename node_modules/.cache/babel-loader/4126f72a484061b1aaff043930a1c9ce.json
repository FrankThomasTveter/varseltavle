{"ast":null,"code":"//console.log(\"Loading PathLib.js\");\nfunction Path() {\n  this.keys = {\n    path: [],\n    // selected keys\n    other: [] // keys available for selection\n\n  };\n  this.other = {\n    table: [],\n    // table keys\n    rest: [] // keys available for table\n\n  };\n  this.trash = []; // remaining valid keys\n\n  this.valid = []; // list of valid keys\n\n  this.ignore = [\"max\", \"min\", \"minlat\", \"minlon\", \"maxlat\", \"maxlon\", \"cnt\", \"level\"]; // only visible in 1D and 0D tables\n\n  this.select = {\n    val: {}\n  }; // current selection criteria\n\n  this.where = {}; // current cache for where expressions\n\n  this.home = {\n    path: [],\n    val: {}\n  }; // initial home for data...\n\n  this.type = {\n    path: {\n      ityp: -1,\n      ptyp: \"path\"\n    },\n    eye: {\n      ityp: 0,\n      ptyp: \"eye\"\n    },\n    table: {\n      ityp: 1,\n      ptyp: \"table\"\n    },\n    rest: {\n      ityp: 2,\n      ptyp: \"rest\"\n    },\n    trash: {\n      ityp: 3,\n      ptyp: \"trash\"\n    },\n    trashRest: {\n      ityp: 4,\n      ptyp: \"trashRest\"\n    },\n    row: {\n      ityp: 5,\n      ptyp: \"row\"\n    },\n    col: {\n      ityp: 6,\n      ptyp: \"col\"\n    },\n    item: {\n      ityp: 7,\n      ptyp: \"item\"\n    }\n  };\n  this.order = {}; // how to order data\t    \n\n  this.autocomplete = true;\n\n  this.init = function (state) {\n    var par = \"Path\";\n    state.Utils.init(par, this);\n  };\n\n  this.toggleAuto = function (state) {\n    console.log(\"Pressed toggleAuto\");\n    state.Path.autocomplete = !state.Path.autocomplete;\n    state.Show.showConfig(state);\n  };\n\n  this.cleanSelect = function (state) {\n    var pkeys = state.Path.keys.path;\n    var keys = Object.keys(state.Path.select.val);\n    var lenk = keys.length;\n\n    for (var ii = 0; ii < lenk; ii++) {\n      var key = keys[ii];\n\n      if (pkeys.indexOf(key) === -1) {\n        state.Path.select.val[key] = undefined;\n      }\n    }\n  };\n\n  this.goHome = function (state) {\n    state.Utils.addArray(state.Path.keys.other, state.Path.keys.path);\n    state.Utils.remArray(state.Path.keys.other, state.Path.home.path);\n    state.Path.select.val = state.Utils.cp(state.Path.home.val);\n    state.Path.keys.path = state.Utils.cp(state.Path.home.path); //console.log(\">>>>>> Path.goHome: \",JSON.stringify(state.Path.home),JSON.stringify(state.Path.keys.path));\n\n    state.Utils.pushUrl(state);\n    state.Navigate.store(state);\n    state.Navigate.refreshHistory(state);\n    state.Show.show(state);\n  };\n\n  this.setHome = function (state) {\n    state.Path.cleanSelect(state);\n    this.home.path = state.Utils.cp(state.Path.keys.path);\n    this.home.val = state.Utils.cp(state.Path.select.val);\n    state.Utils.pushUrl(state);\n    console.log(\"Setting home.\");\n  };\n\n  this.getSnapshot = function (state) {\n    // store state\n    return {\n      keys: state.Utils.cp(state.Path.keys),\n      other: state.Utils.cp(state.Path.other),\n      select: state.Utils.cp(state.Path.select),\n      order: state.Utils.cp(state.Path.order)\n    };\n  };\n\n  this.setSnapshot = function (state, snapshot) {\n    // store state\n    state.Utils.restore(state.Path, snapshot);\n  };\n\n  this.toggleSelect = function (state, key, val) {\n    var vals = state.Path.select.val[key]; //console.log(\"toggleSelect:\",key,val,JSON.stringify(vals));\n\n    if (vals !== undefined) {\n      var vid = vals.indexOf(val);\n\n      if (vid !== -1) {\n        // remove item\n        vals.splice(vid, 1);\n\n        if (vals.length === 0) {\n          // can never be totally empty...\n          vals.push(\"MAX(\" + key + \")\");\n        }\n\n        state.Path.select.val[key] = vals;\n      } else {\n        state.Path.select.val[key].push(val); // add item\n      }\n\n      this.setWhere(state, key);\n      state.Show.showPath(state); //console.log(\"Finally Vals:\",key,JSON.stringify(state.Path.select.val[key]));\n    }\n  };\n\n  this.getTitle = function (state) {\n    var title = \"\";\n    var keys = state.Path.keys.path;\n    var parse;\n    keys.forEach(function (key, index) {\n      var vals = state.Path.select.val[key]; //console.log(\"   select:\",key,JSON.stringify(vals));\n\n      if (vals === undefined) {\n        vals = [];\n      }\n\n      ;\n      var lenv = vals.length;\n\n      for (var ii = 0; ii < lenv; ii++) {\n        var val = vals[ii];\n\n        if (title !== \"\") {\n          title = title + \" | \";\n        }\n\n        ;\n        title = title + state.Database.getTitleDynamic(state, key, val);\n      }\n    }); //console.log(\"Pathlib getTitle keys:\",JSON.stringify(keys),title);\n\n    return title;\n  };\n\n  this.makeWhere = function (state) {\n    state.Path.keys.path.forEach(function (item, index) {\n      this.setWhere(state, item);\n    }.bind(this));\n  };\n\n  this.setWhere = function (state, key) {\n    var where = this.parseWhere(state, key);\n    state.Path.where[key] = where;\n  };\n\n  this.parseWhere = function (state, key) {\n    var parse;\n    var where = \"\";\n    var vals = state.Path.select.val[key];\n\n    if (vals === undefined) {\n      vals = [];\n    }\n\n    ;\n    var lenv = vals.length;\n\n    for (var ii = 0; ii < lenv; ii++) {\n      var val = vals[ii];\n\n      if (where !== \"\") {\n        where = where + \" OR \";\n      }\n\n      ;\n      where = where + state.Database.getWhereDynamic(state, key, val); //console.log(\"From getWhereDynamic:\",key,\":\",val,\":\",where);\n    }\n\n    ;\n    return where;\n  };\n\n  this.makeCnt = function (state, key) {\n    return state.Path.select.val[key].length;\n  };\n\n  this.getOrderValues = function (state, skey) {\n    if (state.Path.order[skey] === undefined) {\n      //console.log(\"Copying:\",JSON.stringify(Matrix.values[skey]));\n      return state.Matrix.values[skey];\n    } else {\n      var vals = state.Matrix.values[skey];\n      var plen = vals;\n\n      for (var ii = 0; ii < plen; ii++) {\n        var val = vals[ii];\n\n        if (state.Path.order[skey].indexOf(val) === -1) {\n          state.Path.order[skey].push(val);\n        }\n      }\n\n      ;\n      return state.Path.order[skey];\n    }\n\n    ;\n  };\n\n  this.makeOrderValues = function (state, skey) {\n    if (state.Path.order === undefined) {\n      state.Path.order = {};\n    }\n\n    ;\n\n    if (state.Path.order[skey] === undefined) {\n      //console.log(\"Copying:\",JSON.stringify(Matrix.values[skey]));\n      state.Path.order[skey] = state.Utils.cp(state.Matrix.values[skey]);\n    } else {\n      var vals = state.Matrix.values[skey];\n      var plen = vals;\n\n      for (var ii = 0; ii < plen; ii++) {\n        var val = vals[ii];\n\n        if (state.Path.order[skey].indexOf(val) === -1) {\n          state.Path.order[skey].push(val);\n        }\n      }\n\n      ;\n    }\n\n    ;\n    return state.Path.order[skey];\n  };\n\n  this.bumpOrder = function (state, skey, value) {\n    //console.log(\"Bump order:\",skey,value,JSON.stringify(state.Path.order));\n    if (value === \"\") {\n      state.Path.order[skey] = undefined;\n    } else {\n      this.makeOrderValues(state, skey);\n      var vid = state.Path.order[skey].indexOf(value);\n\n      if (vid !== -1 && vid > 0) {\n        var src = state.Path.order[skey].splice(vid, 1); // remove from array   \n\n        state.Utils.spliceArray(state.Path.order[skey], vid - 1, 0, src);\n      }\n\n      ;\n    }\n\n    state.Show.showConfig(state);\n  };\n\n  this.makePath = function (state) {\n    // note that not all keys are present in the data!\n    //console.log(\"Entering makepath.\",JSON.stringify(this.keys));\n    var ii, key;\n    var pathSet = [];\n\n    if (this.keys.path === undefined) {\n      this.keys.path = [];\n    }\n\n    ;\n\n    if (this.keys.other === undefined) {\n      this.keys.other = [];\n    }\n\n    ;\n\n    if (this.trash === undefined) {\n      this.trash = [];\n    }\n\n    ;\n\n    if (this.keys.path.length > 0 || this.keys.other.length > 0 || this.trash.length > 0) {\n      // remove duplicates\n      //console.log(\"Filtering.\");\n      var olen;\n      this.keys.path = this.keys.path.filter(this.Unique);\n      this.keys.other = this.keys.other.filter(this.Unique);\n      this.trash = this.trash.filter(this.Unique); //console.log(\"setup:\",JSON.stringify(setup));\n      //console.log(\"Remove invalid keys from path.\");\n      // remove invalid keys from path\n\n      var plen = this.keys.path.length;\n\n      for (ii = 0; ii < plen; ii++) {\n        key = this.keys.path[ii];\n\n        if (state.Database.keyCnt[key] === undefined) {\n          this.keys.path.splice(ii, 1);\n          ii = ii - 1;\n          plen = plen - 1;\n        }\n      } //console.log(\"Remove invalid keys from other.\");\n      // remove invalid keys from other\n\n\n      olen = this.keys.other.length;\n\n      for (ii = 0; ii < olen; ii++) {\n        key = this.keys.other[ii];\n\n        if (state.Database.keyCnt[key] === undefined) {\n          this.other.rest.splice(ii, 1);\n          ii = ii - 1;\n          olen = olen - 1;\n        }\n      } //console.log(\"Remove invalid keys from trash.\");\n      // remove invalid keys from trash\n\n\n      olen = this.trash.length;\n\n      for (ii = 0; ii < olen; ii++) {\n        key = this.trash[ii];\n\n        if (state.Database.keyCnt[key] === undefined) {\n          this.trash.splice(ii, 1);\n          ii = ii - 1;\n          olen = olen - 1;\n        }\n      } //console.log(\"Update trash with keys.\");\n      // we already have a path, update trash with new keys\n\n\n      for (key in state.Database.keyCnt) {\n        if (this.keys.path.indexOf(key) === -1 && this.keys.other.indexOf(key) === -1 && this.trash.indexOf(key) === -1 && state.Utils.missing(this.ignore, key)) {\n          pathSet[key] = \"trash\";\n          this.select.val[key] = undefined;\n          this.where[key] = \"\";\n          this.trash.push(key);\n        }\n      }\n    } else {\n      // new path...\n      console.log(\"New path\"); // ...define this.select.val for all keys in input data\n\n      for (key in state.Database.keyCnt) {\n        pathSet[key] = \"data\";\n      }\n\n      ;\n      this.keys.path = [];\n      this.other.table = [];\n      this.other.rest = [];\n      this.select.val = {}; // no values are set so far\n\n      this.where = {};\n      console.log(\"Copy default trash keys.\", JSON.stringify(state.Default.trash)); // copy default trash keys (that are used) to trash...\n\n      if (state.Default.trash !== undefined) {\n        var tlen = state.Default.trash.length;\n\n        for (ii = 0; ii < tlen; ii++) {\n          key = state.Default.trash[ii];\n\n          if (pathSet[key] !== undefined) {\n            //\t\t\tif (state.Utils.missing(this.trash,key)) { \n            //\t\t\t    this.trash.push(key);\n            //\t\t\t};\n            pathSet[key] = undefined; // ignore key from now on...\n          }\n        } //console.log(\"Pathset:\",JSON.stringify(pathSet),JSON.stringify(state.Default.trash));\n\n      }\n\n      ; //console.log(\"Copy default other keys.\");\n      //console.log(\"makePath A:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n      // console.log(\"Added trash:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n      // copy default other keys (that are used) to other...\n\n      if (state.Default.other !== undefined) {\n        var klen = state.Default.other.length;\n\n        for (ii = 0; ii < klen; ii++) {\n          key = state.Default.other[ii];\n\n          if (pathSet[key] !== undefined) {\n            // key not present in input data\n            if (state.Utils.missing(this.keys.other, key)) {\n              this.keys.other.push(key);\n            }\n\n            ;\n            pathSet[key] = \"found\";\n          }\n        }\n      } //console.log(\"makePath B:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n      //console.log(\"Add missing keys.\");\n      // add missing keys to path\n\n\n      for (key in state.Database.keyCnt) {\n        if (state.Utils.missing(this.ignore, key)) {\n          if (pathSet[key] === \"data\") {\n            if (state.Utils.missing(this.keys.other, key)) {\n              this.keys.other.push(key);\n            }\n\n            ; //console.log(\"Added key:\",key);\n\n            pathSet[key] = \"added\";\n          }\n        }\n\n        ;\n      }\n\n      ; // add undefined values in values\n      // for (key in state.Database.keyCnt) {\n      //     if (state.Database.keyCnt[key].cnt<state.Database.cnt) {\n      // \tstate.Database.values[key].push(undefined);\n      //     }\n      // }\n      // // sort sub-path according to count...\n      // this.keys.other=this.keys.other.sort(function(state,a, b) {\n      //     if (state.Database.values[a]  === undefined) {\n      // \treturn -1;\n      //     } else if (state.Database.values[b]  === undefined) {\n      // \treturn 1;\n      //     } else {\n      // \treturn state.Database.values[a].length - state.Database.values[b].length\n      //     }\n      // });\n      //console.log(\"makePath C:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n      //console.log(\"Push other keys to table and rest.\");\n\n      var glen = this.keys.other.length;\n\n      for (ii = 0; ii < glen; ii++) {\n        key = this.keys.other[ii];\n\n        if (ii < 2) {\n          this.other.table.push(key);\n        } else {\n          this.other.rest.push(key);\n        }\n      }\n    } //console.log(\"makePath D:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n\n\n    state.Navigate.reset(state); //console.log(\"keys:\",JSON.stringify(state.Database.values));\n    //console.log(\"Before Valid:\",JSON.stringify(state.Path.valid),JSON.stringify(state.Path.keys));\n\n    state.Utils.cpArray(state.Path.valid, state.Path.keys.path);\n    state.Utils.cpArray(state.Path.valid, state.Path.keys.other);\n    state.Utils.cpArray(state.Path.valid, state.Path.trash); //console.log(\"After Valid:\",JSON.stringify(state.Path.valid),JSON.stringify(state.Path.keys));\n    //console.log(\"Completed makepath.\");\n  };\n\n  this.getIndex = function (state, trg) {\n    return this.keys.path.indexOf(trg);\n  };\n\n  this.exportAllKeys = function (state) {\n    // export keys from \"all\" to \"rest\"\n    this.other.table = [];\n    this.other.rest = [];\n    var jj = 0;\n    var key, ii;\n    var delay = false;\n\n    if (this.keys.other !== undefined) {\n      var olen = this.keys.other.length;\n\n      for (ii = 0; ii < olen; ii++) {\n        key = this.keys.other[ii];\n\n        if (key === \"\") {\n          if (jj == 0) {\n            delay = true;\n          } else if (jj < 2) {\n            jj = jj + 1;\n          }\n        } else if (state.Matrix.keyCnt[key] !== undefined && state.Matrix.keyCnt[key] == 0) {// do nothing\n        } else {\n          if (jj < 2) {\n            this.other.table.push(key);\n            jj = jj + 1;\n\n            if (delay && jj < 2) {\n              jj = jj + 1;\n            }\n\n            ;\n          } else if (key !== \"\") {\n            this.other.rest.push(key);\n          }\n        }\n      }\n\n      ;\n    } // sanity check...\n\n\n    var vlen = this.valid.length;\n\n    for (ii = 0; ii < vlen; ii++) {\n      key = this.valid[ii];\n\n      if (this.keys.path.indexOf(key) === -1 && this.keys.other.indexOf(key) === -1 && this.trash.indexOf(key) === -1) {\n        //console.log(\"**** Path failed sanity check:\",\n        //JSON.stringify(this.keys),JSON.stringify(this.trash),key);\n        this.trash.push(key);\n      }\n    } //this.sortTableKeys(state);\n    //console.log(\"Exported:\",JSON.stringify(this.keys),JSON.stringify(this.other),JSON.stringify(this.trash));\n\n  }; // move key from table to path\n\n\n  this.tableKeyToPath = function (state, key, val, where, cnt) {\n    // keep abscissa\n    //console.log(\"this.Selecting:\",key,\"=\",val,\", where=\",where);\n    var sid = state.Path.keys.other.indexOf(key);\n\n    if (sid !== -1) {\n      // key is a table-key...\n      state.Path.select.val[key] = [val];\n      state.Path.where[key] = where;\n      var src = state.Path.keys.other.splice(sid, 1); // remove from path\n\n      if (state.Utils.missing(state.Path.keys.path, src)) {\n        //console.log(\"Adding to path:\",JSON.stringify(src));\n        state.Utils.pushKey(state.Path.keys.path, src); //state.Path.keys.path=state.Path.keys.path.concat(src); // last path position\n      }\n\n      ;\n\n      if (cnt > 1 && state.Utils.missing(state.Path.trash, src)) {\n        //console.log(\"Adding \",JSON.stringify(src),\" to trash.\");\n        state.Utils.pushKey(state.Path.trash, src); //state.Path.trash=state.Path.trash.concat(src)\n      }\n\n      ; //console.log(\"Selectkey:\",JSON.stringify(setup),JSON.stringify(src));\n\n      return true;\n    } else {\n      console.log(\"Missing \", key, \" in path:\", JSON.stringify(state.Path.keys));\n      return false;\n    }\n  }; // select give table key...\n\n\n  this.selectTableKey = function (state, key, keyval, keywhere, keycnt) {\n    // keep abscissa\n    var sid = state.Path.keys.other.indexOf(key); //console.log(\"SelectTableKey:\",key,sid,JSON.stringify(state.Path.keys.other));\n\n    if (sid !== -1) {\n      // key is a table-key...\n      var where = state.Database.getWhere(state);\n      var keys = state.Path.other.rest;\n      var lenk = keys.length;\n\n      if (lenk == 0 || !state.Path.autocomplete || sid > 1) {\n        // nothing to consider\n        var ret = this.tableKeyToPath(state, key, keyval, keywhere, keycnt);\n        return ret;\n      } else {\n        //console.log(\"Before:\",JSON.stringify(state.Path.keys));\n        // look for table-key candidates in the rest-stack\n        var org = state.Utils.cp(state.Path.other.rest);\n        var oth = sid === 0 ? state.Path.other.table[1] : state.Path.other.table[0]; // the other key\n\n        var sel = [];\n        var val = [];\n        var rest = [];\n        var tkey = \"\";\n\n        for (var ii = 0; ii < lenk; ii++) {\n          // first key dependencies\n          var ikey = keys[ii]; //console.log(\">>>Checking:\",ikey, \"(\",key,\",\",oth,\")\");\n\n          var ftable = [key, ikey];\n          var fdependancy = this.compareKeys(state, where, ftable);\n          var finformation = this.getInformation(state, ftable, fdependancy); // second key dependencies\n\n          var stable = [oth, ikey];\n          var sdependancy = this.compareKeys(state, where, stable);\n          var sinformation = this.getInformation(state, stable, sdependancy); //console.log(\"   Second:\",oth,ikey,JSON.stringify(sdependancy),JSON.stringify(sinformation));\n          // find out which keys should be selected, and which should be used in table...\n          // candidates redundant wrt the selected keys are selected or ignored\n          //console.log(\"   Comparing:\",key,oth,ikey,JSON.stringify(finformation),JSON.stringify(sinformation));\n          // in case there are no targets\n\n          if (sinformation[oth] === \"insignificant\" || sinformation[ikey] === \"insignificant\" || tkey !== \"\") {\n            // ignore insignificant ikey\n            rest.push(ikey); //console.log(\"  Insignificant:\",ikey,JSON.stringify(sel),JSON.stringify(rest),tkey);\n          } else if (finformation[ikey] === \"redundant\") {\n            // select redundant ikey\n            var ival = fdependancy.val[ikey];\n            sel.push(ikey);\n            val.push(ival); //console.log(\"  Redundant:\",ikey,JSON.stringify(sel),JSON.stringify(rest),tkey);\n          } else {\n            tkey = ikey; // we have found a good candidate\n            //console.log(\"  Target:\",ikey,JSON.stringify(sel),JSON.stringify(rest),tkey);\n          }\n        } //console.log(\"  Sel/Val:\",JSON.stringify(sel),JSON.stringify(val));\n\n\n        var ret = this.tableKeyToPath(state, key, keyval, keywhere, keycnt);\n\n        if (tkey !== \"\") {\n          // we found a target\n          var lens = sel.length;\n\n          for (var jj = 0; jj < lens; jj++) {\n            var jkey = sel[jj];\n            var jkeyval = val[jj];\n            var jkeywhere = jkey + \"=\" + jkeyval;\n            this.tableKeyToPath(state, jkey, jkeyval, jkeywhere, 1);\n          }\n\n          state.Path.keys.other = [oth, tkey].concat(state.Utils.clean(rest));\n        } else if (sel.length > 0 || rest.length > 0) {\n          // no target\n          var lens = sel.length;\n\n          for (var jj = 0; jj < lens; jj++) {\n            var jkey = sel[jj];\n            var jkeyval = val[jj];\n            var jkeywhere = jkey + \"=\" + jkeyval;\n            this.tableKeyToPath(state, jkey, jkeyval, jkeywhere, 1);\n          }\n\n          state.Path.keys.other = [oth, \"\"].concat(state.Utils.clean(rest));\n        } else {\n          state.Path.keys.other = [oth];\n        } //console.log(\"After:\",JSON.stringify(state.Path.keys),ret);\n\n\n        return ret;\n      }\n    }\n\n    ;\n  }; // check if keys are inter-dependent, (\"common\", \"unique\", \"dependent\", \"unknown\") \n\n\n  this.compareKeys = function (state, where, keys) {\n    var key; //var where = state.Database.getWhere(state);\n\n    var ret = {\n      dep: {},\n      val: {}\n    };\n    var hits = {};\n    var maxh = {};\n    var docs = state.Database.getCntDocs(state, where, keys); // current table keys\n\n    var slen = keys.length;\n    var dlen = docs.length;\n\n    for (var ii = 0; ii < dlen; ii++) {\n      var doc = docs[ii];\n\n      for (var jj = 0; jj < slen; jj++) {\n        key = keys[jj];\n\n        if (doc[key] !== undefined) {\n          var val = doc[key];\n          ret.val[key] = val;\n\n          if (hits[key] === undefined) {\n            hits[key] = {};\n          }\n\n          hits[key][val] = 1 + (hits[key][val] || 0); //console.log(\"Found:\",key,val,hits[key][val]);\n\n          if (hits[key][val] > (maxh[key] || 0)) {\n            maxh[key] = hits[key][val];\n          }\n        }\n\n        ;\n      }\n    }\n\n    ;\n\n    for (var kk = 0; kk < slen; kk++) {\n      key = keys[kk];\n\n      if (maxh[key] !== undefined) {\n        if (maxh[key] === 1) {\n          // every entry has unique value\n          ret.dep[key] = \"unique\";\n        } else if (maxh[key] === dlen) {\n          ret.dep[key] = \"common\"; // all entries have same value\n        } else {\n          ret.dep[key] = \"dependent\"; // entries depend on values\n        }\n      } else {\n        ret.dep[key] = \"unknown\";\n      }\n    }\n\n    ;\n    return ret;\n  };\n\n  this.getInformation = function (state, keys, dependancy) {\n    var key;\n    var information = {};\n    var slen = keys.length;\n\n    for (var jj = 0; jj < slen; jj++) {\n      key = keys[jj];\n\n      if (dependancy.dep[key] === \"unique\") {\n        for (var rr = 0; rr < slen; rr++) {\n          var rkey = keys[rr];\n\n          if (dependancy.dep[rkey] === \"unique\") {\n            // do not remove every \"unique\" variable\n            if (rr > jj) {\n              information[rkey] = \"redundant\"; // later control variables are redundant\n            }\n\n            ;\n          } else {\n            // remove all other variables\n            if (rr !== jj) {\n              if (dependancy.dep[rkey] === \"common\") {\n                information[rkey] = \"redundant\"; // \n              } else {\n                information[rkey] = \"insignificant\"; //\n              }\n\n              ;\n            }\n\n            ;\n          }\n        }\n      }\n    }\n\n    var cnt = 0;\n\n    for (var kk = slen - 1; kk >= 0; kk--) {\n      key = keys[kk];\n\n      if (dependancy[key] === \"common\") {\n        // leave at least one redundant variable\n        cnt = cnt + 1;\n\n        if (cnt < slen) {\n          information[key] = \"redundant\";\n        }\n      }\n    }\n\n    ;\n    return information;\n  };\n\n  this.getNextTableCandidate = function (state, where, key, cand) {\n    var clen = cand.length;\n\n    for (var cc = 0; cc < clen; cc++) {\n      var ckey = cand[cc];\n      var table = [key, ckey];\n      var dependancy = this.compareKeys(state, where, table);\n      var information = this.getInformation(state, table, dependancy);\n\n      if (information[ckey] === undefined) {\n        cand.splice(cc, 1);\n        return ckey;\n      }\n    }\n\n    return; // no cand-idate\n  };\n\n  this.disposeTableKey = function (state, key, dependancy, information) {\n    var bdone;\n\n    if (information[key] === \"redundant\") {\n      // trash key\n      bdone = false;\n      state.Utils.moveToArray(state.Path.keys.other, state.Path.keys.path, key, -1);\n      var val = dependancy.val[key];\n      state.Path.select.val[key] = [val];\n      state.Path.where[key] = key + '=\"' + val + '\"'; //this.order[key]=order;\n    } else if (information[key] === \"insignificant\") {\n      // trash key\n      bdone = false;\n      state.Utils.moveToArray(state.Path.keys.other, state.Path.trash, key, 0);\n    }\n\n    ;\n    return bdone;\n  };\n\n  this.checkTableKeys = function (state) {\n    var where = state.Database.getWhere(state);\n    state.Matrix.initKeyCnt(state);\n    state.Matrix.mapKeyCnt(state, where, 0, state.Path.keys.other); // possible table keys (no undefined)\n\n    state.Path.exportAllKeys(state);\n    console.log(\"checkTableKeys Starting:\", JSON.stringify(state.Path.keys), JSON.stringify(state.Path.trash), JSON.stringify(state.Path.other.table));\n    var table = state.Path.other.table; // current table-keys\n\n    var cand = state.Path.other.rest; // current candidates\n\n    var bdone = table.length < 2;\n\n    do {\n      //check current table-keys\n      var dependancy = this.compareKeys(state, where, table);\n      var information = this.getInformation(state, table, dependancy); // check if first key is invalid\n\n      var fkey = table[0];\n      var skey = table[1];\n      var fdest = information[fkey];\n      var sdest = information[skey];\n      console.log(\"Looping:\", fkey, dependancy.dep[fkey], fdest, skey, dependancy.dep[skey], sdest);\n\n      if (sdest !== undefined) {\n        // second key is in-valid\n        // get next candidate\n        var ckey = this.getNextTableCandidate(state, where, fkey, cand);\n\n        if (ckey !== undefined) {\n          console.log(\"Found 2-candidate:\", fkey, ckey, \" removing \", skey);\n          this.disposeTableKey(state, skey, dependancy, information);\n          table = [fkey, ckey];\n          bdone = false;\n        } else {\n          // no more candidates\n          console.log(\"No 2-candidate:\", fkey, JSON.stringify(cand));\n          bdone = true;\n        }\n      } else if (fdest !== undefined) {\n        // first key is in-valid\n        // get next candidate\n        var ckey = this.getNextTableCandidate(state, where, skey, cand);\n\n        if (ckey !== undefined) {\n          console.log(\"Found 1-candidate:\", skey, ckey, \" removing \", fkey);\n          this.disposeTableKey(state, fkey, dependancy, information);\n          table = [skey, ckey];\n          bdone = false;\n        } else {\n          // no more candidates\n          console.log(\"No 1-candidate:\", skey, JSON.stringify(cand));\n          bdone = true;\n        }\n      } else {\n        // both keys are valid\n        console.log(\"Keys ok:\", fkey, skey);\n        bdone = true;\n      }\n\n      if (!bdone) {\n        state.Path.exportAllKeys(state);\n      }\n    } while (!bdone);\n\n    console.log(\"checkTableKeys Done:\", JSON.stringify(state.Path.keys), JSON.stringify(state.Path.trash));\n  };\n\n  this.checkTableKeysOld = function (state) {\n    var ret = [];\n    var where = state.Database.getWhere(state);\n    state.Matrix.initKeyCnt(state);\n    state.Matrix.mapKeyCnt(state, where, 0, state.Path.keys.other); // possible table keys (no undefined)\n\n    state.Path.exportAllKeys(state);\n    console.log(\"this.checkTableKeys Entering.\", JSON.stringify(state.Path.keys)); //var keys=state.Path.other.table;\n\n    var bdone = state.Path.other.table.length > 1;\n    var order = state.Utils.cp(state.Path.keys.other);\n\n    do {\n      console.log(\"this.checkTableKeys Looping.\", state.Path.other.rest.length);\n      bdone = true;\n\n      if (state.Path.other.table.length > 1) {\n        // check for number of column values\n        var dependancy = this.compareKeys(state, where, state.Path.other.table);\n        var information = this.getInformation(state, state.Path.other.table, dependancy);\n        console.log(\"Rm:\", JSON.stringify(dependancy), JSON.stringify(information));\n        var slen = state.Path.other.table.length;\n\n        for (var jj = 0; jj < slen; jj++) {\n          var key = state.Path.other.table[jj];\n\n          if (information[key] === \"redundant\") {\n            // move key to path\n            bdone = false;\n            state.Utils.moveToArray(state.Path.keys.other, state.Path.keys.path, key, -1);\n            var val = dependancy.val[key];\n            state.Path.select.val[key] = [val];\n            state.Path.where[key] = key + '=\"' + val + '\"';\n            this.order[key] = order;\n          } else if (information[key] === \"insignificant\") {\n            // trash key\n            bdone = false;\n            state.Utils.moveToArray(state.Path.keys.other, state.Path.trash, key, 0);\n          }\n\n          ;\n        }\n\n        if (!bdone) {\n          state.Path.exportAllKeys(state);\n        }\n      }\n\n      ;\n    } while (!bdone); //console.log(\"this.checkTableKeys Done.\",JSON.stringify(state.Path.other.table));\n\n\n    return ret;\n  }; // get X-priority, {colx,coly1,coly2...)\n\n\n  this.sortTableKeys = function (state) {\n    // make priority index\n    var arr = state.Utils.cp(this.other.table);\n    var pri = state.Layout.getPriorityIndex(state, arr); // sort the array according to priority\n\n    this.other.table = arr.sort(function (a, b) {\n      if (a === \"\") {\n        return 1;\n      } else if (b === \"\") {\n        return -1;\n      } else if (pri[a] < pri[b]) {\n        return 1;\n      } else if (pri[a] > pri[b]) {\n        return -1;\n      } else {\n        return 0;\n      }\n    }); //console.log(\"TableKeys:\",JSON.stringify(this.other.table),\n    //\t\" Pri:\",JSON.stringify(state.Layout.priority),\n    //\t\" P:\",JSON.stringify(pri));\n\n    return;\n  };\n\n  this.keyVal = function (state, key) {\n    if (this.select.val[key] !== undefined && this.select.val[key] !== null && this.select.val[key] !== \"\") {\n      return this.select.val[key];\n    } else {\n      return;\n    }\n  };\n\n  this.keyValOk = function (state, val) {\n    var ok = true;\n    return ok;\n  };\n\n  this.moveKey = function (state, styp, skey, ttyp, tid) {\n    var sid = this.keys[styp].indexOf(skey);\n\n    if (sid !== -1) {\n      var src = this.keys[styp].splice(sid, 1); // remove from path\n\n      if (tid === undefined || tid === -1) {\n        this.keys[ttyp] = this.keys[ttyp].concat(src); // last position\n      } else {\n        state.Utils.spliceArray(this.keys[ttyp], tid, 0, src);\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveKeys = function (state, styp, skeys, ttyp, tid) {\n    var len = skeys.length;\n\n    for (var ss = 0; ss < len; ss++) {\n      var skey = skeys[ss];\n      var sid = this.keys[styp].indexOf(skey);\n\n      if (sid !== -1) {\n        var src = this.keys[styp].splice(sid, 1); // remove from path\n\n        if (tid === undefined || tid === -1) {\n          this.keys[ttyp] = this.keys[ttyp].concat(src); // last position\n        } else {\n          state.Utils.spliceArray(this.keys[ttyp], tid, 0, src);\n        }\n      }\n    }\n  };\n\n  this.swapTableKey = function (state, skey, tkey) {\n    var sid = this.other.table.indexOf(skey);\n    var tid = this.other.table.indexOf(tkey);\n\n    if (tid !== sid && this.other.table.length > 1) {\n      var tin2 = this.keys.other.indexOf(this.other.table[1]);\n      var tkey2 = this.keys.other.splice(tin2, 1); // remove from array\n\n      state.Utils.spliceArray(this.keys.other, 0, 0, tkey2); //console.log(\"Swapped:\",tkey2,tkey,JSON.stringify(this.keys.other));\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.delTableKey = function (state, key) {\n    var secondkey;\n    var secondind;\n    var sid = this.keys.other.indexOf(key);\n\n    if (sid !== -1) {\n      var sin = this.other.table.indexOf(key);\n      var save = sin === 0;\n\n      if (save) {\n        secondkey = this.other.table[1];\n        secondind = this.pullKey(state, \"other\", secondkey);\n      }\n\n      this.pullKey(state, \"other\", key);\n\n      if (save && secondind !== undefined && secondind !== -1) {\n        this.pushKey(state, \"other\", secondkey, secondind);\n      }\n\n      return sin;\n    }\n  };\n\n  this.moveTableKey = function (state, skey, ttyp, tid) {\n    var sid = this.keys.other.indexOf(skey);\n\n    if (sid !== -1) {\n      //var sin=\n      this.delTableKey(state, skey);\n\n      if (tid === undefined || tid === -1) {\n        this.keys[ttyp] = this.keys[ttyp].concat(skey); // last position\n      } else {\n        state.Utils.spliceArray(this.keys[ttyp], tid, 0, skey);\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveKey2Table = function (state, styp, skey, tkey) {\n    //console.log(\"MoveKey2Table:\",JSON.stringify(this.keys));\n    var tid = this.keys.other.indexOf(tkey);\n    var sid = this.keys[styp].indexOf(skey);\n\n    if (tid !== -1 && sid !== -1 && skey !== tkey) {\n      // exists and is not the same\n      this.keys[styp][sid] = tkey;\n      this.keys.other[tid] = skey;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveTrash2Table = function (state, tkey) {\n    var secondkey;\n    var secondind;\n    var tid = this.other.table.indexOf(tkey);\n\n    if (tid !== -1) {\n      var save = tid === 0;\n\n      if (save) {\n        secondkey = this.other.table[1];\n        secondind = this.pullKey(state, \"other\", secondkey);\n      }\n\n      ;\n      var tin = this.keys.other.indexOf(tkey);\n      this.moveTrash(state, \"other\", tin + 1);\n\n      if (save && secondind !== undefined && secondind !== -1) {\n        this.pushKey(state, \"other\", secondkey, secondind);\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveTrash = function (state, ttyp, tin) {\n    state.Utils.spliceArray(this.keys[ttyp], tin, 0, this.trash);\n    this.trash = [];\n  };\n\n  this.moveAllKey = function (state, styp, skey, ttyp, tid) {\n    var lenp = this.keys[styp].length;\n    var sid = this.keys[styp].indexOf(skey);\n\n    if (sid !== -1) {\n      var src = this.keys[styp].splice(sid, lenp - sid);\n      state.Utils.spliceArray(this.keys[ttyp], tid, 0, src);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveAllFirst = function (state, ttyp, tin) {\n    var tlen = this.keys[ttyp].length;\n    var src = this.keys[ttyp].splice(tin, tlen - tin);\n    state.Utils.spliceArray(this.keys[ttyp], 0, 0, src);\n  };\n\n  this.filterKeys = function (state, arr) {\n    var out = [];\n    var alen = arr.length;\n\n    for (var ii = 0; ii < alen; ii++) {\n      var val = arr[ii];\n\n      if (this.keyValOk(state, val)) {\n        out.push(val);\n      }\n    } //console.log(\"CheckOk \",JSON.stringify(arr),\"->\",JSON.stringify(out));\n\n\n    return out;\n  };\n\n  this.pullArrayKey = function (state, array, key) {\n    var sin = array.indexOf(key);\n\n    if (sin !== -1) {\n      //var src=\n      array.splice(sin, 1); // remove from path\n    }\n\n    ;\n    return sin;\n  }; //////////////////////////////// COL/ROW FUNCTIONS ///////////////////////\n\n\n  this.getColKey = function (state) {\n    var arr = state.Utils.cp(this.other.table);\n    var pri = state.Layout.getPriorityIndex(state, arr);\n\n    if (state.Show.getLayoutMode(state) === state.Show.code.layout.Map) {\n      return \"_lon\";\n    } else if (pri[this.other.table[0]] < pri[this.other.table[1]]) {\n      return this.other.table[1];\n    } else {\n      return this.other.table[0];\n    }\n  };\n\n  this.getRowKey = function (state) {\n    var arr = state.Utils.cp(this.other.table);\n    var pri = state.Layout.getPriorityIndex(state, arr);\n\n    if (state.Show.getLayoutMode(state) === state.Show.code.layout.Map) {\n      return \"_lat\";\n    } else if (pri[this.other.table[0]] < pri[this.other.table[1]]) {\n      return this.other.table[0];\n    } else {\n      return this.other.table[1];\n    }\n  };\n\n  this.pushKey = function (state, typ, key, ind) {\n    if (key !== undefined && key !== \"\") {\n      state.Utils.spliceArray(this.keys[typ], ind, 0, key);\n    }\n\n    state.Utils.clean(this.keys[typ]);\n  };\n\n  this.pullKey = function (state, typ, key) {\n    var sin = this.keys[typ].indexOf(key);\n\n    if (sin !== -1) {\n      var src = this.keys[typ].splice(sin, 1); // remove from path\n\n      if (src !== key) {\n        console.log(\"System error:\", src, key);\n      }\n\n      return sin;\n    }\n\n    ;\n  };\n\n  this.pushColKey = function (state, key) {\n    if (key !== undefined && key !== \"\") {\n      state.Utils.spliceArray(this.keys.other, 0, 0, key);\n    }\n  };\n\n  this.pushRowKey = function (state, key) {\n    if (key !== undefined && key !== \"\") {\n      state.Utils.spliceArray(this.keys.other, 1, 0, key);\n    }\n  };\n\n  this.checkNewPath = function (state, styp, skey) {\n    // check if values are defined for path\n    var ok, ii;\n    var sid = this.keys.path.indexOf(skey);\n\n    if (styp === this.type.table.ptyp) {\n      ok = true;\n      var lent = this.other.table.length - 1;\n\n      if (sid !== undefined) {\n        lent = sid + 1;\n      }\n\n      ;\n\n      for (ii = 0; ii <= lent; ii++) {\n        var key = this.other.table[ii];\n\n        if (this.keyVal(state, key) === undefined) {\n          ok = false;\n        }\n      }\n    } else if (styp === this.type.rest.ptyp) {\n      ok = this.checkNewPath(state, this.type.table.ptyp);\n\n      if (ok) {\n        var lenr = this.other.rest.length - 1;\n\n        if (sid !== undefined) {\n          lenr = sid + 1;\n        }\n\n        ;\n\n        for (ii = 0; ii <= lenr; ii++) {\n          key = this.other.rest[ii];\n\n          if (this.keyVal(state, key) === undefined) {\n            ok = false;\n          }\n        }\n      }\n    }\n\n    return ok;\n  }; //values[key]=values[key].filter(this.Unique);\n\n\n  this.Unique = function (value, index, self) {\n    return self.indexOf(value) === index;\n  };\n}\n\n;\nexport default Path;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/PathLib.js"],"names":["Path","keys","path","other","table","rest","trash","valid","ignore","select","val","where","home","type","ityp","ptyp","eye","trashRest","row","col","item","order","autocomplete","init","state","par","Utils","toggleAuto","console","log","Show","showConfig","cleanSelect","pkeys","Object","lenk","length","ii","key","indexOf","undefined","goHome","addArray","remArray","cp","pushUrl","Navigate","store","refreshHistory","show","setHome","getSnapshot","setSnapshot","snapshot","restore","toggleSelect","vals","vid","splice","push","setWhere","showPath","getTitle","title","parse","forEach","index","lenv","Database","getTitleDynamic","makeWhere","bind","parseWhere","getWhereDynamic","makeCnt","getOrderValues","skey","Matrix","values","plen","makeOrderValues","bumpOrder","value","src","spliceArray","makePath","pathSet","olen","filter","Unique","keyCnt","missing","JSON","stringify","Default","tlen","klen","glen","reset","cpArray","getIndex","trg","exportAllKeys","jj","delay","vlen","tableKeyToPath","cnt","sid","pushKey","selectTableKey","keyval","keywhere","keycnt","getWhere","ret","org","oth","sel","tkey","ikey","ftable","fdependancy","compareKeys","finformation","getInformation","stable","sdependancy","sinformation","ival","lens","jkey","jkeyval","jkeywhere","concat","clean","dep","hits","maxh","docs","getCntDocs","slen","dlen","doc","kk","dependancy","information","rr","rkey","getNextTableCandidate","cand","clen","cc","ckey","disposeTableKey","bdone","moveToArray","checkTableKeys","initKeyCnt","mapKeyCnt","fkey","fdest","sdest","checkTableKeysOld","sortTableKeys","arr","pri","Layout","getPriorityIndex","sort","a","b","keyVal","keyValOk","ok","moveKey","styp","ttyp","tid","moveKeys","skeys","len","ss","swapTableKey","tin2","tkey2","delTableKey","secondkey","secondind","sin","save","pullKey","moveTableKey","moveKey2Table","moveTrash2Table","tin","moveTrash","moveAllKey","lenp","moveAllFirst","filterKeys","out","alen","pullArrayKey","array","getColKey","getLayoutMode","code","layout","Map","getRowKey","typ","ind","pushColKey","pushRowKey","checkNewPath","lent","lenr","self"],"mappings":"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","sourcesContent":["//console.log(\"Loading PathLib.js\");\n\nfunction Path() {\n    this.keys={path:[], // selected keys\n\t       other:[] // keys available for selection\n\t      };\n    this.other={table:[], // table keys\n\t\trest:[]   // keys available for table\n\t       };\n    this.trash=[];         // remaining valid keys\n    this.valid=[];         // list of valid keys\n    this.ignore=[\"max\",\"min\",\"minlat\",\"minlon\",\"maxlat\",\"maxlon\",\"cnt\",\"level\"]; // only visible in 1D and 0D tables\n    this.select={val:{}};  // current selection criteria\n    this.where={};         // current cache for where expressions\n    this.home={path:[],val:{}};  // initial home for data...\n    this.type = {\n\tpath :      {ityp:-1,ptyp:\"path\"},\n\teye :       {ityp:0, ptyp:\"eye\"},\n\ttable :     {ityp:1, ptyp:\"table\"},\n\trest :      {ityp:2, ptyp:\"rest\"},\n\ttrash :     {ityp:3, ptyp:\"trash\"},\n\ttrashRest : {ityp:4, ptyp:\"trashRest\"},\n\trow :       {ityp:5, ptyp:\"row\"},\n\tcol :       {ityp:6, ptyp:\"col\"},\n\titem :      {ityp:7, ptyp:\"item\"}\n    };\n    this.order={}; // how to order data\t    \n    this.autocomplete=true;\n    this.init=function(state){\n\tvar par=\"Path\";\n\tstate.Utils.init(par,this);\n    };\n    this.toggleAuto=function(state) {\n\tconsole.log(\"Pressed toggleAuto\");\n\tstate.Path.autocomplete=!state.Path.autocomplete;\n\tstate.Show.showConfig(state);\n    };\n    this.cleanSelect=function(state) {\n\tvar pkeys=state.Path.keys.path;\n\tvar keys=Object.keys(state.Path.select.val);\n\tvar lenk=keys.length;\n\tfor (var ii=0;ii<lenk;ii++) {\n\t    var key=keys[ii];\n\t    if (pkeys.indexOf(key) === -1) {\n\t\tstate.Path.select.val[key]=undefined;\n\t    }\n\t}\n    };\n    this.goHome=function(state) {\n\tstate.Utils.addArray(state.Path.keys.other,state.Path.keys.path);\n\tstate.Utils.remArray(state.Path.keys.other,state.Path.home.path);\n\tstate.Path.select.val=state.Utils.cp(state.Path.home.val);\n\tstate.Path.keys.path=state.Utils.cp(state.Path.home.path);\n\t//console.log(\">>>>>> Path.goHome: \",JSON.stringify(state.Path.home),JSON.stringify(state.Path.keys.path));\n\tstate.Utils.pushUrl(state);\n\tstate.Navigate.store(state);\n\tstate.Navigate.refreshHistory(state);\n\tstate.Show.show(state);\n    };\n    this.setHome=function(state) {\n\tstate.Path.cleanSelect(state);\n\tthis.home.path=state.Utils.cp(state.Path.keys.path);\n\tthis.home.val=state.Utils.cp(state.Path.select.val);\n\tstate.Utils.pushUrl(state);\n\tconsole.log(\"Setting home.\");\n    };\n    this.getSnapshot=function(state) { // store state\n\treturn {keys:state.Utils.cp(state.Path.keys),\n\t\tother:state.Utils.cp(state.Path.other),\n\t\tselect:state.Utils.cp(state.Path.select),\n\t\torder:state.Utils.cp(state.Path.order)};\n    };\n    this.setSnapshot=function(state,snapshot) { // store state\n\tstate.Utils.restore(state.Path,snapshot);\n    };\n    this.toggleSelect=function(state,key,val) {\n\tvar vals=state.Path.select.val[key];\n\t//console.log(\"toggleSelect:\",key,val,JSON.stringify(vals));\n\tif (vals !== undefined) {\n\t    var vid=vals.indexOf(val)\n\t    if (vid !== -1) {  // remove item\n\t\tvals.splice(vid,1);\n\t\tif (vals.length===0) { // can never be totally empty...\n\t\t    vals.push(\"MAX(\"+key+\")\");\n\t\t}\n\t\tstate.Path.select.val[key]=vals;\n\t    } else {\n\t\tstate.Path.select.val[key].push(val); // add item\n\t    }\n\t    this.setWhere(state,key);\n\t    state.Show.showPath(state);\n\t    //console.log(\"Finally Vals:\",key,JSON.stringify(state.Path.select.val[key]));\n\t}\n    };\n    this.getTitle=function(state) {\n\tvar title=\"\";\n\tvar keys=state.Path.keys.path;\n\tvar parse;\n\tkeys.forEach(\n\t    function(key,index) {\n\t\tvar vals=state.Path.select.val[key];\n\t\t//console.log(\"   select:\",key,JSON.stringify(vals));\n\t\tif (vals === undefined) {vals=[];};\n\t\tvar lenv=vals.length\n\t\tfor (var ii=0;ii<lenv;ii++) {\n\t\t    var val=vals[ii]\n\t\t    if (title !== \"\") { title=title + \" | \";};\n\t\t    title=title+state.Database.getTitleDynamic(state,key,val);\n\t\t}\n\t    }\n\t);\n\t//console.log(\"Pathlib getTitle keys:\",JSON.stringify(keys),title);\n\treturn title;\n    };\n    this.makeWhere=function(state) {\n\tstate.Path.keys.path.forEach(function(item,index) {this.setWhere(state,item);}.bind(this));\n    };\n    this.setWhere=function(state,key) {\n\tvar where=this.parseWhere(state,key);\n\tstate.Path.where[key]=where;\n    };\n    this.parseWhere=function(state,key) {\n\tvar parse;\n\tvar where=\"\";\n\tvar vals=state.Path.select.val[key];\n\tif (vals === undefined) {vals=[];};\n\tvar lenv=vals.length\n\tfor (var ii=0;ii<lenv;ii++) {\n\t    var val=vals[ii]\n\t    if (where !== \"\") { where=where + \" OR \";};\n\t    where = where + state.Database.getWhereDynamic(state,key,val);\n\t    //console.log(\"From getWhereDynamic:\",key,\":\",val,\":\",where);\n\t};\n\treturn where;\n    };\n    this.makeCnt=function(state,key) {\n\treturn state.Path.select.val[key].length;\n    };\n    this.getOrderValues=function(state,skey){\n        if (state.Path.order[skey] === undefined) {\n            //console.log(\"Copying:\",JSON.stringify(Matrix.values[skey]));\n            return state.Matrix.values[skey];\n        } else {\n\t    var vals = state.Matrix.values[skey];\n\t    var plen = vals;\n\t    for (var ii = 0; ii < plen; ii++) {\n\t\tvar val=vals[ii];\n\t\tif (state.Path.order[skey].indexOf(val)===-1) {\n\t\t    state.Path.order[skey].push(val);\n\t\t}\n\t    };\n\t    return state.Path.order[skey];\n\t};\n    };\n    this.makeOrderValues=function(state,skey){\n        if (state.Path.order === undefined) {state.Path.order={};};\n        if (state.Path.order[skey] === undefined) {\n            //console.log(\"Copying:\",JSON.stringify(Matrix.values[skey]));\n            state.Path.order[skey]=state.Utils.cp(state.Matrix.values[skey]);\n        } else {\n\t    var vals = state.Matrix.values[skey];\n\t    var plen = vals;\n\t    for (var ii = 0; ii < plen; ii++) {\n\t\tvar val=vals[ii];\n\t\tif (state.Path.order[skey].indexOf(val)===-1) {\n\t\t    state.Path.order[skey].push(val);\n\t\t}\n\t    };\n\t};\n\treturn state.Path.order[skey];\n    };\n    this.bumpOrder=function(state,skey,value) {\n\t//console.log(\"Bump order:\",skey,value,JSON.stringify(state.Path.order));\n\tif (value===\"\") {\n\t    state.Path.order[skey]=undefined;\n\t} else {\n\t    this.makeOrderValues(state,skey);\n\t    var vid=state.Path.order[skey].indexOf(value);\n\t    if (vid !== -1 && vid > 0) {\n\t\tvar src=state.Path.order[skey].splice(vid, 1); // remove from array   \n\t\tstate.Utils.spliceArray(state.Path.order[skey],vid-1,0,src);\n\t    };\n\t}\n\tstate.Show.showConfig(state);\n    };\n    this.makePath=function(state) { // note that not all keys are present in the data!\n\t//console.log(\"Entering makepath.\",JSON.stringify(this.keys));\n\tvar ii,key;\n\tvar pathSet=[];\n\tif (this.keys.path === undefined) {this.keys.path=[];};\n\tif (this.keys.other === undefined) {this.keys.other=[];};\n\tif (this.trash === undefined) {this.trash=[];};\n\tif (this.keys.path.length > 0 ||\n\t    this.keys.other.length > 0 ||\n\t    this.trash.length > 0) {\n\t    // remove duplicates\n\t    //console.log(\"Filtering.\");\n\t    var olen;\n\t    this.keys.path=this.keys.path.filter(this.Unique);\n\t    this.keys.other=this.keys.other.filter(this.Unique);\n\t    this.trash=this.trash.filter(this.Unique);\n\t    //console.log(\"setup:\",JSON.stringify(setup));\n\t    //console.log(\"Remove invalid keys from path.\");\n\t    // remove invalid keys from path\n\t    var plen = this.keys.path.length;\n\t    for (ii = 0; ii < plen; ii++) {\n\t\tkey=this.keys.path[ii];\n\t\tif (state.Database.keyCnt[key]  === undefined) {\n\t\t    this.keys.path.splice(ii, 1);\n\t\t    ii=ii-1;\n\t\t    plen=plen-1;\n\t\t}\n\t    }\n\t    //console.log(\"Remove invalid keys from other.\");\n\t    // remove invalid keys from other\n\t    olen = this.keys.other.length;\n\t    for (ii = 0; ii < olen; ii++) {\n\t\tkey=this.keys.other[ii];\n\t\tif (state.Database.keyCnt[key]  === undefined) {\n\t\t    this.other.rest.splice(ii, 1);\n\t\t    ii=ii-1;\n\t\t    olen=olen-1;\n\t\t}\n\t    }\n\t    //console.log(\"Remove invalid keys from trash.\");\n\t    // remove invalid keys from trash\n\t    olen = this.trash.length;\n\t    for (ii = 0; ii < olen; ii++) {\n\t\tkey=this.trash[ii];\n\t\tif (state.Database.keyCnt[key]  === undefined) {\n\t\t    this.trash.splice(ii, 1);\n\t\t    ii=ii-1;\n\t\t    olen=olen-1;\n\t\t}\n\t    }\n\t    //console.log(\"Update trash with keys.\");\n\t    // we already have a path, update trash with new keys\n\t    for (key in state.Database.keyCnt) {\n\t\tif (this.keys.path.indexOf(key)  === -1 && \n\t\t    this.keys.other.indexOf(key)  === -1 && \n\t\t    this.trash.indexOf(key)  === -1 &&\n\t\t    state.Utils.missing(this.ignore,key)) {\n\t\t    pathSet[key]=\"trash\";\n\t\t    this.select.val[key]=undefined;\n\t\t    this.where[key]=\"\";\n\t\t    this.trash.push(key);\n\t\t}\n\t    }\n\t} else {\n\t    // new path...\n\t    console.log(\"New path\");\n\t    // ...define this.select.val for all keys in input data\n\t    for (key in state.Database.keyCnt) {\n\t\tpathSet[key]=\"data\";\n\t    };\n\t    this.keys.path=[];\n\t    this.other.table=[]\n\t    this.other.rest=[]\n\t    this.select.val={}; // no values are set so far\n\t    this.where={}\n\t    console.log(\"Copy default trash keys.\",JSON.stringify(state.Default.trash));\n\t    // copy default trash keys (that are used) to trash...\n\t    if (state.Default.trash !== undefined) {\n\t\tvar tlen = state.Default.trash.length;\n\t\tfor (ii = 0; ii < tlen; ii++) {\n\t\t    key=state.Default.trash[ii];\n\t\t    if (pathSet[key] !== undefined) {\n//\t\t\tif (state.Utils.missing(this.trash,key)) { \n//\t\t\t    this.trash.push(key);\n//\t\t\t};\n\t\t\tpathSet[key]=undefined; // ignore key from now on...\n\t\t    }\n\t\t}\n\t\t//console.log(\"Pathset:\",JSON.stringify(pathSet),JSON.stringify(state.Default.trash));\n\t    };\n\t    //console.log(\"Copy default other keys.\");\n\t    //console.log(\"makePath A:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n\t    // console.log(\"Added trash:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n\t    // copy default other keys (that are used) to other...\n\t    if (state.Default.other !== undefined) {\n\t\tvar klen = state.Default.other.length;\n\t\tfor (ii = 0; ii < klen; ii++) {\n\t\t    key=state.Default.other[ii];\n\t\t    if (pathSet[key] !== undefined) { // key not present in input data\n\t\t\tif (state.Utils.missing(this.keys.other,key)) {\n\t\t\t    this.keys.other.push(key);\n\t\t\t};\n\t\t\tpathSet[key]=\"found\";\n\t\t    }\n\t\t}\n\t    }\n\t    //console.log(\"makePath B:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n\t    //console.log(\"Add missing keys.\");\n\t    // add missing keys to path\n\t    for (key in state.Database.keyCnt) {\n\t\tif (state.Utils.missing(this.ignore,key)) {\n\t\t    if (pathSet[key] === \"data\") {\n\t\t\tif (state.Utils.missing(this.keys.other,key)) {\n\t\t\t    this.keys.other.push(key);\n\t\t\t};\n\t\t\t//console.log(\"Added key:\",key);\n\t\t\tpathSet[key] = \"added\";\n\t\t    }\n\t\t};\n\t    };\n\t    // add undefined values in values\n\t    // for (key in state.Database.keyCnt) {\n\t    //     if (state.Database.keyCnt[key].cnt<state.Database.cnt) {\n\t    // \tstate.Database.values[key].push(undefined);\n\t    //     }\n\t    // }\n\t    // // sort sub-path according to count...\n\t    // this.keys.other=this.keys.other.sort(function(state,a, b) {\n\t    //     if (state.Database.values[a]  === undefined) {\n\t    // \treturn -1;\n\t    //     } else if (state.Database.values[b]  === undefined) {\n\t    // \treturn 1;\n\t    //     } else {\n\t    // \treturn state.Database.values[a].length - state.Database.values[b].length\n\t    //     }\n\t    // });\n\t    //console.log(\"makePath C:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n\t    //console.log(\"Push other keys to table and rest.\");\n\t    var glen = this.keys.other.length;\n\t    for (ii = 0; ii < glen; ii++) {\n\t\tkey=this.keys.other[ii];\n\t\tif (ii<2) {\n\t\t    this.other.table.push(key);\n\t\t} else {\n\t\t    this.other.rest.push(key);\n\t\t}\n\t    }\n\t}\n\t//console.log(\"makePath D:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n\tstate.Navigate.reset(state);\n\t//console.log(\"keys:\",JSON.stringify(state.Database.values));\n\t//console.log(\"Before Valid:\",JSON.stringify(state.Path.valid),JSON.stringify(state.Path.keys));\n\tstate.Utils.cpArray(state.Path.valid,state.Path.keys.path);\n\tstate.Utils.cpArray(state.Path.valid,state.Path.keys.other);\n\tstate.Utils.cpArray(state.Path.valid,state.Path.trash);\n\t//console.log(\"After Valid:\",JSON.stringify(state.Path.valid),JSON.stringify(state.Path.keys));\n\t//console.log(\"Completed makepath.\");\n    };\n    this.getIndex=function(state,trg) {\n\treturn this.keys.path.indexOf(trg);\n    };\n    this.exportAllKeys=function(state) { // export keys from \"all\" to \"rest\"\n\tthis.other.table=[];\n\tthis.other.rest=[];\n\tvar jj=0;\n\tvar key,ii;\n\tvar delay=false;\n\tif (this.keys.other !== undefined) {\n\t    var olen=this.keys.other.length;\n\t    for (ii=0;ii<olen;ii++) {\n\t\tkey=this.keys.other[ii];\n\t\tif (key === \"\") {\n\t\t    if (jj == 0) {\n\t\t\tdelay=true;\n\t\t    } else if (jj < 2) {\n\t\t\tjj=jj+1\n\t\t    }\n\t\t} else if (state.Matrix.keyCnt[key] !== undefined &&\n\t\t\t   state.Matrix.keyCnt[key] == 0) { // do nothing\n\t\t} else {\n\t\t    if (jj < 2) {\n\t\t\tthis.other.table.push(key);\n\t\t\tjj=jj+1;\n\t\t\tif (delay && jj<2) {jj=jj+1;};\n\t\t    } else if (key !== \"\") {\n\t\t\tthis.other.rest.push(key);\n\t\t    }\n\t\t}\n\t    };\n\t}\n\t// sanity check...\n\tvar vlen=this.valid.length;\n\tfor (ii=0;ii<vlen;ii++) {\n\t    key=this.valid[ii];\n\t    if (this.keys.path.indexOf(key)===-1 &&\n\t\tthis.keys.other.indexOf(key)===-1 &&\n\t\tthis.trash.indexOf(key)===-1) {\n\t\t//console.log(\"**** Path failed sanity check:\",\n\t\t//JSON.stringify(this.keys),JSON.stringify(this.trash),key);\n\t\tthis.trash.push(key);\n\t    }\n\t}\n\t//this.sortTableKeys(state);\n\t//console.log(\"Exported:\",JSON.stringify(this.keys),JSON.stringify(this.other),JSON.stringify(this.trash));\n    };\n    // move key from table to path\n    this.tableKeyToPath=function(state,key,val,where,cnt) { // keep abscissa\n\t//console.log(\"this.Selecting:\",key,\"=\",val,\", where=\",where);\n\tvar sid = state.Path.keys.other.indexOf(key);\n\tif (sid !== -1) { // key is a table-key...\n\t    state.Path.select.val[key]=[val];\n\t    state.Path.where[key]=where;\n\t    var src=state.Path.keys.other.splice(sid, 1); // remove from path\n\t    if ( state.Utils.missing(state.Path.keys.path,src)) {\n\t\t//console.log(\"Adding to path:\",JSON.stringify(src));\n\t\tstate.Utils.pushKey(state.Path.keys.path,src);\n\t\t//state.Path.keys.path=state.Path.keys.path.concat(src); // last path position\n\t    };\n\t    if (cnt>1 && state.Utils.missing(state.Path.trash,src)) {\n\t\t//console.log(\"Adding \",JSON.stringify(src),\" to trash.\");\n\t\tstate.Utils.pushKey(state.Path.trash,src);\n\t\t//state.Path.trash=state.Path.trash.concat(src)\n\t    };\n\t    //console.log(\"Selectkey:\",JSON.stringify(setup),JSON.stringify(src));\n\t    return true;\n\t} else {\n\t    console.log(\"Missing \",key,\" in path:\",JSON.stringify(state.Path.keys));\n\t    return false;\n\t}\n    };\n    // select give table key...\n    this.selectTableKey=function(state,key,keyval,keywhere,keycnt) { // keep abscissa\n\tvar sid = state.Path.keys.other.indexOf(key);\n\t//console.log(\"SelectTableKey:\",key,sid,JSON.stringify(state.Path.keys.other));\n\tif (sid !== -1) { // key is a table-key...\n\t    var where=state.Database.getWhere(state);\n\t    var keys=state.Path.other.rest;\n\t    var lenk=keys.length;\n\t    if (lenk==0 || ! state.Path.autocomplete || sid > 1) { // nothing to consider\n\t\tvar ret=this.tableKeyToPath(state,key,keyval,keywhere,keycnt);\n\t\treturn ret;\n\t    } else {\n\t\t//console.log(\"Before:\",JSON.stringify(state.Path.keys));\n\t\t// look for table-key candidates in the rest-stack\n\t\tvar org=state.Utils.cp(state.Path.other.rest);\n\t\tvar oth=(sid===0?state.Path.other.table[1]:state.Path.other.table[0]); // the other key\n\t\tvar sel=[];\n\t\tvar val=[];\n\t\tvar rest=[];\n\t\tvar tkey=\"\";\n\t\tfor (var ii = 0; ii< lenk; ii++) {\n\t\t    // first key dependencies\n\t\t    var ikey=keys[ii];\n\t\t    //console.log(\">>>Checking:\",ikey, \"(\",key,\",\",oth,\")\");\n\t\t    var ftable=[key,ikey];\n\t\t    var fdependancy=this.compareKeys(state,where,ftable);\n\t\t    var finformation=this.getInformation(state,ftable,fdependancy);\n\t\t    // second key dependencies\n\t\t    var stable=[oth,ikey];\n\t\t    var sdependancy=this.compareKeys(state,where,stable);\n\t\t    var sinformation=this.getInformation(state,stable,sdependancy);\n\t\t    //console.log(\"   Second:\",oth,ikey,JSON.stringify(sdependancy),JSON.stringify(sinformation));\n\t\t    // find out which keys should be selected, and which should be used in table...\n\t\t    // candidates redundant wrt the selected keys are selected or ignored\n\t\t    //console.log(\"   Comparing:\",key,oth,ikey,JSON.stringify(finformation),JSON.stringify(sinformation));\n\t\t    // in case there are no targets\n\t\t    if (sinformation[oth]===\"insignificant\" || sinformation[ikey]===\"insignificant\" || tkey !== \"\") {    // ignore insignificant ikey\n\t\t\trest.push(ikey);\n\t\t\t//console.log(\"  Insignificant:\",ikey,JSON.stringify(sel),JSON.stringify(rest),tkey);\n\t\t    } else if (finformation[ikey]===\"redundant\") { // select redundant ikey\n\t\t\tvar ival=fdependancy.val[ikey];\n\t\t\tsel.push(ikey);\n\t\t\tval.push(ival);\n\t\t\t//console.log(\"  Redundant:\",ikey,JSON.stringify(sel),JSON.stringify(rest),tkey);\n\t\t    } else {\n\t\t\ttkey=ikey;                    // we have found a good candidate\n\t\t\t//console.log(\"  Target:\",ikey,JSON.stringify(sel),JSON.stringify(rest),tkey);\n\t\t    }\n\t\t}\n\t\t//console.log(\"  Sel/Val:\",JSON.stringify(sel),JSON.stringify(val));\n\t\tvar ret=this.tableKeyToPath(state,key,keyval,keywhere,keycnt);\n\t\tif (tkey !== \"\") {  // we found a target\n\t\t    var lens=sel.length;\n\t\t    for (var jj=0;jj<lens;jj++) {\n\t\t\tvar jkey=sel[jj];\n\t\t\tvar jkeyval=val[jj];\n\t\t\tvar jkeywhere=jkey + \"=\" + jkeyval;\n\t\t\tthis.tableKeyToPath(state,jkey,jkeyval,jkeywhere,1);\n\t\t    }\n\t\t    state.Path.keys.other=[oth,tkey].concat(state.Utils.clean(rest));\n\t\t } else if (sel.length > 0 || rest.length > 0) { // no target\n\t\t     var lens=sel.length;\n\t\t     for (var jj=0;jj<lens;jj++) {\n\t\t \tvar jkey=sel[jj];\n\t\t \tvar jkeyval=val[jj];\n\t\t \tvar jkeywhere=jkey + \"=\" + jkeyval;\n\t\t \tthis.tableKeyToPath(state,jkey,jkeyval,jkeywhere,1);\n\t\t     }\n\t\t     state.Path.keys.other=[oth,\"\"].concat(state.Utils.clean(rest));\n\t\t } else {\n\t\t     state.Path.keys.other=[oth];\n\t\t }\n\t\t//console.log(\"After:\",JSON.stringify(state.Path.keys),ret);\n\t\treturn ret;\n\t    }\n\t};\n    };\n    // check if keys are inter-dependent, (\"common\", \"unique\", \"dependent\", \"unknown\") \n    this.compareKeys=function(state,where,keys) {\n\tvar key;\n\t//var where = state.Database.getWhere(state);\n\tvar ret={dep:{},val:{}};\n\tvar hits={};\n\tvar maxh={};\n\tvar docs=state.Database.getCntDocs(state,where,keys); // current table keys\n\tvar slen=keys.length;\n\tvar dlen = docs.length;\n\tfor (var ii = 0; ii < dlen; ii++) {\n    \t    var doc=docs[ii];\n\t    for (var jj=0;jj<slen;jj++) {\n\t\tkey=keys[jj];\n\t\tif (doc[key] !== undefined) {\n\t\t    var val=doc[key];\n\t\t    ret.val[key]=val;\n\t\t    if (hits[key]  === undefined) {hits[key]={};}\n\t\t    hits[key][val] = 1+ (hits[key][val]||0);\n\t\t    //console.log(\"Found:\",key,val,hits[key][val]);\n\t\t    if (hits[key][val] > (maxh[key]||0)) {\n\t\t\tmaxh[key]=hits[key][val];\n\t\t    }\n\t\t};\n\t    }\n\t};\n\tfor (var kk=0;kk<slen;kk++) {\n\t    key=keys[kk];\n\t    if (maxh[key] !== undefined) {\n\t\tif (maxh[key]  === 1) {          // every entry has unique value\n\t\t    ret.dep[key]=\"unique\";\n\t\t} else if (maxh[key]  === dlen) {\n\t\t    ret.dep[key]=\"common\";    // all entries have same value\n\t\t} else {\n\t\t    ret.dep[key]=\"dependent\";    // entries depend on values\n\t\t}\n\t    } else {\n\t\tret.dep[key]=\"unknown\";\n\t    }\n\t};\n\treturn ret;\n    };\n    this.getInformation=function(state,keys,dependancy){\n\tvar key;\n\tvar information={};\n\tvar slen=keys.length;\n\tfor (var jj=0;jj<slen;jj++) {\n\t    key=keys[jj];\n\t    if (dependancy.dep[key]  === \"unique\") {\n\t\tfor (var rr=0;rr<slen;rr++) {\n\t\t    var rkey=keys[rr];\n\t\t    if (dependancy.dep[rkey] === \"unique\") { // do not remove every \"unique\" variable\n\t\t\tif (rr > jj) {\n\t\t\t    information[rkey]=\"redundant\"; // later control variables are redundant\n\t\t\t};\n\t\t    } else { // remove all other variables\n\t\t\tif (rr !== jj) {\n\t\t\t    if (dependancy.dep[rkey] === \"common\") {\n\t\t\t\tinformation[rkey]=\"redundant\"; // \n\t\t\t    } else {\n\t\t\t\tinformation[rkey]=\"insignificant\"; //\n\t\t\t    };\n\t\t\t};\n\t\t    }\n\t\t}\n\t    }\n\t}\n\tvar cnt=0;\n\tfor (var kk=slen-1;kk>=0;kk--) {\n\t    key=keys[kk];\n\t    if (dependancy[key]  === \"common\") { // leave at least one redundant variable\n\t\tcnt=cnt+1;\n\t\tif (cnt < slen) {\n\t\t    information[key]=\"redundant\";\n\t\t}\n\t    }\n\t};\n\treturn information;\n    };\n    this.getNextTableCandidate=function(state,where,key,cand) {\n\tvar clen=cand.length;\n\tfor (var cc=0; cc<clen; cc++) {\n\t    var ckey=cand[cc];\n\t    var table=[key,ckey];\n\t    var dependancy=this.compareKeys(state,where,table);\n\t    var information=this.getInformation(state,table,dependancy);\n\t    if (information[ckey] === undefined) {\n\t\tcand.splice(cc,1);\n\t\treturn ckey;\n\t    }\n\t}\n\treturn; // no cand-idate\n    };\n    this.disposeTableKey=function(state,key,dependancy,information){\n\tvar bdone;\n\tif (information[key]  === \"redundant\") {// trash key\n\t    bdone=false;\n\t    state.Utils.moveToArray(state.Path.keys.other,state.Path.keys.path,key,-1);\n\t    var val=dependancy.val[key];\n\t    state.Path.select.val[key]=[val];\n\t    state.Path.where[key]=key+'=\"'+val+'\"'\n\t    //this.order[key]=order;\n\t} else if (information[key]  === \"insignificant\") {// trash key\n\t    bdone=false;\n\t    state.Utils.moveToArray(state.Path.keys.other,state.Path.trash,key,0);\n\t};\n\treturn bdone;\n    };\n    this.checkTableKeys=function(state) {\n\tvar where = state.Database.getWhere(state);\n\tstate.Matrix.initKeyCnt(state);\n\tstate.Matrix.mapKeyCnt(state,where,0,state.Path.keys.other); // possible table keys (no undefined)\n\tstate.Path.exportAllKeys(state);\n\tconsole.log(\"checkTableKeys Starting:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.trash),JSON.stringify(state.Path.other.table));\n\tvar table=state.Path.other.table;  // current table-keys\n\tvar cand=state.Path.other.rest;    // current candidates\n\tvar bdone=(table.length < 2);\n\tdo {\n\t    //check current table-keys\n\t    var dependancy=this.compareKeys(state,where,table);\n\t    var information=this.getInformation(state,table,dependancy);\n\t    // check if first key is invalid\n\t    var fkey=table[0];\n\t    var skey=table[1];\n\t    var fdest=information[fkey];\n\t    var sdest=information[skey];\n\t    console.log(\"Looping:\",fkey,dependancy.dep[fkey],fdest,skey,dependancy.dep[skey],sdest);\n\t    if (sdest !== undefined) {        // second key is in-valid\n\t\t// get next candidate\n\t\tvar ckey=this.getNextTableCandidate(state,where,fkey,cand);\n\t\tif (ckey !== undefined) {\n\t\t    console.log(\"Found 2-candidate:\",fkey,ckey,\" removing \",skey);\n\t\t    this.disposeTableKey(state,skey,dependancy,information)\n\t\t    table=[fkey,ckey];\n\t\t    bdone=false;\n\t\t} else { // no more candidates\n\t\t    console.log(\"No 2-candidate:\",fkey,JSON.stringify(cand));\n\t\t    bdone=true;\n\t\t}\n\t    } else if (fdest !== undefined) { // first key is in-valid\n\t\t// get next candidate\n\t\tvar ckey=this.getNextTableCandidate(state,where,skey,cand);\n\t\tif (ckey !== undefined) {\n\t\t    console.log(\"Found 1-candidate:\",skey,ckey,\" removing \",fkey);\n\t\t    this.disposeTableKey(state,fkey,dependancy,information)\n\t\t    table=[skey,ckey];\n\t\t    bdone=false;\n\t\t} else { // no more candidates\n\t\t    console.log(\"No 1-candidate:\",skey,JSON.stringify(cand));\n\t\t    bdone=true;\n\t\t}\n\t    } else {    // both keys are valid\n\t\tconsole.log(\"Keys ok:\",fkey,skey);\n\t\tbdone=true;\n\t    }\n\t    if (! bdone) {state.Path.exportAllKeys(state);}\n\t} while (! bdone);\n\tconsole.log(\"checkTableKeys Done:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.trash));\n    };\n    this.checkTableKeysOld=function(state) {\n\tvar ret=[];\n\tvar where = state.Database.getWhere(state);\n\tstate.Matrix.initKeyCnt(state);\n\tstate.Matrix.mapKeyCnt(state,where,0,state.Path.keys.other); // possible table keys (no undefined)\n\tstate.Path.exportAllKeys(state);\n\tconsole.log(\"this.checkTableKeys Entering.\",JSON.stringify(state.Path.keys));\n\t//var keys=state.Path.other.table;\n\tvar bdone= state.Path.other.table.length > 1;\n\tvar order=state.Utils.cp(state.Path.keys.other);\n\tdo {\n\t    console.log(\"this.checkTableKeys Looping.\",state.Path.other.rest.length);\n\t    bdone=true;\n\t    if (state.Path.other.table.length > 1) {\n\t\t// check for number of column values\n\t\tvar dependancy=this.compareKeys(state,where,state.Path.other.table);\n\t\tvar information=this.getInformation(state,state.Path.other.table,dependancy);\n\t\tconsole.log(\"Rm:\",JSON.stringify(dependancy),JSON.stringify(information));\n\t\tvar slen=state.Path.other.table.length;\n\t\tfor (var jj=0;jj<slen;jj++) {\n\t\t    var key=state.Path.other.table[jj];\n\t\t    if (information[key]  === \"redundant\") {// move key to path\n\t\t\tbdone=false;\n\t\t\tstate.Utils.moveToArray(state.Path.keys.other,state.Path.keys.path,key,-1);\n\t\t\tvar val=dependancy.val[key];\n\t\t\tstate.Path.select.val[key]=[val];\n\t\t\tstate.Path.where[key]=key+'=\"'+val+'\"'\n\t\t\tthis.order[key]=order;\n\t\t    } else if (information[key]  === \"insignificant\") {// trash key\n\t\t\tbdone=false;\n\t\t\tstate.Utils.moveToArray(state.Path.keys.other,state.Path.trash,key,0);\n\t\t    };\n\t\t}\n\t\tif (! bdone) {state.Path.exportAllKeys(state);}\n\t    };\n\t} while (! bdone);\n\t//console.log(\"this.checkTableKeys Done.\",JSON.stringify(state.Path.other.table));\n\treturn ret;\n    };\n    // get X-priority, {colx,coly1,coly2...)\n    this.sortTableKeys=function(state){\n\t// make priority index\n\tvar arr=state.Utils.cp(this.other.table);\n\tvar pri=state.Layout.getPriorityIndex(state,arr);\n\t// sort the array according to priority\n\tthis.other.table=arr.sort(function(a,b){\n\t    if (a  === \"\") { \n\t\treturn 1;\n\t    } else if (b  === \"\") {\n\t\treturn -1;\n\t    } else if (pri[a]<pri[b]) { \n\t\treturn 1;\n\t    } else if (pri[a]>pri[b]) {\n\t\treturn -1;\n\t    } else {\n\t\treturn 0;\n\t    }\n\t});\n\t//console.log(\"TableKeys:\",JSON.stringify(this.other.table),\n\t//\t\" Pri:\",JSON.stringify(state.Layout.priority),\n\t//\t\" P:\",JSON.stringify(pri));\n\treturn\n    };\n    this.keyVal=function(state,key) {\n\tif (this.select.val[key] !== undefined &&\n\t    this.select.val[key] !== null &&\n\t    this.select.val[key] !== \"\") {\n\t    return this.select.val[key];\n\t} else {\n\t    return;\n\t}\n    }    \n    \n    this.keyValOk=function(state,val) {\n\tvar ok=true;\n\treturn ok;\n    };\n    this.moveKey=function(state,styp,skey,ttyp,tid) {\n\tvar sid=this.keys[styp].indexOf(skey);\n\tif (sid !== -1) {\n\t    var src=this.keys[styp].splice(sid, 1);    // remove from path\n\t    if (tid  === undefined || tid  === -1) {\n\t\tthis.keys[ttyp]=this.keys[ttyp].concat(src);         // last position\n\t    } else {\n\t\tstate.Utils.spliceArray(this.keys[ttyp],tid, 0, src);\n\t    }\n\t    return true;\n\t}else {\n\t    return false;\n\t}\n    };\n    this.moveKeys=function(state,styp,skeys,ttyp,tid) {\n\tvar len=skeys.length\n\tfor (var ss=0;ss<len;ss++) {\n\t    var skey=skeys[ss];\n\t    var sid=this.keys[styp].indexOf(skey);\n\t    if (sid !== -1) {\n\t\tvar src=this.keys[styp].splice(sid, 1);    // remove from path\n\t\tif (tid  === undefined || tid  === -1) {\n\t\t    this.keys[ttyp]=this.keys[ttyp].concat(src);         // last position\n\t\t} else {\n\t\t    state.Utils.spliceArray(this.keys[ttyp],tid, 0, src);\n\t\t}\n\t    }\n\t}\n    };\n    this.swapTableKey=function(state,skey,tkey) {\n\tvar sid=this.other.table.indexOf(skey);\n\tvar tid=this.other.table.indexOf(tkey);\n\tif (tid !== sid && this.other.table.length > 1) {\n\t    var tin2=this.keys.other.indexOf(this.other.table[1]);\n\t    var tkey2=this.keys.other.splice(tin2, 1);    // remove from array\n\t    state.Utils.spliceArray(this.keys.other,0, 0, tkey2);\n\t    //console.log(\"Swapped:\",tkey2,tkey,JSON.stringify(this.keys.other));\n\t    return true;\n\t} else {\n\t    return false;\n\t}\n    };\n    this.delTableKey=function(state,key) {\n\tvar secondkey;\n\tvar secondind;\n\tvar sid=this.keys.other.indexOf(key);\n\tif (sid !== -1) {\n\t    var sin=this.other.table.indexOf(key);\n\t    var save=(sin  === 0);\n\t    if (save) {\n\t\tsecondkey=this.other.table[1];\n\t\tsecondind=this.pullKey(state,\"other\",secondkey);\n\t    }\n\t    this.pullKey(state,\"other\",key);\n\t    if (save && secondind !== undefined && secondind !== -1) {\n\t\tthis.pushKey(state,\"other\",secondkey,secondind);\n\t    }\n\t    return sin;\n\t}\n    };\n    this.moveTableKey=function(state,skey,ttyp,tid) {\n\tvar sid=this.keys.other.indexOf(skey);\n\tif (sid !== -1) {\n\t    //var sin=\n\t    this.delTableKey(state,skey);\n\t    if (tid  === undefined || tid  === -1) {\n\t\tthis.keys[ttyp]=this.keys[ttyp].concat(skey);         // last position\n\t    } else {\n\t\tstate.Utils.spliceArray(this.keys[ttyp],tid, 0, skey);\n\t    }\n\t    return true;\n\t}else {\n\t    return false;\n\t}\n    };\n    this.moveKey2Table=function(state,styp,skey,tkey) {\n\t//console.log(\"MoveKey2Table:\",JSON.stringify(this.keys));\n\tvar tid=this.keys.other.indexOf(tkey);\n\tvar sid=this.keys[styp].indexOf(skey)\n\tif (tid !== -1 && sid !== -1 && skey !== tkey) { // exists and is not the same\n\t    this.keys[styp][sid]=tkey\n\t    this.keys.other[tid]=skey\n\t    return true;\n\t} else {\n\t    return false;\n\t}\n    };\n    this.moveTrash2Table=function(state,tkey) {\n\tvar secondkey;\n\tvar secondind;\n\tvar tid=this.other.table.indexOf(tkey);\n\tif (tid !== -1) {\n\t    var save=(tid  === 0);\n\t    if (save) {\n\t\tsecondkey=this.other.table[1];\n\t\tsecondind=this.pullKey(state,\"other\",secondkey);\n\t    };\n\t    var tin=this.keys.other.indexOf(tkey);\n\t    this.moveTrash(state,\"other\",tin+1);\n\t    if (save && secondind !== undefined && secondind !== -1) {\n\t\tthis.pushKey(state,\"other\",secondkey,secondind);\n\t    }\n\t    return true;\n\t} else {\n\t    return false;\n\t}\n    };\n    this.moveTrash=function(state,ttyp,tin) {\n\tstate.Utils.spliceArray(this.keys[ttyp],tin, 0, this.trash);\n\tthis.trash=[];\n    };\n    this.moveAllKey=function(state,styp,skey,ttyp,tid) {\n\tvar lenp=this.keys[styp].length;\n\tvar sid=this.keys[styp].indexOf(skey);\n\tif (sid !== -1) {\n\t    var src=this.keys[styp].splice(sid,lenp-sid);\n\t    state.Utils.spliceArray(this.keys[ttyp],tid,0,src);\n\t    return true;\n\t} else {\n\t    return false;\n\t}\n    };\n    this.moveAllFirst=function(state,ttyp,tin) {\n\tvar tlen=this.keys[ttyp].length;\n\tvar src=this.keys[ttyp].splice(tin,tlen-tin);\n\tstate.Utils.spliceArray(this.keys[ttyp],0, 0,src);\n    };\n    this.filterKeys=function(state,arr) {\n\tvar out=[];\n\tvar alen=arr.length;\n\tfor(var ii=0; ii<alen; ii++) {\n\t    var val=arr[ii];\n\t    if (this.keyValOk(state,val)) {\n\t\tout.push(val);\n\t    }\n\t}\n\t//console.log(\"CheckOk \",JSON.stringify(arr),\"->\",JSON.stringify(out));\n\treturn out;\n    };\n    this.pullArrayKey=function(state,array,key) {\n\tvar sin=array.indexOf(key);\n\tif (sin !== -1) {\n\t    //var src=\n\t    array.splice(sin, 1);    // remove from path\n\t};\n\treturn sin;\n    };\n    //////////////////////////////// COL/ROW FUNCTIONS ///////////////////////\n    this.getColKey=function(state) {\n\tvar arr=state.Utils.cp(this.other.table);\n\tvar pri=state.Layout.getPriorityIndex(state,arr);\n\tif (state.Show.getLayoutMode(state) === state.Show.code.layout.Map) {\n\t    return \"_lon\";\n\t} else if (pri[this.other.table[0]] < pri[this.other.table[1]]) {\n\t    return this.other.table[1];\n\t} else {\n\t    return this.other.table[0];\n\t}\n    };\n    this.getRowKey=function(state) {\n\tvar arr=state.Utils.cp(this.other.table);\n\tvar pri=state.Layout.getPriorityIndex(state,arr);\n\tif (state.Show.getLayoutMode(state) === state.Show.code.layout.Map) {\n\t    return \"_lat\";\n\t} else if (pri[this.other.table[0]] < pri[this.other.table[1]]) {\n\t    return this.other.table[0];\n\t} else {\n\t    return this.other.table[1];\n\t}\n    };\n    this.pushKey=function(state,typ,key,ind) {\n\tif (key !== undefined && key !== \"\") {\n\t    state.Utils.spliceArray(this.keys[typ], ind, 0, key);\n\t}\n\tstate.Utils.clean(this.keys[typ]);\n    };\n    this.pullKey=function(state,typ,key) {\n\tvar sin=this.keys[typ].indexOf(key);\n\tif (sin !== -1) {\n\t    var src=this.keys[typ].splice(sin, 1);    // remove from path\n\t    if (src !== key) {console.log(\"System error:\",src,key);}\n\t    return sin;\n\t};\n    };\n    this.pushColKey=function(state,key) {\n\tif (key !== undefined && key !== \"\") {\n\t    state.Utils.spliceArray(this.keys.other,0, 0, key);\n\t}\n    };\n    this.pushRowKey=function(state,key) {\n\tif (key !== undefined && key !== \"\") {\n\t    state.Utils.spliceArray(this.keys.other,1, 0, key);\n\t}\n    };\n    this.checkNewPath=function(state,styp,skey) { // check if values are defined for path\n\tvar ok,ii;\n\tvar sid=this.keys.path.indexOf(skey);\n\tif (styp  === this.type.table.ptyp) {\n\t    ok=true;\n\t    var lent=this.other.table.length-1;\n\t    if (sid !== undefined) {lent=sid+1;};\n\t    for (ii = 0; ii <= lent; ii++) {\n\t\tvar key=this.other.table[ii];\n\t\tif (this.keyVal(state,key)  === undefined) {\n\t\t    ok=false;\n\t\t}\n\t    }\n\t} else if (styp  === this.type.rest.ptyp) {\n\t    ok=this.checkNewPath(state,this.type.table.ptyp);\n\t    if (ok) {\n\t\tvar lenr=this.other.rest.length-1;\n\t\tif (sid !== undefined) {lenr=sid+1;};\n\t\tfor (ii = 0; ii <= lenr; ii++) {\n\t\t    key=this.other.rest[ii];\n\t\t    if (this.keyVal(state,key)  === undefined) {\n\t\t\tok=false;\n\t\t    }\n\t\t}\n\t    }\n\t}\n\treturn ok;\n    };\n    //values[key]=values[key].filter(this.Unique);\n    this.Unique=function(value, index, self) { \n\treturn self.indexOf(value)  === index;\n    }\n};\nexport default Path;\n"]},"metadata":{},"sourceType":"module"}