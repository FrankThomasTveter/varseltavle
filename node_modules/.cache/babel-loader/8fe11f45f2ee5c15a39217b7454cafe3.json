{"ast":null,"code":"//console.log(\"Loading NavigateLib.js\");\nfunction Navigate() {\n  this.history = {\n    pos: 0,\n    // position of next snapshot\n    track: []\n  };\n  this.home = undefined;\n  this.order = {}; // key order\n\n  this.trash = {}; // key trash\n\n  this.reset = function (state) {\n    // store state\n    state.Navigate.history = {\n      pos: 0,\n      track: []\n    };\n    this.store(state);\n  };\n\n  this.store = function (state) {\n    // store state\n    if (state.Navigate.history.track.length > state.Navigate.history.pos + 1) {\n      state.Navigate.history.track = state.Navigate.history.track.splice(0, state.Navigate.history.pos + 1);\n    } else if (state.Navigate.history.track.length > 10) {\n      state.Navigate.history.track = state.Navigate.history.track.splice(0, 10);\n    }\n\n    ;\n    var snapshot = state.Path.getSnapshot(state);\n    state.Navigate.history.track.push(snapshot);\n    state.Navigate.history.pos = state.Navigate.history.track.length - 1; //console.log(\">>>>>> Stored state...\",JSON.stringify(state.Navigate.history),\n    //\t    this.canUndo(state),this.canRedo(state),\n    //\t    state.Navigate.history.pos,state.Navigate.history.track.length);\n\n    console.log(\">>>>> stored state.\", JSON.stringify(state.path.keys));\n    this.refreshHistory(state);\n  };\n\n  this.refreshHistory = function (state) {\n    if (state.React.Config !== undefined) {\n      state.React.Config.show();\n    }\n\n    ;\n  };\n\n  this.canUndo = function (state) {\n    return state.Navigate.history.pos > 0;\n  };\n\n  this.canRedo = function (state) {\n    return state.Navigate.history.pos < state.Navigate.history.track.length - 1;\n  };\n\n  this.undo = function (state) {\n    //console.log(\">>>>>> Undo:\",this.canUndo(state));\n    if (this.canUndo(state)) {\n      state.Navigate.history.pos = state.Navigate.history.pos - 1;\n      var snapshot = state.Navigate.history.track[state.Navigate.history.pos]; //console.log(\"Setting snapshot:\",JSON.stringify(snapshot));\n\n      state.Path.setSnapshot(state, snapshot);\n      this.refreshHistory(state);\n      state.Show.show(state);\n    }\n\n    ;\n  };\n\n  this.redo = function (state) {\n    //console.log(\">>>>>> Redo:\",this.canRedo(state),state.Navigate.history.pos,JSON.stringify(state.Navigate.history.track));\n    if (this.canRedo(state)) {\n      state.Navigate.history.pos = state.Navigate.history.pos + 1;\n      var snapshot = state.Navigate.history.track[state.Navigate.history.pos]; //console.log(\"Setting snapshot:\",JSON.stringify(snapshot));\n\n      state.Path.setSnapshot(state, snapshot);\n      this.refreshHistory(state);\n      state.Show.show(state);\n    }\n  };\n\n  this.setHome = function (state) {\n    var snapshot = state.Path.getSnapshot(state);\n    state.Navigate.home = snapshot;\n    state.Navigate.store(state);\n  };\n\n  this.goHome = function (state) {\n    //console.log(\">>>>>> Undo:\",this.canUndo(state));\n    var snapshot = state.Navigate.home; //console.log(\"Setting snapshot:\",JSON.stringify(snapshot));\n\n    state.Path.setSnapshot(state, snapshot);\n    this.refreshHistory(state);\n    state.Show.show(state);\n  };\n\n  this.onClickTablePath = function (state, skey, tkey) {\n    var reload = false;\n    var sid = state.Path.keys.other.indexOf(skey);\n    var tid = state.Path.keys.other.indexOf(tkey);\n    console.log(\"Table path: Sid:\", sid, \" tid:\", tid, skey, tkey);\n\n    if (sid !== -1 && tid !== -1) {\n      if (sid > tid) {\n        var src = state.Path.keys.other.splice(sid, 1); // remove from path\n\n        var trg = state.Path.keys.other.splice(tid, 1); // remove from path\n\n        state.Utils.pushKey(state.Path.keys.other, src, tid);\n        state.Utils.pushKey(state.Path.keys.other, trg, sid); //state.Utils.spliceArray(state.Path.keys.other,tid,0,src); // first position (table)\n        //state.Utils.spliceArray(state.Path.keys.other,sid,0,trg); // first position (table)\n\n        state.Path.exportAllKeys(state);\n        reload = true;\n      }\n    }\n\n    state.Html.setFootnote(state, \"Extracting data.\");\n    state.Html.setProgress(state, true);\n    state.Navigate.store(state);\n    state.Show.show(state, reload);\n  };\n\n  this.onClickRestValue = function (state, val, key, where) {\n    if (state.Path.selectTableKey(state, key, val, where, 1)) {\n      state.Html.setFootnote(state, \"Extracting data.\");\n      state.Html.setProgress(state, true);\n      state.Navigate.store(state);\n      state.Show.show(state);\n    }\n\n    ;\n  };\n\n  this.onClickPath = function (state, ttyp, tkey) {\n    var reload = false; // matrix changed?\n\n    var tid, tin, sin, src; //console.log(\"Clicked:\",ttyp,tkey,JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other));\n\n    if (ttyp === \"path\") {\n      // path -> table\n      tid = state.Path.keys.path.indexOf(tkey);\n\n      if (tid !== -1) {\n        src = state.Path.keys.path.splice(tid, 1); // remove from path\n\n        state.Utils.pushKey(state.Path.keys.other, src, 2); //state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\n        state.Path.cleanSelect(state);\n        state.Navigate.store(state);\n        reload = true;\n      }\n    } else if (ttyp === \"table\") {\n      // other -> table\n      tid = state.Path.keys.other.indexOf(tkey); //console.log(\"Tin:\",tin,\" tid:\",tid);\n\n      if (tid !== -1) {\n        src = state.Path.keys.other.splice(tid, 1); // remove from path\n\n        state.Utils.pushKey(state.Path.keys.other, src, 0); //state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\n        state.Path.exportAllKeys(state);\n        state.Navigate.store(state);\n        reload = true;\n      }\n    } else if (ttyp === \"rest\") {\n      // rest -> table\n      tid = state.Path.keys.other.indexOf(tkey);\n\n      if (tid !== -1) {\n        src = state.Path.keys.other.splice(tid, 1); // remove from path\n\n        state.Utils.pushKey(state.Path.trash, src); //state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\n        state.Navigate.store(state);\n        reload = true;\n      }\n\n      ;\n    } else if (ttyp === \"trash\") {\n      console.log(\"Trashing start:\", JSON.stringify(state.Path.trash), tkey);\n      tid = state.Path.trash.indexOf(tkey);\n      tin = state.Path.keys.other.indexOf(tkey);\n      sin = state.Path.keys.path.indexOf(tkey);\n\n      if (tid !== -1) {\n        // trash => other\n        src = state.Path.trash.splice(tid, 1);\n        state.Utils.pushKey(state.Path.keys.other, src); //if ( tin === -1 ) {\n        //    state.Path.keys.other=state.Path.keys.other.concat(src);  // last position\n        //};\n      } else if (sin !== -1 && tin === -1) {\n        // select => other\n        state.Utils.pushKey(state.Path.keys.other, tkey); //state.Path.keys.other=state.Path.keys.other.concat(tkey); // last position\n      } else if (sin !== -1 && tin !== -1) {\n        // other => select\n        src = state.Path.keys.other.splice(tin, 1);\n      } else if (sin === -1 && tin !== -1) {\n        // other => trash\n        src = state.Path.keys.other.splice(tin, 1);\n        state.Utils.pushKey(state.Path.trash, src); //state.Path.trash=state.Path.trash.concat(src);            // last position\n      }\n\n      ;\n      state.Path.exportAllKeys(state);\n      state.Navigate.store(state);\n      console.log(\"Trashed:\", JSON.stringify(state.Path.trash), JSON.stringify(state.Path.keys));\n    }\n\n    state.Html.setFootnote(state, \"Extracting data.\");\n    state.Html.setProgress(state, true); //console.log(\"Showing:\",JSON.stringify(state.Path.other));\n\n    state.Show.show(state, reload);\n  };\n\n  this.selectItem = function (state, colkey, rowkey, colval, rowval, colwhere, rowwhere, colcnt, rowcnt) {\n    //console.log(\"Selectitem:\",colkey,rowkey,colval,rowval,colwhere,rowwhere,colcnt,rowcnt);\n    //var colkey=state.Path.getColKey(state);\n    //var rowkey=state.Path.getRowKey(state);\n    var order = state.Utils.cp(state.Path.keys.other); //console.log(\"SelectItem:\",colkey,\"=\",colval,\"  \",rowkey,\"=\",rowval);\n\n    if (state.Show.getLayoutMode(state) === state.Show.code.layout.Map) {\n      if (this.selectMapKey(state, colkey, colval, colwhere, colcnt)) {\n        this.order[colkey] = state.Utils.cp(order); //this.flip[colkey]=this.getFlip(state);\n\n        if (this.selectMapKey(state, rowkey, rowval, rowwhere, rowcnt)) {\n          this.order[rowkey] = state.Utils.cp(order); //this.last.flip[rowkey]=this.getFlip(state);\n        } //this.trash[colkey]=state.Path.checkTableKeys(state);\n        //console.log(\"state.Path.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n\n      }\n\n      ; //console.log(\"Path:\",JSON.stringify(state.Path))\n\n      state.Html.setFootnote(state, \"Extracting data.\");\n      state.Html.setProgress(state, true);\n      state.Navigate.store(state);\n      state.Show.show(state);\n    } else if (state.Path.selectTableKey(state, colkey, colval, colwhere, colcnt)) {\n      this.order[colkey] = order; //this.flip[colkey]=this.getFlip(state);\n\n      if (state.Path.selectTableKey(state, rowkey, rowval, rowwhere, rowcnt)) {\n        this.order[rowkey] = state.Utils.cp(order); //this.last.flip[rowkey]=this.getFlip(state);\n      } //this.trash[colkey]=state.Path.checkTableKeys(state);\n      //console.log(\"state.Path.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n\n\n      state.Html.setFootnote(state, \"Extracting data.\");\n      state.Html.setProgress(state, true);\n      state.Navigate.store(state);\n      state.Show.show(state);\n    } else if (state.Path.selectTableKey(state, rowkey, rowval, rowwhere, rowcnt)) {\n      this.order[rowkey] = order; //this.last.flip[rowkey]=this.getFlip(state);\n      //this.trash[rowkey]=state.Path.checkTableKeys(state);\n      //console.log(\"state.Path.checkTableKeys Done.\",rowkey,JSON.stringify(this.trash[rowkey]));\n\n      state.Html.setFootnote(state, \"Extracting data.\");\n      state.Html.setProgress(state, true);\n      state.Navigate.store(state);\n      state.Show.show(state);\n    } else {\n      console.log(\"Unable to select:\", rowkey, colkey);\n    } //console.log(\"Selectitem Done:\",rowwhere,colwhere);\n\n  };\n\n  this.selectMapKey = function (state, key, val, where, cnt) {\n    // keep abscissa\n    //console.log(\"Table.Selecting:\",key,\"=\",val,\", where=\",where);\n    state.Path.select.val[key] = [val];\n    state.Path.where[key] = where;\n\n    if (state.Utils.missing(state.Path.keys.path, key)) {\n      //console.log(\"Adding to path:\",key);\n      state.Utils.pushKey(state.Path.keys.path, key); //state.Path.keys.path=state.Path.keys.path.concat(key); // last path position\n    }\n\n    ;\n    return true;\n  };\n\n  this.selectKey = function (state, key, val, where, cnt) {\n    var order = state.Utils.cp(state.Path.keys.other); //console.log(\"SelecRow: rowkey=\",key,\" val=\",val);\n    //console.log(\"SelectKey:\",key,val,where,cnt);\n\n    if (state.Show.getLayoutMode(state) === state.Show.code.layout.Map) {\n      if (this.selectMapKey(state, key, val, where, cnt)) {\n        this.order[key] = state.Utils.cp(order);\n      }\n\n      state.Html.setFootnote(state, \"Extracting data.\");\n      state.Html.setProgress(state, true);\n      state.Navigate.store(state);\n      state.Show.show(state);\n    } else if (state.Path.selectTableKey(state, key, val, where, cnt)) {\n      this.order[key] = order; //this.trash[key]=state.Path.checkTableKeys(state);\n      //console.log(\"state.Path.checkTableKeys Done.\",rowkey,JSON.stringify(this.trash[key]));\n\n      state.Html.setFootnote(state, \"Extracting data.\");\n      state.Html.setProgress(state, true);\n      state.Navigate.store(state);\n      state.Show.show(state);\n    } else {\n      console.log(\"Unable to select:\", key);\n    } //console.log(\"Finally:\",JSON.stringify(state.Path.keys.other));\n\n  };\n}\n\n;\nexport default Navigate;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/NavigateLib.js"],"names":["Navigate","history","pos","track","home","undefined","order","trash","reset","state","store","length","splice","snapshot","Path","getSnapshot","push","console","log","JSON","stringify","path","keys","refreshHistory","React","Config","show","canUndo","canRedo","undo","setSnapshot","Show","redo","setHome","goHome","onClickTablePath","skey","tkey","reload","sid","other","indexOf","tid","src","trg","Utils","pushKey","exportAllKeys","Html","setFootnote","setProgress","onClickRestValue","val","key","where","selectTableKey","onClickPath","ttyp","tin","sin","cleanSelect","selectItem","colkey","rowkey","colval","rowval","colwhere","rowwhere","colcnt","rowcnt","cp","getLayoutMode","code","layout","Map","selectMapKey","cnt","select","missing","selectKey"],"mappings":"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","sourcesContent":["//console.log(\"Loading NavigateLib.js\");\n    \nfunction Navigate() {\n    this.history={pos:0, // position of next snapshot\n\t\t  track:[]\n\t\t };\n    this.home=undefined;\n    this.order={};          // key order\n    this.trash={};          // key trash\n    this.reset=function(state) { // store state\n\tstate.Navigate.history={pos:0,track:[]};\n\tthis.store(state);\n    };\n    this.store=function(state) { // store state\n\tif (state.Navigate.history.track.length>state.Navigate.history.pos+1) {\n\t    state.Navigate.history.track=state.Navigate.history.track.splice(0,state.Navigate.history.pos+1)\n\t} else if (state.Navigate.history.track.length > 10) {\n\t   state.Navigate.history.track=state.Navigate.history.track.splice(0,10);\n\t};\n\tvar snapshot=state.Path.getSnapshot(state)\n\tstate.Navigate.history.track.push(snapshot);\n\tstate.Navigate.history.pos=state.Navigate.history.track.length-1;\n\t//console.log(\">>>>>> Stored state...\",JSON.stringify(state.Navigate.history),\n\t//\t    this.canUndo(state),this.canRedo(state),\n\t//\t    state.Navigate.history.pos,state.Navigate.history.track.length);\n\tconsole.log(\">>>>> stored state.\",JSON.stringify(state.path.keys));\n\tthis.refreshHistory(state);\n    };\n    this.refreshHistory=function(state) {\n\tif (state.React.Config !== undefined) {\n\t    state.React.Config.show();\n\t};\n    };\n    this.canUndo=function(state) {\n\treturn (state.Navigate.history.pos > 0);\n    };\n    this.canRedo=function(state) {\n\treturn (state.Navigate.history.pos < state.Navigate.history.track.length-1);\n    };\n    this.undo=function(state) {\n\t//console.log(\">>>>>> Undo:\",this.canUndo(state));\n\tif (this.canUndo(state)) {\n\t    state.Navigate.history.pos=state.Navigate.history.pos-1;\n\t    var snapshot=state.Navigate.history.track[state.Navigate.history.pos]\n\t    //console.log(\"Setting snapshot:\",JSON.stringify(snapshot));\n\t    state.Path.setSnapshot(state,snapshot);\n\t    this.refreshHistory(state);\n\t    state.Show.show(state);\n\t};\n    };\n    this.redo=function(state) {\n\t//console.log(\">>>>>> Redo:\",this.canRedo(state),state.Navigate.history.pos,JSON.stringify(state.Navigate.history.track));\n\tif (this.canRedo(state)) {\n\t    state.Navigate.history.pos=state.Navigate.history.pos+1;\t\n\t    var snapshot=state.Navigate.history.track[state.Navigate.history.pos]\n\t    //console.log(\"Setting snapshot:\",JSON.stringify(snapshot));\n\t    state.Path.setSnapshot(state,snapshot);\n\t    this.refreshHistory(state);\n\t    state.Show.show(state);\n\t}\n    };\n    this.setHome=function(state){\n\tvar snapshot=state.Path.getSnapshot(state)\n\tstate.Navigate.home=snapshot;\n\tstate.Navigate.store(state);\n    };\n    this.goHome=function(state) {\n\t//console.log(\">>>>>> Undo:\",this.canUndo(state));\n\tvar snapshot=state.Navigate.home;\n\t//console.log(\"Setting snapshot:\",JSON.stringify(snapshot));\n\tstate.Path.setSnapshot(state,snapshot);\n\tthis.refreshHistory(state);\n\tstate.Show.show(state);\n    };\n    this.onClickTablePath=function(state,skey,tkey) {\n\tvar reload=false;\n\tvar sid=state.Path.keys.other.indexOf(skey);\n\tvar tid=state.Path.keys.other.indexOf(tkey);\n\tconsole.log(\"Table path: Sid:\",sid,\" tid:\",tid,skey,tkey);\n\tif (sid !== -1 && tid !== -1) {\n\t    if (sid > tid) {\n\t\tvar src=state.Path.keys.other.splice(sid, 1);                 // remove from path\n\t\tvar trg=state.Path.keys.other.splice(tid, 1);                 // remove from path\n\t\tstate.Utils.pushKey(state.Path.keys.other,src,tid);\n\t\tstate.Utils.pushKey(state.Path.keys.other,trg,sid);\n\t\t//state.Utils.spliceArray(state.Path.keys.other,tid,0,src); // first position (table)\n\t\t//state.Utils.spliceArray(state.Path.keys.other,sid,0,trg); // first position (table)\n\t\tstate.Path.exportAllKeys(state);\n\t\treload=true;\n\t    }\n\t}\n\tstate.Html.setFootnote(state,\"Extracting data.\");\n\tstate.Html.setProgress(state, true);\n\tstate.Navigate.store(state);\n\tstate.Show.show(state,reload);\n    };\n    this.onClickRestValue=function(state,val,key,where) {\n\tif (state.Path.selectTableKey(state,key,val,where,1)) {\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    state.Html.setProgress(state, true);\n\t    state.Navigate.store(state);\n\t    state.Show.show(state);\n\t};\n    };\n    this.onClickPath=function(state,ttyp,tkey) {\n\tvar reload=false; // matrix changed?\n\tvar tid,tin,sin,src;\n\t//console.log(\"Clicked:\",ttyp,tkey,JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other));\n\tif (ttyp  === \"path\") { // path -> table\n\t    tid=state.Path.keys.path.indexOf(tkey);\n\t    if (tid !== -1) {\n\t\tsrc=state.Path.keys.path.splice(tid, 1);                 // remove from path\n\t\tstate.Utils.pushKey(state.Path.keys.other,src,2);\n\t\t//state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\t\tstate.Path.cleanSelect(state);\n\t\tstate.Navigate.store(state);\n\t\treload=true;\n\t    }\n\t} else if (ttyp  === \"table\") { // other -> table\n\t    tid=state.Path.keys.other.indexOf(tkey);\n\t    //console.log(\"Tin:\",tin,\" tid:\",tid);\n\t    if (tid !== -1) {\n\t\tsrc=state.Path.keys.other.splice(tid, 1);                 // remove from path\n\t\tstate.Utils.pushKey(state.Path.keys.other,src,0);\n\t\t//state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\t\tstate.Path.exportAllKeys(state);\n\t\tstate.Navigate.store(state);\n\t\treload=true;\n\t    }\n\t} else if (ttyp === \"rest\") { // rest -> table\n\t    tid=state.Path.keys.other.indexOf(tkey);\n\t    if (tid !== -1) {\n\t\tsrc=state.Path.keys.other.splice(tid, 1);                 // remove from path\n\t\tstate.Utils.pushKey(state.Path.trash,src);\n\t\t//state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\t\tstate.Navigate.store(state);\n\t\treload=true;\n\t    };\n\t} else if (ttyp === \"trash\") {\n\t    console.log(\"Trashing start:\",JSON.stringify(state.Path.trash),tkey);\n\t    tid=state.Path.trash.indexOf(tkey);\n\t    tin=state.Path.keys.other.indexOf(tkey);\n\t    sin=state.Path.keys.path.indexOf(tkey);\n\t    if (tid !== -1) {                                             // trash => other\n\t\tsrc=state.Path.trash.splice(tid, 1);\n\t\tstate.Utils.pushKey(state.Path.keys.other,src);\n\t\t//if ( tin === -1 ) {\n\t\t//    state.Path.keys.other=state.Path.keys.other.concat(src);  // last position\n\t\t//};\n\t    } else if (sin !== -1 && tin === -1) {                         // select => other\n\t\tstate.Utils.pushKey(state.Path.keys.other,tkey);\n\t\t//state.Path.keys.other=state.Path.keys.other.concat(tkey); // last position\n\t    } else if (sin !== -1 && tin !== -1) {                        // other => select\n\t\tsrc=state.Path.keys.other.splice(tin, 1);\n\t    } else if (sin === -1 && tin !== -1) {                        // other => trash\n\t\tsrc=state.Path.keys.other.splice(tin, 1);\n\t\tstate.Utils.pushKey(state.Path.trash,src);\n\t\t//state.Path.trash=state.Path.trash.concat(src);            // last position\n\t    };\n\t    state.Path.exportAllKeys(state);\n\t    state.Navigate.store(state);\n\t    console.log(\"Trashed:\",JSON.stringify(state.Path.trash),JSON.stringify(state.Path.keys));\n\t}\n\tstate.Html.setFootnote(state,\"Extracting data.\");\n\tstate.Html.setProgress(state, true);\n\t//console.log(\"Showing:\",JSON.stringify(state.Path.other));\n\tstate.Show.show(state,reload);\n    };\n    this.selectItem=function(state,colkey,rowkey,colval,rowval,colwhere,rowwhere,colcnt,rowcnt) {\n\t//console.log(\"Selectitem:\",colkey,rowkey,colval,rowval,colwhere,rowwhere,colcnt,rowcnt);\n\t//var colkey=state.Path.getColKey(state);\n\t//var rowkey=state.Path.getRowKey(state);\n\tvar order=state.Utils.cp(state.Path.keys.other);\n\t//console.log(\"SelectItem:\",colkey,\"=\",colval,\"  \",rowkey,\"=\",rowval);\n\tif (state.Show.getLayoutMode(state)  === state.Show.code.layout.Map) {\n\t    if (this.selectMapKey(state,colkey,colval,colwhere,colcnt)) {\n\t\tthis.order[colkey]=state.Utils.cp(order);\n\t\t//this.flip[colkey]=this.getFlip(state);\n\t\tif (this.selectMapKey(state,rowkey,rowval,rowwhere,rowcnt)) {\n\t\t    this.order[rowkey]=state.Utils.cp(order);\n\t\t    //this.last.flip[rowkey]=this.getFlip(state);\n\t\t}\n\t\t//this.trash[colkey]=state.Path.checkTableKeys(state);\n\t\t//console.log(\"state.Path.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n\t    };\n\t    //console.log(\"Path:\",JSON.stringify(state.Path))\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    state.Html.setProgress(state, true);\n\t    state.Navigate.store(state);\n\t    state.Show.show(state);\t\n\t} else if (state.Path.selectTableKey(state,colkey,colval,colwhere,colcnt)) {\n\t    this.order[colkey]=order;\n\t    //this.flip[colkey]=this.getFlip(state);\n\t    if (state.Path.selectTableKey(state,rowkey,rowval,rowwhere,rowcnt)) {\n\t\tthis.order[rowkey]=state.Utils.cp(order);\n\t\t//this.last.flip[rowkey]=this.getFlip(state);\n\t    }\n\t    //this.trash[colkey]=state.Path.checkTableKeys(state);\n\t    //console.log(\"state.Path.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    state.Html.setProgress(state, true);\n\t    state.Navigate.store(state);\n\t    state.Show.show(state);\n\t} else if (state.Path.selectTableKey(state,rowkey,rowval,rowwhere,rowcnt)) {\n\t    this.order[rowkey]=order;\n\t    //this.last.flip[rowkey]=this.getFlip(state);\n\t    //this.trash[rowkey]=state.Path.checkTableKeys(state);\n\t    //console.log(\"state.Path.checkTableKeys Done.\",rowkey,JSON.stringify(this.trash[rowkey]));\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    state.Html.setProgress(state, true);\n\t    state.Navigate.store(state);\n\t    state.Show.show(state);\n\t} else {\n\t    console.log(\"Unable to select:\",rowkey,colkey);\n\t}\n\t//console.log(\"Selectitem Done:\",rowwhere,colwhere);\n    };\n    this.selectMapKey=function(state,key,val,where,cnt) { // keep abscissa\n\t//console.log(\"Table.Selecting:\",key,\"=\",val,\", where=\",where);\n\tstate.Path.select.val[key]=[val];\n\tstate.Path.where[key]=where;\n\tif (state.Utils.missing(state.Path.keys.path,key)) {\n\t    //console.log(\"Adding to path:\",key);\n\t    state.Utils.pushKey(state.Path.keys.path,key);\n\t    //state.Path.keys.path=state.Path.keys.path.concat(key); // last path position\n\t};\n\treturn true;\n    };\n    this.selectKey=function(state,key,val,where,cnt) {\n\tvar order=state.Utils.cp(state.Path.keys.other);\n\t//console.log(\"SelecRow: rowkey=\",key,\" val=\",val);\n\t//console.log(\"SelectKey:\",key,val,where,cnt);\n\tif (state.Show.getLayoutMode(state)  === state.Show.code.layout.Map) {\n\t    if (this.selectMapKey(state,key,val,where,cnt)) {\n\t\tthis.order[key]=state.Utils.cp(order);\n\t    }\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    state.Html.setProgress(state, true);\n\t    state.Navigate.store(state);\n\t    state.Show.show(state);\n\t} else if (state.Path.selectTableKey(state,key,val,where,cnt)) {\n\t    this.order[key]=order;\n\t    //this.trash[key]=state.Path.checkTableKeys(state);\n\t    //console.log(\"state.Path.checkTableKeys Done.\",rowkey,JSON.stringify(this.trash[key]));\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    state.Html.setProgress(state, true);\n\t    state.Navigate.store(state);\n\t    state.Show.show(state);\n\t} else {\n\t    console.log(\"Unable to select:\",key);\n\t}\n\t//console.log(\"Finally:\",JSON.stringify(state.Path.keys.other));\n    };\n};\nexport default Navigate;\n"]},"metadata":{},"sourceType":"module"}