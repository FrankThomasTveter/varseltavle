{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/MapComponent.js\";\nimport React, { Component, useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { teal_palette } from '../mui/metMuiThemes';\nimport { render } from 'react-dom';\nimport ReactGlobe from 'react-globe';\nimport defmarkers from './markers';\nimport markerRenderer from './markerRenderer';\nimport './styles.css';\nimport texture from './globe_dark.jpg';\nvar footAndHeaderheight = \"100px\";\n\nfunction getTooltipContent(marker) {\n  return \"\".concat(marker.city, \" (Value: \").concat(marker.value, \")\");\n}\n\nvar styles = function styles(theme) {\n  return {\n    content: {},\n    root: {\n      height: '100%',\n      padding: 0,\n      margin: 0,\n      border: '5px solid red'\n    },\n    dataset: {\n      overflow: 'hidden',\n      height: '100%'\n    },\n    map: {\n      overflow: 'hidden',\n      height: '100%'\n    }\n  };\n};\n\nvar EarthMap =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EarthMap, _Component);\n\n  function EarthMap(props) {\n    var _this;\n\n    _classCallCheck(this, EarthMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EarthMap).call(this, props));\n    var state = props.state;\n    state.React.Map = _assertThisInitialized(_this);\n    _this.markers = defmarkers;\n    return _this;\n  }\n\n  _createClass(EarthMap, [{\n    key: \"element\",\n    value: function element(el) {\n      if (el !== undefined && el !== null) {\n        this.el = el;\n      }\n\n      ;\n    }\n  }, {\n    key: \"show\",\n    value: function show(state) {// get marker data\n      // make markers\n      // set markers\n    }\n  }, {\n    key: \"onClickMarker\",\n    //    <div className=\"App\">\n    value: function onClickMarker(marker, markerObject, event) {\n      console.log(\"Clicked marker...\", marker.id); // setEvent({\n      //   type: 'CLICK',\n      //   marker,\n      //   markerObjectID: markerObject.uuid,\n      //   pointerEventPosition: { x: event.clientX, y: event.clientY },\n      // });\n      //setDetails(getTooltipContent(marker));\n    }\n  }, {\n    key: \"onDefocus\",\n    value: function onDefocus(previousCoordinates, event) {//setEvent({\n      //  type: 'DEFOCUS',\n      //  previousCoordinates,\n      //  pointerEventPosition: { x: event.clientX, y: event.clientY },\n      //});\n      //setDetails(null);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state;\n      return React.createElement(\"div\", {\n        ref: function ref(el) {\n          _this2.element(el);\n        },\n        className: classes.root,\n        style: {\n          position: 'fixed',\n          marginLeft: '0%',\n          width: '90%',\n          height: 'calc(95% - ' + footAndHeaderheight + ')',\n          overflow: 'hidden'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(ReactGlobe, {\n        markers: this.markers,\n        focus: [65, 15],\n        zoom: 2,\n        initialCoordinates: [65, 20],\n        onClickMarker: onClickMarker,\n        markerOptions: {\n          renderer: markerRenderer,\n          getTooltipContent: getTooltipContent\n        },\n        focusOptions: {\n          animationDuration: 1000,\n          distanceRadiusScale: 1.75,\n          easingFunction: ['Bounce', 'InOut']\n        },\n        onDefocus: onDefocus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EarthMap;\n}(Component);\n\nEarthMap.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(EarthMap);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/MapComponent.js"],"names":["React","Component","useState","PropTypes","withStyles","teal_palette","render","ReactGlobe","defmarkers","markerRenderer","texture","footAndHeaderheight","getTooltipContent","marker","city","value","styles","theme","content","root","height","padding","margin","border","dataset","overflow","map","EarthMap","props","state","Map","markers","el","undefined","markerObject","event","console","log","id","previousCoordinates","classes","element","position","marginLeft","width","onClickMarker","renderer","animationDuration","distanceRadiusScale","easingFunction","onDefocus","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component, useState} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport {teal_palette} from '../mui/metMuiThemes';\n\nimport { render } from 'react-dom';\nimport ReactGlobe from 'react-globe';\n\nimport defmarkers from './markers';\nimport markerRenderer from './markerRenderer';\n\nimport './styles.css';\nimport texture from './globe_dark.jpg';\n\nconst footAndHeaderheight = \"100px\";\n\nfunction getTooltipContent(marker) {\n  return `${marker.city} (Value: ${marker.value})`;\n}\n\nconst styles = theme => ({\n    content: {},\n    root: {\n\theight: '100%',\n\tpadding:0,\n\tmargin:0,\n\tborder: '5px solid red'\n    },\n    dataset: {\n\toverflow: 'hidden',\n\theight: '100%',\n    },\n    map: {\n\toverflow: 'hidden',\n\theight: '100%',\n    },\n});\n\nclass EarthMap extends Component {\n    constructor(props) {\n\tsuper(props);\n\tconst {state} = props;\n\tstate.React.Map=this;\n\tthis.markers=defmarkers;\n    };\n    element(el) {\n\tif (el !== undefined && el !== null) {\n\t    this.el=el;\n\t};\n    };\n    show(state) {\n\t// get marker data\n\t// make markers\n\t// set markers\n    };\n//    <div className=\"App\">\n    onClickMarker(marker, markerObject, event) {\n\tconsole.log(\"Clicked marker...\",marker.id)\n\t// setEvent({\n\t//   type: 'CLICK',\n\t//   marker,\n\t//   markerObjectID: markerObject.uuid,\n\t//   pointerEventPosition: { x: event.clientX, y: event.clientY },\n\t// });\n\t//setDetails(getTooltipContent(marker));\n    }\n    onDefocus(previousCoordinates, event) {\n\t//setEvent({\n\t//  type: 'DEFOCUS',\n\t//  previousCoordinates,\n\t//  pointerEventPosition: { x: event.clientX, y: event.clientY },\n\t//});\n\t//setDetails(null);\n    }\n    render() {\n\tconst { classes, state } = this.props;\n\treturn (<div ref={el=>{this.element(el)}}\n\t        className={classes.root}\n\t        style={{position:'fixed', marginLeft:'0%',width: '90%', height: 'calc(95% - '+footAndHeaderheight+')',overflow:'hidden'}} >\n\t           <ReactGlobe \n                    markers={this.markers}\n                    focus={[65,15]} \n                    zoom={2} \n                    initialCoordinates={[65,20]}\n                    onClickMarker={onClickMarker}\n                    markerOptions={{renderer: markerRenderer,\n                                     getTooltipContent:getTooltipContent,  \n                                   }}\n                   focusOptions={{\n                   animationDuration: 1000, \n                   distanceRadiusScale: 1.75,\n                   easingFunction: ['Bounce', 'InOut'],\n                  }}\n                  onDefocus={onDefocus}\n\t        />\n\t      </div>\n\t     );\n    }\n}\n\nEarthMap.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(EarthMap);\n"]},"metadata":{},"sourceType":"module"}