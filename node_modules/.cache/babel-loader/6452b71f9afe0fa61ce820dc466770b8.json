{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/ModeComponent.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport FlagIcon from '@material-ui/icons/Flag';\nimport BarIcon from '@material-ui/icons/BarChart';\nimport TableIcon from '@material-ui/icons/Apps';\nimport ListIcon from '@material-ui/icons/ViewList';\nimport MapIcon from '@material-ui/icons/Map';\n\nvar styles = function styles(theme) {\n  return {\n    view: {\n      marginLeft: 'auto'\n    },\n    button: {\n      color: 'white'\n    }\n  };\n};\n\nfunction ModeIcon(props) {\n  var state = props.state,\n      mode = props.mode;\n  var layoutMode = state.Layout.state.layoutMode;\n  var cellMode = state.Layout.state.cellMode;\n\n  if (mode !== undefined) {\n    if (mode === \"flag\") {\n      layoutMode = state.Layout.code.layout.Table;\n      cellMode = state.Layout.code.cell.Sum;\n    } else if (mode === \"bar\") {\n      layoutMode = state.Layout.code.layout.Table;\n      cellMode = state.Layout.code.cell.Series;\n    } else if (mode === \"list\") {\n      layoutMode = state.Layout.code.layout.List;\n    } else if (mode === \"map\") {\n      layoutMode = state.Layout.code.layout.Map;\n    } else {}\n  }\n\n  ;\n\n  if (layoutMode === state.Layout.code.layout.Table) {\n    if (cellMode === state.Layout.code.cell.Sum) {\n      return React.createElement(FlagIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(BarIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    }\n  } else if (mode === state.Layout.code.layout.List) {\n    return React.createElement(ListIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(MapIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n  }\n}\n\n;\n\nfunction renderMode(state, classes, mode, index) {\n  var onclick = function onclick(event) {\n    return state.Layout.toggleMode(state, mode);\n  };\n\n  return;\n  React.createElement(MenuItem, {\n    key: mode,\n    onClose: this.onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Button, {\n    classes: {\n      root: classes.button\n    },\n    onClick: onclick,\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(ModeIcon, {\n    mode: mode,\n    state: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), \";\");\n}\n\n;\n\nvar Mode =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Mode, _Component);\n\n  function Mode() {\n    _classCallCheck(this, Mode);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Mode).apply(this, arguments));\n  }\n\n  _createClass(Mode, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state;\n      var modes = (\"flag\", \"bar\", \"list\", \"map\");\n\n      var mapFunction = function mapFunction(mode, index) {\n        return renderMode(state, classes, mode, index);\n      };\n\n      return React.createElement(\"div\", {\n        className: classes.view,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.button,\n        \"aria-owns\": this.state.anchor ? 'mode-menu' : undefined,\n        \"aria-haspopup\": \"true\",\n        title: \"Select mode.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(ModeIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(Menu, {\n        id: \"mode-menu\",\n        anchorEl: this.state.anchor,\n        open: Boolean(this.state.anchor),\n        onClose: this.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, modes.map(mapFunction)));\n    }\n  }]);\n\n  return Mode;\n}(Component);\n\nMode.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Mode);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/ModeComponent.js"],"names":["React","Component","PropTypes","withStyles","Button","FlagIcon","BarIcon","TableIcon","ListIcon","MapIcon","styles","theme","view","marginLeft","button","color","ModeIcon","props","state","mode","layoutMode","Layout","cellMode","undefined","code","layout","Table","cell","Sum","Series","List","Map","renderMode","classes","index","onclick","event","toggleMode","onClose","root","title","Mode","modes","mapFunction","anchor","Boolean","map","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport FlagIcon from '@material-ui/icons/Flag';\nimport BarIcon from '@material-ui/icons/BarChart';\nimport TableIcon from '@material-ui/icons/Apps';\nimport ListIcon from '@material-ui/icons/ViewList';\nimport MapIcon from '@material-ui/icons/Map';\n\nconst styles = theme => ({\n    view: {\n        marginLeft: 'auto',\n    },\n    button:{\n\tcolor:'white'\n    },\n});\nfunction ModeIcon (props) {\n    const {state,mode} = props;\n    var layoutMode=state.Layout.state.layoutMode;\n    var cellMode=state.Layout.state.cellMode;\n    if (mode !== undefined) {\n\tif (mode === \"flag\") {\n\t    layoutMode=state.Layout.code.layout.Table;\n\t    cellMode=state.Layout.code.cell.Sum;\n\t} else if (mode === \"bar\") {\n\t    layoutMode=state.Layout.code.layout.Table;\n\t    cellMode=state.Layout.code.cell.Series;\n\t} else if (mode === \"list\") {\n\t    layoutMode=state.Layout.code.layout.List;\n\t} else if (mode === \"map\") {\n\t    layoutMode=state.Layout.code.layout.Map;\n\t} else {\n\t}\n    };\n    if (layoutMode === state.Layout.code.layout.Table) {\n\tif (cellMode === state.Layout.code.cell.Sum) {\n\t    return (<FlagIcon/>);\n\t} else {\n\t    return (<BarIcon/>);\n\t}\n    } else if (mode === state.Layout.code.layout.List) {\n\treturn (<ListIcon/>);\n    } else {\n\treturn (<MapIcon/>);\n    }\n};\nfunction renderMode (state,classes,mode,index) {\n    var onclick = (event) => state.Layout.toggleMode(state,mode);\n    return\n\t<MenuItem key={mode} onClose={this.onClose}>\n\t   <Button classes={{root:classes.button}} onClick={onclick} title={title}>\n\t      <ModeIcon mode={mode} state={state}/>\n\t   </Button>;\n\t</MenuItem>;\n};\nclass Mode extends Component {\n    render() {\n\tconst {classes, state}=this.props;\n\tvar modes=(\"flag\",\"bar\",\"list\",\"map\");\n\tvar mapFunction= (mode,index)=>renderMode(state,classes,mode,index);\n\treturn (\n\t\t<div className={classes.view}>\n\t\t   <Button\n                      className={classes.button}\n                      aria-owns={this.state.anchor ? 'mode-menu' : undefined}\n                      aria-haspopup=\"true\"\n\t              title={\"Select mode.\"}\n\t\t   >\n\t\t      {<ModeIcon />}\n                   </Button>\n\t          <Menu\n                   id=\"mode-menu\"\n\t           anchorEl={this.state.anchor}\n                   open={Boolean(this.state.anchor)}\n                   onClose={this.onClose}\n\t          >\n\t\t    {modes.map(mapFunction)}\n\t          </Menu>\n\t\t</div>\n\t);\n    }\n}\n\nMode.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Mode);\n"]},"metadata":{},"sourceType":"module"}