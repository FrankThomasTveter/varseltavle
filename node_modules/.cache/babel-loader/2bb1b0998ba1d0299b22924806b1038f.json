{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/TableKeyComponent.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport SelIcon from '@material-ui/icons/Done';\n\nvar styles = function styles(theme) {\n  return {\n    config: {},\n    key: {\n      display: 'inline-block',\n      marginRight: 'auto'\n    },\n    restchip: {\n      margin: theme.spacing.unit,\n      cursor: \"pointer\",\n      color: \"blue\",\n      borderColor: \"blue\"\n    }\n  };\n};\n\nvar TableKey =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TableKey, _Component);\n\n  function TableKey() {\n    _classCallCheck(this, TableKey);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TableKey).apply(this, arguments));\n  }\n\n  _createClass(TableKey, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state,\n          keyitem = _this$props.keyitem,\n          target = _this$props.target,\n          onclose = _this$props.onclose;\n\n      var onclick = function onclick() {\n        state.Navigate.onClickTablePath(state, keyitem, target);\n        onclose();\n      }; //console.log(\"TableKey:\",tpos,keyitem,JSON.stringify(state.Path.keys.other));\n\n\n      var chip = classes.restchip;\n\n      if (state.Path.keys.path.indexOf(keyitem) === -1) {\n        return React.createElement(\"div\", {\n          className: classes.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(Chip, {\n          label: keyitem,\n          onClick: onclick,\n          className: chip,\n          variant: \"outlined\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          className: classes.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(Chip, {\n          icon: React.createElement(SelIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }),\n          label: keyitem,\n          onClick: onclick,\n          className: chip,\n          variant: \"outlined\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }));\n      }\n\n      ;\n    }\n  }]);\n\n  return TableKey;\n}(Component);\n\nTableKey.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TableKey);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/TableKeyComponent.js"],"names":["React","Component","PropTypes","withStyles","Chip","SelIcon","styles","theme","config","key","display","marginRight","restchip","margin","spacing","unit","cursor","color","borderColor","TableKey","props","classes","state","keyitem","target","onclose","onclick","Navigate","onClickTablePath","chip","Path","keys","path","indexOf","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,MAAM,EAAE,EADa;AAErBC,IAAAA,GAAG,EAAE;AACRC,MAAAA,OAAO,EAAE,cADD;AAEDC,MAAAA,WAAW,EAAE;AAFZ,KAFgB;AAMrBC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,MAAM,EAAEN,KAAK,CAACO,OAAN,CAAcC,IADhB;AAEbC,MAAAA,MAAM,EAAE,SAFK;AAGNC,MAAAA,KAAK,EAAC,MAHA;AAINC,MAAAA,WAAW,EAAC;AAJN;AANW,GAAL;AAAA,CAApB;;IAaMC,Q;;;;;;;;;;;;;6BACO;AAAA,wBACgD,KAAKC,KADrD;AAAA,UACGC,OADH,eACGA,OADH;AAAA,UACYC,KADZ,eACYA,KADZ;AAAA,UACmBC,OADnB,eACmBA,OADnB;AAAA,UAC4BC,MAD5B,eAC4BA,MAD5B;AAAA,UACoCC,OADpC,eACoCA,OADpC;;AAEZ,UAAIC,OAAO,GAAC,SAARA,OAAQ,GAAM;AAACJ,QAAAA,KAAK,CAACK,QAAN,CAAeC,gBAAf,CAAgCN,KAAhC,EAAsCC,OAAtC,EAA8CC,MAA9C;AAAsDC,QAAAA,OAAO;AAAI,OAApF,CAFY,CAGZ;;;AACA,UAAII,IAAI,GAACR,OAAO,CAACT,QAAjB;;AACA,UAAIU,KAAK,CAACQ,IAAN,CAAWC,IAAX,CAAgBC,IAAhB,CAAqBC,OAArB,CAA6BV,OAA7B,MAA0C,CAAC,CAA/C,EAAkD;AAC9C,eACH;AAAK,UAAA,SAAS,EAAEF,OAAO,CAACZ,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AACS,UAAA,KAAK,EAAEc,OADhB;AAES,UAAA,OAAO,EAAEG,OAFlB;AAGS,UAAA,SAAS,EAAEG,IAHpB;AAIS,UAAA,OAAO,EAAC,UAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADG;AAUH,OAXD,MAWO;AACH,eACH;AAAK,UAAA,SAAS,EAAER,OAAO,CAACZ,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AACS,UAAA,IAAI,EAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADf;AAES,UAAA,KAAK,EAAEc,OAFhB;AAGS,UAAA,OAAO,EAAEG,OAHlB;AAIS,UAAA,SAAS,EAAEG,IAJpB;AAKS,UAAA,OAAO,EAAC,UALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADG;AAWH;;AAAA;AACG;;;;EA9BkB5B,S;;AAiCvBkB,QAAQ,CAACe,SAAT,GAAqB;AACjBb,EAAAA,OAAO,EAAEnB,SAAS,CAACiC,MAAV,CAAiBC;AADT,CAArB;AAIA,eAAejC,UAAU,CAACG,MAAD,CAAV,CAAmBa,QAAnB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport SelIcon from '@material-ui/icons/Done';\n\nconst styles = theme => ({\n    config: {},\n    key: {\n\tdisplay: 'inline-block',\n        marginRight: 'auto',\n    },\n    restchip: {\n        margin: theme.spacing.unit,\n\tcursor: \"pointer\",\n        color:\"blue\",\n        borderColor:\"blue\",\n    },\n});\nclass TableKey extends Component {\n    render() {\n        const { classes, state, keyitem, target, onclose } = this.props;\n\tvar onclick=() => {state.Navigate.onClickTablePath(state,keyitem,target);onclose();};\n\t//console.log(\"TableKey:\",tpos,keyitem,JSON.stringify(state.Path.keys.other));\n\tvar chip=classes.restchip;\n\tif (state.Path.keys.path.indexOf(keyitem) === -1) {\n\t    return (\n\t\t<div className={classes.key}>\n\t \t   <Chip\n\t              label={keyitem}\n\t              onClick={onclick}\n\t              className={chip}\n\t              variant=\"outlined\"\n\t\t   />\n\t\t</div>\n\t    );\n\t} else {\n\t    return (\n\t\t<div className={classes.key}>\n\t \t   <Chip\n\t              icon={<SelIcon/>}\n\t              label={keyitem}\n\t              onClick={onclick}\n\t              className={chip}\n\t              variant=\"outlined\"\n\t\t   />\n\t\t</div>\n\t    );\n\t};\n    }\n}\n\nTableKey.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TableKey);\n"]},"metadata":{},"sourceType":"module"}