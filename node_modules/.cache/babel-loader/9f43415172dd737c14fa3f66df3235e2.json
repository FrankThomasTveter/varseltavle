{"ast":null,"code":"//console.log(\"Loading NavigateLib.js\");\nfunction Navigate() {\n  this.history = {\n    pos: 0,\n    // position of next snapshot\n    track: []\n  };\n  this.order = {}; // key order\n\n  this.trash = {}; // key trash\n\n  this.reset = function (state) {\n    // store state\n    state.Navigate.history = {\n      pos: 0,\n      track: []\n    };\n    this.store(state);\n  };\n\n  this.store = function (state) {\n    // store state\n    if (state.Navigate.history.track.length > state.Navigate.history.pos + 1) {\n      state.Navigate.history.track = state.Navigate.history.track.splice(0, state.Navigate.history.pos + 1);\n    } else if (state.Navigate.history.track.length > 10) {\n      state.Navigate.history.track = state.Navigate.history.track.splice(0, 10);\n    }\n\n    ;\n    var snapshot = state.Path.getSnapshot(state);\n    state.Navigate.history.track.push(snapshot);\n    state.Navigate.history.pos = state.Navigate.history.track.length - 1; //console.log(\">>>>>> Stored state...\",JSON.stringify(state.Navigate.history),\n    //\t    this.canUndo(state),this.canRedo(state),\n    //\t    state.Navigate.history.pos,state.Navigate.history.track.length);\n\n    this.refreshHistory(state);\n  };\n\n  this.refreshHistory = function (state) {\n    if (state.React.Config !== undefined) {\n      state.React.Config.show();\n    }\n\n    ;\n  };\n\n  this.canUndo = function (state) {\n    return state.Navigate.history.pos > 0;\n  };\n\n  this.canRedo = function (state) {\n    return state.Navigate.history.pos < state.Navigate.history.track.length - 1;\n  };\n\n  this.undo = function (state) {\n    //console.log(\">>>>>> Undo:\",this.canUndo(state));\n    if (this.canUndo(state)) {\n      state.Navigate.history.pos = state.Navigate.history.pos - 1;\n      var snapshot = state.Navigate.history.track[state.Navigate.history.pos]; //console.log(\"Setting snapshot:\",JSON.stringify(snapshot));\n\n      state.Path.setSnapshot(state, snapshot);\n      this.refreshHistory(state);\n      state.Show.show(state);\n    }\n\n    ;\n  };\n\n  this.redo = function (state) {\n    //console.log(\">>>>>> Redo:\",this.canRedo(state),state.Navigate.history.pos,JSON.stringify(state.Navigate.history.track));\n    if (this.canRedo(state)) {\n      state.Navigate.history.pos = state.Navigate.history.pos + 1;\n      var snapshot = state.Navigate.history.track[state.Navigate.history.pos]; //console.log(\"Setting snapshot:\",JSON.stringify(snapshot));\n\n      state.Path.setSnapshot(state, snapshot);\n      this.refreshHistory(state);\n      state.Show.show(state);\n    }\n  };\n\n  this.onClickPath = function (state, ttyp, tkey) {\n    var reload = false; // matrix changed?\n\n    var tid, tin, src, sec; //console.log(\"Clicked:\",ttyp,tkey,JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other));\n\n    if (ttyp === \"path\") {\n      // path -> table\n      tid = state.Path.keys.path.indexOf(tkey);\n\n      if (tid !== -1) {\n        src = state.Path.keys.path.splice(tid, 1); // remove from path\n\n        state.Utils.spliceArray(state.Path.keys.other, 0, 0, src); // first position (table)\n\n        reload = true;\n      }\n    } else if (ttyp === \"table\") {\n      // table -> path/other\n      tid = state.Path.keys.other.indexOf(tkey);\n      tin = state.Path.other.table.indexOf(tkey); //console.log(\"Tin:\",tin,\" tid:\",tid);\n\n      if (tid !== -1) {\n        src = state.Path.keys.other.splice(tid, 1); // remove from path\n\n        if (tin === 0) {\n          sec = state.Path.keys.other.splice(tid, 1); // remove from path\n        }\n\n        if (state.Path.hidden.stored[tkey]) {\n          // table -> path\n          state.Path.keys.path = state.Path.keys.path.concat(src); // last path position\n        } else {\n          // table -> other\n          state.Path.keys.other = state.Path.keys.other.concat(src); // last position\n        }\n\n        if (tin === 0) {\n          src = state.Path.keys.other.splice(tid, 1); // remove from path\n\n          state.Utils.spliceArray(state.Path.keys.other, 0, 0, sec); // first position (table)\n\n          state.Utils.spliceArray(state.Path.keys.other, 0, 0, src); // first position (table)\n        }\n\n        reload = true;\n      }\n    } else if (ttyp === \"rest\") {\n      // rest -> table\n      tid = state.Path.keys.other.indexOf(tkey);\n\n      if (tid !== -1) {\n        src = state.Path.keys.other.splice(tid, 1); // remove from path\n\n        state.Utils.spliceArray(state.Path.keys.other, 0, 0, src); // first position (table)\n\n        reload = true;\n      }\n\n      ;\n    } else if (ttyp === \"trash\") {\n      tid = state.Path.keys.trash.indexOf(tkey);\n      tin = state.Path.keys.other.indexOf(tkey);\n\n      if (tid !== -1) {\n        src = state.Path.keys.trash.splice(tid, 1); // trash => other\n\n        state.Path.keys.other = state.Path.keys.other.concat(src); // last position\n\n        state.Path.hidden.stored[src] = undefined;\n      } else if (tin !== -1) {\n        src = state.Path.keys.other.splice(tin, 1); // other => trash\n\n        state.Path.keys.trash = state.Path.keys.trash.concat(src);\n      }\n\n      ;\n    }\n\n    state.Html.setFootnote(state, \"Extracting data.\", \"secondary\");\n    state.Navigate.store(state);\n    state.Show.show(state, reload);\n  };\n\n  this.selectItem = function (state, colkey, rowkey, colval, rowval, colwhere, rowwhere, colcnt, rowcnt) {\n    //console.log(\"Selectitem:\",colkey,rowkey,colval,rowval,colwhere,rowwhere,colcnt,rowcnt);\n    //var colkey=state.Path.getColKey(state);\n    //var rowkey=state.Path.getRowKey(state);\n    var order = state.Utils.cp(state.Path.keys.other); //console.log(\"SelectItem:\",colkey,\"=\",colval,\"  \",rowkey,\"=\",rowval);\n\n    if (state.Show.getLayoutMode(state) === state.Show.code.layout.Map) {\n      if (this.selectMapKey(state, colkey, colval, colwhere, colcnt)) {\n        this.order[colkey] = state.Utils.cp(order); //this.flip[colkey]=this.getFlip(state);\n\n        if (this.selectMapKey(state, rowkey, rowval, rowwhere, rowcnt)) {\n          this.order[rowkey] = state.Utils.cp(order); //this.last.flip[rowkey]=this.getFlip(state);\n        }\n\n        this.trash[colkey] = state.Path.checkTableKeys(state); //console.log(\"state.Path.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n      }\n\n      ; //console.log(\"Path:\",JSON.stringify(state.Path))\n\n      state.Html.setFootnote(state, \"Extracting data.\", \"secondary\");\n      state.Navigate.store(state);\n      state.Show.show(state);\n    } else if (this.selectTableKey(state, colkey, colval, colwhere, colcnt)) {\n      this.order[colkey] = order; //this.flip[colkey]=this.getFlip(state);\n\n      if (this.selectTableKey(state, rowkey, rowval, rowwhere, rowcnt)) {\n        this.order[rowkey] = state.Utils.cp(order); //this.last.flip[rowkey]=this.getFlip(state);\n      }\n\n      this.trash[colkey] = state.Path.checkTableKeys(state); //console.log(\"state.Path.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n\n      state.Html.setFootnote(state, \"Extracting data.\", \"secondary\");\n      state.Navigate.store(state);\n      state.Show.show(state);\n    } else if (this.selectTableKey(state, rowkey, rowval, rowwhere, rowcnt)) {\n      this.order[rowkey] = order; //this.last.flip[rowkey]=this.getFlip(state);\n\n      this.trash[rowkey] = state.Path.checkTableKeys(state); //console.log(\"state.Path.checkTableKeys Done.\",rowkey,JSON.stringify(this.trash[rowkey]));\n\n      state.Html.setFootnote(state, \"Extracting data.\", \"secondary\");\n      state.Navigate.store(state);\n      state.Show.show(state);\n    } else {\n      console.log(\"Unable to select:\", rowkey, colkey);\n    } //console.log(\"Selectitem Done:\",rowwhere,colwhere);\n\n  };\n\n  this.selectMapKey = function (state, key, val, where, cnt) {\n    // keep abscissa\n    //console.log(\"Table.Selecting:\",key,\"=\",val,\", where=\",where);\n    state.Path.select.val[key] = [val];\n    state.Path.select.where[key] = where;\n    state.Path.select.cnt[key] = cnt;\n\n    if (state.Utils.missing(state.Path.keys.path, key)) {\n      //console.log(\"Adding to path:\",key);\n      state.Path.keys.path = state.Path.keys.path.concat(key); // last path position\n    }\n\n    ;\n    return true;\n  };\n\n  this.selectTableKey = function (state, key, val, where, cnt) {\n    // keep abscissa\n    //console.log(\"this.Selecting:\",key,\"=\",val,\", where=\",where);\n    var sid = state.Path.keys.other.indexOf(key);\n\n    if (sid !== -1) {\n      state.Path.select.val[key] = [val];\n      state.Path.select.where[key] = where;\n      state.Path.select.cnt[key] = cnt;\n      var src = state.Path.keys.other.splice(sid, 1); // remove from path\n\n      if (state.Utils.missing(state.Path.keys.path, src)) {\n        //console.log(\"Adding to path:\",JSON.stringify(src));\n        state.Path.keys.path = state.Path.keys.path.concat(src); // last path position\n      }\n\n      ;\n\n      if (cnt > 1 && state.Utils.missing(state.Path.keys.trash, src)) {\n        //console.log(\"Adding \",JSON.stringify(src),\" to trash.\");\n        state.Path.keys.trash = state.Path.keys.trash.concat(src);\n      }\n\n      ; //console.log(\"Selectkey:\",JSON.stringify(setup),JSON.stringify(src));\n\n      return true;\n    } else {\n      console.log(\"Missing \", key, \" in path:\", JSON.stringify(state.Path.keys));\n      return false;\n    }\n  };\n\n  this.selectKey = function (state, key, val, where, cnt) {\n    var order = state.Utils.cp(state.Path.keys.other); //console.log(\"SelecRow: rowkey=\",key,\" val=\",val);\n    //console.log(\"SelectKey:\",key,val,where,cnt);\n\n    if (state.Show.getLayoutMode(state) === state.Show.code.layout.Map) {\n      if (this.selectMapKey(state, key, val, where, cnt)) {\n        this.order[key] = state.Utils.cp(order);\n      }\n\n      state.Html.setFootnote(state, \"Extracting data.\", \"secondary\");\n      state.Navigate.store(state);\n      state.Show.show(state);\n    } else if (this.selectTableKey(state, key, val, where, cnt)) {\n      this.order[key] = order;\n      this.trash[key] = state.Path.checkTableKeys(state); //console.log(\"state.Path.checkTableKeys Done.\",rowkey,JSON.stringify(this.trash[key]));\n\n      state.Html.setFootnote(state, \"Extracting data.\", \"secondary\");\n      state.Navigate.store(state);\n      state.Show.show(state);\n    } else {\n      console.log(\"Unable to select:\", key);\n    } //console.log(\"Finally:\",JSON.stringify(state.Path.keys.other));\n\n  };\n\n  this.swapTableKeys = function (state, c, r) {\n    //console.log(\"Swapping:\",c,\"<->\",r);\n    var sid = state.Path.keys.other.indexOf(c);\n    var tid = state.Path.keys.other.indexOf(r);\n\n    if (sid !== -1 && tid !== -1) {\n      var src = state.Path.keys.other[sid];\n      var trg = state.Path.keys.other[tid];\n\n      if (sid > tid) {\n        state.Path.keys.other.splice(sid, 1);\n        state.Path.keys.other.splice(tid, 1);\n        state.Path.keys.other.splice(tid, 0, src);\n        state.Path.keys.other.splice(sid, 0, trg);\n      } else {\n        state.Path.keys.other.splice(tid, 1);\n        state.Path.keys.other.splice(sid, 1);\n        state.Path.keys.other.splice(sid, 0, trg);\n        state.Path.keys.other.splice(tid, 0, src);\n      }\n    } else {\n      console.log(\"Invalid keys:\", c, r, JSON.stringify(state.Path.keys));\n    }\n  };\n}\n\n;\nexport default Navigate;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/NavigateLib.js"],"names":["Navigate","history","pos","track","order","trash","reset","state","store","length","splice","snapshot","Path","getSnapshot","push","refreshHistory","React","Config","undefined","show","canUndo","canRedo","undo","setSnapshot","Show","redo","onClickPath","ttyp","tkey","reload","tid","tin","src","sec","keys","path","indexOf","Utils","spliceArray","other","table","hidden","stored","concat","Html","setFootnote","selectItem","colkey","rowkey","colval","rowval","colwhere","rowwhere","colcnt","rowcnt","cp","getLayoutMode","code","layout","Map","selectMapKey","checkTableKeys","selectTableKey","console","log","key","val","where","cnt","select","missing","sid","JSON","stringify","selectKey","swapTableKeys","c","r","trg"],"mappings":"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","sourcesContent":["//console.log(\"Loading NavigateLib.js\");\n    \nfunction Navigate() {\n    this.history={pos:0, // position of next snapshot\n\t\t  track:[]\n\t\t };\n    this.order={};          // key order\n    this.trash={};          // key trash\n    this.reset=function(state) { // store state\n\tstate.Navigate.history={pos:0,track:[]};\n\tthis.store(state);\n    };\n    this.store=function(state) { // store state\n\tif (state.Navigate.history.track.length>state.Navigate.history.pos+1) {\n\t    state.Navigate.history.track=state.Navigate.history.track.splice(0,state.Navigate.history.pos+1)\n\t} else if (state.Navigate.history.track.length > 10) {\n\t   state.Navigate.history.track=state.Navigate.history.track.splice(0,10);\n\t};\n\tvar snapshot=state.Path.getSnapshot(state)\n\tstate.Navigate.history.track.push(snapshot);\n\tstate.Navigate.history.pos=state.Navigate.history.track.length-1;\n\t//console.log(\">>>>>> Stored state...\",JSON.stringify(state.Navigate.history),\n\t//\t    this.canUndo(state),this.canRedo(state),\n\t//\t    state.Navigate.history.pos,state.Navigate.history.track.length);\n\tthis.refreshHistory(state);\n    };\n    this.refreshHistory=function(state) {\n\tif (state.React.Config !== undefined) {\n\t    state.React.Config.show();\n\t};\n    };\n    this.canUndo=function(state) {\n\treturn (state.Navigate.history.pos > 0);\n    };\n    this.canRedo=function(state) {\n\treturn (state.Navigate.history.pos < state.Navigate.history.track.length-1);\n    };\n    this.undo=function(state) {\n\t//console.log(\">>>>>> Undo:\",this.canUndo(state));\n\tif (this.canUndo(state)) {\n\t    state.Navigate.history.pos=state.Navigate.history.pos-1;\n\t    var snapshot=state.Navigate.history.track[state.Navigate.history.pos]\n\t    //console.log(\"Setting snapshot:\",JSON.stringify(snapshot));\n\t    state.Path.setSnapshot(state,snapshot);\n\t    this.refreshHistory(state);\n\t    state.Show.show(state);\n\t};\n    };\n    this.redo=function(state) {\n\t//console.log(\">>>>>> Redo:\",this.canRedo(state),state.Navigate.history.pos,JSON.stringify(state.Navigate.history.track));\n\tif (this.canRedo(state)) {\n\t    state.Navigate.history.pos=state.Navigate.history.pos+1;\t\n\t    var snapshot=state.Navigate.history.track[state.Navigate.history.pos]\n\t    //console.log(\"Setting snapshot:\",JSON.stringify(snapshot));\n\t    state.Path.setSnapshot(state,snapshot);\n\t    this.refreshHistory(state);\n\t    state.Show.show(state);\n\t}\n    };\n    this.onClickPath=function(state,ttyp,tkey) {\n\tvar reload=false; // matrix changed?\n\tvar tid,tin,src,sec;\n\t//console.log(\"Clicked:\",ttyp,tkey,JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other));\n\tif (ttyp  === \"path\") { // path -> table\n\t    tid=state.Path.keys.path.indexOf(tkey);\n\t    if (tid !== -1) {\n\t\tsrc=state.Path.keys.path.splice(tid, 1);                 // remove from path\n\t\tstate.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\t\treload=true;\n\t    }\n\t} else if (ttyp  === \"table\") { // table -> path/other\n\t    tid=state.Path.keys.other.indexOf(tkey);\n\t    tin=state.Path.other.table.indexOf(tkey);\n\t    //console.log(\"Tin:\",tin,\" tid:\",tid);\n\t    if (tid !== -1) {\n\t\tsrc=state.Path.keys.other.splice(tid, 1);                 // remove from path\n\t\tif (tin===0) {\n\t\t    sec=state.Path.keys.other.splice(tid, 1);                 // remove from path\n\t\t}\n\t\tif (state.Path.hidden.stored[tkey]) { // table -> path\n\t\t    state.Path.keys.path=state.Path.keys.path.concat(src); // last path position\n\t\t} else {                       // table -> other\n\t\t    state.Path.keys.other=state.Path.keys.other.concat(src); // last position\n\t\t}\n\t\tif (tin===0) {\n\t\t    src=state.Path.keys.other.splice(tid, 1);                 // remove from path\n\t\t    state.Utils.spliceArray(state.Path.keys.other,0,0,sec); // first position (table)\n\t\t    state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\t\t}\n\t\treload=true;\n\t    }\n\t} else if (ttyp === \"rest\") { // rest -> table\n\t    tid=state.Path.keys.other.indexOf(tkey);\n\t    if (tid !== -1) {\n\t\tsrc=state.Path.keys.other.splice(tid, 1);                 // remove from path\n\t\tstate.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\t\treload=true;\n\t    };\n\t} else if (ttyp === \"trash\") {\n\t    tid=state.Path.keys.trash.indexOf(tkey);\n\t    tin=state.Path.keys.other.indexOf(tkey);\n\t    if (tid !== -1) {\n\t\tsrc=state.Path.keys.trash.splice(tid, 1);                 // trash => other\n\t\tstate.Path.keys.other=state.Path.keys.other.concat(src); // last position\n\t\tstate.Path.hidden.stored[src]=undefined;\n\t    } else if (tin !== -1) {\n\t\tsrc=state.Path.keys.other.splice(tin, 1);                 // other => trash\n\t\tstate.Path.keys.trash=state.Path.keys.trash.concat(src);\n\t    };\n\t}\n\tstate.Html.setFootnote(state,\"Extracting data.\",\"secondary\");\n\tstate.Navigate.store(state);\n\tstate.Show.show(state,reload);\n    };\n    this.selectItem=function(state,colkey,rowkey,colval,rowval,colwhere,rowwhere,colcnt,rowcnt) {\n\t//console.log(\"Selectitem:\",colkey,rowkey,colval,rowval,colwhere,rowwhere,colcnt,rowcnt);\n\t//var colkey=state.Path.getColKey(state);\n\t//var rowkey=state.Path.getRowKey(state);\n\tvar order=state.Utils.cp(state.Path.keys.other);\n\t//console.log(\"SelectItem:\",colkey,\"=\",colval,\"  \",rowkey,\"=\",rowval);\n\tif (state.Show.getLayoutMode(state)  === state.Show.code.layout.Map) {\n\t    if (this.selectMapKey(state,colkey,colval,colwhere,colcnt)) {\n\t\tthis.order[colkey]=state.Utils.cp(order);\n\t\t//this.flip[colkey]=this.getFlip(state);\n\t\tif (this.selectMapKey(state,rowkey,rowval,rowwhere,rowcnt)) {\n\t\t    this.order[rowkey]=state.Utils.cp(order);\n\t\t    //this.last.flip[rowkey]=this.getFlip(state);\n\t\t}\n\t\tthis.trash[colkey]=state.Path.checkTableKeys(state);\n\t\t//console.log(\"state.Path.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n\t    };\n\t    //console.log(\"Path:\",JSON.stringify(state.Path))\n\t    state.Html.setFootnote(state,\"Extracting data.\",\"secondary\");\n\t    state.Navigate.store(state);\n\t    state.Show.show(state);\t\n\t} else if (this.selectTableKey(state,colkey,colval,colwhere,colcnt)) {\n\t    this.order[colkey]=order;\n\t    //this.flip[colkey]=this.getFlip(state);\n\t    if (this.selectTableKey(state,rowkey,rowval,rowwhere,rowcnt)) {\n\t\tthis.order[rowkey]=state.Utils.cp(order);\n\t\t//this.last.flip[rowkey]=this.getFlip(state);\n\t    }\n\t    this.trash[colkey]=state.Path.checkTableKeys(state);\n\t    //console.log(\"state.Path.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n\t    state.Html.setFootnote(state,\"Extracting data.\",\"secondary\");\n\t    state.Navigate.store(state);\n\t    state.Show.show(state);\n\t} else if (this.selectTableKey(state,rowkey,rowval,rowwhere,rowcnt)) {\n\t    this.order[rowkey]=order;\n\t    //this.last.flip[rowkey]=this.getFlip(state);\n\t    this.trash[rowkey]=state.Path.checkTableKeys(state);\n\t    //console.log(\"state.Path.checkTableKeys Done.\",rowkey,JSON.stringify(this.trash[rowkey]));\n\t    state.Html.setFootnote(state,\"Extracting data.\",\"secondary\");\n\t    state.Navigate.store(state);\n\t    state.Show.show(state);\n\t} else {\n\t    console.log(\"Unable to select:\",rowkey,colkey);\n\t}\n\t//console.log(\"Selectitem Done:\",rowwhere,colwhere);\n    };\n    this.selectMapKey=function(state,key,val,where,cnt) { // keep abscissa\n\t//console.log(\"Table.Selecting:\",key,\"=\",val,\", where=\",where);\n\tstate.Path.select.val[key]=[val];\n\tstate.Path.select.where[key]=where;\n\tstate.Path.select.cnt[key]=cnt;\n\tif (state.Utils.missing(state.Path.keys.path,key)) {\n\t    //console.log(\"Adding to path:\",key);\n\t    state.Path.keys.path=state.Path.keys.path.concat(key); // last path position\n\t};\n\treturn true;\n    };\n    this.selectTableKey=function(state,key,val,where,cnt) { // keep abscissa\n\t//console.log(\"this.Selecting:\",key,\"=\",val,\", where=\",where);\n\tvar sid = state.Path.keys.other.indexOf(key);\n\tif (sid !== -1) {\n\t    state.Path.select.val[key]=[val];\n\t    state.Path.select.where[key]=where;\n\t    state.Path.select.cnt[key]=cnt;\n\t    var src=state.Path.keys.other.splice(sid, 1); // remove from path\n\t    if ( state.Utils.missing(state.Path.keys.path,src)) {\n\t\t//console.log(\"Adding to path:\",JSON.stringify(src));\n\t\tstate.Path.keys.path=state.Path.keys.path.concat(src); // last path position\n\t    };\n\t    if (cnt>1 && state.Utils.missing(state.Path.keys.trash,src)) {\n\t\t//console.log(\"Adding \",JSON.stringify(src),\" to trash.\");\n\t\tstate.Path.keys.trash=state.Path.keys.trash.concat(src)\n\t    };\n\t    //console.log(\"Selectkey:\",JSON.stringify(setup),JSON.stringify(src));\n\t    return true;\n\t} else {\n\t    console.log(\"Missing \",key,\" in path:\",JSON.stringify(state.Path.keys));\n\t    return false;\n\t}\n    };\n    this.selectKey=function(state,key,val,where,cnt) {\n\tvar order=state.Utils.cp(state.Path.keys.other);\n\t//console.log(\"SelecRow: rowkey=\",key,\" val=\",val);\n\t//console.log(\"SelectKey:\",key,val,where,cnt);\n\tif (state.Show.getLayoutMode(state)  === state.Show.code.layout.Map) {\n\t    if (this.selectMapKey(state,key,val,where,cnt)) {\n\t\tthis.order[key]=state.Utils.cp(order);\n\t    }\n\t    state.Html.setFootnote(state,\"Extracting data.\",\"secondary\");\n\t    state.Navigate.store(state);\n\t    state.Show.show(state);\n\t} else if (this.selectTableKey(state,key,val,where,cnt)) {\n\t    this.order[key]=order;\n\t    this.trash[key]=state.Path.checkTableKeys(state);\n\t    //console.log(\"state.Path.checkTableKeys Done.\",rowkey,JSON.stringify(this.trash[key]));\n\t    state.Html.setFootnote(state,\"Extracting data.\",\"secondary\");\n\t    state.Navigate.store(state);\n\t    state.Show.show(state);\n\t} else {\n\t    console.log(\"Unable to select:\",key);\n\t}\n\t//console.log(\"Finally:\",JSON.stringify(state.Path.keys.other));\n    };\n    this.swapTableKeys=function(state,c,r) {\n\t//console.log(\"Swapping:\",c,\"<->\",r);\n\tvar sid = state.Path.keys.other.indexOf(c);\n\tvar tid = state.Path.keys.other.indexOf(r);\n\tif (sid !== -1 && tid !== -1) {\n\t    var src=state.Path.keys.other[sid];\n\t    var trg=state.Path.keys.other[tid];\n\t    if (sid > tid) {\n\t\tstate.Path.keys.other.splice(sid, 1);\n\t\tstate.Path.keys.other.splice(tid, 1);\n\t\tstate.Path.keys.other.splice(tid, 0, src);\n\t\tstate.Path.keys.other.splice(sid, 0, trg);\n\t    } else {\n\t\tstate.Path.keys.other.splice(tid, 1);\n\t\tstate.Path.keys.other.splice(sid, 1);\n\t\tstate.Path.keys.other.splice(sid, 0, trg);\n\t\tstate.Path.keys.other.splice(tid, 0, src);\n\t    }\n\t} else {\n\t    console.log(\"Invalid keys:\",c,r,JSON.stringify(state.Path.keys));\n\t}\n    };\n};\nexport default Navigate;\n"]},"metadata":{},"sourceType":"module"}