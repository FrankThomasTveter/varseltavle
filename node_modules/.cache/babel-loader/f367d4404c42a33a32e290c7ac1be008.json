{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/Table2DComponent.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport ReactDOM from 'react-dom';\nimport SummaryCell from './SummaryCell';\nimport SeriesCell from './SeriesCell';\nimport Text from './TextComponent'; //console.log(\"Inside Table.\")\n//        flexGrow: 1,\n//\t\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      height: '100%',\n      maxWidth: '100%'\n    },\n    table: {\n      textAlign: 'left',\n      padding: \"0px\",\n      borderStyle: 'solid',\n      overflow: 'hidden'\n    },\n    row: {},\n    //\tmargin: '100px',\n    cell: {\n      cursor: \"pointer\",\n      padding: theme.spacing.unit * 0\n    },\n    rotate: {\n      cursor: \"pointer\",\n      padding: theme.spacing.unit * 0\n    },\n    firstCell: {\n      cursor: \"pointer\",\n      padding: theme.spacing.unit * 0.5,\n      width: '100%',\n      height: '100%',\n      flexGrow: 1\n    },\n    pointer: {\n      padding: theme.spacing.unit * 0.1,\n      cursor: \"pointer\"\n    },\n    nopointer: {\n      padding: theme.spacing.unit * 0.1\n    }\n  };\n}; //\tmargin: '100px',\n//      padding: theme.spacing.unit * 0,\n//\tborderStyle: 'solid',\n//\tmaxWidth: '100px',\n\n\nfunction getStep(state, colvalues, cellMode) {\n  var step = 1;\n\n  if (cellMode === state.Show.code.cell.Series) {\n    step = Math.max(1, Math.ceil(colvalues.length / 20));\n  }\n\n  return step;\n} // ---------------- DATA\n\n\nfunction FirstDataCell(props) {\n  var classes = props.classes,\n      rowval = props.rowval,\n      onclick = props.onclick,\n      title = props.title; //console.log(\"Making first data cell.\");\n\n  return React.createElement(TableCell, {\n    className: classes.firstCell,\n    onClick: onclick,\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, rowval);\n}\n\nfunction DataCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      elements = props.elements,\n      mode = props.mode,\n      other = _objectWithoutProperties(props, [\"classes\", \"state\", \"elements\", \"mode\"]);\n\n  if (elements === undefined) {\n    return React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    });\n  } else if (mode === state.Show.code.cell.Sum) {\n    return React.createElement(TableCell, {\n      className: classes.cell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"YY\"); //return <SummaryCell {...other} state={state} elements={elements}/>\n  } else {\n    return React.createElement(SeriesCell, Object.assign({}, other, {\n      state: state,\n      elements: elements,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }));\n  }\n}\n\nfunction renderDataCell(classes, state, colkey, colvalues, rowkey, rowval, rowindex, rowwhere, range, mode, step, val, index) {\n  var title = state.Database.getWhereDetail(colkey, colvalues[index]); //console.log(\"Making data cell:\",rowval,val,index,step,JSON.stringify(colvalues));\n\n  if ((index - 1) % step === 0) {\n    // get elements and range\n    var elements = state.Matrix.getMatrixElements(colvalues, rowval, state.React.matrix, index, step); // get count and colwhere\n\n    var cnt = Math.min(colvalues.length, index + step) - index;\n    var colwhere = state.Database.getColWhere(colkey, colvalues, index, step); // make onclick and title\n\n    var onclick = function onclick() {\n      return state.Navigate.selectItem(state, colkey, rowkey, colvalues[index], rowval, colwhere, rowwhere, cnt, 1);\n    };\n\n    return React.createElement(DataCell, {\n      className: classes.cell,\n      classes: classes,\n      state: state,\n      key: \"col-\".concat(index),\n      index: index,\n      onclick: onclick,\n      title: title,\n      colkey: colkey,\n      rowkey: rowkey,\n      colvalues: colvalues,\n      colval: val,\n      rowval: rowval,\n      colwhere: colwhere,\n      rowwhere: rowwhere,\n      elements: elements,\n      mode: mode,\n      step: step,\n      range: range,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    });\n  } else {\n    return null;\n  }\n}\n\nfunction dataRow(classes, state, colkey, rowkey, colvalues, mode, step, rowval, rowindex) {\n  var rowwhere = state.Database.getWhereDetail(rowkey, rowval);\n\n  var onclick = function onclick() {\n    return state.Navigate.selectKey(state, rowkey, rowval, rowwhere, 1);\n  };\n\n  var range = [undefined, undefined];\n\n  if (state.React.matrix !== undefined) {\n    range = state.Matrix.getRange(state, state.React.matrix, colvalues, [rowval]);\n  }\n\n  ; //console.log(\"Making data cols.\",colkey,JSON.stringify(colvalues));\n  //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderDataCell(classes, state, colkey, colvalues, rowkey, rowval, rowindex, rowwhere, range, mode, step, val, index);\n  };\n\n  return React.createElement(TableRow, {\n    key: rowindex.toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(FirstDataCell, {\n    classes: classes,\n    key: '0',\n    rowval: rowval,\n    onclick: onclick,\n    title: rowwhere,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), colvalues.map(mapFunction));\n}\n\n;\n\nfunction renderZeroRow(classes, state, colkey, colvalues, step) {\n  return React.createElement(TableRow, {\n    key: '1',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    key: \"0\",\n    state: state,\n    index: '0',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"No data\"));\n}\n\n;\n\nfunction DataRows(props) {\n  var classes = props.classes,\n      state = props.state,\n      step = props.step,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey,\n      rowvalues = props.rowvalues,\n      mode = props.mode; //console.log(\"Making data cols.\",colkey,JSON.stringify(colvalues));\n\n  var mapFunction = function mapFunction(val, index) {\n    return dataRow(classes, state, colkey, rowkey, colvalues, mode, step, val, index);\n  };\n\n  if (rowvalues.length === 0) {\n    return renderZeroRow(classes, state, colkey, colvalues, step);\n  } else {\n    return rowvalues.map(mapFunction);\n  }\n} // ---------------- HDR\n\n\nfunction FirstHdrCell(props) {\n  var classes = props.classes,\n      colkey = props.colkey,\n      rowkey = props.rowkey;\n  var label = rowkey + \"\\\\\" + colkey; //console.log(\"Making first header cell.\",label);\n\n  return React.createElement(TableCell, {\n    className: classes.firstCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, label);\n}\n\nfunction renderHdrCell(classes, state, colkey, colvalues, rowkey, step, val, index) {\n  if ((index - 1) % step === 0) {\n    //console.log(\"HdrCell:\",index,step);\n    var cnt = Math.min(colvalues.length, index + step) - index;\n    var colwhere = state.Database.getColWhere(colkey, colvalues, index, step);\n\n    var onclick = function onclick() {\n      return state.Navigate.selectKey(state, colkey, colvalues[index], colwhere, cnt);\n    };\n\n    var title = colwhere;\n    var ref = React.createRef(); //console.log(\"Ref:\",JSON.stringify(ref));\n\n    var cursor = classes.nopointer;\n\n    if (onclick !== undefined) {\n      cursor = classes.pointer;\n    } //var rotate=undefined;\n\n\n    var rotate = 1;\n    return React.createElement(TableCell, {\n      className: cursor,\n      onClick: onclick,\n      title: title,\n      key: \"col-\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Text, {\n      state: state,\n      index: index,\n      rotate: rotate,\n      label: val,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }));\n  } else {\n    return null;\n  }\n}\n\nfunction HdrRow(props) {\n  var classes = props.classes,\n      state = props.state,\n      step = props.step,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey; //, rowvalues\n  //console.log(\"Making header row.\",colkey,JSON.stringify(colvalues));\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderHdrCell(classes, state, colkey, colvalues, rowkey, step, val, index);\n  };\n\n  return React.createElement(TableRow, {\n    key: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(FirstHdrCell, {\n    classes: classes,\n    colkey: colkey,\n    rowkey: rowkey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }), colvalues.map(mapFunction));\n} // ---------------- Details\n\n\nfunction Details(props) {\n  var classes = props.classes,\n      state = props.state; // classes, \n\n  var colkey = state.Path.getColKey(state) || \"\";\n  var rowkey = state.Path.getRowKey(state) || \"\";\n  var colvalues = state.Path.filterKeys(state, state.Matrix.values[colkey] || [\"\"]);\n  var rowvalues = state.Path.filterKeys(state, state.Matrix.values[rowkey] || [\"\"]);\n  var cellMode = state.Show.getCellMode(state);\n  var step = getStep(state, colvalues, cellMode); //console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(state.Matrix.values[colkey]||[\"\"]));\n  //console.log(\"Rowkey:\",rowkey,\" rowval:\",JSON.stringify(state.Matrix.values[rowkey]||[\"\"]));\n\n  var ncol = colvalues.length + 1;\n  var nrow = rowvalues.length + 1; //DOM.style.font\n  //DOM.style.fontSize\n\n  console.log(\"Width/Height:\", window.innerWidth, window.innerHeight);\n  return React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(HdrRow, {\n    classes: classes,\n    state: state,\n    step: step,\n    colkey: colkey,\n    colvalues: colvalues,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  })));\n} //\t    <TableBody>\n//\t      <DataRows classes={classes} state={state} step={step} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues} mode={cellMode}/>\n//\t    </TableBody>\n//<div  style={{width: '100%', height: '100%'}}>\n//</div>\n\n\nvar Table2D =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Table2D, _Component);\n\n  function Table2D(props) {\n    var _this;\n\n    _classCallCheck(this, Table2D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table2D).call(this, props)); //this.state=props.state;\n\n    _this.updateWindowDimensions = function () {\n      _this.width = window.innerWidth;\n      _this.height = window.innerHeight;\n      _this.bbx = _this.el.getBoundingClientRect();\n      console.log(\"Width/Height:\", _this.width, _this.height, _this.bbx.width, _this.bbx.height);\n    };\n\n    return _this;\n  }\n\n  _createClass(Table2D, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n  }, {\n    key: \"element\",\n    value: function element(el) {\n      if (el !== undefined && el !== null) {\n        this.el = el;\n        this.bbx = this.el.getBoundingClientRect();\n        console.log(\"BBX width/height:\", this.bbx.width, this.bbx.height);\n      }\n\n      ;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state;\n      console.log(\"##### Rendering Table2D.\");\n      return React.createElement(\"div\", {\n        ref: function ref(el) {\n          _this2.element(el);\n        },\n        className: classes.root,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Details, {\n        state: state,\n        classes: classes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Table2D;\n}(Component);\n\nTable2D.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Table2D);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/Table2DComponent.js"],"names":["React","Component","PropTypes","withStyles","Paper","Grid","Table","TableBody","TableRow","TableHead","TableCell","ReactDOM","SummaryCell","SeriesCell","Text","styles","theme","root","height","maxWidth","table","textAlign","padding","borderStyle","overflow","row","cell","cursor","spacing","unit","rotate","firstCell","width","flexGrow","pointer","nopointer","getStep","state","colvalues","cellMode","step","Show","code","Series","Math","max","ceil","length","FirstDataCell","props","classes","rowval","onclick","title","DataCell","elements","mode","other","undefined","Sum","renderDataCell","colkey","rowkey","rowindex","rowwhere","range","val","index","Database","getWhereDetail","Matrix","getMatrixElements","matrix","cnt","min","colwhere","getColWhere","Navigate","selectItem","dataRow","selectKey","getRange","mapFunction","toString","map","renderZeroRow","DataRows","rowvalues","FirstHdrCell","label","renderHdrCell","ref","createRef","HdrRow","Details","Path","getColKey","getRowKey","filterKeys","values","getCellMode","ncol","nrow","console","log","window","innerWidth","innerHeight","Table2D","updateWindowDimensions","bbx","el","getBoundingClientRect","addEventListener","element","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport ReactDOM from 'react-dom';\n\nimport SummaryCell from './SummaryCell';\nimport SeriesCell  from './SeriesCell';\nimport Text        from './TextComponent';\n\n//console.log(\"Inside Table.\")\n\n//        flexGrow: 1,\n//\t\n\nconst styles = theme => ({\n    root: {\n\theight: '100%',\n\tmaxWidth: '100%',\n    },\n    table: {\n        textAlign: 'left',\n\tpadding: \"0px\",\n\tborderStyle: 'solid',\n\toverflow: 'hidden',\n    },\n    row  :{},//\tmargin: '100px',\n    cell : {\n\tcursor: \"pointer\",\n\tpadding: theme.spacing.unit*0,\n    },\n    rotate : {\n\tcursor: \"pointer\",\n\tpadding: theme.spacing.unit*0,\n    },\n    firstCell : {\n\tcursor: \"pointer\",\n\tpadding: theme.spacing.unit*0.5,\n\twidth:'100%',\n\theight:'100%',\n\tflexGrow:1,\n    },\n    pointer: {\n\tpadding: theme.spacing.unit*0.1,\n\tcursor:\"pointer\",\n    },\n    nopointer: {\n\tpadding: theme.spacing.unit*0.1,\n    },\n});\n\n//\tmargin: '100px',\n//      padding: theme.spacing.unit * 0,\n//\tborderStyle: 'solid',\n//\tmaxWidth: '100px',\n\nfunction getStep(state,colvalues,cellMode) {\n    var step=1;\n    if (cellMode === state.Show.code.cell.Series) {step=Math.max(1,Math.ceil(colvalues.length/20));}\n    return step;\n}\n// ---------------- DATA\nfunction FirstDataCell (props) {\n    const { classes, rowval, onclick, title } = props;\n    //console.log(\"Making first data cell.\");\n    return (<TableCell className={classes.firstCell} onClick={onclick} title={title}>{rowval}</TableCell>);\n}\nfunction DataCell(props) {\n    const {classes,state,elements,mode,...other}=props;\n    if (elements===undefined) {\n\treturn <TableCell/>\n    } else if (mode===state.Show.code.cell.Sum) {\n\treturn <TableCell className={classes.cell}>YY</TableCell>;\n\t//return <SummaryCell {...other} state={state} elements={elements}/>\n    } else {\n\treturn <SeriesCell {...other} state={state} elements={elements}/>\n    }\n}\nfunction renderDataCell(classes,state,colkey,colvalues,rowkey,rowval,rowindex,rowwhere,range,mode,step,val,index) {\n    var title=state.Database.getWhereDetail(colkey,colvalues[index]);\n    //console.log(\"Making data cell:\",rowval,val,index,step,JSON.stringify(colvalues));\n    if ((index-1)%step === 0) {\n\t// get elements and range\n\tvar elements=state.Matrix.getMatrixElements(colvalues,rowval,state.React.matrix,index,step);\n\t// get count and colwhere\n        var cnt = Math.min(colvalues.length,index+step)-index;\n        var colwhere = state.Database.getColWhere(colkey,colvalues,index,step);\n\t// make onclick and title\n\tvar onclick=() => state.Navigate.selectItem(state,colkey,rowkey,colvalues[index],rowval,colwhere,rowwhere,cnt,1);\n\treturn (<DataCell className={classes.cell} classes={classes} state={state} key={`col-${index}`} index={index} onclick={onclick} title={title} \n\t\tcolkey={colkey} rowkey={rowkey} colvalues={colvalues} colval={val} rowval={rowval} colwhere={colwhere} rowwhere={rowwhere} \n\t\telements={elements} mode={mode} step={step} range={range}/>);\n    } else {\n\treturn null;\n    }\n}\nfunction dataRow(classes,state,colkey,rowkey,colvalues,mode,step,rowval,rowindex) {\n    var rowwhere=state.Database.getWhereDetail(rowkey,rowval);\n    var onclick=() => state.Navigate.selectKey(state,rowkey,rowval,rowwhere,1);\n    var range=[undefined,undefined];\n    if (state.React.matrix!==undefined) {\n\trange=state.Matrix.getRange(state,state.React.matrix,colvalues,[rowval]);\n    };\n    //console.log(\"Making data cols.\",colkey,JSON.stringify(colvalues));\n    //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n    var mapFunction= (val,index)=>renderDataCell(classes,state,colkey,colvalues,rowkey,rowval,rowindex,rowwhere,range,mode,step,val,index);\n    return (<TableRow key={rowindex.toString()}>\n\t    <FirstDataCell classes={classes} key={'0'} rowval={rowval} onclick={onclick} title={rowwhere}/>\n\t    {colvalues.map(mapFunction)}\n\t    </TableRow>);\n};\nfunction renderZeroRow(classes,state,colkey,colvalues,step) {\n    return (<TableRow key={'1'}>\n\t    <TableCell  key={`0`} state={state} index={'0'}>No data</TableCell>\n\t    </TableRow>);\n};\nfunction DataRows(props) {\n    const { classes, state, step, colkey, colvalues, rowkey, rowvalues, mode } = props;\n    //console.log(\"Making data cols.\",colkey,JSON.stringify(colvalues));\n    var mapFunction= (val,index)=>dataRow(classes,state,colkey,rowkey,colvalues,mode,step,val,index);\n    if (rowvalues.length===0) {\n\treturn renderZeroRow(classes,state,colkey,colvalues,step);\n    } else {\n\treturn (rowvalues.map(mapFunction));\n    }\n}\n// ---------------- HDR\nfunction FirstHdrCell (props) {\n    const { classes, colkey, rowkey } = props;\n    var label=rowkey + \"\\\\\" + colkey;\n    //console.log(\"Making first header cell.\",label);\n    return (<TableCell className={classes.firstCell}>{label}</TableCell>);\n}\nfunction renderHdrCell(classes,state,colkey,colvalues,rowkey,step,val,index) {\n    if ((index-1)%step === 0) {\n\t//console.log(\"HdrCell:\",index,step);\n        var cnt = Math.min(colvalues.length,index+step)-index;\n        var colwhere = state.Database.getColWhere(colkey,colvalues,index,step);\n\tvar onclick=() => state.Navigate.selectKey(state,colkey,colvalues[index],colwhere,cnt);\n\tvar title=colwhere;\n\tvar ref=React.createRef();\n\t//console.log(\"Ref:\",JSON.stringify(ref));\n\tvar cursor=classes.nopointer;\n\tif (onclick !== undefined) {\n\t    cursor=classes.pointer;\n\t}\n\t//var rotate=undefined;\n\tvar rotate=1;\n\treturn (\n\t\t<TableCell className={cursor} onClick={onclick} title={title} key={`col-${index}`} >\n\t\t   <Text state={state} index={index} rotate={rotate} label={val}></Text>\n \t        </TableCell> );\n     } else {\n\treturn null;\n    }\n}\nfunction HdrRow(props) {\n    const { classes, state, step, colkey, colvalues, rowkey } = props; //, rowvalues\n    //console.log(\"Making header row.\",colkey,JSON.stringify(colvalues));\n    var mapFunction= (val,index)=>renderHdrCell(classes,state,colkey,colvalues,rowkey,step,val,index);\n    return (<TableRow key={0}>\n\t      <FirstHdrCell classes={classes} colkey={colkey} rowkey={rowkey}/>\n\t      {colvalues.map(mapFunction)}\n\t     </TableRow>);\n}\n// ---------------- Details\nfunction Details(props) {\n    const { classes, state } = props; // classes, \n    var colkey = state.Path.getColKey(state)||\"\";\n    var rowkey = state.Path.getRowKey(state)||\"\";\n    var colvalues = state.Path.filterKeys(state,state.Matrix.values[colkey]||[\"\"]);\n    var rowvalues = state.Path.filterKeys(state,state.Matrix.values[rowkey]||[\"\"]);\n    var cellMode  = state.Show.getCellMode(state);\n    var step=getStep(state,colvalues,cellMode);\n    //console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(state.Matrix.values[colkey]||[\"\"]));\n    //console.log(\"Rowkey:\",rowkey,\" rowval:\",JSON.stringify(state.Matrix.values[rowkey]||[\"\"]));\n    var ncol=colvalues.length + 1;\n    var nrow=rowvalues.length + 1;\n    //DOM.style.font\n    //DOM.style.fontSize\n\n    console.log(\"Width/Height:\",window.innerWidth,window.innerHeight)\n    \n    return (<Table className={classes.table}>\n\t    <TableHead>\n\t      <HdrRow classes={classes} state={state} step={step} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues}/>\n\t    </TableHead>\n        </Table>);\n }\n\n//\t    <TableBody>\n//\t      <DataRows classes={classes} state={state} step={step} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues} mode={cellMode}/>\n//\t    </TableBody>\n\n\n\n//<div  style={{width: '100%', height: '100%'}}>\n//</div>\n        \nclass Table2D extends Component {\n    constructor(props) {\n\tsuper(props);\n\t//this.state=props.state;\n    }\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    } \n    updateWindowDimensions = () => {\n        this.width= window.innerWidth;\n\tthis.height=window.innerHeight;\n\tthis.bbx=this.el.getBoundingClientRect();\n\tconsole.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n    element(el) {\n\tif (el !== undefined && el !== null) {\n\t    this.el=el;\n\t    this.bbx=this.el.getBoundingClientRect();\n\t    console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n\t};\n    };\n    render() {\n\tconst { classes, state } = this.props;\n\tconsole.log(\"##### Rendering Table2D.\");\n\treturn (<div ref={el=>{this.element(el)}} className={classes.root}  style={{width: '100%', height: '100%'}}>\n\t\t   <Grid container spacing={24}>\n\t\t      <Grid item xs={12} > \n                         { <Paper className={classes.table}>\n\t\t              <Details state={state} classes={classes}/>\n                           </Paper>}\n                      </Grid>\n                   </Grid>\n\t        </div>);\n    }\n}\n\nTable2D.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Table2D);\n"]},"metadata":{},"sourceType":"module"}