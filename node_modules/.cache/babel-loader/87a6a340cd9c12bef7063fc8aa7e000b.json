{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/Table2DComponent.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport SummaryCell from './SummaryCell';\nimport SeriesCell from './SeriesCell'; //console.log(\"Inside Table.\")\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      height: '100%',\n      width: '100%'\n    },\n    table: {\n      textAlign: 'left',\n      padding: theme.spacing.unit * 0,\n      height: '100%',\n      width: '100%',\n      borderStyle: 'solid'\n    },\n    row: {\n      alignItems: \"stretch\"\n    },\n    cell: {\n      cursor: \"pointer\"\n    }\n  };\n};\n\nfunction getStep(state, colvalues, cellMode) {\n  var step = 1;\n\n  if (cellMode === state.Show.code.cell.Series) {\n    step = Math.max(1, Math.ceil(colvalues.length / 20));\n  }\n\n  return step;\n} // ---------------- DATA\n\n\nfunction FirstDataCell(props) {\n  var classes = props.classes,\n      rowval = props.rowval,\n      onclick = props.onclick,\n      title = props.title; //console.log(\"Making first data cell.\");\n\n  return React.createElement(TableCell, {\n    className: classes.cell,\n    onClick: onclick,\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, rowval);\n}\n\nfunction DataCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      elements = props.elements,\n      mode = props.mode,\n      other = _objectWithoutProperties(props, [\"classes\", \"state\", \"elements\", \"mode\"]);\n\n  if (elements === undefined) {\n    return React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    });\n  } else if (mode === state.Show.code.cell.Sum) {\n    return React.createElement(SummaryCell, Object.assign({}, other, {\n      state: state,\n      elements: elements,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(SeriesCell, Object.assign({}, other, {\n      state: state,\n      elements: elements,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n}\n\nfunction renderDataCell(classes, state, colkey, colvalues, rowkey, rowval, rowindex, rowwhere, range, mode, step, val, index) {\n  var title = state.Database.getWhereDetail(colkey, colvalues[index]); //console.log(\"Making data cell:\",rowval,val,index,step,JSON.stringify(colvalues));\n\n  if ((index - 1) % step === 0) {\n    // get elements and range\n    var elements = state.Matrix.getMatrixElements(colvalues, rowval, state.React.matrix, index, step); // get count and colwhere\n\n    var cnt = Math.min(colvalues.length, index + step) - index;\n    var colwhere = state.Database.getColWhere(colkey, colvalues, index, step); // make onclick and title\n\n    var onclick = function onclick() {\n      return state.Layout.selectItem(state, colkey, rowkey, colvalues[index], rowval, colwhere, rowwhere, cnt, 1);\n    };\n\n    return React.createElement(DataCell, {\n      className: classes.cell,\n      state: state,\n      key: \"col-\".concat(index),\n      index: index,\n      onclick: onclick,\n      title: title,\n      colkey: colkey,\n      rowkey: rowkey,\n      colval: val,\n      rowval: rowval,\n      colwhere: colwhere,\n      rowwhere: rowwhere,\n      elements: elements,\n      mode: mode,\n      step: step,\n      range: range,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  } else {\n    return null;\n  }\n}\n\nfunction dataRow(classes, state, colkey, rowkey, colvalues, mode, step, rowval, rowindex) {\n  var rowwhere = state.Database.getWhereDetail(rowkey, rowval);\n\n  var onclick = function onclick() {\n    return state.Layout.selectKey(state, rowkey, rowval, rowwhere, 1);\n  };\n\n  var range = [undefined, undefined];\n\n  if (state.React.matrix !== undefined) {\n    range = state.Matrix.getRange(state, state.React.matrix, colvalues, [rowval]);\n  }\n\n  ;\n  console.log(\"We have a matrix(\", rowval, \") with range:\", JSON.stringify(range));\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderDataCell(classes, state, colkey, colvalues, rowkey, rowval, rowindex, rowwhere, range, mode, step, val, index);\n  };\n\n  return React.createElement(TableRow, {\n    key: rowindex.toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(FirstDataCell, {\n    classes: classes,\n    key: '0',\n    rowval: rowval,\n    onclick: onclick,\n    title: rowwhere,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), colvalues.map(mapFunction));\n}\n\n;\n\nfunction renderZeroRow(classes, state, colkey, colvalues, step) {\n  return React.createElement(TableRow, {\n    key: '1',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    key: \"0\",\n    state: state,\n    index: '0',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"No data\"));\n}\n\n;\n\nfunction DataRows(props) {\n  var classes = props.classes,\n      state = props.state,\n      step = props.step,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey,\n      rowvalues = props.rowvalues,\n      mode = props.mode; //console.log(\"Making data rows.\",rowkey,JSON.stringify(rowvalues));\n\n  var mapFunction = function mapFunction(val, index) {\n    return dataRow(classes, state, colkey, rowkey, colvalues, mode, step, val, index);\n  };\n\n  if (rowvalues.length === 0) {\n    return renderZeroRow(classes, state, colkey, colvalues, step);\n  } else {\n    return rowvalues.map(mapFunction);\n  }\n} // ---------------- HDR\n\n\nfunction FirstHdrCell(props) {\n  var colkey = props.colkey,\n      rowkey = props.rowkey;\n  var label = rowkey + \"\\\\\" + colkey; //console.log(\"Making first header cell.\",label);\n\n  return React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, label);\n}\n\nfunction renderHdrCell(classes, state, colkey, colvalues, rowkey, step, val, index) {\n  if ((index - 1) % step === 0) {\n    //console.log(\"HdrCell:\",index,step);\n    var cnt = Math.min(colvalues.length, index + step) - index;\n    var colwhere = state.Database.getColWhere(colkey, colvalues, index, step);\n\n    var onclick = function onclick() {\n      return state.Layout.selectKey(state, colkey, colvalues[index], colwhere, cnt);\n    };\n\n    var title = colwhere;\n    return React.createElement(TableCell, {\n      className: classes.cell,\n      key: \"col-\".concat(index),\n      index: index,\n      onClick: onclick,\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, val);\n  } else {\n    return null;\n  }\n}\n\nfunction HdrRow(props) {\n  var classes = props.classes,\n      state = props.state,\n      step = props.step,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey; //, rowvalues\n  //console.log(\"Making header row.\",colkey,JSON.stringify(colvalues));\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderHdrCell(classes, state, colkey, colvalues, rowkey, step, val, index);\n  };\n\n  return React.createElement(TableRow, {\n    key: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(FirstHdrCell, {\n    colkey: colkey,\n    rowkey: rowkey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), colvalues.map(mapFunction));\n} // ---------------- Details\n\n\nfunction Details(props) {\n  var classes = props.classes,\n      state = props.state; // classes, \n\n  var colkey = state.Path.getColKey(state) || \"\";\n  var rowkey = state.Path.getRowKey(state) || \"\";\n  var colvalues = state.Path.filterKeys(state, state.Matrix.values[colkey] || [\"\"]);\n  var rowvalues = state.Path.filterKeys(state, state.Matrix.values[rowkey] || [\"\"]);\n  var cellMode = state.Show.getCellMode();\n  var step = getStep(state, colvalues, cellMode);\n  console.log(\"Colkey:\", colkey, \" colval:\", JSON.stringify(state.Matrix.values[colkey] || [\"\"]));\n  console.log(\"Rowkey:\", rowkey, \" rowval:\", JSON.stringify(state.Matrix.values[rowkey] || [\"\"]));\n  return React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(HdrRow, {\n    classes: classes,\n    state: state,\n    step: step,\n    colkey: colkey,\n    colvalues: colvalues,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  })), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(DataRows, {\n    classes: classes,\n    state: state,\n    step: step,\n    colkey: colkey,\n    colvalues: colvalues,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    mode: cellMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }))));\n}\n\nvar Table2D =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Table2D, _Component);\n\n  function Table2D(props) {\n    var _this;\n\n    _classCallCheck(this, Table2D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table2D).call(this, props));\n    _this.state = props.state;\n    return _this;\n  }\n\n  _createClass(Table2D, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state;\n      console.log(\"##### Rendering Table2D.\");\n      return React.createElement(\"div\", {\n        className: classes.root,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Details, {\n        state: state,\n        classes: classes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Table2D;\n}(Component);\n\nTable2D.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Table2D);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/Table2DComponent.js"],"names":["React","Component","PropTypes","withStyles","Paper","Grid","Table","TableBody","TableRow","TableHead","TableCell","SummaryCell","SeriesCell","styles","theme","root","flexGrow","height","width","table","textAlign","padding","spacing","unit","borderStyle","row","alignItems","cell","cursor","getStep","state","colvalues","cellMode","step","Show","code","Series","Math","max","ceil","length","FirstDataCell","props","classes","rowval","onclick","title","DataCell","elements","mode","other","undefined","Sum","renderDataCell","colkey","rowkey","rowindex","rowwhere","range","val","index","Database","getWhereDetail","Matrix","getMatrixElements","matrix","cnt","min","colwhere","getColWhere","Layout","selectItem","dataRow","selectKey","getRange","console","log","JSON","stringify","mapFunction","toString","map","renderZeroRow","DataRows","rowvalues","FirstHdrCell","label","renderHdrCell","HdrRow","Details","Path","getColKey","getRowKey","filterKeys","values","getCellMode","Table2D","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\n\nimport SummaryCell from './SummaryCell';\nimport SeriesCell from './SeriesCell';\n\n//console.log(\"Inside Table.\")\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n\theight: '100%',\n\twidth: '100%',\n    },\n    table: {\n        textAlign: 'left',\n        padding: theme.spacing.unit * 0,\n\theight: '100%',\n\twidth: '100%',\n\tborderStyle: 'solid',\n    },\n    row  :{alignItems: \"stretch\"},\n    cell : {cursor: \"pointer\"},\n});\nfunction getStep(state,colvalues,cellMode) {\n    var step=1;\n    if (cellMode === state.Show.code.cell.Series) {step=Math.max(1,Math.ceil(colvalues.length/20));}\n    return step;\n}\n// ---------------- DATA\nfunction FirstDataCell (props) {\n    const { classes, rowval, onclick, title } = props;\n    //console.log(\"Making first data cell.\");\n    return (<TableCell className={classes.cell} onClick={onclick} title={title}>{rowval}</TableCell>);\n}\nfunction DataCell(props) {\n    const {classes,state,elements,mode,...other}=props;\n    if (elements===undefined) {\n\treturn <TableCell/>\n    } else if (mode===state.Show.code.cell.Sum) {\n\treturn <SummaryCell {...other} state={state} elements={elements}/>\n    } else {\n\treturn <SeriesCell {...other} state={state} elements={elements}/>\n    }\n}\nfunction renderDataCell(classes,state,colkey,colvalues,rowkey,rowval,rowindex,rowwhere,range,mode,step,val,index) {\n    var title=state.Database.getWhereDetail(colkey,colvalues[index]);\n    //console.log(\"Making data cell:\",rowval,val,index,step,JSON.stringify(colvalues));\n    if ((index-1)%step === 0) {\n\t// get elements and range\n\tvar elements=state.Matrix.getMatrixElements(colvalues,rowval,state.React.matrix,index,step);\n\t// get count and colwhere\n        var cnt = Math.min(colvalues.length,index+step)-index;\n        var colwhere = state.Database.getColWhere(colkey,colvalues,index,step);\n\t// make onclick and title\n\tvar onclick=() => state.Layout.selectItem(state,colkey,rowkey,colvalues[index],rowval,colwhere,rowwhere,cnt,1);\n\treturn (<DataCell className={classes.cell} state={state} key={`col-${index}`} index={index} onclick={onclick} title={title} \n\t\tcolkey={colkey} rowkey={rowkey} colval={val} rowval={rowval} colwhere={colwhere} rowwhere={rowwhere} \n\t\telements={elements} mode={mode} step={step} range={range}/>);\n    } else {\n\treturn null;\n    }\n}\nfunction dataRow(classes,state,colkey,rowkey,colvalues,mode,step,rowval,rowindex) {\n    var rowwhere=state.Database.getWhereDetail(rowkey,rowval);\n    var onclick=() => state.Layout.selectKey(state,rowkey,rowval,rowwhere,1);\n    var range=[undefined,undefined];\n    if (state.React.matrix!==undefined) {\n\trange=state.Matrix.getRange(state,state.React.matrix,colvalues,[rowval]);\n    };\n    console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n    var mapFunction= (val,index)=>renderDataCell(classes,state,colkey,colvalues,rowkey,rowval,rowindex,rowwhere,range,mode,step,val,index);\n    return (<TableRow key={rowindex.toString()}>\n\t    <FirstDataCell classes={classes} key={'0'} rowval={rowval} onclick={onclick} title={rowwhere}/>\n\t    {colvalues.map(mapFunction)}\n\t    </TableRow>);\n};\nfunction renderZeroRow(classes,state,colkey,colvalues,step) {\n    return (<TableRow key={'1'}>\n\t    <TableCell  key={`0`} state={state} index={'0'}>No data</TableCell>\n\t    </TableRow>);\n};\nfunction DataRows(props) {\n    const { classes, state, step, colkey, colvalues, rowkey, rowvalues, mode } = props;\n    //console.log(\"Making data rows.\",rowkey,JSON.stringify(rowvalues));\n    var mapFunction= (val,index)=>dataRow(classes,state,colkey,rowkey,colvalues,mode,step,val,index);\n    if (rowvalues.length===0) {\n\treturn renderZeroRow(classes,state,colkey,colvalues,step);\n    } else {\n\treturn (rowvalues.map(mapFunction));\n    }\n}\n// ---------------- HDR\nfunction FirstHdrCell (props) {\n    const { colkey, rowkey } = props;\n    var label=rowkey + \"\\\\\" + colkey;\n    //console.log(\"Making first header cell.\",label);\n    return (<TableCell>{label}</TableCell>);\n}\nfunction renderHdrCell(classes,state,colkey,colvalues,rowkey,step,val,index) {\n    if ((index-1)%step === 0) {\n\t//console.log(\"HdrCell:\",index,step);\n        var cnt = Math.min(colvalues.length,index+step)-index;\n        var colwhere = state.Database.getColWhere(colkey,colvalues,index,step);\n\tvar onclick=() => state.Layout.selectKey(state,colkey,colvalues[index],colwhere,cnt);\n\tvar title=colwhere;\n\treturn (<TableCell className={classes.cell} key={`col-${index}`} index={index} onClick={onclick} title={title}>{val}</TableCell>);\n    } else {\n\treturn null;\n    }\n}\nfunction HdrRow(props) {\n    const { classes, state, step, colkey, colvalues, rowkey } = props; //, rowvalues\n    //console.log(\"Making header row.\",colkey,JSON.stringify(colvalues));\n    var mapFunction= (val,index)=>renderHdrCell(classes,state,colkey,colvalues,rowkey,step,val,index);\n    return (<TableRow key={0}>\n\t      <FirstHdrCell colkey={colkey} rowkey={rowkey}/>\n\t      {colvalues.map(mapFunction)}\n\t     </TableRow>);\n}\n// ---------------- Details\nfunction Details(props) {\n    const { classes, state } = props; // classes, \n    var colkey = state.Path.getColKey(state)||\"\";\n    var rowkey = state.Path.getRowKey(state)||\"\";\n    var colvalues = state.Path.filterKeys(state,state.Matrix.values[colkey]||[\"\"]);\n    var rowvalues = state.Path.filterKeys(state,state.Matrix.values[rowkey]||[\"\"]);\n    var cellMode  = state.Show.getCellMode();\n    var step=getStep(state,colvalues,cellMode);\n    console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(state.Matrix.values[colkey]||[\"\"]));\n    console.log(\"Rowkey:\",rowkey,\" rowval:\",JSON.stringify(state.Matrix.values[rowkey]||[\"\"]));\n    return (<div  style={{width: '100%', height: '100%'}}>\n        <Table>\n\t    <TableHead>\n\t      <HdrRow classes={classes} state={state} step={step} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues}/>\n\t    </TableHead>\n\t    <TableBody>\n\t      <DataRows classes={classes} state={state} step={step} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues} mode={cellMode}/>\n\t    </TableBody>\n        </Table>\n           </div>);\n }\nclass Table2D extends Component {\n    constructor(props) {\n\tsuper(props);\n\tthis.state=props.state;\n    }\n    componentDidMount() {} \n    render() {\n\tconst { classes, state } = this.props;\n\tconsole.log(\"##### Rendering Table2D.\");\n\treturn (<div className={classes.root}  style={{width: '100%', height: '100%'}}>\n\t\t   <Grid container spacing={24}>\n\t\t      <Grid item xs={12} > \n                         { <Paper className={classes.table}>\n\t\t              <Details state={state} classes={classes}/>\n                           </Paper>}\n                      </Grid>\n                   </Grid>\n\t        </div>);\n    }\n}\n\nTable2D.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Table2D);\n"]},"metadata":{},"sourceType":"module"}