{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/Table1DComponent.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { teal_palette } from '../mui/metMuiThemes';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport SummaryCell from './SummaryCell';\nimport SeriesCell from './SeriesCell';\nimport CanvasText from './CanvasTextComponent';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      height: '100%'\n    },\n    paper: {\n      overflow: 'hidden',\n      tableLayout: 'fixed',\n      padding: 0,\n      margin: 0\n    },\n    divTable: {\n      display: 'table',\n      width: '100%'\n    },\n    divTableRow: {\n      display: 'table-row'\n    },\n    divTableCell: {\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    },\n    divTableCellCursor: {\n      cursor: \"pointer\",\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    },\n    divTableHead: {\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    },\n    divTableHeading: {\n      display: 'table-header-group'\n    },\n    divTableHeadingCenter: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    divTableFoot: {\n      backgroundColor: '#DDD',\n      display: 'table-footer-group',\n      fontWeight: 'bold'\n    },\n    divTableBody: {\n      display: 'table-row-group'\n    }\n  };\n}; //const mui = createTheme({palette:teal_palette});\n// ---------------- DATA\n\n\nfunction DataCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      elements = props.elements,\n      mode = props.mode,\n      plan = props.plan,\n      other = _objectWithoutProperties(props, [\"classes\", \"state\", \"elements\", \"mode\", \"plan\"]);\n\n  if (elements === undefined) {\n    return React.createElement(\"div\", {\n      className: classes.divTableCell,\n      style: {\n        backgroundColor: '#EEE'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    });\n  } else if (mode === state.Show.code.cell.Sum) {\n    return React.createElement(SummaryCell, Object.assign({}, other, {\n      state: state,\n      elements: elements,\n      plan: plan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })); //return null;\n  } else {\n    return React.createElement(SeriesCell, Object.assign({}, other, {\n      state: state,\n      elements: elements,\n      plan: plan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })); //return null;\n  }\n}\n\nfunction renderDataCell(classes, state, colkey, colvalues, colvalue, index, range, mode, plan) {\n  var title = state.Database.getWhereDetail(colkey, colvalues[index]); //console.log(\"Making data cell:\",colvalue,index,JSON.stringify(plan));\n\n  if ((index - 1) % plan.step === 0) {\n    // get elements and range\n    //console.log(\"Processing:\",colvalues[index],plan.step);\n    var elements = state.Matrix.getMatrixElements(colvalues, \"\", state.React.matrix, index, plan.step); //console.log(\"Elements:\",JSON.stringify(elements),mode);\n    // get count and colwhere\n\n    var cnt = Math.min(colvalues.length, index + plan.step) - index;\n    var colwhere = state.Database.getColWhere(colkey, colvalues, index, plan.step);\n    return React.createElement(DataCell, {\n      classes: classes,\n      state: state,\n      key: \"col-\".concat(index),\n      index: index,\n      onclick: onclick,\n      title: title,\n      colkey: colkey,\n      colvalues: colvalues,\n      colval: colvalue,\n      colwhere: colwhere,\n      elements: elements,\n      mode: mode,\n      plan: plan,\n      range: range,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    });\n  } else {\n    return null;\n  }\n}\n\nfunction DataRow(props) {\n  var classes = props.classes,\n      state = props.state,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      mode = props.mode,\n      plan = props.plan;\n  var range = [undefined, undefined];\n\n  if (state.React.matrix !== undefined) {\n    range = state.Matrix.getRange(state, state.React.matrix, colvalues, [\"\"]);\n  }\n\n  ;\n  console.log(\"Matrix:\", JSON.stringify(state.React.matrix));\n  console.log(\"Making data cols.\", colkey, JSON.stringify(colvalues));\n  console.log(\"We have a matrix with range:\", JSON.stringify(range));\n\n  var mapFunction = function mapFunction(colvalue, index) {\n    return renderDataCell(classes, state, colkey, colvalues, colvalue, index, range, mode, plan);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.divTableRow,\n    key: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, colvalues.map(mapFunction));\n}\n\n; // ---------------- HDR\n\nfunction renderHdrCell(classes, state, colkey, colvalues, plan, val, index) {\n  if ((index - 1) % plan.step === 0) {\n    //console.log(\"HdrCell:\",index,plan.step);\n    var cnt = Math.min(colvalues.length, index + plan.step) - index;\n    var colwhere = state.Database.getColWhere(colkey, colvalues, index, plan.step);\n\n    var onclick = function onclick() {\n      return state.Navigate.selectKey(state, colkey, colvalues[index], colwhere, cnt);\n    };\n\n    var title = colwhere;\n    var cursor = classes.divTableCell;\n\n    if (onclick !== undefined) {\n      cursor = classes.divTableCellCursor;\n    }\n\n    return React.createElement(\"div\", {\n      className: cursor,\n      onClick: onclick,\n      style: {\n        backgroundColor: '#DDD'\n      },\n      title: title,\n      key: \"col-\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(CanvasText, {\n      state: state,\n      index: index,\n      plan: plan.col,\n      label: val,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }));\n  } else {\n    return null;\n  }\n}\n\nfunction HdrRow(props) {\n  var classes = props.classes,\n      state = props.state,\n      plan = props.plan,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      label = props.label; //, rowvalues\n  //console.log(\"Making header row.\",colkey,JSON.stringify(colvalues));\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderHdrCell(classes, state, colkey, colvalues, plan, val, index);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.divTableRow,\n    key: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, colvalues.map(mapFunction));\n} // ---------------- Details\n\n\nfunction Details(props) {\n  var classes = props.classes,\n      state = props.state; // classes, element\n\n  var colkey = state.Path.getColKey(state) || \"\";\n  var colvalues = state.Path.filterKeys(state, state.Matrix.values[colkey] || [\"\"]);\n  var cellMode = state.Show.getCellMode(state); //var ncol=colvalues.length + 1;\n  //DOM.style.font\n\n  var border = 2;\n  var label = colkey;\n  var width = 0.8 * window.innerWidth;\n  var height = 0.8 * (window.innerHeight - 200);\n  var plans = state.Layout.makePlans(label, colvalues, [\"\"], width, height, border); //console.log(\"Details => Width/Height:\",window.innerWidth,window.innerHeight,plan.cell.width,plan.hdr.height)\n  //console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(colvalues));\n\n  return React.createElement(\"div\", {\n    className: classes.divTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.divTableBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(HdrRow, {\n    classes: classes,\n    state: state,\n    plans: plans,\n    colkey: colkey,\n    colvalues: colvalues,\n    label: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(DataRow, {\n    classes: classes,\n    state: state,\n    plans: plans,\n    colkey: colkey,\n    colvalues: colvalues,\n    mode: cellMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  })));\n}\n\nvar Table1D =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Table1D, _Component);\n\n  function Table1D() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Table1D);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Table1D)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.updateWindowDimensions = function () {\n      _this.width = window.innerWidth;\n      _this.height = window.innerHeight;\n      _this.bbx = _this.el.getBoundingClientRect(); //console.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n\n    return _this;\n  }\n\n  _createClass(Table1D, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n  }, {\n    key: \"element\",\n    value: function element(el) {\n      if (el !== undefined && el !== null) {\n        this.el = el;\n        this.bbx = this.el.getBoundingClientRect(); //console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n      }\n\n      ;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state; //console.log(\"##### Rendering Table1D.\");\n\n      return React.createElement(\"div\", {\n        ref: function ref(el) {\n          _this2.element(el);\n        },\n        className: classes.root,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Details, {\n        state: state,\n        classes: classes,\n        element: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Table1D;\n}(Component);\n\nTable1D.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Table1D);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/Table1DComponent.js"],"names":["React","Component","PropTypes","withStyles","teal_palette","Paper","Grid","SummaryCell","SeriesCell","CanvasText","styles","theme","root","height","paper","overflow","tableLayout","padding","margin","divTable","display","width","divTableRow","divTableCell","border","divTableCellCursor","cursor","divTableHead","divTableHeading","divTableHeadingCenter","justifyContent","divTableFoot","backgroundColor","fontWeight","divTableBody","DataCell","props","classes","state","elements","mode","plan","other","undefined","Show","code","cell","Sum","renderDataCell","colkey","colvalues","colvalue","index","range","title","Database","getWhereDetail","step","Matrix","getMatrixElements","matrix","cnt","Math","min","length","colwhere","getColWhere","onclick","DataRow","getRange","console","log","JSON","stringify","mapFunction","map","renderHdrCell","val","Navigate","selectKey","col","HdrRow","label","Details","Path","getColKey","filterKeys","values","cellMode","getCellMode","window","innerWidth","innerHeight","plans","Layout","makePlans","Table1D","updateWindowDimensions","bbx","el","getBoundingClientRect","addEventListener","element","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAAQC,YAAR,QAA2B,qBAA3B;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAwB,cAAxB;AACA,OAAOC,UAAP,MAAwB,uBAAxB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,IAAI,EAAE;AACTC,MAAAA,MAAM,EAAE;AADC,KADe;AAIrBC,IAAAA,KAAK,EAAE;AACVC,MAAAA,QAAQ,EAAE,QADA;AAEVC,MAAAA,WAAW,EAAE,OAFH;AAGVC,MAAAA,OAAO,EAAC,CAHE;AAIVC,MAAAA,MAAM,EAAC;AAJG,KAJc;AAUrBC,IAAAA,QAAQ,EAAE;AACbC,MAAAA,OAAO,EAAE,OADI;AAEbC,MAAAA,KAAK,EAAE;AAFM,KAVW;AAcrBC,IAAAA,WAAW,EAAG;AACjBF,MAAAA,OAAO,EAAE;AADQ,KAdO;AAiBrBG,IAAAA,YAAY,EAAC;AAChBC,MAAAA,MAAM,EAAE,mBADQ;AAEhBJ,MAAAA,OAAO,EAAE,YAFO;AAGhBH,MAAAA,OAAO,EAAE;AAHO,KAjBQ;AAsBrBQ,IAAAA,kBAAkB,EAAC;AACtBC,MAAAA,MAAM,EAAE,SADc;AAEtBF,MAAAA,MAAM,EAAE,mBAFc;AAGtBJ,MAAAA,OAAO,EAAE,YAHa;AAItBH,MAAAA,OAAO,EAAE;AAJa,KAtBE;AA4BrBU,IAAAA,YAAY,EAAG;AAClBH,MAAAA,MAAM,EAAE,mBADU;AAElBJ,MAAAA,OAAO,EAAE,YAFS;AAGlBH,MAAAA,OAAO,EAAE;AAHS,KA5BM;AAiCrBW,IAAAA,eAAe,EAAG;AACrBR,MAAAA,OAAO,EAAE;AADY,KAjCG;AAoCrBS,IAAAA,qBAAqB,EAAG;AAC3BT,MAAAA,OAAO,EAAE,MADkB;AAE3BU,MAAAA,cAAc,EAAE;AAFW,KApCH;AAwCrBC,IAAAA,YAAY,EAAG;AAClBC,MAAAA,eAAe,EAAE,MADC;AAElBZ,MAAAA,OAAO,EAAE,oBAFS;AAGlBa,MAAAA,UAAU,EAAE;AAHM,KAxCM;AA6CrBC,IAAAA,YAAY,EAAG;AAClBd,MAAAA,OAAO,EAAE;AADS;AA7CM,GAAL;AAAA,CAApB,C,CAkDA;AACA;;;AACA,SAASe,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,MACdC,OADc,GAC6BD,KAD7B,CACdC,OADc;AAAA,MACNC,KADM,GAC6BF,KAD7B,CACNE,KADM;AAAA,MACAC,QADA,GAC6BH,KAD7B,CACAG,QADA;AAAA,MACSC,IADT,GAC6BJ,KAD7B,CACSI,IADT;AAAA,MACcC,IADd,GAC6BL,KAD7B,CACcK,IADd;AAAA,MACsBC,KADtB,4BAC6BN,KAD7B;;AAErB,MAAIG,QAAQ,KAAGI,SAAf,EAA0B;AAC7B,WAAO;AAAK,MAAA,SAAS,EAAEN,OAAO,CAACd,YAAxB;AAAsC,MAAA,KAAK,EAAE;AAACS,QAAAA,eAAe,EAAC;AAAjB,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACI,GAFD,MAEO,IAAIQ,IAAI,KAAGF,KAAK,CAACM,IAAN,CAAWC,IAAX,CAAgBC,IAAhB,CAAqBC,GAAhC,EAAqC;AAC/C,WAAO,oBAAC,WAAD,oBAAiBL,KAAjB;AAAwB,MAAA,KAAK,EAAEJ,KAA/B;AAAsC,MAAA,QAAQ,EAAEC,QAAhD;AAA0D,MAAA,IAAI,EAAEE,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP,CAD+C,CAE/C;AACI,GAHM,MAGA;AACV,WAAO,oBAAC,UAAD,oBAAgBC,KAAhB;AAAuB,MAAA,KAAK,EAAEJ,KAA9B;AAAqC,MAAA,QAAQ,EAAEC,QAA/C;AAAyD,MAAA,IAAI,EAAEE,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP,CADU,CAEV;AACI;AACJ;;AACD,SAASO,cAAT,CAAwBX,OAAxB,EAAgCC,KAAhC,EAAsCW,MAAtC,EAA6CC,SAA7C,EAAuDC,QAAvD,EAAgEC,KAAhE,EAAsEC,KAAtE,EAA4Eb,IAA5E,EAAiFC,IAAjF,EAAuF;AACnF,MAAIa,KAAK,GAAChB,KAAK,CAACiB,QAAN,CAAeC,cAAf,CAA8BP,MAA9B,EAAqCC,SAAS,CAACE,KAAD,CAA9C,CAAV,CADmF,CAEnF;;AACA,MAAI,CAACA,KAAK,GAAC,CAAP,IAAUX,IAAI,CAACgB,IAAf,KAAwB,CAA5B,EAA+B;AAClC;AACA;AACA,QAAIlB,QAAQ,GAACD,KAAK,CAACoB,MAAN,CAAaC,iBAAb,CAA+BT,SAA/B,EAAyC,EAAzC,EAA4CZ,KAAK,CAACtC,KAAN,CAAY4D,MAAxD,EAA+DR,KAA/D,EAAqEX,IAAI,CAACgB,IAA1E,CAAb,CAHkC,CAIlC;AACA;;AACO,QAAII,GAAG,GAAGC,IAAI,CAACC,GAAL,CAASb,SAAS,CAACc,MAAnB,EAA0BZ,KAAK,GAACX,IAAI,CAACgB,IAArC,IAA2CL,KAArD;AACA,QAAIa,QAAQ,GAAG3B,KAAK,CAACiB,QAAN,CAAeW,WAAf,CAA2BjB,MAA3B,EAAkCC,SAAlC,EAA4CE,KAA5C,EAAkDX,IAAI,CAACgB,IAAvD,CAAf;AACP,WAAQ,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAEpB,OAAnB;AAA4B,MAAA,KAAK,EAAEC,KAAnC;AAA0C,MAAA,GAAG,gBAASc,KAAT,CAA7C;AAA+D,MAAA,KAAK,EAAEA,KAAtE;AAA6E,MAAA,OAAO,EAAEe,OAAtF;AAA+F,MAAA,KAAK,EAAEb,KAAtG;AACP,MAAA,MAAM,EAAEL,MADD;AACS,MAAA,SAAS,EAAEC,SADpB;AAC+B,MAAA,MAAM,EAAEC,QADvC;AACiD,MAAA,QAAQ,EAAEc,QAD3D;AAEP,MAAA,QAAQ,EAAE1B,QAFH;AAEa,MAAA,IAAI,EAAEC,IAFnB;AAEyB,MAAA,IAAI,EAAEC,IAF/B;AAEqC,MAAA,KAAK,EAAEY,KAF5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AAGI,GAXD,MAWO;AACV,WAAO,IAAP;AACI;AACJ;;AACD,SAASe,OAAT,CAAiBhC,KAAjB,EAAwB;AAAA,MACbC,OADa,GAC+BD,KAD/B,CACbC,OADa;AAAA,MACLC,KADK,GAC+BF,KAD/B,CACLE,KADK;AAAA,MACCW,MADD,GAC+Bb,KAD/B,CACCa,MADD;AAAA,MACQC,SADR,GAC+Bd,KAD/B,CACQc,SADR;AAAA,MACkBV,IADlB,GAC+BJ,KAD/B,CACkBI,IADlB;AAAA,MACuBC,IADvB,GAC+BL,KAD/B,CACuBK,IADvB;AAEpB,MAAIY,KAAK,GAAC,CAACV,SAAD,EAAWA,SAAX,CAAV;;AACA,MAAIL,KAAK,CAACtC,KAAN,CAAY4D,MAAZ,KAAqBjB,SAAzB,EAAoC;AACvCU,IAAAA,KAAK,GAACf,KAAK,CAACoB,MAAN,CAAaW,QAAb,CAAsB/B,KAAtB,EAA4BA,KAAK,CAACtC,KAAN,CAAY4D,MAAxC,EAA+CV,SAA/C,EAAyD,CAAC,EAAD,CAAzD,CAAN;AACI;;AAAA;AAEDoB,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBC,IAAI,CAACC,SAAL,CAAenC,KAAK,CAACtC,KAAN,CAAY4D,MAA3B,CAAtB;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCtB,MAAhC,EAAuCuB,IAAI,CAACC,SAAL,CAAevB,SAAf,CAAvC;AACAoB,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA2CC,IAAI,CAACC,SAAL,CAAepB,KAAf,CAA3C;;AACA,MAAIqB,WAAW,GAAE,SAAbA,WAAa,CAACvB,QAAD,EAAUC,KAAV;AAAA,WAAkBJ,cAAc,CAACX,OAAD,EAASC,KAAT,EAAeW,MAAf,EAAsBC,SAAtB,EAAgCC,QAAhC,EAAyCC,KAAzC,EAA+CC,KAA/C,EAAqDb,IAArD,EAA0DC,IAA1D,CAAhC;AAAA,GAAjB;;AACA,SAAQ;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACf,WAAxB;AAAqC,IAAA,GAAG,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH4B,SAAS,CAACyB,GAAV,CAAcD,WAAd,CADG,CAAR;AAGH;;AAAA,C,CAED;;AACA,SAASE,aAAT,CAAuBvC,OAAvB,EAA+BC,KAA/B,EAAqCW,MAArC,EAA4CC,SAA5C,EAAsDT,IAAtD,EAA2DoC,GAA3D,EAA+DzB,KAA/D,EAAsE;AAClE,MAAI,CAACA,KAAK,GAAC,CAAP,IAAUX,IAAI,CAACgB,IAAf,KAAwB,CAA5B,EAA+B;AAClC;AACO,QAAII,GAAG,GAAGC,IAAI,CAACC,GAAL,CAASb,SAAS,CAACc,MAAnB,EAA0BZ,KAAK,GAACX,IAAI,CAACgB,IAArC,IAA2CL,KAArD;AACA,QAAIa,QAAQ,GAAG3B,KAAK,CAACiB,QAAN,CAAeW,WAAf,CAA2BjB,MAA3B,EAAkCC,SAAlC,EAA4CE,KAA5C,EAAkDX,IAAI,CAACgB,IAAvD,CAAf;;AACP,QAAIU,OAAO,GAAC,SAARA,OAAQ;AAAA,aAAM7B,KAAK,CAACwC,QAAN,CAAeC,SAAf,CAAyBzC,KAAzB,EAA+BW,MAA/B,EAAsCC,SAAS,CAACE,KAAD,CAA/C,EAAuDa,QAAvD,EAAgEJ,GAAhE,CAAN;AAAA,KAAZ;;AACA,QAAIP,KAAK,GAACW,QAAV;AACA,QAAIvC,MAAM,GAACW,OAAO,CAACd,YAAnB;;AACA,QAAI4C,OAAO,KAAKxB,SAAhB,EAA2B;AACvBjB,MAAAA,MAAM,GAACW,OAAO,CAACZ,kBAAf;AACH;;AACD,WAAQ;AAAK,MAAA,SAAS,EAAEC,MAAhB;AAAwB,MAAA,OAAO,EAAEyC,OAAjC;AAA0C,MAAA,KAAK,EAAE;AAACnC,QAAAA,eAAe,EAAC;AAAjB,OAAjD;AAA2E,MAAA,KAAK,EAAEsB,KAAlF;AAAyF,MAAA,GAAG,gBAASF,KAAT,CAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEd,KAAnB;AAA0B,MAAA,KAAK,EAAEc,KAAjC;AAAwC,MAAA,IAAI,EAAEX,IAAI,CAACuC,GAAnD;AAAwD,MAAA,KAAK,EAAEH,GAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,CAAR;AAGK,GAbF,MAaQ;AACX,WAAO,IAAP;AACI;AACJ;;AACD,SAASI,MAAT,CAAgB7C,KAAhB,EAAuB;AAAA,MACXC,OADW,GACwCD,KADxC,CACXC,OADW;AAAA,MACFC,KADE,GACwCF,KADxC,CACFE,KADE;AAAA,MACKG,IADL,GACwCL,KADxC,CACKK,IADL;AAAA,MACWQ,MADX,GACwCb,KADxC,CACWa,MADX;AAAA,MACmBC,SADnB,GACwCd,KADxC,CACmBc,SADnB;AAAA,MAC8BgC,KAD9B,GACwC9C,KADxC,CAC8B8C,KAD9B,EAC+C;AAClE;;AACA,MAAIR,WAAW,GAAE,SAAbA,WAAa,CAACG,GAAD,EAAKzB,KAAL;AAAA,WAAawB,aAAa,CAACvC,OAAD,EAASC,KAAT,EAAeW,MAAf,EAAsBC,SAAtB,EAAgCT,IAAhC,EAAqCoC,GAArC,EAAyCzB,KAAzC,CAA1B;AAAA,GAAjB;;AACA,SAAQ;AAAK,IAAA,SAAS,EAAEf,OAAO,CAACf,WAAxB;AAAqC,IAAA,GAAG,EAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH4B,SAAS,CAACyB,GAAV,CAAcD,WAAd,CADG,CAAR;AAGH,C,CACD;;;AACA,SAASS,OAAT,CAAiB/C,KAAjB,EAAwB;AAAA,MACZC,OADY,GACOD,KADP,CACZC,OADY;AAAA,MACHC,KADG,GACOF,KADP,CACHE,KADG,EACc;;AAClC,MAAIW,MAAM,GAAGX,KAAK,CAAC8C,IAAN,CAAWC,SAAX,CAAqB/C,KAArB,KAA6B,EAA1C;AACA,MAAIY,SAAS,GAAGZ,KAAK,CAAC8C,IAAN,CAAWE,UAAX,CAAsBhD,KAAtB,EAA4BA,KAAK,CAACoB,MAAN,CAAa6B,MAAb,CAAoBtC,MAApB,KAA6B,CAAC,EAAD,CAAzD,CAAhB;AACA,MAAIuC,QAAQ,GAAIlD,KAAK,CAACM,IAAN,CAAW6C,WAAX,CAAuBnD,KAAvB,CAAhB,CAJoB,CAKpB;AACA;;AACA,MAAId,MAAM,GAAC,CAAX;AACA,MAAI0D,KAAK,GAACjC,MAAV;AACA,MAAI5B,KAAK,GAAC,MAAIqE,MAAM,CAACC,UAArB;AACA,MAAI9E,MAAM,GAAC,OAAK6E,MAAM,CAACE,WAAP,GAAmB,GAAxB,CAAX;AACA,MAAIC,KAAK,GAACvD,KAAK,CAACwD,MAAN,CAAaC,SAAb,CAAuBb,KAAvB,EAA6BhC,SAA7B,EAAuC,CAAC,EAAD,CAAvC,EAA4C7B,KAA5C,EAAkDR,MAAlD,EAAyDW,MAAzD,CAAV,CAXoB,CAYpB;AACA;;AAEA,SAAQ;AAAK,IAAA,SAAS,EAAEa,OAAO,CAAClB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ;AAAK,IAAA,SAAS,EAAEkB,OAAO,CAACH,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEG,OAAjB;AAA0B,IAAA,KAAK,EAAEC,KAAjC;AAAwC,IAAA,KAAK,EAAEuD,KAA/C;AAAsD,IAAA,MAAM,EAAE5C,MAA9D;AAAsE,IAAA,SAAS,EAAEC,SAAjF;AAA4F,IAAA,KAAK,EAAEgC,KAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAEG,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAE7C,OAAlB;AAA2B,IAAA,KAAK,EAAEC,KAAlC;AAAyC,IAAA,KAAK,EAAEuD,KAAhD;AAAuD,IAAA,MAAM,EAAE5C,MAA/D;AAAuE,IAAA,SAAS,EAAEC,SAAlF;AAA6F,IAAA,IAAI,EAAEsC,QAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CADI,CAAR;AAMF;;IACIQ,O;;;;;;;;;;;;;;;;;;UAIFC,sB,GAAyB,YAAM;AAC3B,YAAK5E,KAAL,GAAYqE,MAAM,CAACC,UAAnB;AACP,YAAK9E,MAAL,GAAY6E,MAAM,CAACE,WAAnB;AACA,YAAKM,GAAL,GAAS,MAAKC,EAAL,CAAQC,qBAAR,EAAT,CAHkC,CAIlC;AACI,K;;;;;;;wCARmB;AAChBV,MAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkC,KAAKJ,sBAAvC;AACH;;;4BAOOE,E,EAAI;AACf,UAAIA,EAAE,KAAKxD,SAAP,IAAoBwD,EAAE,KAAK,IAA/B,EAAqC;AACjC,aAAKA,EAAL,GAAQA,EAAR;AACA,aAAKD,GAAL,GAAS,KAAKC,EAAL,CAAQC,qBAAR,EAAT,CAFiC,CAGjC;AACH;;AAAA;AACG;;;6BACQ;AAAA;;AAAA,wBACe,KAAKhE,KADpB;AAAA,UACJC,OADI,eACJA,OADI;AAAA,UACKC,KADL,eACKA,KADL,EAEZ;;AACA,aAAQ;AAAK,QAAA,GAAG,EAAE,aAAA6D,EAAE,EAAE;AAAC,UAAA,MAAI,CAACG,OAAL,CAAaH,EAAb;AAAiB,SAAhC;AAAkC,QAAA,SAAS,EAAE9D,OAAO,CAACzB,IAArD;AAA4D,QAAA,KAAK,EAAE;AAACS,UAAAA,KAAK,EAAE,MAAR;AAAgBR,UAAAA,MAAM,EAAE;AAAxB,SAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACmB,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEwB,OAAO,CAACvB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACX,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEwB,KAAhB;AAAuB,QAAA,OAAO,EAAED,OAAhC;AAAyC,QAAA,OAAO,EAAE,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADW,CADnB,CADH,CADI,CAAR;AASI;;;;EA7BiBpC,S;;AAgCtB+F,OAAO,CAACO,SAAR,GAAoB;AAChBlE,EAAAA,OAAO,EAAEnC,SAAS,CAACsG,MAAV,CAAiBC;AADV,CAApB;AAIA,eAAetG,UAAU,CAACO,MAAD,CAAV,CAAmBsF,OAAnB,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport {teal_palette} from '../mui/metMuiThemes';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport SummaryCell from './SummaryCell';\nimport SeriesCell  from './SeriesCell';\nimport CanvasText  from './CanvasTextComponent';\n\nconst styles = theme => ({\n    root: {\n\theight: '100%',\n    },\n    paper: {\n\toverflow: 'hidden',\n\ttableLayout: 'fixed',\n\tpadding:0,\n\tmargin:0,\n    },\n    divTable :{\n\tdisplay: 'table',\n\twidth: '100%',\n    },\n    divTableRow:  {\n\tdisplay: 'table-row',\n    },\n    divTableCell:{\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableCellCursor:{\n\tcursor: \"pointer\",\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableHead : {\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableHeading : {\n\tdisplay: 'table-header-group',\n    },\n    divTableHeadingCenter : {\n\tdisplay: 'flex',\n\tjustifyContent: 'center',\n    },\n    divTableFoot : {\n\tbackgroundColor: '#DDD',\n\tdisplay: 'table-footer-group',\n\tfontWeight: 'bold',\n    },\n    divTableBody : {\n\tdisplay: 'table-row-group',\n    }\n});\n\n//const mui = createTheme({palette:teal_palette});\n// ---------------- DATA\nfunction DataCell(props) {\n    const {classes,state,elements,mode,plan,...other}=props;\n    if (elements===undefined) {\n\treturn <div className={classes.divTableCell} style={{backgroundColor:'#EEE'}}/>\n    } else if (mode===state.Show.code.cell.Sum) {\n\treturn <SummaryCell {...other} state={state} elements={elements} plan={plan}/>\n\t//return null;\n    } else {\n\treturn <SeriesCell {...other} state={state} elements={elements} plan={plan}/>\n\t//return null;\n    }\n}\nfunction renderDataCell(classes,state,colkey,colvalues,colvalue,index,range,mode,plan) {\n    var title=state.Database.getWhereDetail(colkey,colvalues[index]);\n    //console.log(\"Making data cell:\",colvalue,index,JSON.stringify(plan));\n    if ((index-1)%plan.step === 0) {\n\t// get elements and range\n\t//console.log(\"Processing:\",colvalues[index],plan.step);\n\tvar elements=state.Matrix.getMatrixElements(colvalues,\"\",state.React.matrix,index,plan.step);\n\t//console.log(\"Elements:\",JSON.stringify(elements),mode);\n\t// get count and colwhere\n        var cnt = Math.min(colvalues.length,index+plan.step)-index;\n        var colwhere = state.Database.getColWhere(colkey,colvalues,index,plan.step);\n\treturn (<DataCell classes={classes} state={state} key={`col-${index}`} index={index} onclick={onclick} title={title} \n\t\tcolkey={colkey} colvalues={colvalues} colval={colvalue} colwhere={colwhere}\n\t\telements={elements} mode={mode} plan={plan} range={range}/>);\n    } else {\n\treturn null;\n    }\n}\nfunction DataRow(props) {\n    const {classes,state,colkey,colvalues,mode,plan} = props;\n    var range=[undefined,undefined];\n    if (state.React.matrix!==undefined) {\n\trange=state.Matrix.getRange(state,state.React.matrix,colvalues,[\"\"]);\n    };\n\n    console.log(\"Matrix:\",JSON.stringify(state.React.matrix));\n\n    console.log(\"Making data cols.\",colkey,JSON.stringify(colvalues));\n    console.log(\"We have a matrix with range:\",JSON.stringify(range));\n    var mapFunction= (colvalue,index)=>renderDataCell(classes,state,colkey,colvalues,colvalue,index,range,mode,plan);\n    return (<div className={classes.divTableRow} key={\"1\"}>\n\t       {colvalues.map(mapFunction)}\n\t    </div>);\n};\n\n// ---------------- HDR\nfunction renderHdrCell(classes,state,colkey,colvalues,plan,val,index) {\n    if ((index-1)%plan.step === 0) {\n\t//console.log(\"HdrCell:\",index,plan.step);\n        var cnt = Math.min(colvalues.length,index+plan.step)-index;\n        var colwhere = state.Database.getColWhere(colkey,colvalues,index,plan.step);\n\tvar onclick=() => state.Navigate.selectKey(state,colkey,colvalues[index],colwhere,cnt);\n\tvar title=colwhere;\n\tvar cursor=classes.divTableCell;\n\tif (onclick !== undefined) {\n\t    cursor=classes.divTableCellCursor;\n\t}\n\treturn (<div className={cursor} onClick={onclick} style={{backgroundColor:'#DDD'}} title={title} key={`col-${index}`} >\n\t\t   <CanvasText state={state} index={index} plan={plan.col} label={val}></CanvasText>\n \t        </div> );\n     } else {\n\treturn null;\n    }\n}\nfunction HdrRow(props) {\n    const { classes, state, plan, colkey, colvalues, label } = props; //, rowvalues\n    //console.log(\"Making header row.\",colkey,JSON.stringify(colvalues));\n    var mapFunction= (val,index)=>renderHdrCell(classes,state,colkey,colvalues,plan,val,index);\n    return (<div className={classes.divTableRow} key={0}>\n\t       {colvalues.map(mapFunction)}\n\t    </div>);\n}\n// ---------------- Details\nfunction Details(props) {\n    const { classes, state } = props; // classes, element\n    var colkey = state.Path.getColKey(state)||\"\";\n    var colvalues = state.Path.filterKeys(state,state.Matrix.values[colkey]||[\"\"]);\n    var cellMode  = state.Show.getCellMode(state);\n    //var ncol=colvalues.length + 1;\n    //DOM.style.font\n    var border=2;\n    var label=colkey;\n    var width=0.8*window.innerWidth;\n    var height=0.8*(window.innerHeight-200);\n    var plans=state.Layout.makePlans(label,colvalues,[\"\"],width,height,border);\n    //console.log(\"Details => Width/Height:\",window.innerWidth,window.innerHeight,plan.cell.width,plan.hdr.height)\n    //console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(colvalues));\n\n    return (<div className={classes.divTable}>\n\t       <div className={classes.divTableBody}>\n\t          <HdrRow classes={classes} state={state} plans={plans} colkey={colkey} colvalues={colvalues} label={label}/>\n\t          <DataRow classes={classes} state={state} plans={plans} colkey={colkey} colvalues={colvalues} mode={cellMode}/>\n\t       </div>\n            </div>);\n }\nclass Table1D extends Component {\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    } \n    updateWindowDimensions = () => {\n        this.width= window.innerWidth;\n\tthis.height=window.innerHeight;\n\tthis.bbx=this.el.getBoundingClientRect();\n\t//console.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n    element(el) {\n\tif (el !== undefined && el !== null) {\n\t    this.el=el;\n\t    this.bbx=this.el.getBoundingClientRect();\n\t    //console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n\t};\n    };\n    render() {\n\tconst { classes, state } = this.props;\n\t//console.log(\"##### Rendering Table1D.\");\n\treturn (<div ref={el=>{this.element(el)}} className={classes.root}  style={{width: '100%', height: '100%'}}>\n\t\t   <Grid container spacing={24}>\n\t\t      <Grid item xs={12} > \n                         { <Paper className={classes.paper}>\n\t\t              <Details state={state} classes={classes} element={this}/>\n                           </Paper>}\n                      </Grid>\n                   </Grid>\n\t        </div>);\n    }\n}\n\nTable1D.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Table1D);\n"]},"metadata":{},"sourceType":"module"}