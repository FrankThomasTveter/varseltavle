{"ast":null,"code":"//console.log(\"Loading LayoutLib.js\");\nfunction Layout() {\n  this.rotate = undefined; // should labels on x-axis be rotated?\n\n  this.priority = undefined; // which key should be on the abscissa\n\n  this.init = function (state) {\n    var par = \"Table\";\n    state.Utils.init(par, this);\n  }; // adjust keys so that rows/cols have more than on entry...\n\n\n  this.getPriorityKeys = function (state) {\n    if (state.Layout.priority === undefined) {\n      state.Layout.priority = state.Database.keyCnt.keys();\n    } else {\n      var keys = Object.keys(state.Database.keyCnt);\n      ;\n      var plen = keys;\n\n      for (var ii = 0; ii < plen; ii++) {\n        var key = keys[ii];\n\n        if (state.Layout.priority.indexOf(key) === -1) {\n          state.Layout.priority.push(key);\n        }\n      }\n\n      ;\n    }\n\n    ;\n    return state.Layout.priority; //state.Utils.invertedArray()\n  };\n\n  this.increaseSelect = function (state, key) {\n    var kid = state.Path.keys.path.indexOf(key);\n    console.log(\"Bumping:\", key, kid, JSON.stringify(state.Path.keys.path));\n\n    if (kid !== -1 && kid > 0) {\n      var src = state.Path.keys.path.splice(kid, 1); // remove from array   \n\n      state.Utils.spliceArray(state.Path.keys.path, kid - 1, 0, src);\n    }\n\n    state.Show.showConfig(state);\n    state.Show.showPath(state);\n  };\n\n  this.increasePriority = function (state, key) {\n    var kid = state.Layout.priority.indexOf(key);\n    console.log(\"Bumping:\", key, kid, JSON.stringify(state.Layout.priority));\n\n    if (kid !== -1 && kid > 0) {\n      var src = state.Layout.priority.splice(kid, 1); // remove from array   \n\n      state.Utils.spliceArray(state.Layout.priority, kid - 1, 0, src);\n    }\n\n    state.Show.showConfig(state);\n  };\n\n  this.getPriorityIndex = function (state, arr) {\n    var len, ii;\n    var pri = {};\n    len = arr.length;\n\n    for (ii = 0; ii < len; ii++) {\n      pri[arr[ii]] = 0;\n    }\n\n    ;\n\n    if (this.priority !== undefined) {\n      len = this.priority.length;\n\n      for (ii = 0; ii < len; ii++) {\n        var key = this.priority[ii];\n        pri[key] = len + 1 - ii;\n      }\n\n      ;\n    }\n\n    ;\n    return pri;\n  };\n\n  this.changePriority = function (state, key, trg) {\n    // key -> trg\n    if (key === undefined || trg === undefined) {\n      return;\n    }\n\n    console.log(\"Priority:\", key, \"->\", trg, JSON.stringify(this.priority)); //if (typeof trg  === \"undefined\") {\n\n    var col = state.Path.other.table[0];\n    var row = state.Path.other.table[1]; //var icol=0;\n    //var irow=0;\n\n    var ikey = 0;\n    var itrg = 0;\n    var len = this.priority.length;\n\n    for (var ii = 0; ii < len; ii++) {\n      if (this.priority[ii] === col) {//icol=len+1-ii;\n      }\n\n      ;\n\n      if (this.priority[ii] === row) {//irow=len+1-ii;\n      }\n\n      ;\n\n      if (this.priority[ii] === key) {\n        ikey = len + 1 - ii;\n      }\n\n      if (this.priority[ii] === trg) {\n        itrg = len + 1 - ii;\n      }\n    }\n\n    if (itrg < ikey) {\n      // demote existing key\n      if (itrg > 0) {\n        // key exists on priority list\n        state.Utils.spliceArray(this.priority, len + 2 - itrg, 0, key); // add after\n\n        console.log(\"Added:\", JSON.stringify(this.priority), ikey, itrg, key); //var src=\n\n        this.priority.splice(len + 1 - ikey, 1); // remove\n      } else {\n        // key exists, target does not\n        //var src=\n        this.priority.splice(len + 1 - ikey, 1); // remove\n\n        this.priority.concat(key);\n      }\n    } else if (itrg > ikey) {\n      // demote, key may not exist on priority list\n      if (ikey > 0) {\n        // key exists on priority list\n        //var src=\n        this.priority.splice(len + 1 - ikey, 1); // remove\n\n        state.Utils.spliceArray(this.priority, len + 1 - itrg, 0, key); // add before\n      } else {\n        // key is not on priority list\n        state.Utils.spliceArray(this.priority, len + 1 - itrg, 0, key); // add before\n      }\n    } else if (itrg === 0) {\n      // key and target not on the priority list\n      this.priority.concat(key);\n    }\n\n    console.log(\"Changed priority:\", JSON.stringify(this.priority), ikey, itrg);\n    return true;\n  }; //this.flipTable=function(state) {\n  //    var bb=this.colrow[0];\n  //    this.colrow[0]=this.colrow[1];\n  //    this.colrow[1]=bb;\n  //    //console.log(\"Setup:\",JSON.stringify(setup));\n  //};\n\n\n  this.getPriority = function (state) {\n    return state.Utils.cp(this.priority);\n  };\n\n  this.setPriority = function (state, priority) {\n    this.priority = priority;\n  };\n\n  this.getDescription = function (state, element, skeys) {\n    if (element.cnt === 1) {\n      var s = \"\";\n      var docs = element.docs;\n      var doc = docs[0];\n      var klen = skeys.length;\n\n      for (var jj = 0; jj < klen; jj++) {\n        var d = skeys[jj] + \"=\" + doc[skeys[jj]];\n        ;\n\n        if (s !== \"\") {\n          s = s + \" \" + d;\n        } else {\n          s = d;\n        }\n      }\n\n      return s;\n    } else {\n      return element.cnt;\n    }\n  };\n\n  this.setPlan = function (plan, set) {\n    var keys = Object.keys(set);\n    var lenk = keys.length;\n\n    for (var ii = 0; ii < lenk; ii++) {\n      var key = keys[ii];\n      var val = set[key];\n      plan[key] = val;\n    }\n\n    ;\n  };\n\n  this.getTextWidth = function (txt, fontname, fontsize) {\n    if (this.getTextWidth.c === undefined) {\n      this.getTextWidth.c = document.createElement('canvas');\n      this.getTextWidth.ctx = getTextWidth.c.getContext('2d');\n    }\n\n    if (fontname !== undefined) {\n      this.getTextWidth.ctx.font = fontsize + ' ' + fontname;\n    }\n\n    return this.getTextWidth.ctx.measureText(txt).width;\n  };\n\n  this.getTextHeight = function (fontname, fontsize) {\n    if (this.getTextHeight.c === undefined) {\n      this.getTextHeight.c = document.createElement('canvas');\n      this.getTextHeight.ctx = getTextHeight.c.getContext('2d');\n    }\n\n    if (fontname !== undefined) {\n      this.getTextHeight.ctx.font = fontsize + ' ' + fontname;\n    }\n\n    return this.getTextHeight.ctx.measureText('M').width;\n  };\n\n  this.maxWidth = function (values, border) {\n    var swidth = 0;\n    var mwidth = 0;\n    var lenv = values.length;\n\n    for (var ii = 0; ii < lenv; ii++) {\n      var cwidth = this.getTextWidth(values[ii]) + 2 * border;\n\n      if (cwidth > mwidth) {\n        mwidth = cwidth;\n      }\n\n      swidth = swidth + cwidth;\n    }\n\n    return {\n      max: mwidth,\n      sum: swidth\n    };\n  };\n\n  this.makePlans = function (label, colvalues, rowvalues, iwidth, iheight, border) {\n    var plans = {\n      cell: {\n        rotate: false,\n        step: 1,\n        border: border,\n        width: 100,\n        height: 100,\n        xoffset: 0,\n        yoffset: 0\n      },\n      hdr: {\n        rotate: false,\n        step: 1,\n        border: border,\n        width: 100,\n        height: 100,\n        xoffset: 0,\n        yoffset: 0\n      },\n      row: {\n        rotate: false,\n        step: 1,\n        border: border,\n        width: 100,\n        height: 100,\n        xoffset: 0,\n        yoffset: 0\n      },\n      col: {\n        rotate: false,\n        step: 1,\n        border: border,\n        width: 100,\n        height: 100,\n        xoffset: 0,\n        yoffset: 0\n      }\n    };\n\n    if (iwidth <= 0) {\n      return plans;\n    }\n\n    ; // text boundaries\n\n    var wh = this.maxWidth(rowvalues, border);\n    var ww = this.maxWidth(colvalues, border);\n    var zwidth = label === \"\" ? 0 : getTextWidth(label) + 2 * border; //props.theme.spacing.unit;\n    // var zheight=getTextHeight(label) + 2 * border;  //props.theme.spacing.unit;\n    // table boundaries\n\n    var mheight = this.getTextHeight() + 2 * border; //props.theme.spacing.unit;\n\n    var hwidth = Math.max(wh.max, zwidth) + mheight;\n    var width = iwidth - hwidth; // calculate cell width...\n\n    var mwidth = ww.max; //var swidth=ww.sum;\n\n    var lenc = colvalues.length;\n    var lenr = rowvalues.length;\n    var hh, hw, ch, cw, hx, rot, stp;\n\n    if (mwidth * lenc < width) {\n      // horisontal\n      rot = false;\n      stp = 1;\n      cw = width / lenc;\n      hh = mheight;\n      hx = (cw - mwidth) / 2; //console.log(\"Plan (normal):\",JSON.stringify(plans));\n    } else if (mheight * lenc < width) {\n      // rotate\n      rot = true;\n      stp = 1;\n      cw = width / lenc;\n      hh = mwidth;\n      hx = (cw - mheight) / 2; //console.log(\"Plan (rot):\",JSON.stringify(plans),lenc,cw*lenc);\n    } else {\n      // rotate and use steps\n      rot = true;\n      stp = Math.ceil(lenc * mheight / width);\n      cw = stp * width / lenc;\n      hh = mwidth;\n      hx = (cw - mheight) / 2; //console.log(\"Plan (rot+step):\",JSON.stringify(plans),lenc,height,width);\n    } // calculate cell height\n\n\n    var height = iheight - hh;\n\n    if (mheight * lenr < height) {\n      // \n      ch = Math.min(mheight * 10, height / lenr);\n    } else {\n      ch = mheight;\n    }\n\n    hw = hwidth;\n    this.setPlan(plans.cell, {\n      width: cw,\n      height: ch\n    });\n    this.setPlan(plans.hdr, {\n      width: hw,\n      height: hh\n    });\n    this.setPlan(plans.col, {\n      width: cw,\n      height: hh,\n      xoffset: hx,\n      step: stp,\n      rotate: rot\n    });\n    this.setPlan(plans.row, {\n      width: hw,\n      height: ch\n    }); //console.log(\"Plan (finally):\",JSON.stringify(plans),mheight,mwidth,height,width,lenr);\n\n    return plans;\n  };\n}\n\n;\nexport default Layout;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/LayoutLib.js"],"names":["Layout","rotate","undefined","priority","init","state","par","Utils","getPriorityKeys","Database","keyCnt","keys","Object","plen","ii","key","indexOf","push","increaseSelect","kid","Path","path","console","log","JSON","stringify","src","splice","spliceArray","Show","showConfig","showPath","increasePriority","getPriorityIndex","arr","len","pri","length","changePriority","trg","col","other","table","row","ikey","itrg","concat","getPriority","cp","setPriority","getDescription","element","skeys","cnt","s","docs","doc","klen","jj","d","setPlan","plan","set","lenk","val","getTextWidth","txt","fontname","fontsize","c","document","createElement","ctx","getContext","font","measureText","width","getTextHeight","maxWidth","values","border","swidth","mwidth","lenv","cwidth","max","sum","makePlans","label","colvalues","rowvalues","iwidth","iheight","plans","cell","step","height","xoffset","yoffset","hdr","wh","ww","zwidth","mheight","hwidth","Math","lenc","lenr","hh","hw","ch","cw","hx","rot","stp","ceil","min"],"mappings":"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","sourcesContent":["//console.log(\"Loading LayoutLib.js\");\n\nfunction Layout() {\n    this.rotate=undefined;  // should labels on x-axis be rotated?\n    this.priority=undefined;// which key should be on the abscissa\n    this.init=function(state){\n\tvar par=\"Table\"\n\tstate.Utils.init(par,this);\n    };\n    // adjust keys so that rows/cols have more than on entry...\n    this.getPriorityKeys=function(state){\n        if (state.Layout.priority === undefined) {\n            state.Layout.priority=state.Database.keyCnt.keys();\n        } else {\n\t    var keys = Object.keys(state.Database.keyCnt);;\n\t    var plen = keys;\n\t    for (var ii = 0; ii < plen; ii++) {\n\t\tvar key=keys[ii];\n\t\tif (state.Layout.priority.indexOf(key)===-1) {\n\t\t    state.Layout.priority.push(key);\n\t\t}\n\t    };\n\t};\n\treturn state.Layout.priority; //state.Utils.invertedArray()\n    };\n    this.increaseSelect=function(state,key){\n\tvar kid=state.Path.keys.path.indexOf(key);\n\tconsole.log(\"Bumping:\",key,kid,JSON.stringify(state.Path.keys.path));\n\tif (kid !== -1 && kid > 0) {\n\t    var src=state.Path.keys.path.splice(kid, 1); // remove from array   \n\t    state.Utils.spliceArray(state.Path.keys.path,kid-1,0,src);\n\t}\n\tstate.Show.showConfig(state);\n\tstate.Show.showPath(state);\n    };\n    this.increasePriority=function(state,key){\n\tvar kid=state.Layout.priority.indexOf(key);\n\tconsole.log(\"Bumping:\",key,kid,JSON.stringify(state.Layout.priority));\n\tif (kid !== -1 && kid > 0) {\n\t    var src=state.Layout.priority.splice(kid, 1); // remove from array   \n\t    state.Utils.spliceArray(state.Layout.priority,kid-1,0,src);\n\t}\n\tstate.Show.showConfig(state);\n    };\n    this.getPriorityIndex=function(state,arr) {\n\tvar len,ii;\n\tvar pri={};\n\tlen=arr.length;\n\tfor (ii=0;ii<len;ii++) {\n\t    pri[arr[ii]]=0;\n\t};\n\tif (this.priority !== undefined) {\n\t    len=this.priority.length\n\t    for (ii=0;ii<len;ii++) {\n\t\tvar key=this.priority[ii]\n\t\tpri[key]=len+1-ii\n\t    };\n\t};\n\treturn pri;\n    };\n    this.changePriority=function(state,key,trg) {  // key -> trg\n\tif (key  === undefined || trg  === undefined) { return;}\n\tconsole.log(\"Priority:\",key,\"->\",trg,JSON.stringify(this.priority));\n\t//if (typeof trg  === \"undefined\") {\n\tvar col=state.Path.other.table[0];\n\tvar row=state.Path.other.table[1];\n\t//var icol=0;\n\t//var irow=0;\n\tvar ikey=0;\n\tvar itrg=0;\n\tvar len=this.priority.length;\n\tfor (var ii=0;ii<len;ii++) {\n\t    if (this.priority[ii]  === col) {\n\t\t//icol=len+1-ii;\n\t    };\n\t    if  (this.priority[ii]  === row) {\n\t\t//irow=len+1-ii;\n\t    };\n\t    if  (this.priority[ii]  === key) {\n\t\tikey=len+1-ii;\n\t    }\n\t    if  (this.priority[ii]  === trg) {\n\t\titrg=len+1-ii;\n\t    }\n\t}\n\tif (itrg < ikey) {        // demote existing key\n\t    if (itrg > 0) {       // key exists on priority list\n\t\tstate.Utils.spliceArray(this.priority,len+2-itrg,0,key);  // add after\n\n\t\tconsole.log(\"Added:\",JSON.stringify(this.priority),ikey,itrg,key);\n\t\t\n\t\t//var src=\n\t\tthis.priority.splice(len+1-ikey, 1);        // remove\n\t    } else {              // key exists, target does not\n\t\t//var src=\n\t\tthis.priority.splice(len+1-ikey, 1);        // remove\n\t\tthis.priority.concat(key)\t    \n\t    }\n\t} else if (itrg > ikey) { // demote, key may not exist on priority list\n\t    if (ikey>0) {         // key exists on priority list\n\t\t//var src=\n\t\tthis.priority.splice(len+1-ikey, 1);        // remove\n\t\tstate.Utils.spliceArray(this.priority,len+1-itrg,0,key);  // add before\n\t    } else {              // key is not on priority list\n\t\tstate.Utils.spliceArray(this.priority,len+1-itrg,0,key);  // add before\n\t    }\n\t} else if (itrg === 0) { // key and target not on the priority list\n\t    this.priority.concat(key)\n\t}\n\tconsole.log(\"Changed priority:\",JSON.stringify(this.priority),ikey,itrg);\n\treturn true;\n    }\n    //this.flipTable=function(state) {\n    //    var bb=this.colrow[0];\n    //    this.colrow[0]=this.colrow[1];\n    //    this.colrow[1]=bb;\n    //    //console.log(\"Setup:\",JSON.stringify(setup));\n    //};\n    this.getPriority=function(state) {\n\treturn state.Utils.cp(this.priority);\n    };\n    this.setPriority=function(state,priority) {\n\tthis.priority=priority;\n    }\n    this.getDescription=function(state,element,skeys) {\n\tif (element.cnt  === 1) {\n\t    var s=\"\";\n\t    var docs=element.docs;\n\t    var doc=docs[0];\n\t    var klen=skeys.length;\n\t    for (var jj = 0; jj < klen; jj++) {\n\t\tvar d=skeys[jj]+\"=\"+doc[skeys[jj]];;\n\t\tif (s !== \"\") {\n\t\t    s=s+\" \"+d\n\t\t} else {\n\t\t    s=d;\n\t\t}\n\t    }\n\t    return s;\n\t} else {\n\t    return element.cnt;\n\t}\n    };\n    this.setPlan=function(plan,set) {\n\tvar keys=Object.keys(set);\n\tvar lenk=keys.length;\n\tfor (var ii=0; ii<lenk; ii++) {\n\t    var key=keys[ii];\n\t    var val=set[key];\n\t    plan[key]=val;\n\t};\n    };\n    this.getTextWidth=function(txt, fontname, fontsize){\n\tif(this.getTextWidth.c === undefined){\n            this.getTextWidth.c=document.createElement('canvas');\n            this.getTextWidth.ctx=getTextWidth.c.getContext('2d');\n\t}\n\tif (fontname !== undefined) {\n\t    this.getTextWidth.ctx.font = fontsize + ' ' + fontname;\n\t}\n\treturn this.getTextWidth.ctx.measureText(txt).width;\n    };\n    this.getTextHeight=function(fontname, fontsize){\n\tif(this.getTextHeight.c === undefined){\n            this.getTextHeight.c=document.createElement('canvas');\n            this.getTextHeight.ctx=getTextHeight.c.getContext('2d');\n\t}\n\tif (fontname !== undefined) {\n\t    this.getTextHeight.ctx.font = fontsize + ' ' + fontname;\n\t}\n\treturn this.getTextHeight.ctx.measureText('M').width;\n    };\n    this.maxWidth=function(values,border) {\n\tvar swidth=0;\n\tvar mwidth=0;\n\tvar lenv=values.length;\n\tfor (var ii=0;ii<lenv;ii++) {\n\t    var cwidth = this.getTextWidth(values[ii])+2*border;\n\t    if (cwidth > mwidth) {\n\t\tmwidth=cwidth;\n\t    }\n\t    swidth=swidth+cwidth;\n\t}\n\treturn {max:mwidth,sum:swidth};\n    }\n    this.makePlans=function(label,colvalues,rowvalues,iwidth,iheight,border) {\n\tvar plans={cell:{rotate:false,step:1,border:border,width:100,height:100,xoffset:0,yoffset:0}, \n\t\t  hdr:{rotate:false,step:1,border:border,width:100,height:100,xoffset:0,yoffset:0},\n\t\t  row:{rotate:false,step:1,border:border,width:100,height:100,xoffset:0,yoffset:0},\n\t\t  col:{rotate:false,step:1,border:border,width:100,height:100,xoffset:0,yoffset:0}};\n\tif (iwidth <= 0) { return plans;};\n\t// text boundaries\n\tvar wh=this.maxWidth(rowvalues,border);\n\tvar ww=this.maxWidth(colvalues,border);\n\tvar zwidth =(label===\"\"?0:getTextWidth(label) + 2 * border);   //props.theme.spacing.unit;\n\t// var zheight=getTextHeight(label) + 2 * border;  //props.theme.spacing.unit;\n\t// table boundaries\n\tvar mheight=this.getTextHeight() + 2 * border;       //props.theme.spacing.unit;\n\tvar hwidth=Math.max(wh.max,zwidth) + mheight;\n\tvar width=iwidth-hwidth;\n\t// calculate cell width...\n\tvar mwidth=ww.max;\n\t//var swidth=ww.sum;\n\tvar lenc=colvalues.length;\n\tvar lenr=rowvalues.length;\n\tvar hh, hw, ch, cw, hx, rot, stp;\n\tif (mwidth*lenc < width) { // horisontal\n\t    rot=false;\n\t    stp=1\n\t    cw=width/lenc;\n\t    hh=mheight;\n\t    hx=(cw-mwidth)/2;\n\t    //console.log(\"Plan (normal):\",JSON.stringify(plans));\n\t} else if (mheight*lenc < width) { // rotate\n\t    rot=true;\n\t    stp=1\n\t    cw=width/lenc;\n\t    hh=mwidth;\n\t    hx=(cw-mheight)/2;\n\t    //console.log(\"Plan (rot):\",JSON.stringify(plans),lenc,cw*lenc);\n\t} else { // rotate and use steps\n\t    rot=true;\n\t    stp=Math.ceil(lenc*mheight/width);\n\t    cw=stp*width/lenc;\n\t    hh=mwidth;\n\t    hx=(cw-mheight)/2;\n\t    //console.log(\"Plan (rot+step):\",JSON.stringify(plans),lenc,height,width);\n\t}\n\t// calculate cell height\n\tvar height=iheight-hh;\n\tif (mheight*lenr < height) { // \n\t    ch=Math.min(mheight*10,height/lenr);\n\t} else {\n\t    ch=mheight;\n\t}\n\thw=hwidth;    \n\tthis.setPlan(plans.cell,{width:cw,height:ch});\n\tthis.setPlan(plans.hdr, {width:hw,height:hh});\n\tthis.setPlan(plans.col, {width:cw,height:hh,xoffset:hx,step:stp,rotate:rot});\n\tthis.setPlan(plans.row, {width:hw,height:ch});\n\t//console.log(\"Plan (finally):\",JSON.stringify(plans),mheight,mwidth,height,width,lenr);\n\treturn plans;\n    }\n};\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}