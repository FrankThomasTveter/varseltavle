{"ast":null,"code":"//console.log(\"Loading DatabaseLib.js\");\nvar alasql = window.alasql;\n\nfunction Database() {\n  var ret;\n  this.datdir = \"data/\"; // json data file\n\n  this.datfiles = [\"1.json\"]; // json data file\n\n  this.datindex = 0;\n  this.cnt = 0;\n  this.keyCnt = {};\n  this.values = {};\n  this.epoch0 = 0;\n  this.regfile = \"register\"; // register file (shows current datfile)\n\n  this.arrayConstructor = [].constructor;\n  this.objectConstructor = {}.constructor;\n  this.casc = 0; // key is sorted ascending\n\n  this.cdes = 1; // key is sorted descending\n\n  this.nasc = 2; // key is sorted ascending\n\n  this.ndes = 3; // key is sorted descending\n\n  this.delay = 60000; // server-polling period in ms\n\n  this.ready = true; // can we poll server or is another poll running\n\n  this.log = \"\";\n  this.mod = \"\";\n  this.keytrg = {\n    Missing: -1,\n    Null: 0,\n    Value: 1,\n    Min: 2,\n    Max: 3\n  };\n\n  this.init = function (state, response, callbacks) {\n    state.Colors.init(state);\n    state.Path.init(state);\n    state.Layout.init(state);\n    state.Threshold.init(state);\n    state.Utils.init(\"Database\", this);\n    state.File.next(state, response, callbacks);\n  };\n\n  this.updateLoop = function (state) {\n    //console.log(\"Updating database...\");\n    this.setTime(state);\n    this.load(state);\n    setTimeout(function () {\n      state.Database.updateLoop(state);\n    }, state.Database.delay); //state.Database.delay\n  }.bind(this);\n\n  this.load = function (state) {\n    console.log(\"Database load number:\", ++this.cnt);\n    state.Database.loadRegister(state, \"\", [state.Database.loadData, state.Database.processData]);\n  };\n\n  this.loadRegister = function (state, response, callbacks) {\n    var path = state.Database.datdir + state.Database.regfile;\n    console.log(\"Database loadRegister:\", path);\n    state.File.load(state, path, callbacks);\n  };\n\n  this.loadData = function (state, response, callbacks) {\n    var files = response.split('\\n');\n    var file = files[Math.min(files.length - 1, state.Database.datindex)]; // register-response is the name of the data-file\n    //console.log(\"Database loadData:\",file);\n\n    if (file !== state.Database.datfiles[state.Database.datindex]) {\n      // load new data\n      state.Database.datfiles = files;\n      state.Database.datindex = Math.min(files.length - 1, state.Database.datindex); // console.log(\"Files:\",JSON.stringify(state.Database.datfiles));\n\n      var path = state.Database.datdir + state.Database.datfiles[state.Database.datindex];\n      console.log(\"Database loadPath:\", path);\n      state.File.load(state, path, callbacks);\n    } else {\n      //console.log(\"Setting footer...\");\n      state.Html.setFootnote(state);\n    }\n  };\n\n  this.processData = function (state, response, callbacks) {\n    console.log(\"Database processData.\");\n    setTimeout(function () {\n      try {\n        state.Database.json = JSON.parse(response);\n      } catch (e) {\n        alert(\"Data '\" + state.Database.datfiles[state.Database.datindex] + \"' contains Invalid JSON:\" + e.name + \":\" + e.message);\n      }\n\n      if (state.Database.json !== undefined) {\n        state.Database.processJson(state, state.Database.json, callbacks);\n      }\n    }, 0.1);\n  };\n\n  this.processJson = function (state, json, callbacks) {\n    state.Database.dbInsert(state, json);\n    state.Html.setFootnote(state, \"Extracting data.\");\n    setTimeout(function () {\n      state.Database.makeWhere(state); // update where-expressions...\n\n      state.Show.showAll(state);\n      state.Html.setFootnote(state);\n      state.File.next(state, \"\", callbacks);\n    }, 0.1);\n  };\n\n  this.resetSetup = function (state) {\n    if (state.Database.json !== undefined) {\n      state.Database.processJson(state, state.Database.json);\n    }\n  };\n\n  this.getTime = function (state, s) {\n    var nn = s.match(/\\d+/g).map(Number);\n    var date0 = new Date(Date.UTC(nn[0], nn[1] - 1, nn[2], nn[3], nn[4], nn[5], ((nn[6] || '') + '000').slice(0, 3))); // modification time\n    //console.log(\"Gettime:\",s,JSON.stringify(nn));\n\n    return date0.getTime();\n  };\n\n  this.setTime = function (state) {\n    var d = new Date();\n    var epoch = d.getTime(); //console.log(\"Times:\",epoch,this.epoch0);\n\n    if (this.epoch0 !== undefined) {\n      var age = epoch - this.epoch0;\n      this.mod = this.getTimeDiff(state, age);\n\n      if (state.React !== undefined && state.React.Status !== undefined) {\n        state.React.Status.setAge(state, this.mod); //console.log(\"Age:\",epoch,this.epoch0,age);\n      }\n    }\n  };\n\n  this.getKeyValues = function (state, key) {\n    //console.log(\"Database:\",JSON.stringify(state.Database.values));\n    var vals = state.Database.values[key];\n\n    if (vals !== undefined) {\n      return vals;\n    } else {\n      return [];\n    }\n  };\n\n  this.getKeytrg = function (state, key, val) {\n    if (Array.isArray(val)) {\n      //console.log(\">>>Is array:\",key,JSON.stringify(val));\n      ret = this.keytrg.Missing;\n      var lenv = val.length;\n\n      for (var ii = 0; ii < lenv; ii++) {\n        ret = Math.max(ret, this.getKeytrg(state, key, val[ii]));\n      } //console.log(\">>>return:\",key,ret);\n\n    } else {\n      if (val === \"null\") {\n        ret = this.keytrg.Null;\n      } else if (val === \"MIN(\" + key + \")\") {\n        // this is a function\n        ret = this.keytrg.Min;\n      } else if (val === \"MAX(\" + key + \")\") {\n        // this is a function\n        ret = this.keytrg.Max;\n      } else if (val === undefined) {\n        ret = this.keytrg.Missing;\n      } else if (val === null) {\n        ret = this.keytrg.Null;\n      } else {\n        ret = this.keytrg.Value;\n      }\n\n      ; //console.log(\"---return:\",key,ret);\n    }\n\n    ;\n    return ret;\n  };\n\n  this.makeKeytrg = function (state, key, keytrg, val) {\n    if (keytrg === this.keytrg.Missing) {\n      return \"missing\";\n    } else if (keytrg === this.keytrg.Null) {\n      return \"null\";\n    } else if (keytrg === this.keytrg.Min) {\n      return \"MIN(\" + key + \")\";\n    } else if (keytrg === this.keytrg.Max) {\n      return \"MAX(\" + key + \")\";\n    } else {\n      return val;\n    }\n\n    ;\n  };\n\n  this.dbInsert = function (state, json) {\n    var ii, key;\n\n    try {\n      // set home\n      var len = json.data.length;\n\n      for (ii = 0; ii < len; ii++) {\n        json.data[ii][\"cnt\"] = ii;\n      } // get modified date\n      //console.log(\"Setting time.\");\n\n\n      this.epoch0 = this.getTime(state, json.epoch); // data file time\n\n      this.setTime(state); // data file time\n      // make database for raw data\n\n      this.makeTable(state); // reset key counts and range\n\n      this.cnt = 0;\n      this.keyCnt = {}; // reset key-count\n      // put data into databse\n      //console.log(\"inserting\");\n\n      var data = [];\n      var home = state.Path.home.val;\n      var hkeys = state.Path.home.path; //Object.keys(home);\n\n      var homeKeys = [];\n      var delayKeys = [];\n      var lenh = hkeys.length;\n\n      for (ii = 0; ii < lenh; ii++) {\n        key = hkeys[ii];\n        var keytrg = this.getKeytrg(state, key, home[key]); //console.log(\"Keytrg:\",key,keytrg,JSON.stringify(home[key]));\n\n        if (keytrg <= this.keytrg.Value) {\n          homeKeys.push(key);\n        } else {\n          delayKeys.push(key);\n        }\n      } //console.log(\"Home keys:\",JSON.stringify(homeKeys),\" delayed:\",JSON.stringify(delayKeys));\n\n\n      var rcnt = this.extractData(state, data, {}, \"\", json.data, homeKeys, home);\n      console.log(\"Count:\", rcnt); //console.log(\"Data:\",JSON.stringify(data));\n\n      this.dataToDb(state, data); //var nrec=this.sanityCheck(state)\t    // sanity check\n      //console.log(\"Initially:\",data.length,\" Extracted:\",rcnt,' Database:',nrec);\n\n      this.postProcess(state); // update distinct Database.values[key]\n\n      if (delayKeys.length > 0) {\n        // delayed home selection (MAX() and MIN())\n        this.makeWhere(state, delayKeys, home);\n        var where = this.getWhere(state, delayKeys, home);\n        var docs = this.getDocs(state, where);\n        this.dataToDb(state, docs);\n        this.postProcess(state); // update distinct Database.values[key]\n      }\n\n      ;\n      state.Path.makePath(state); // initialise path\n      //console.log(\"Indexing and cleaning up.\");\n\n      this.dbindex(state, state.Path.other.table); // make indexes\n\n      this.dbindex(state, state.Path.other.rest); // make indexes\n      //state.Path.checkTableKeys(state);\n\n      state.Html.broadcast(state, \"Database is ready.\"); //console.log(\"Database is ready.\");\n    } catch (e) {\n      alert(\"Db-insert error:\" + e);\n    }\n\n    ;\n  };\n\n  this.updateKeyCnt = function (state, key, val) {\n    if (this.keyCnt[key] === undefined) {\n      this.keyCnt[key] = {\n        cnt: 0,\n        type: \"num\",\n        order: this.nasc\n      };\n    }\n\n    this.keyCnt[key].cnt = this.keyCnt[key].cnt + 1;\n\n    if (this.keyCnt[key].type === \"num\" && isNaN(val)) {\n      this.keyCnt[key].type = \"nan\";\n      this.keyCnt[key].order = this.casc;\n    }\n  };\n\n  this.postProcess = function (state) {\n    // update meta-data\n    var keys = Object.keys(state.Database.keyCnt);\n    var lenk = keys.length;\n\n    for (var ii = 0; ii < lenk; ii++) {\n      var key = keys[ii]; // make list of values in Database for each key\n\n      state.Database.values[key] = [];\n      var sql = \"select DISTINCT \" + key + \" AS \" + key + \" FROM alarm\";\n      var dd0 = this.query(sql);\n      var lend = dd0.length;\n\n      for (var jj = 0; jj < lend; jj++) {\n        var doc = dd0[jj];\n        state.Database.values[key].push(doc[key]);\n      }\n\n      ;\n    }\n\n    ;\n  };\n\n  this.extractData = function (state, data, parent, key, raw, hkeys, home) {\n    // insert records into db (recursive)\n    var rcnt = 0;\n    var kk, ii, kii, child, dkey; //console.log(\"Processing {\",state.Utils.toString(parent),\"} '\",key,\"' (\",state.Utils.toString(raw),\")\");\n\n    var wii = this.whatIsIt(raw);\n\n    if (wii === \"Object\" && key === \"\") {\n      //console.log(\"Found object (\",state.Utils.toString(parent),\")\");\n      child = state.Utils.cp(parent); // loop over plain values first\n\n      for (kk in raw) {\n        kii = this.whatIsIt(raw[kk]);\n\n        if (kii === \"value\") {\n          child[kk] = raw[kk];\n        }\n      } // loop over sub-objects\n\n\n      var nn = 0;\n\n      for (kk in raw) {\n        kii = this.whatIsIt(raw[kk]);\n\n        if (kii !== \"value\") {\n          nn = nn + 1;\n          rcnt = rcnt + this.extractData(state, data, child, kk, raw[kk], hkeys, home);\n        }\n      }\n\n      if (nn === 0) {\n        // insert \n        //console.log(\"Object was empty.\");\n        rcnt = rcnt + this.extractData(state, data, child, null, null, hkeys, home);\n      }\n    } else if (wii === \"Object\" && key !== \"\") {\n      //console.log(\"Found object key '\",key,\"' (\",state.Utils.toString(parent),\")\");\n      child = state.Utils.cp(parent); // loop over plain values first\n\n      for (kk in raw) {\n        child[key] = kk;\n        rcnt = rcnt + this.extractData(state, data, child, \"\", raw[kk], hkeys, home);\n      }\n    } else if (wii === \"Array\") {\n      //console.log(\"Found array key '\",key,\"' (\",state.Utils.toString(parent),\")\");\n      var dlen = raw.length;\n\n      for (ii = 0; ii < dlen; ii++) {\n        rcnt = rcnt + this.extractData(state, data, parent, key, raw[ii], hkeys, home);\n      }\n    } else {\n      //console.log(\"Found key '\",key,\"' \",wii,\" (\",state.Utils.toString(parent),\")\");\n      var keep = true;\n      var doc = state.Utils.cp(parent);\n\n      if (raw !== null) {\n        if (key === \"\") {\n          doc.value = raw;\n        } else {\n          doc[key] = raw;\n        }\n      } // check if home criteria is met\n\n\n      var lenh = hkeys.length;\n\n      for (ii = 0; ii < lenh; ii++) {\n        key = hkeys[ii];\n        var vals = home[key];\n        var lenv = vals.length;\n        var found = false;\n\n        for (var jj = 0; jj < lenv; jj++) {\n          if (vals[jj] === doc[key] || vals[jj] === \"\" && doc[key] === undefined) {\n            found = true;\n          }\n        }\n\n        if (!found) {\n          keep = false;\n        }\n\n        ;\n      }\n\n      if (keep) {\n        //console.log(\"Updating internal raw structure\",JSON.stringify(setup));\n        for (dkey in doc) {\n          var val = doc[dkey];\n          this.updateKeyCnt(state, dkey, val); //// this takes too much time...\n          //if (this.values[dkey]  === undefined) {\n          //\tthis.values[dkey]=[];\n          //  };\n          ////console.log(\"Setup:\",JSON.stringify(setup));\n          ////console.log(\"Key:\",key,JSON.stringify(this.values));\n          //if (this.values[dkey].indexOf(val)  === -1 ) { // value not in range\n          //    this.values[dkey].push(val); // add value to range\n          //};\n        }\n\n        ; //console.log(\">>> Inserting:\",state.Utils.toString(doc));\n\n        rcnt = rcnt + 1;\n        this.cnt = this.cnt + 1;\n        state.Threshold.setThresholds(doc);\n        doc._title = state.Layout.makeDocTitle(state, doc); //if (this.cnt < 10) { // debug purposes\n        //for (key in keys) {\n        //this.updateKeyCnt(state,key,doc[key]);\n        //};\n\n        data.push(doc); //} else {\n        //console.log(\"Ignoring:\",lenh,JSON.stringify(hkeys),JSON.stringify(home),JSON.stringify(doc));\n      }\n    }\n\n    return rcnt;\n  };\n\n  this.dbextract = function (state, showFunc) {\n    // extract data from db and show\n    // extract data from db and insert into data-array\n    // var parent={};//{test:{$exists:false}};\n    var where = this.getWhere(state);\n    var cntDocs0 = this.getDocsCnt(state, where);\n    var nrec = cntDocs0.length === 0 ? 0 : cntDocs0[0].cnt;\n    var m = {};\n    state.Matrix.cnt = nrec;\n\n    if (nrec > state.Matrix.popSeries) {\n      // only use counts...\n      state.Matrix.initKeyCnt(state);\n      var buff = [];\n      state.Utils.cpArray(buff, state.Path.keys.path);\n      state.Utils.cpArray(buff, state.Path.keys.other);\n      state.Utils.cpArray(buff, state.Path.trash);\n      state.Matrix.mapKeyCnt(state, where, nrec, buff); //console.log(\"Setup:\",\n      //\t    JSON.stringify(state.Matrix.values),\n      //\t    JSON.stringify(state.Matrix.keyCnt));\n\n      state.Path.exportAllKeys(state); // can not export keys before we have a cnt-map\n\n      state.Matrix.sortMatrixValues(state); //console.log(\"Count:\",JSON.stringify(docs));\n      // add \"undefined\" range of keys that are not present in every doc...\n\n      var cntDocs = state.Database.getDocsCnt(state, where, state.Path.other.table);\n      state.Matrix.makeMatrixCnt(state, cntDocs, m);\n    } else {\n      //console.log(\"Database where:\",where);\n      var docs = this.getDocs(state, where); // get all docs\n      //console.log(\">>>Extraction key (where='\",where,\"') Docs:\",docs.length);\n\n      state.Matrix.initKeyCnt(state);\n      state.Matrix.mapKeys(state, docs);\n      state.Matrix.addMapKeys(state, docs); //console.log(\"Setup=\",JSON.stringify(setup));\n      //console.log (\"Maprange:\",JSON.stringify(state.Matrix.values));\n      // subset contains the keys being displayed in matrix...\n\n      state.Path.exportAllKeys(state); // can not export keys before we have a cnt-map\n\n      state.Matrix.sortMatrixValues(state); // make matrix\n\n      state.Matrix.makeMatrix(state, docs, m); //console.log (\"Matrix:\",JSON.stringify(m));\n    }\n\n    showFunc(state, m);\n  };\n\n  this.dbindex = function (state, ks) {\n    // make indexes on all keys\n    var s = \"\";\n    var klen = ks.length;\n\n    for (var ii = 0; ii < klen; ii++) {\n      //this.query(\"CREATE INDEX ? ON TABLE alarm.?\",ks[ii],ks[ii]);\n      s = s + \" \" + ks[ii];\n    }\n\n    ; //console.log(\"Indexes:\",s);\n  };\n\n  this.getTitleDynamic = function (state, key, val) {\n    var ret, parse;\n\n    if (state.Database.values[key] === undefined) {\n      ret = val;\n    } else {\n      var keytrg = this.getKeytrg(state, key, val);\n\n      if (val === \"null\") {\n        ret = key + \" is NULL\";\n      } else if (keytrg === this.keytrg.Max) {\n        // this is a function\n        parse = state.Utils.getMax(state.Database.values[key]);\n\n        if (parse === undefined) {\n          ret = key + \" is NULL\";\n        } else {\n          ret = parse;\n        }\n\n        ;\n      } else if (keytrg === this.keytrg.Min) {\n        // this is a function\n        parse = state.Utils.getMin(state.Database.values[key]);\n\n        if (parse === undefined) {\n          ret = key + \" is NULL\";\n        } else {\n          ret = parse;\n        }\n\n        ;\n      } else {\n        ret = val;\n      }\n\n      ;\n    }\n\n    ;\n    return ret;\n  };\n\n  this.getWhereDynamic = function (state, key, val) {\n    var ret, parse;\n\n    if (state.Database.values[key] === undefined) {\n      ret = state.Database.getWhereDetail(key, val);\n    } else {\n      var keytrg = this.getKeytrg(state, key, val); //console.log(\"parseWhere:\",key,JSON.stringify(val),keytrg);\n\n      if (keytrg === this.keytrg.Max) {\n        // this is a function\n        parse = state.Utils.getMax(state.Database.values[key]); //console.log(\"parseWhere:\",key,parse,JSON.stringify(state.Database.values[key]));\n\n        if (parse === undefined) {\n          ret = key + \" is NULL\";\n        } else {\n          ret = key + \"='\" + parse + \"'\";\n        }\n\n        ;\n      } else if (keytrg === this.keytrg.Min) {\n        // this is a function\n        parse = state.Utils.getMin(state.Database.values[key]);\n\n        if (parse === undefined) {\n          ret = key + \" is NULL\";\n        } else {\n          ret = key + \"='\" + parse + \"'\";\n        }\n\n        ;\n      } else {\n        ret = state.Database.getWhereDetail(key, val);\n      }\n\n      ;\n    }\n\n    ; //console.log(\"GetWhere:\",key,val,ret);\n\n    return ret;\n  };\n\n  this.getWhereDetail = function (key, val) {\n    if (val === undefined || val === null || val === \"\") {\n      return key + ' is NULL';\n    } else {\n      return key + '=\"' + val + '\"';\n    }\n\n    ;\n  };\n\n  this.getWhere = function (state, keys, vals) {\n    var where = \"\"; //console.log(\"Path:\",JSON.stringify(state.Path.keys));\n\n    if (keys === undefined) {\n      keys = state.Path.keys.path;\n      vals = state.Path.select.val;\n    }\n\n    ;\n\n    if (vals === undefined) {\n      vals = [];\n    }\n\n    ;\n\n    if (keys !== undefined) {\n      var plen = keys.length;\n\n      for (var ii = 0; ii < plen; ii++) {\n        var key = keys[ii];\n        var whereKey = state.Database.parseWhere(state, key, vals[key]); //console.log(\"Wherekey:\",ii,key,JSON.stringify(vals),\n        //\t    JSON.stringify(vals[key]),\"'\"+whereKey+\"'\");\n\n        if (whereKey === undefined || whereKey === null || whereKey === \"\") {\n          if (where !== \"\") {\n            where = where + ' AND ';\n          }\n\n          ;\n          where = where + key + ' is NULL';\n        } else {\n          if (where !== \"\") {\n            where = where + ' AND ';\n          }\n\n          ;\n          where = where + \"(\" + whereKey + \")\";\n        }\n      }\n\n      ;\n\n      if (where !== \"\") {\n        where = \" WHERE \" + where;\n      } //console.log(\"Where=|\"+where+\"|\")\n\n    }\n\n    ;\n    return where;\n  };\n\n  this.addWhere = function (iwhere, whereKey) {\n    var where = iwhere;\n\n    if (whereKey !== undefined && whereKey !== null && whereKey !== \"\") {\n      if (where !== \"\") {\n        where = where + \" AND (\" + whereKey + \")\";\n      } else {\n        where = \" WHERE (\" + whereKey + \")\";\n      }\n    }\n\n    return where;\n  };\n\n  this.getColWhere = function (key, values, index, step) {\n    var clen = values.length;\n    var where = \"\";\n\n    for (var kk = index; kk < Math.min(clen, index + step); kk++) {\n      if (where !== \"\") {\n        where = where + \" or \";\n      }\n\n      where = where + this.getWhereDetail(key, values[kk]);\n    }\n\n    ;\n    return where;\n  };\n\n  this.makeWhere = function (state, keys, vals) {\n    if (keys === undefined) {\n      state.Path.keys.path.forEach(function (item, index) {\n        this.setWhere(state, item, state.Path.select.val);\n      }.bind(this));\n    } else {\n      keys.forEach(function (item, index) {\n        this.setWhere(state, item, vals);\n      }.bind(this));\n    }\n  };\n\n  this.setWhere = function (state, key, vals) {\n    var where = this.parseWhere(state, key, vals);\n    state.Path.where[key] = where;\n  };\n\n  this.parseWhere = function (state, key, vals) {\n    var where = \"\";\n\n    if (vals === undefined) {\n      vals = [];\n    }\n\n    ;\n    var lenv = vals.length;\n\n    for (var ii = 0; ii < lenv; ii++) {\n      var val = vals[ii];\n\n      if (where !== \"\") {\n        where = where + \" OR \";\n      }\n\n      ;\n      where = where + state.Database.getWhereDynamic(state, key, val); //console.log(\"From getWhereDynamic:\",key,\":\",val,\":\",where);\n    }\n\n    ;\n    return where;\n  };\n\n  this.getGroup = function (keys) {\n    var group = \"\";\n    var plen = keys.length;\n\n    for (var ii = 0; ii < plen; ii++) {\n      var key = keys[ii];\n\n      if (group !== \"\") {\n        group = group + ',';\n      }\n\n      ;\n      group = group + key;\n    }\n\n    ;\n\n    if (group !== \"\") {\n      group = \" GROUP BY \" + group;\n    }\n\n    return group;\n  };\n\n  this.getCols = function (keys) {\n    var cols = \"\";\n    var plen = keys.length;\n\n    for (var ii = 0; ii < plen; ii++) {\n      var key = keys[ii];\n      cols = cols + key;\n\n      if (cols !== \"\") {\n        cols = cols + ',';\n      }\n\n      ;\n    }\n\n    ;\n    return cols;\n  };\n\n  this.getAll = function (state) {\n    var cols = \"\";\n    var plen = state.Path.keys.other.length;\n\n    for (var ii = 0; ii < plen; ii++) {\n      var key = state.Path.keys.other[ii];\n      cols = cols + key;\n\n      if (cols !== \"\") {\n        cols = cols + ',';\n      }\n\n      ;\n    }\n\n    ;\n    return cols;\n  };\n\n  this.getDocsRank = function (state, where, keys, maxrank) {\n    var dd;\n    dd = this.query(\"select * FROM alarm\" + where);\n    return dd === undefined ? [] : dd;\n  };\n\n  this.getRankCnt = function (state, where, keys, maxrank) {\n    where = this.addWhere(where, \"rank='\" + maxrank.toString() + \"'\");\n    var sql, dd;\n    var body = \"* FROM alarm\";\n\n    if (keys === undefined) {\n      sql = \"select \" + body + where; //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\n      dd = this.query(sql); //console.log(\"initial count:\",dd[0].cnt,JSON.stringify(dd0));\n      //console.log(\"Cnt:\",JSON.stringify(dd));\n    } else {\n      var cols = this.getCols(keys);\n      var group = this.getGroup(keys);\n      sql = \"select \" + cols + body + where + group; //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\n      dd = this.query(sql); //console.log(\"Cnt:\",JSON.stringify(dd),JSON.stringify(keys));\n    }\n\n    return dd === undefined ? [] : dd;\n  };\n\n  this.getDocsCnt = function (state, where, keys) {\n    var sql, dd;\n    var body = \"count(*) AS cnt, max(level) AS maxlev, max(rank) AS maxrank, min(level) AS minlev, max(lat) AS maxlat, min(lat) AS minlat, max(lon) AS maxlon, min(lon) AS minlon FROM alarm\";\n\n    if (keys === undefined) {\n      sql = \"select \" + body + where; //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\n      dd = this.query(sql); //console.log(\"initial count:\",dd[0].cnt,JSON.stringify(dd0));\n      //console.log(\"Cnt:\",JSON.stringify(dd));\n    } else {\n      var cols = this.getCols(keys);\n      var group = this.getGroup(keys);\n      sql = \"select \" + cols + body + where + group; //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\n      dd = this.query(sql); //console.log(\"Cnt:\",JSON.stringify(dd),JSON.stringify(keys));\n    }\n\n    return dd === undefined ? [] : dd;\n  };\n\n  this.getDocs = function (state, where) {\n    var dd = this.query(\"select * FROM alarm\" + where);\n    return dd === undefined ? [] : dd;\n  };\n\n  this.makeTable = function (state) {\n    this.query('DROP TABLE IF EXISTS alarm; CREATE TABLE alarm;');\n  };\n\n  this.dataToDb = function (state, data) {\n    alasql.tables.alarm.data = data;\n  };\n\n  this.getKeyCnt = function (state, key, where) {\n    var sql = \"select \" + key + \",count(*) AS cnt FROM alarm\" + where + \" GROUP BY \" + key;\n    return this.query(sql);\n  };\n\n  this.whatIsIt = function (object) {\n    // determine object type\n    if (object === null) {\n      return \"null\";\n    } else if (object.constructor === this.arrayConstructor) {\n      return \"Array\";\n    } else if (object.constructor === this.objectConstructor) {\n      return \"Object\";\n    } else {\n      return \"value\";\n    }\n  };\n\n  this.getTimeDiff = function (state, dt) {\n    var s = \"\";\n\n    if (dt === undefined || isNaN(state, dt)) {\n      return s;\n    }\n\n    ;\n    var msec = Math.abs(state, dt);\n    var dd = Math.floor(state, (state, msec / 1000 / 60) / 60 / 24);\n    msec -= dd * 1000 * 60 * 60 * 24;\n    var hh = Math.floor(state, (state, msec / 1000) / 60 / 60);\n    msec -= hh * 1000 * 60 * 60;\n    var mm = Math.floor(state, msec / 1000 / 60);\n    msec -= mm * 1000 * 60;\n    var ss = Math.floor(state, msec / 1000);\n    msec -= ss * 1000;\n\n    if (dt < 0) {\n      s = \"-\";\n    } else if (dt > 0) {\n      s = \"+\";\n    } else {\n      s = \"0\";\n    }\n\n    if (dd !== 0) s = s + \" \" + state.Utils.numberWithCommas(dd) + \"d\";\n    if (hh !== 0) s = s + \" \" + hh + \"h\";\n    if (mm !== 0) s = s + \" \" + mm + \"m\"; //if (ss !== 0) s=s+\" \"+ss+\"s\";\n\n    return s;\n  };\n\n  this.sanityCheck = function (state) {\n    var sql = \"select count(*) AS cnt, max(level) AS lev FROM alarm\";\n    var dd0 = this.query(sql);\n    var nrec = dd0[0].cnt;\n    return nrec;\n  };\n\n  this.query = function (sql) {\n    try {\n      return alasql(sql);\n    } catch (e) {\n      alert(sql + \":\" + e);\n    }\n\n    ;\n  };\n}\n\n;\nexport default Database;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/DatabaseLib.js"],"names":["alasql","window","Database","ret","datdir","datfiles","datindex","cnt","keyCnt","values","epoch0","regfile","arrayConstructor","constructor","objectConstructor","casc","cdes","nasc","ndes","delay","ready","log","mod","keytrg","Missing","Null","Value","Min","Max","init","state","response","callbacks","Colors","Path","Layout","Threshold","Utils","File","next","updateLoop","setTime","load","setTimeout","bind","console","loadRegister","loadData","processData","path","files","split","file","Math","min","length","Html","setFootnote","json","JSON","parse","e","alert","name","message","undefined","processJson","dbInsert","makeWhere","Show","showAll","resetSetup","getTime","s","nn","match","map","Number","date0","Date","UTC","slice","d","epoch","age","getTimeDiff","React","Status","setAge","getKeyValues","key","vals","getKeytrg","val","Array","isArray","lenv","ii","max","makeKeytrg","len","data","makeTable","home","hkeys","homeKeys","delayKeys","lenh","push","rcnt","extractData","dataToDb","postProcess","where","getWhere","docs","getDocs","makePath","dbindex","other","table","rest","broadcast","updateKeyCnt","type","order","isNaN","keys","Object","lenk","sql","dd0","query","lend","jj","doc","parent","raw","kk","kii","child","dkey","wii","whatIsIt","cp","dlen","keep","value","found","setThresholds","_title","makeDocTitle","dbextract","showFunc","cntDocs0","getDocsCnt","nrec","m","Matrix","popSeries","initKeyCnt","buff","cpArray","trash","mapKeyCnt","exportAllKeys","sortMatrixValues","cntDocs","makeMatrixCnt","mapKeys","addMapKeys","makeMatrix","ks","klen","getTitleDynamic","getMax","getMin","getWhereDynamic","getWhereDetail","select","plen","whereKey","parseWhere","addWhere","iwhere","getColWhere","index","step","clen","forEach","item","setWhere","getGroup","group","getCols","cols","getAll","getDocsRank","maxrank","dd","getRankCnt","toString","body","tables","alarm","getKeyCnt","object","dt","msec","abs","floor","hh","mm","ss","numberWithCommas","sanityCheck"],"mappings":"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","sourcesContent":["//console.log(\"Loading DatabaseLib.js\");\n\nconst alasql = window.alasql;\n\nfunction Database() {\n    var ret;\n    this.datdir=\"data/\";              // json data file\n    this.datfiles=[\"1.json\"];                  // json data file\n    this.datindex=0;\n    this.cnt=0;\n    this.keyCnt={};\n    this.values= {};\n    this.epoch0=0;\n    this.regfile=\"register\";      // register file (shows current datfile)\n    this.arrayConstructor=[].constructor;\n    this.objectConstructor={}.constructor;\n    this.casc=0; // key is sorted ascending\n    this.cdes=1; // key is sorted descending\n    this.nasc=2; // key is sorted ascending\n    this.ndes=3; // key is sorted descending\n    this.delay=60000;  // server-polling period in ms\n    this.ready=true;     // can we poll server or is another poll running\n    this.log=\"\";\n    this.mod=\"\";\n    this.keytrg={Missing:-1,\n\t\t Null:0,\n\t\t Value:1,\n\t\t Min:2,\n\t\t Max:3\n\t\t};\n    this.init=function(state,response,callbacks){\n        state.Colors.init(state);\n        state.Path.init(state);\n        state.Layout.init(state);\n        state.Threshold.init(state);\n\tstate.Utils.init(\"Database\",this);\n\tstate.File.next(state,response,callbacks);\n    };\n    this.updateLoop=function(state) {\n\t//console.log(\"Updating database...\");\n\tthis.setTime(state);\n\tthis.load(state);\n\tsetTimeout(function() {\n\t    state.Database.updateLoop(state)\n\t},state.Database.delay); //state.Database.delay\n    }.bind(this);\n    this.load=function(state) {\n\tconsole.log(\"Database load number:\",++this.cnt);\n\tstate.Database.loadRegister(state,\"\",\n\t\t\t\t    [state.Database.loadData,\n\t\t\t\t     state.Database.processData\n\t\t\t\t    ]);\n    };\n    this.loadRegister=function(state, response, callbacks ) {\n\tvar path=state.Database.datdir + state.Database.regfile;\n\tconsole.log(\"Database loadRegister:\",path);\n\tstate.File.load(state,path,callbacks);\n    };\n    this.loadData=function(state, response, callbacks ) {\n\tvar files=response.split('\\n');\n\tvar file=files[Math.min(files.length-1,state.Database.datindex)]; // register-response is the name of the data-file\n\t//console.log(\"Database loadData:\",file);\n\tif (file !== state.Database.datfiles[state.Database.datindex]) { // load new data\n\t    state.Database.datfiles=files;\n\t    state.Database.datindex=Math.min(files.length-1,state.Database.datindex)\n\t    // console.log(\"Files:\",JSON.stringify(state.Database.datfiles));\n\t    var path=state.Database.datdir + state.Database.datfiles[state.Database.datindex];\n\t    console.log(\"Database loadPath:\",path);\n\t    state.File.load(state,path,callbacks);\n\t} else {\n\t    //console.log(\"Setting footer...\");\n\t    state.Html.setFootnote(state);\n\t}\n    };\n    this.processData=function(state,response,callbacks) {\n\tconsole.log(\"Database processData.\");\n\tsetTimeout(function() {\n\t    try {\n\t\tstate.Database.json=JSON.parse(response);\n\t    } catch (e) {\n\t\talert(\"Data '\"+state.Database.datfiles[state.Database.datindex]+\"' contains Invalid JSON:\"+e.name+\":\"+e.message);\n\t    }\n\t    if (state.Database.json !== undefined) {\n\t\tstate.Database.processJson(state,state.Database.json,callbacks);\n\t    }\n\t},0.1);\n    };\n    this.processJson=function(state,json,callbacks) {\n\tstate.Database.dbInsert(state,json);\n\tstate.Html.setFootnote(state,\"Extracting data.\");\n\tsetTimeout(function() {\n\t    state.Database.makeWhere(state); // update where-expressions...\n\t    state.Show.showAll(state);\n\t    state.Html.setFootnote(state);\n\t    state.File.next(state,\"\",callbacks);\n\t},0.1);\n    };\n    this.resetSetup=function(state) {\n\tif (state.Database.json !== undefined) {\n\t    state.Database.processJson(state,state.Database.json);\n\t}\n    };\n    this.getTime=function(state,s) {\n\tvar nn = s.match(/\\d+/g).map(Number);\n\tvar date0 = new Date(Date.UTC(nn[0],nn[1]-1,nn[2],nn[3],nn[4],nn[5],\n\t\t\t\t      ((nn[6]||'')+'000').slice(0,3))); // modification time\n\t//console.log(\"Gettime:\",s,JSON.stringify(nn));\n\treturn date0.getTime();\n    };\n    this.setTime=function(state) {\n\tvar d = new Date();\n\tvar epoch=d.getTime();\n\t//console.log(\"Times:\",epoch,this.epoch0);\n\tif (this.epoch0 !== undefined) {\n\t    var age = epoch - this.epoch0;\n\t    this.mod=this.getTimeDiff(state,age);\n\t    if (state.React !== undefined && state.React.Status !== undefined) {\n\t\tstate.React.Status.setAge(state,this.mod);\n\t\t//console.log(\"Age:\",epoch,this.epoch0,age);\n\t    }\n\t}\n    };\n    this.getKeyValues=function(state, key) {\n\t//console.log(\"Database:\",JSON.stringify(state.Database.values));\n\tvar vals=state.Database.values[key];\n\tif (vals !== undefined) {\n\t    return vals;\n\t} else {\n\t    return [];\n\t}\n    };\n    this.getKeytrg=function(state,key,val) {\n\tif (Array.isArray(val)) {\n\t    //console.log(\">>>Is array:\",key,JSON.stringify(val));\n\t    ret=this.keytrg.Missing;\n\t    var lenv=val.length;\n            for (var ii=0;ii<lenv;ii++) {\n\t\tret=Math.max(ret,this.getKeytrg(state,key,val[ii]));\n            }\n\t    //console.log(\">>>return:\",key,ret);\n\t} else { \n\t    if (val === \"null\") {\n\t\tret=this.keytrg.Null;\n\t    } else if (val===\"MIN(\"+key+\")\") { // this is a function\n\t\tret=this.keytrg.Min;\n\t    } else if (val===\"MAX(\"+key+\")\") { // this is a function\n\t\tret=this.keytrg.Max;\n\t    } else if (val === undefined) {\n\t\tret=this.keytrg.Missing;\n\t    } else if (val === null) {\n\t\tret=this.keytrg.Null;\n\t    } else {\n\t\tret=this.keytrg.Value;\n\t    };\n\t    //console.log(\"---return:\",key,ret);\n\t};\n\treturn ret;\n    };\n    this.makeKeytrg=function(state,key,keytrg,val) {\n\tif (keytrg === this.keytrg.Missing) {\n\t    return \"missing\";\n\t} else if (keytrg === this.keytrg.Null) {\n\t    return \"null\";\n\t} else if (keytrg === this.keytrg.Min) {\n\t    return \"MIN(\"+key+\")\"\n\t} else if (keytrg === this.keytrg.Max) {\n\t    return \"MAX(\"+key+\")\"\n\t} else {\n\t    return val;\n\t};\n    };\n    this.dbInsert=function(state,json) {\n\tvar ii,key;\n\ttry {\n\t    // set home\n\t    var len=json.data.length\n\t    for (ii=0;ii<len;ii++) {\n\t\tjson.data[ii][\"cnt\"]=ii\n\t    }\n\t    // get modified date\n\t    //console.log(\"Setting time.\");\n\t    this.epoch0=this.getTime(state,json.epoch);     // data file time\n\t    this.setTime(state);     // data file time\n\t    // make database for raw data\n\t    this.makeTable(state);\n\t    // reset key counts and range\n\t    this.cnt=0;\n\t    this.keyCnt={}; // reset key-count\n\t    // put data into databse\n\t    //console.log(\"inserting\");\n\t    var data=[];\n\t    var home=state.Path.home.val;\n\t    var hkeys=state.Path.home.path;//Object.keys(home);\n\t    var homeKeys=[];\n\t    var delayKeys=[];\n\t    var lenh=hkeys.length;\n            for (ii=0;ii<lenh;ii++) {\n\t\tkey=hkeys[ii];\n\t\tvar keytrg=this.getKeytrg(state,key,home[key]);\n\t\t//console.log(\"Keytrg:\",key,keytrg,JSON.stringify(home[key]));\n\t\tif (keytrg <= this.keytrg.Value) {\n\t\t    homeKeys.push(key);\n\t\t} else {\n\t\t    delayKeys.push(key);\n\t\t}\n            }\n\t    //console.log(\"Home keys:\",JSON.stringify(homeKeys),\" delayed:\",JSON.stringify(delayKeys));\n\t    var rcnt=this.extractData(state,data,{},\"\",json.data,homeKeys,home);\n\t    console.log(\"Count:\",rcnt);\n\t    //console.log(\"Data:\",JSON.stringify(data));\n\t    this.dataToDb(state,data);\n\t    //var nrec=this.sanityCheck(state)\t    // sanity check\n\t    //console.log(\"Initially:\",data.length,\" Extracted:\",rcnt,' Database:',nrec);\n\t    this.postProcess(state); // update distinct Database.values[key]\n\t    if (delayKeys.length > 0) {// delayed home selection (MAX() and MIN())\n\t\tthis.makeWhere(state,delayKeys,home);\n\t\tvar where=this.getWhere(state,delayKeys,home);\n\t\tvar docs=this.getDocs(state,where);\n\t\tthis.dataToDb(state,docs)\n\t\tthis.postProcess(state); // update distinct Database.values[key]\n\t    };\n\t    state.Path.makePath(state); // initialise path\n\t    //console.log(\"Indexing and cleaning up.\");\n\t    this.dbindex(state,state.Path.other.table); // make indexes\n\t    this.dbindex(state,state.Path.other.rest); // make indexes\n\t    //state.Path.checkTableKeys(state);\n\t    state.Html.broadcast(state,\"Database is ready.\");\n\t    //console.log(\"Database is ready.\");\n\t} catch (e) {\n\t    alert(\"Db-insert error:\"+e);\n\t};\n    };\n    this.updateKeyCnt=function(state,key,val) {\n\tif (this.keyCnt[key] === undefined) {\n\t    this.keyCnt[key]={cnt:0,type:\"num\",order:this.nasc};\n\t}\n\tthis.keyCnt[key].cnt=(this.keyCnt[key].cnt)+1;\n\tif (this.keyCnt[key].type  === \"num\" && isNaN(val)) {\n\t    this.keyCnt[key].type=\"nan\";\n\t    this.keyCnt[key].order=this.casc;\n\t}\n    };\n    this.postProcess=function(state) { // update meta-data\n\tvar keys=Object.keys(state.Database.keyCnt);\n\tvar lenk=keys.length;\n\tfor (var ii=0;ii<lenk;ii++) {\n\t    var key=keys[ii];\n\t    // make list of values in Database for each key\n\t    state.Database.values[key]=[];\n\t    var sql=\"select DISTINCT \"+key+\" AS \"+key+\" FROM alarm\";\n\t    var dd0=this.query(sql);\n\t    var lend=dd0.length;\n\t    for (var jj=0;jj<lend;jj++) {\n\t\tvar doc=dd0[jj];\n\t\tstate.Database.values[key].push(doc[key]);\n\t    };\n\t};\n    };\n    this.extractData=function(state,data,parent,key,raw,hkeys,home) { // insert records into db (recursive)\n\tvar rcnt=0;\n\tvar kk,ii,kii,child,dkey;\n\t//console.log(\"Processing {\",state.Utils.toString(parent),\"} '\",key,\"' (\",state.Utils.toString(raw),\")\");\n\tvar wii=this.whatIsIt(raw);\n\tif (wii  === \"Object\" && key  === \"\") {\n\t    //console.log(\"Found object (\",state.Utils.toString(parent),\")\");\n\t    child=state.Utils.cp(parent);\n\t    // loop over plain values first\n\t    for (kk in raw) {\n\t\tkii=this.whatIsIt(raw[kk]);\n\t\tif (kii  === \"value\") {\n\t\t    child[kk]=raw[kk];\n\t\t}\n\t    }\n\t    // loop over sub-objects\n\t    var nn=0;\n\t    for (kk in raw) {\n\t\tkii=this.whatIsIt(raw[kk]);\n\t\tif (kii !== \"value\") {\n\t\t    nn=nn+1;\n\t\t    rcnt=rcnt+this.extractData(state,data,child,kk,raw[kk],hkeys,home);\n\t\t}\n\t    }\n\t    if (nn  === 0) { // insert \n\t\t//console.log(\"Object was empty.\");\n\t\trcnt=rcnt+this.extractData(state,data,child,null,null,hkeys,home);\n\t    }\n\t} else if (wii  === \"Object\" && key !== \"\") {\n\t    //console.log(\"Found object key '\",key,\"' (\",state.Utils.toString(parent),\")\");\n\t    child=state.Utils.cp(parent);\n\t    // loop over plain values first\n\t    for (kk in raw) {\n\t\tchild[key]=kk;\n\t\trcnt=rcnt+this.extractData(state,data,child,\"\",raw[kk],hkeys,home);\n\t    }\n\t} else if (wii  === \"Array\") {\n\t    //console.log(\"Found array key '\",key,\"' (\",state.Utils.toString(parent),\")\");\n\t    var dlen = raw.length;\n\t    for (ii = 0; ii < dlen; ii++) {\n\t\trcnt=rcnt+this.extractData(state,data,parent,key,raw[ii],hkeys,home);\n\t    }\n\t} else {\n\t    //console.log(\"Found key '\",key,\"' \",wii,\" (\",state.Utils.toString(parent),\")\");\n\t    var keep=true;\n\t    var doc=state.Utils.cp(parent);\n\t    if (raw !== null) {\n\t\tif (key  === \"\") {\n\t\t    doc.value=raw;\n\t\t} else {\n\t\t    doc[key]=raw;\n\t\t}\n\t    }\n\t    // check if home criteria is met\n\t    var lenh=hkeys.length;\n\t    for (ii=0;ii<lenh;ii++) {\n\t\tkey=hkeys[ii];\n\t\tvar vals=home[key];\n\t\tvar lenv=vals.length;\n\t\tvar found=false;\n\t\tfor (var jj=0;jj<lenv;jj++){\n\t\t    if (vals[jj]===doc[key] || (vals[jj]===\"\" && doc[key]===undefined)) {\n\t\t\tfound=true;\n\t\t    }\n\t\t}\n\t\tif (!found) {\n\t\t    keep=false;\n\t\t};\n\t    }\n\t    if (keep) {\n\t\t//console.log(\"Updating internal raw structure\",JSON.stringify(setup));\n\t\tfor (dkey in doc) {\n\t\t    var val=doc[dkey];\n\t\t    this.updateKeyCnt(state,dkey,val);\n\t\t    //// this takes too much time...\n\t\t    //if (this.values[dkey]  === undefined) {\n\t\t    //\tthis.values[dkey]=[];\n\t\t    //  };\n\t\t    ////console.log(\"Setup:\",JSON.stringify(setup));\n\t\t    ////console.log(\"Key:\",key,JSON.stringify(this.values));\n    \t\t    //if (this.values[dkey].indexOf(val)  === -1 ) { // value not in range\n\t\t    //    this.values[dkey].push(val); // add value to range\n\t\t    //};\n\t\t};\n\t\t//console.log(\">>> Inserting:\",state.Utils.toString(doc));\n\t\trcnt=rcnt+1;\n\t\tthis.cnt=this.cnt+1;\n\t\tstate.Threshold.setThresholds(doc);\n\t\tdoc._title=state.Layout.makeDocTitle(state,doc);\n\t\t//if (this.cnt < 10) { // debug purposes\n\t\t//for (key in keys) {\n\t\t//this.updateKeyCnt(state,key,doc[key]);\n\t\t//};\n\t\tdata.push(doc);\n\t    //} else {\n\t\t//console.log(\"Ignoring:\",lenh,JSON.stringify(hkeys),JSON.stringify(home),JSON.stringify(doc));\n\t    }\n\t}\n\treturn rcnt;\n    };\n    this.dbextract=function(state,showFunc) { // extract data from db and show\n\t// extract data from db and insert into data-array\n\t// var parent={};//{test:{$exists:false}};\n\tvar where = this.getWhere(state);\n\tvar cntDocs0=this.getDocsCnt(state,where);\n\tvar nrec= (cntDocs0.length===0?0:cntDocs0[0].cnt);\n\tvar m={};\n\tstate.Matrix.cnt=nrec;\n\tif (nrec > state.Matrix.popSeries) { // only use counts...\n\t    state.Matrix.initKeyCnt(state);\n\t    var buff=[];\n\t    state.Utils.cpArray(buff,state.Path.keys.path);\n\t    state.Utils.cpArray(buff,state.Path.keys.other);\n\t    state.Utils.cpArray(buff,state.Path.trash);\n\t    state.Matrix.mapKeyCnt(state,where,nrec,buff);\n\t    //console.log(\"Setup:\",\n\t    //\t    JSON.stringify(state.Matrix.values),\n\t    //\t    JSON.stringify(state.Matrix.keyCnt));\n\t    state.Path.exportAllKeys(state); // can not export keys before we have a cnt-map\n\t    state.Matrix.sortMatrixValues(state);\n\t    //console.log(\"Count:\",JSON.stringify(docs));\n\t    // add \"undefined\" range of keys that are not present in every doc...\n\t    var cntDocs=state.Database.getDocsCnt(state,where,state.Path.other.table);\n\t    state.Matrix.makeMatrixCnt(state,cntDocs,m);\n\t} else {\n\t    //console.log(\"Database where:\",where);\n\t    var docs=this.getDocs(state,where); // get all docs\n\t    //console.log(\">>>Extraction key (where='\",where,\"') Docs:\",docs.length);\n\t    state.Matrix.initKeyCnt(state);\n\t    state.Matrix.mapKeys(state,docs);\n\t    state.Matrix.addMapKeys(state,docs);\n\t    //console.log(\"Setup=\",JSON.stringify(setup));\n\t    //console.log (\"Maprange:\",JSON.stringify(state.Matrix.values));\n\t    // subset contains the keys being displayed in matrix...\n\t    state.Path.exportAllKeys(state); // can not export keys before we have a cnt-map\n\t    state.Matrix.sortMatrixValues(state);\n\t    // make matrix\n\t    state.Matrix.makeMatrix(state,docs,m);\n\t    //console.log (\"Matrix:\",JSON.stringify(m));\n\t}\n\tshowFunc(state,m);\n    };\n    this.dbindex=function(state,ks) { // make indexes on all keys\n\tvar s=\"\";\n\tvar klen = ks.length;\n\tfor (var ii = 0; ii < klen; ii++) {\n\t    //this.query(\"CREATE INDEX ? ON TABLE alarm.?\",ks[ii],ks[ii]);\n\t    s=s+\" \"+ks[ii];\n\t};\n\t//console.log(\"Indexes:\",s);\n    };\n    this.getTitleDynamic=function(state,key,val) {\n\tvar ret,parse;\n\tif (state.Database.values[key] === undefined) {\n\t    ret=val;\n\t} else {\n\t    var keytrg=this.getKeytrg(state,key,val);\n\t    if (val === \"null\") {\n\t\tret=key + \" is NULL\";\n\t    } else if (keytrg === this.keytrg.Max) { // this is a function\n\t\tparse=state.Utils.getMax(state.Database.values[key]);\n\t\tif (parse === undefined) {\n\t\t    ret=key + \" is NULL\";\n\t\t} else {\n\t\t    ret=parse;\n\t\t};\n\t    } else if (keytrg === this.keytrg.Min) { // this is a function\n\t\tparse=state.Utils.getMin(state.Database.values[key]);\n\t\tif (parse === undefined) {\n\t\t    ret=key + \" is NULL\";\n\t\t} else {\n\t\t    ret=parse;\n\t\t};\n\t    } else {\n\t\tret=val;\n\t    };\n\t};\n\treturn ret;\n    };\n    this.getWhereDynamic=function(state,key,val) {\n\tvar ret,parse;\n\tif (state.Database.values[key] === undefined) {\n\t    ret=state.Database.getWhereDetail(key,val);\n\t} else {\n\t    var keytrg=this.getKeytrg(state,key,val);\n\t    //console.log(\"parseWhere:\",key,JSON.stringify(val),keytrg);\n\t    if (keytrg === this.keytrg.Max) { // this is a function\n\t\tparse=state.Utils.getMax(state.Database.values[key]);\n\t\t//console.log(\"parseWhere:\",key,parse,JSON.stringify(state.Database.values[key]));\n\t\tif (parse === undefined) {\n\t\t    ret=key + \" is NULL\";\n\t\t} else {\n\t\t    ret=key + \"='\"+parse+\"'\";\n\t\t};\n\t    } else if (keytrg === this.keytrg.Min) { // this is a function\n\t\tparse=state.Utils.getMin(state.Database.values[key]);\n\t\tif (parse === undefined) {\n\t\t    ret=key + \" is NULL\";\n\t\t} else {\n\t\t    ret=key + \"='\"+parse+\"'\";\n\t\t};\n\t    } else{\n\t\tret=state.Database.getWhereDetail(key,val);\n\t    };\n\t};\n\t//console.log(\"GetWhere:\",key,val,ret);\n\treturn ret;\n    };\n    this.getWhereDetail=function(key,val) {\n\tif (val  === undefined ||\n\t    val  === null ||\n\t    val  === \"\") {\n\t    return key +' is NULL';\n\t} else {\n\t    return key + '=\"'+val+'\"'\n\t};\n    };\n    this.getWhere=function(state,keys,vals) {\n\tvar where=\"\";\n\t//console.log(\"Path:\",JSON.stringify(state.Path.keys));\n\tif (keys === undefined) {\n\t    keys=state.Path.keys.path;\n\t    vals=state.Path.select.val;\n\t};\n\tif (vals === undefined) {vals=[];};\n\tif (keys !== undefined) {\n\t    var plen = keys.length;\n\t    for (var ii = 0; ii < plen; ii++) {\n\t\tvar key=keys[ii];\n\t\tvar whereKey=state.Database.parseWhere(state,key,vals[key])\n\t\t//console.log(\"Wherekey:\",ii,key,JSON.stringify(vals),\n\t\t//\t    JSON.stringify(vals[key]),\"'\"+whereKey+\"'\");\n\t\tif (whereKey  === undefined ||\n\t\t    whereKey  === null ||\n\t\t    whereKey  === \"\" ) {\n\t\t    if (where !== \"\") { where = where +  ' AND ';};\n\t\t    where= where + key +' is NULL';\n\t\t} else {\n\t\t    if (where !== \"\") { where = where +  ' AND ';};\n\t\t    where=where + \"(\"+ whereKey+\")\";\n\t\t}\n\t    };\n\t    if (where !== \"\") {where=\" WHERE \"+where;}\n\t    //console.log(\"Where=|\"+where+\"|\")\n\t};\n\treturn where;\n    };\n    this.addWhere=function(iwhere,whereKey) {\n\tvar where=iwhere;\n\tif (whereKey  !== undefined &&\n\t    whereKey  !== null &&\n\t    whereKey  !== \"\" ) {\n\t    if (where !== \"\") {\n\t\twhere = where +  \" AND (\"+ whereKey+\")\";\n\t    } else {\n\t\twhere = \" WHERE (\"+ whereKey+\")\";\n\t    }\n\t}\n\treturn where;\n    };\n    this.getColWhere=function(key,values,index,step) {\n\tvar clen=values.length;\n\tvar where=\"\";\n        for (var kk=index;kk<Math.min(clen,index+step);kk++) {\n\t    if (where !== \"\") {where=where + \" or \";}\n\t    where=where + this.getWhereDetail(key,values[kk]);\n        };               \n\treturn where;\n    };\n    this.makeWhere=function(state,keys,vals) {\n\tif (keys === undefined) {\n\t    state.Path.keys.path.forEach(function(item,index) {this.setWhere(state,item,state.Path.select.val);}.bind(this));\n\t} else {\n\t    keys.forEach(function(item,index) {this.setWhere(state,item,vals);}.bind(this));\n\t}\n    };\n    this.setWhere=function(state,key,vals) {\n\tvar where=this.parseWhere(state,key,vals);\n\tstate.Path.where[key]=where;\n    };\n    this.parseWhere=function(state,key,vals) {\n\tvar where=\"\";\n\tif (vals === undefined) {vals=[];};\n\tvar lenv=vals.length\n\tfor (var ii=0;ii<lenv;ii++) {\n\t    var val=vals[ii]\n\t    if (where !== \"\") { where=where + \" OR \";};\n\t    where = where + state.Database.getWhereDynamic(state,key,val);\n\t    //console.log(\"From getWhereDynamic:\",key,\":\",val,\":\",where);\n\t};\n\treturn where;\n    };\n    this.getGroup=function(keys) {\n\tvar group=\"\";\n\tvar plen = keys.length;\n\tfor (var ii = 0; ii < plen; ii++) {\n\t    var key=keys[ii];\n\t    if (group !== \"\") { group = group +  ',';};\n\t    group= group + key;\n\t};\n\tif (group !== \"\") {group=\" GROUP BY \"+group;}\n\treturn group;\n    };\n    this.getCols=function(keys) {\n\tvar cols=\"\";\n\tvar plen = keys.length;\n\tfor (var ii = 0; ii < plen; ii++) {\n\t    var key=keys[ii];\n\t    cols= cols + key;\n\t    if (cols !== \"\") { cols = cols +  ',';};\n\t};\n\treturn cols;\n    };\n    this.getAll=function(state) {\n\tvar cols=\"\";\n\tvar plen = state.Path.keys.other.length;\n\tfor (var ii = 0; ii < plen; ii++) {\n\t    var key=state.Path.keys.other[ii];\n\t    cols= cols + key;\n\t    if (cols !== \"\") { cols = cols +  ',';};\n\t};\n\treturn cols;\n    };\n    this.getDocsRank=function(state,where,keys,maxrank) {\n\tvar dd;\n\tdd=this.query(\"select * FROM alarm\"+where);\n\treturn (dd===undefined?[]:dd);\n    };\n\n    this.getRankCnt=function(state,where,keys,maxrank) {\n\twhere=this.addWhere(where,\"rank='\" + maxrank.toString()+\"'\");\n\tvar sql,dd;\n\tvar body=\"* FROM alarm\";\n\tif (keys  === undefined) {\n\t    sql=\"select \"+body+where;\n\t    //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\t    dd=this.query(sql);\n\t    //console.log(\"initial count:\",dd[0].cnt,JSON.stringify(dd0));\n\t    //console.log(\"Cnt:\",JSON.stringify(dd));\n\t} else {\n\t    var cols = this.getCols(keys);\n\t    var group = this.getGroup(keys);\n\t    sql=\"select \"+cols+body+\n    \t\twhere+group;\n\t    //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\t    dd=this.query(sql);\n\t    //console.log(\"Cnt:\",JSON.stringify(dd),JSON.stringify(keys));\n\t}\n\treturn (dd===undefined?[]:dd);\n    };\n    this.getDocsCnt=function(state,where,keys) {\n\tvar sql,dd;\n\tvar body=\"count(*) AS cnt, max(level) AS maxlev, max(rank) AS maxrank, min(level) AS minlev, max(lat) AS maxlat, min(lat) AS minlat, max(lon) AS maxlon, min(lon) AS minlon FROM alarm\";\n\tif (keys  === undefined) {\n\t    sql=\"select \"+body+where;\n\t    //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\t    dd=this.query(sql);\n\t    //console.log(\"initial count:\",dd[0].cnt,JSON.stringify(dd0));\n\t    //console.log(\"Cnt:\",JSON.stringify(dd));\n\t} else {\n\t    var cols = this.getCols(keys);\n\t    var group = this.getGroup(keys);\n\t    sql=\"select \"+cols+body+\n    \t\twhere+group;\n\t    //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\t    dd=this.query(sql);\n\t    //console.log(\"Cnt:\",JSON.stringify(dd),JSON.stringify(keys));\n\t}\n\treturn (dd===undefined?[]:dd);\n    };\n    this.getDocs=function(state,where) {\n\tvar dd=this.query(\"select * FROM alarm\"+where);\n\treturn (dd===undefined?[]:dd);\n    };\n    this.makeTable=function(state) {\n\tthis.query('DROP TABLE IF EXISTS alarm; CREATE TABLE alarm;');\n    };\n    this.dataToDb=function(state,data) {\n\talasql.tables.alarm.data = data;\n    };\n    this.getKeyCnt=function(state,key,where){\n\tvar sql=\"select \"+key+\",count(*) AS cnt FROM alarm\"+\n\t    where+\" GROUP BY \"+key;\n\treturn this.query(sql);\n    };\n    this.whatIsIt=function(object) { // determine object type\n\tif (object  === null) {\n\t    return \"null\";\n\t} else if (object.constructor  === this.arrayConstructor) {\n\t    return \"Array\";\n\t}\n\telse if (object.constructor  === this.objectConstructor) {\n\t    return \"Object\";\n\t}\n\telse {\n\t    return \"value\";\n\t}\n    };\n    this.getTimeDiff=function(state,dt) {\n\tvar s=\"\";\n\tif (dt  === undefined || isNaN(state,dt)) {return s;};\n\tvar msec=Math.abs(state,dt);\n\tvar dd = Math.floor(state,((state,(msec / 1000) / 60) / 60) / 24);\n\tmsec -= dd * 1000 * 60 * 60 * 24;\n\tvar hh = Math.floor(state,((state,msec / 1000) / 60) / 60);\n\tmsec -= hh * 1000 * 60 * 60;\n\tvar mm = Math.floor(state,(msec / 1000) / 60);\n\tmsec -= mm * 1000 * 60;\n\tvar ss = Math.floor(state,msec / 1000);\n\tmsec -= ss * 1000;\n\tif (dt<0) {\n\t    s=\"-\";\n\t} else if (dt > 0) {\n\t    s=\"+\";\n\t} else {\n\t    s=\"0\";\n\t}\n\tif (dd !== 0) s=s+\" \"+state.Utils.numberWithCommas(dd)+\"d\";\n\tif (hh !== 0) s=s+\" \"+hh+\"h\";\n\tif (mm !== 0) s=s+\" \"+mm+\"m\";\n\t//if (ss !== 0) s=s+\" \"+ss+\"s\";\n\treturn s;\n    }\n    this.sanityCheck=function(state) {\n\tvar sql=\"select count(*) AS cnt, max(level) AS lev FROM alarm\";\n\tvar dd0=this.query(sql);\n\tvar nrec= dd0[0].cnt;\n\treturn nrec;\n    }\n    this.query=function(sql) {\n\ttry {\n\t    return alasql(sql);\n\t} catch (e) {\n\t    alert(sql + \":\" + e);\n\t};\n    }\n\n};\n\nexport default Database;\n"]},"metadata":{},"sourceType":"module"}