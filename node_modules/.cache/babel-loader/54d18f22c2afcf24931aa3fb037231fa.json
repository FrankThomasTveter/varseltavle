{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/Table2DComponent.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport ReactDOM from 'react-dom';\nimport SummaryCell from './SummaryCell';\nimport SeriesCell from './SeriesCell';\nimport CanvasText from './CanvasTextComponent'; //console.log(\"Inside Table.\")\n//        flexGrow: 1,\n//\t\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      height: '100%',\n      maxWidth: '100%'\n    },\n    table: {\n      textAlign: 'left',\n      padding: \"0px\",\n      borderStyle: 'solid',\n      overflow: 'hidden'\n    },\n    dataCell: {\n      cursor: \"pointer\",\n      padding: theme.spacing.unit * 0\n    },\n    dataCellFill: {\n      padding: theme.spacing.unit * 1\n    },\n    hdrCell: {\n      cursor: \"pointer\",\n      padding: theme.spacing.unit * 0\n    },\n    hdrCellEmpty: {\n      padding: theme.spacing.unit * 0\n    },\n    hdrCellFill: {\n      width: '100%',\n      padding: theme.spacing.unit * 1\n    }\n  };\n};\n\nfunction getTextWidth(txt, fontname, fontsize) {\n  if (getTextWidth.c === undefined) {\n    getTextWidth.c = document.createElement('canvas');\n    getTextWidth.ctx = getTextWidth.c.getContext('2d');\n  }\n\n  if (fontname !== undefined) {\n    getTextWidth.ctx.font = fontsize + ' ' + fontname;\n  }\n\n  return getTextWidth.ctx.measureText(txt).width;\n}\n\n;\n\nfunction getTextHeight(fontname, fontsize) {\n  if (getTextHeight.c === undefined) {\n    getTextHeight.c = document.createElement('canvas');\n    getTextHeight.ctx = getTextHeight.c.getContext('2d');\n  }\n\n  if (fontname !== undefined) {\n    getTextHeight.ctx.font = fontsize + ' ' + fontname;\n  }\n\n  return getTextHeight.ctx.measureText('M').width;\n}\n\nfunction makePlan(colvalues, rowvalues, width, height, border) {\n  var plan = {\n    rotate: false,\n    step: 1,\n    width: 100,\n    height: 100,\n    border: border\n  };\n\n  if (width <= 0) {\n    return plan;\n  }\n\n  ;\n  var height = getTextHeight() + 2 * border;\n  var mwidth = 0;\n  var swidth = 0;\n  var lenc = colvalues.length;\n\n  for (var ii = 0; ii < lenc; ii++) {\n    var cwidth = getTextWidth(colvalues[ii]) + 2 * border;\n\n    if (cwidth > mwidth) {\n      mwidth = cwidth;\n    }\n\n    swidth = swidth + cwidth;\n  }\n\n  if (mwidth * lenc < width) {\n    // horisontal\n    plan.rotate = false;\n    plan.step = 1;\n    plan.width = width / lenc;\n    plan.height = height;\n    console.log(\"Plan (normal):\", JSON.stringify(plan));\n  } else if (height * lenc < width) {\n    // rotate\n    plan.rotate = true;\n    plan.step = 1;\n    plan.width = width / lenc;\n    plan.height = mwidth;\n    console.log(\"Plan (rot):\", JSON.stringify(plan));\n  } else {\n    // rotate and use steps\n    plan.rotate = false;\n    plan.step = Math.ceil(lenc * height / width);\n    plan.width = plan.step * width / lenc;\n    plan.height = mwidth;\n    console.log(\"Plan (rot+step):\", JSON.stringify(plan));\n  }\n\n  return plan;\n} // ---------------- DATA\n\n\nfunction FirstDataCell(props) {\n  var classes = props.classes,\n      rowval = props.rowval,\n      onclick = props.onclick,\n      title = props.title; //console.log(\"Making first data cell.\");\n\n  return React.createElement(TableCell, {\n    className: classes.dataCellFill,\n    onClick: onclick,\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, rowval);\n}\n\nfunction DataCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      elements = props.elements,\n      mode = props.mode,\n      other = _objectWithoutProperties(props, [\"classes\", \"state\", \"elements\", \"mode\"]);\n\n  if (elements === undefined) {\n    return React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    });\n  } else if (mode === state.Show.code.cell.Sum) {\n    return React.createElement(TableCell, {\n      className: classes.dataCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"YY\"); //return <SummaryCell {...other} state={state} elements={elements}/>\n  } else {\n    return React.createElement(SeriesCell, Object.assign({}, other, {\n      state: state,\n      elements: elements,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }));\n  }\n}\n\nfunction renderDataCell(classes, state, colkey, colvalues, rowkey, rowval, rowindex, rowwhere, range, mode, plan, val, index) {\n  var title = state.Database.getWhereDetail(colkey, colvalues[index]); //console.log(\"Making data cell:\",rowval,val,index,plan,JSON.stringify(colvalues));\n\n  if ((index - 1) % plan.step === 0) {\n    // get elements and range\n    var elements = state.Matrix.getMatrixElements(colvalues, rowval, state.React.matrix, index, plan.step); // get count and colwhere\n\n    var cnt = Math.min(colvalues.length, index + plan.step) - index;\n    var colwhere = state.Database.getColWhere(colkey, colvalues, index, plan.step); // make onclick and title\n\n    var onclick = function onclick() {\n      return state.Navigate.selectItem(state, colkey, rowkey, colvalues[index], rowval, colwhere, rowwhere, cnt, 1);\n    };\n\n    return React.createElement(DataCell, {\n      className: classes.dataCell,\n      classes: classes,\n      state: state,\n      key: \"col-\".concat(index),\n      index: index,\n      onclick: onclick,\n      title: title,\n      colkey: colkey,\n      rowkey: rowkey,\n      colvalues: colvalues,\n      colval: val,\n      rowval: rowval,\n      colwhere: colwhere,\n      rowwhere: rowwhere,\n      elements: elements,\n      mode: mode,\n      plan: plan,\n      range: range,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    });\n  } else {\n    return null;\n  }\n}\n\nfunction dataRow(classes, state, colkey, rowkey, colvalues, mode, plan, rowval, rowindex) {\n  var rowwhere = state.Database.getWhereDetail(rowkey, rowval);\n\n  var onclick = function onclick() {\n    return state.Navigate.selectKey(state, rowkey, rowval, rowwhere, 1);\n  };\n\n  var range = [undefined, undefined];\n\n  if (state.React.matrix !== undefined) {\n    range = state.Matrix.getRange(state, state.React.matrix, colvalues, [rowval]);\n  }\n\n  ; //console.log(\"Making data cols.\",colkey,JSON.stringify(colvalues));\n  //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderDataCell(classes, state, colkey, colvalues, rowkey, rowval, rowindex, rowwhere, range, mode, plan, val, index);\n  };\n\n  return React.createElement(TableRow, {\n    key: rowindex.toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(FirstDataCell, {\n    classes: classes,\n    key: '0',\n    rowval: rowval,\n    onclick: onclick,\n    title: rowwhere,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), colvalues.map(mapFunction));\n}\n\n;\n\nfunction renderZeroRow(classes, state, colkey, colvalues, plan) {\n  return React.createElement(TableRow, {\n    key: '1',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    key: \"0\",\n    state: state,\n    index: '0',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"No data\"));\n}\n\n;\n\nfunction DataRows(props) {\n  var classes = props.classes,\n      state = props.state,\n      plan = props.plan,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey,\n      rowvalues = props.rowvalues,\n      mode = props.mode; //console.log(\"Making data cols.\",colkey,JSON.stringify(colvalues));\n\n  var mapFunction = function mapFunction(val, index) {\n    return dataRow(classes, state, colkey, rowkey, colvalues, mode, plan, val, index);\n  };\n\n  if (rowvalues.length === 0) {\n    return renderZeroRow(classes, state, colkey, colvalues, plan);\n  } else {\n    return rowvalues.map(mapFunction);\n  }\n} // ---------------- HDR\n\n\nfunction FirstHdrCell(props) {\n  var classes = props.classes,\n      label = props.label; //console.log(\"Making first header cell.\",label);\n\n  return React.createElement(TableCell, {\n    className: classes.hdrCellFill,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, label);\n}\n\nfunction renderHdrCell(classes, state, colkey, colvalues, rowkey, plan, val, index) {\n  if ((index - 1) % plan.step === 0) {\n    //console.log(\"HdrCell:\",index,plan.step);\n    var cnt = Math.min(colvalues.length, index + plan.step) - index;\n    var colwhere = state.Database.getColWhere(colkey, colvalues, index, plan.step);\n\n    var onclick = function onclick() {\n      return state.Navigate.selectKey(state, colkey, colvalues[index], colwhere, cnt);\n    };\n\n    var title = colwhere;\n    var ref = React.createRef(); //console.log(\"Ref:\",JSON.stringify(ref));\n\n    var cursor = classes.hdrCellEmpty;\n\n    if (onclick !== undefined) {\n      cursor = classes.hdrCell;\n    } //var rotate=undefined;\n\n\n    var rotate = 1; //[(onclick !== undefined?classes.hdrCell:classes.hdrCellEmpty),\n\n    return React.createElement(TableCell, {\n      className: onclick !== undefined ? classes.hdrCell : classes.hdrCellEmpty,\n      onClick: onclick,\n      title: title,\n      key: \"col-\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(CanvasText, {\n      state: state,\n      index: index,\n      plan: plan,\n      label: val,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }));\n  } else {\n    return null;\n  }\n}\n\nfunction HdrRow(props) {\n  var classes = props.classes,\n      state = props.state,\n      plan = props.plan,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey,\n      label = props.label; //, rowvalues\n  //console.log(\"Making header row.\",colkey,JSON.stringify(colvalues));\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderHdrCell(classes, state, colkey, colvalues, rowkey, plan, val, index);\n  };\n\n  return React.createElement(TableRow, {\n    key: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(FirstHdrCell, {\n    classes: classes,\n    label: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }), colvalues.map(mapFunction));\n} // ---------------- Details\n\n\nfunction Details(props) {\n  var classes = props.classes,\n      state = props.state; // classes, \n\n  var colkey = state.Path.getColKey(state) || \"\";\n  var rowkey = state.Path.getRowKey(state) || \"\";\n  var colvalues = state.Path.filterKeys(state, state.Matrix.values[colkey] || [\"\"]);\n  var rowvalues = state.Path.filterKeys(state, state.Matrix.values[rowkey] || [\"\"]);\n  var cellMode = state.Show.getCellMode(state);\n  var ncol = colvalues.length + 1;\n  var nrow = rowvalues.length + 1; //DOM.style.font\n\n  var border = 3;\n  var label = rowkey + \"\\\\\" + colkey;\n  var zwidth = getTextWidth(label) + 2 * border; //props.theme.spacing.unit;\n\n  var zheight = getTextHeight(label) + 2 * border; //props.theme.spacing.unit;\n  //DOM.style.fontSize\n\n  var width = 0.8 * window.innerWidth - zwidth;\n  var height = 0.8 * window.innerHeight - zheight;\n  var plan = makePlan(colvalues, rowvalues, width, height, border);\n  console.log(\"Details => Width/Height:\", window.innerWidth, window.innerHeight, plan.width, plan.height); //console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(state.Matrix.values[colkey]||[\"\"]));\n  //console.log(\"Rowkey:\",rowkey,\" rowval:\",JSON.stringify(state.Matrix.values[rowkey]||[\"\"]));\n\n  return React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(HdrRow, {\n    classes: classes,\n    state: state,\n    plan: plan,\n    colkey: colkey,\n    colvalues: colvalues,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    label: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  })));\n} //\t    <TableBody>\n//\t      <DataRows classes={classes} state={state} plan={plan} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues} mode={cellMode}/>\n//\t    </TableBody>\n//<div  style={{width: '100%', height: '100%'}}>\n//</div>\n\n\nvar Table2D =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Table2D, _Component);\n\n  function Table2D(props) {\n    var _this;\n\n    _classCallCheck(this, Table2D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table2D).call(this, props)); //this.state=props.state;\n\n    _this.updateWindowDimensions = function () {\n      _this.width = window.innerWidth;\n      _this.height = window.innerHeight;\n      _this.bbx = _this.el.getBoundingClientRect();\n      console.log(\"Width/Height:\", _this.width, _this.height, _this.bbx.width, _this.bbx.height);\n    };\n\n    return _this;\n  }\n\n  _createClass(Table2D, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n  }, {\n    key: \"element\",\n    value: function element(el) {\n      if (el !== undefined && el !== null) {\n        this.el = el;\n        this.bbx = this.el.getBoundingClientRect();\n        console.log(\"BBX width/height:\", this.bbx.width, this.bbx.height);\n      }\n\n      ;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state;\n      console.log(\"##### Rendering Table2D.\");\n      return React.createElement(\"div\", {\n        ref: function ref(el) {\n          _this2.element(el);\n        },\n        className: classes.root,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(Details, {\n        state: state,\n        classes: classes,\n        element: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Table2D;\n}(Component);\n\nTable2D.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Table2D);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/Table2DComponent.js"],"names":["React","Component","PropTypes","withStyles","Paper","Grid","Table","TableBody","TableRow","TableHead","TableCell","ReactDOM","SummaryCell","SeriesCell","CanvasText","styles","theme","root","height","maxWidth","table","textAlign","padding","borderStyle","overflow","dataCell","cursor","spacing","unit","dataCellFill","hdrCell","hdrCellEmpty","hdrCellFill","width","getTextWidth","txt","fontname","fontsize","c","undefined","document","createElement","ctx","getContext","font","measureText","getTextHeight","makePlan","colvalues","rowvalues","border","plan","rotate","step","mwidth","swidth","lenc","length","ii","cwidth","console","log","JSON","stringify","Math","ceil","FirstDataCell","props","classes","rowval","onclick","title","DataCell","state","elements","mode","other","Show","code","cell","Sum","renderDataCell","colkey","rowkey","rowindex","rowwhere","range","val","index","Database","getWhereDetail","Matrix","getMatrixElements","matrix","cnt","min","colwhere","getColWhere","Navigate","selectItem","dataRow","selectKey","getRange","mapFunction","toString","map","renderZeroRow","DataRows","FirstHdrCell","label","renderHdrCell","ref","createRef","HdrRow","Details","Path","getColKey","getRowKey","filterKeys","values","cellMode","getCellMode","ncol","nrow","zwidth","zheight","window","innerWidth","innerHeight","Table2D","updateWindowDimensions","bbx","el","getBoundingClientRect","addEventListener","element","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport ReactDOM from 'react-dom';\n\nimport SummaryCell from './SummaryCell';\nimport SeriesCell  from './SeriesCell';\nimport CanvasText  from './CanvasTextComponent';\n\n//console.log(\"Inside Table.\")\n\n//        flexGrow: 1,\n//\t\n\nconst styles = theme => ({\n    root: {\n\theight: '100%',\n\tmaxWidth: '100%',\n    },\n    table: {\n        textAlign: 'left',\n\tpadding: \"0px\",\n\tborderStyle: 'solid',\n\toverflow: 'hidden',\n    },\n    dataCell : {\n\tcursor: \"pointer\",\n\tpadding: theme.spacing.unit*0,\n    },\n    dataCellFill : {\n\tpadding: theme.spacing.unit*1,\n    },\n    hdrCell : {\n\tcursor: \"pointer\",\n\tpadding: theme.spacing.unit*0,\n    },\n    hdrCellEmpty : {\n\tpadding: theme.spacing.unit*0,\n    },\n    hdrCellFill : {\n\twidth:'100%',\n\tpadding: theme.spacing.unit*1,\n    },\n});\nfunction getTextWidth(txt, fontname, fontsize){\n    if(getTextWidth.c === undefined){\n        getTextWidth.c=document.createElement('canvas');\n        getTextWidth.ctx=getTextWidth.c.getContext('2d');\n    }\n    if (fontname !== undefined) {\n\tgetTextWidth.ctx.font = fontsize + ' ' + fontname;\n    }\n    return getTextWidth.ctx.measureText(txt).width;\n};\nfunction getTextHeight(fontname, fontsize){\n    if(getTextHeight.c === undefined){\n        getTextHeight.c=document.createElement('canvas');\n        getTextHeight.ctx=getTextHeight.c.getContext('2d');\n    }\n    if (fontname !== undefined) {\n\tgetTextHeight.ctx.font = fontsize + ' ' + fontname;\n    }\n    return getTextHeight.ctx.measureText('M').width;\n}\nfunction makePlan(colvalues,rowvalues,width,height,border) {\n    var plan={rotate:false, step:1, width:100, height:100,border:border};\n    if (width <= 0) { return plan;};\n    var height=getTextHeight()+2*border;\n    var mwidth=0;\n    var swidth=0;\n    var lenc=colvalues.length;\n    for (var ii=0;ii<lenc;ii++) {\n\tvar cwidth = getTextWidth(colvalues[ii])+2*border;\n\tif (cwidth > mwidth) {\n\t    mwidth=cwidth;\n\t}\n\tswidth=swidth+cwidth;\n    }\n    if (mwidth*lenc < width) { // horisontal\n\tplan.rotate=false;\n\tplan.step=1;\n\tplan.width=width/lenc;\n\tplan.height=height;\n\tconsole.log(\"Plan (normal):\",JSON.stringify(plan));\n    } else if (height*lenc < width) { // rotate\n\tplan.rotate=true;\n\tplan.step=1;\n\tplan.width=width/lenc;\n\tplan.height=mwidth;\n\tconsole.log(\"Plan (rot):\",JSON.stringify(plan));\n    } else { // rotate and use steps\n\tplan.rotate=false;\n\tplan.step=Math.ceil(lenc*height/width);\n\tplan.width=plan.step*width/lenc;\n\tplan.height=mwidth;\n\tconsole.log(\"Plan (rot+step):\",JSON.stringify(plan));\n    }\n    return plan;\n}\n// ---------------- DATA\nfunction FirstDataCell (props) {\n    const { classes, rowval, onclick, title } = props;\n    //console.log(\"Making first data cell.\");\n    return (<TableCell className={classes.dataCellFill} onClick={onclick} title={title}>{rowval}</TableCell>);\n}\nfunction DataCell(props) {\n    const {classes,state,elements,mode,...other}=props;\n    if (elements===undefined) {\n\treturn <TableCell/>\n    } else if (mode===state.Show.code.cell.Sum) {\n\treturn <TableCell className={classes.dataCell}>YY</TableCell>;\n\t//return <SummaryCell {...other} state={state} elements={elements}/>\n    } else {\n\treturn <SeriesCell {...other} state={state} elements={elements}/>\n    }\n}\nfunction renderDataCell(classes,state,colkey,colvalues,rowkey,rowval,rowindex,rowwhere,range,mode,plan,val,index) {\n    var title=state.Database.getWhereDetail(colkey,colvalues[index]);\n    //console.log(\"Making data cell:\",rowval,val,index,plan,JSON.stringify(colvalues));\n    if ((index-1)%plan.step === 0) {\n\t// get elements and range\n\tvar elements=state.Matrix.getMatrixElements(colvalues,rowval,state.React.matrix,index,plan.step);\n\t// get count and colwhere\n        var cnt = Math.min(colvalues.length,index+plan.step)-index;\n        var colwhere = state.Database.getColWhere(colkey,colvalues,index,plan.step);\n\t// make onclick and title\n\tvar onclick=() => state.Navigate.selectItem(state,colkey,rowkey,colvalues[index],rowval,colwhere,rowwhere,cnt,1);\n\treturn (<DataCell className={classes.dataCell} classes={classes} state={state} key={`col-${index}`} index={index} onclick={onclick} title={title} \n\t\tcolkey={colkey} rowkey={rowkey} colvalues={colvalues} colval={val} rowval={rowval} colwhere={colwhere} rowwhere={rowwhere} \n\t\telements={elements} mode={mode} plan={plan} range={range}/>);\n    } else {\n\treturn null;\n    }\n}\nfunction dataRow(classes,state,colkey,rowkey,colvalues,mode,plan,rowval,rowindex) {\n    var rowwhere=state.Database.getWhereDetail(rowkey,rowval);\n    var onclick=() => state.Navigate.selectKey(state,rowkey,rowval,rowwhere,1);\n    var range=[undefined,undefined];\n    if (state.React.matrix!==undefined) {\n\trange=state.Matrix.getRange(state,state.React.matrix,colvalues,[rowval]);\n    };\n    //console.log(\"Making data cols.\",colkey,JSON.stringify(colvalues));\n    //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n    var mapFunction= (val,index)=>renderDataCell(classes,state,colkey,colvalues,rowkey,rowval,rowindex,rowwhere,range,mode,plan,val,index);\n    return (<TableRow key={rowindex.toString()}>\n\t    <FirstDataCell classes={classes} key={'0'} rowval={rowval} onclick={onclick} title={rowwhere}/>\n\t    {colvalues.map(mapFunction)}\n\t    </TableRow>);\n};\nfunction renderZeroRow(classes,state,colkey,colvalues,plan) {\n    return (<TableRow key={'1'}>\n\t    <TableCell  key={`0`} state={state} index={'0'}>No data</TableCell>\n\t    </TableRow>);\n};\nfunction DataRows(props) {\n    const { classes, state, plan, colkey, colvalues, rowkey, rowvalues, mode } = props;\n    //console.log(\"Making data cols.\",colkey,JSON.stringify(colvalues));\n    var mapFunction= (val,index)=>dataRow(classes,state,colkey,rowkey,colvalues,mode,plan,val,index);\n    if (rowvalues.length===0) {\n\treturn renderZeroRow(classes,state,colkey,colvalues,plan);\n    } else {\n\treturn (rowvalues.map(mapFunction));\n    }\n}\n// ---------------- HDR\nfunction FirstHdrCell (props) {\n    const { classes, label } = props;\n    //console.log(\"Making first header cell.\",label);\n    return (<TableCell className={classes.hdrCellFill}>{label}</TableCell>);\n}\nfunction renderHdrCell(classes,state,colkey,colvalues,rowkey,plan,val,index) {\n    if ((index-1)%plan.step === 0) {\n\t//console.log(\"HdrCell:\",index,plan.step);\n        var cnt = Math.min(colvalues.length,index+plan.step)-index;\n        var colwhere = state.Database.getColWhere(colkey,colvalues,index,plan.step);\n\tvar onclick=() => state.Navigate.selectKey(state,colkey,colvalues[index],colwhere,cnt);\n\tvar title=colwhere;\n\tvar ref=React.createRef();\n\t//console.log(\"Ref:\",JSON.stringify(ref));\n\tvar cursor=classes.hdrCellEmpty;\n\tif (onclick !== undefined) {\n\t    cursor=classes.hdrCell;\n\t}\n\t//var rotate=undefined;\n\tvar rotate=1;\n//[(onclick !== undefined?classes.hdrCell:classes.hdrCellEmpty),\n\treturn (\n\t\t<TableCell className={(onclick !== undefined?classes.hdrCell:classes.hdrCellEmpty)} onClick={onclick} \n\t                title={title} key={`col-${index}`} >\n\t\t   <CanvasText state={state} index={index} plan={plan} label={val}></CanvasText>\n \t        </TableCell> );\n     } else {\n\treturn null;\n    }\n}\nfunction HdrRow(props) {\n    const { classes, state, plan, colkey, colvalues, rowkey, label } = props; //, rowvalues\n    //console.log(\"Making header row.\",colkey,JSON.stringify(colvalues));\n    var mapFunction= (val,index)=>renderHdrCell(classes,state,colkey,colvalues,rowkey,plan,val,index);\n    return (<TableRow key={0}>\n\t      <FirstHdrCell classes={classes} label={label}/>\n\t      {colvalues.map(mapFunction)}\n\t     </TableRow>);\n}\n// ---------------- Details\nfunction Details(props) {\n    const { classes, state } = props; // classes, \n    var colkey = state.Path.getColKey(state)||\"\";\n    var rowkey = state.Path.getRowKey(state)||\"\";\n    var colvalues = state.Path.filterKeys(state,state.Matrix.values[colkey]||[\"\"]);\n    var rowvalues = state.Path.filterKeys(state,state.Matrix.values[rowkey]||[\"\"]);\n    var cellMode  = state.Show.getCellMode(state);\n    var ncol=colvalues.length + 1;\n    var nrow=rowvalues.length + 1;\n    //DOM.style.font\n    var border=3;\n    var label=rowkey + \"\\\\\" + colkey;\n    var zwidth=getTextWidth(label) + 2 * border;   //props.theme.spacing.unit;\n    var zheight=getTextHeight(label) + 2 * border; //props.theme.spacing.unit;\n    //DOM.style.fontSize\n    var width=0.8*window.innerWidth-zwidth;\n    var height=0.8*window.innerHeight-zheight;\n    var plan=makePlan(colvalues,rowvalues,width,height,border);\n    console.log(\"Details => Width/Height:\",window.innerWidth,window.innerHeight,plan.width,plan.height)\n    //console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(state.Matrix.values[colkey]||[\"\"]));\n    //console.log(\"Rowkey:\",rowkey,\" rowval:\",JSON.stringify(state.Matrix.values[rowkey]||[\"\"]));\n    return (<Table className={classes.table}>\n\t    <TableHead>\n\t      <HdrRow classes={classes} state={state} plan={plan} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues} label={label}/>\n\t    </TableHead>\n        </Table>);\n }\n\n//\t    <TableBody>\n//\t      <DataRows classes={classes} state={state} plan={plan} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues} mode={cellMode}/>\n//\t    </TableBody>\n\n\n\n//<div  style={{width: '100%', height: '100%'}}>\n//</div>\n        \nclass Table2D extends Component {\n    constructor(props) {\n\tsuper(props);\n\t//this.state=props.state;\n    }\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    } \n    updateWindowDimensions = () => {\n        this.width= window.innerWidth;\n\tthis.height=window.innerHeight;\n\tthis.bbx=this.el.getBoundingClientRect();\n\tconsole.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n    element(el) {\n\tif (el !== undefined && el !== null) {\n\t    this.el=el;\n\t    this.bbx=this.el.getBoundingClientRect();\n\t    console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n\t};\n    };\n    render() {\n\tconst { classes, state } = this.props;\n\tconsole.log(\"##### Rendering Table2D.\");\n\treturn (<div ref={el=>{this.element(el)}} className={classes.root}  style={{width: '100%', height: '100%'}}>\n\t\t   <Grid container spacing={24}>\n\t\t      <Grid item xs={12} > \n                         { <Paper className={classes.table}>\n\t\t              <Details state={state} classes={classes} element={this}/>\n                           </Paper>}\n                      </Grid>\n                   </Grid>\n\t        </div>);\n    }\n}\n\nTable2D.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Table2D);\n"]},"metadata":{},"sourceType":"module"}