{"ast":null,"code":"//console.log(\"Loading ShowLib.js\");\nfunction Show() {\n  this.code = {\n    view: {\n      nopath: 0,\n      path: 1\n    },\n    cell: {\n      Sum: 0,\n      Series: 1\n    },\n    layout: {\n      Table: 0,\n      Map: 1\n    }\n  };\n  this.state = {\n    viewMode: 0,\n    // should we show trash contents?\n    cellMode: 0,\n    // sum, series, item\n    layoutMode: 0 // table, map\n\n  };\n\n  this.init = function (state) {\n    var par = \"Show\" + state.Utils.version;\n    state.Utils.init(par, this);\n  };\n\n  this.toggleView = function (state) {\n    if (this.state.viewMode === this.code.view.nopath) {\n      this.state.viewMode = this.code.view.path;\n    }\n\n    if (this.state.viewMode === this.code.view.path) {\n      this.state.viewMode = this.code.view.nopath;\n    }\n\n    ;\n    console.log(\"Show.view:\", this.state.viewMode);\n    this.showPath(state);\n    this.showConfig(state);\n  };\n\n  this.getDim = function (state) {\n    var colkey = state.Path.getColKey(state) || \"\";\n    var rowkey = state.Path.getRowKey(state) || \"\";\n\n    if (colkey !== \"\" && rowkey !== \"\") {\n      return 2;\n    } else if (colkey !== \"\" || rowkey !== \"\") {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  this.setLayoutMode = function (state, mode) {\n    var om = this.state.layoutMode;\n    var o = this.getLayoutMode(state);\n    this.state.layoutMode = mode;\n    var n = this.getLayoutMode(state); //console.log(\"Setting layout mode:\",mode,\":\",o,\"->\",n);\n\n    if (o !== n) {\n      this.showAll(state);\n    } else if (om !== mode) {\n      this.showMode(state);\n    }\n  };\n\n  this.setCellMode = function (state, mode) {\n    var om = this.state.cellMode;\n    var o = this.getCellMode(state);\n    this.state.cellMode = mode;\n    var n = this.getCellMode(state); //console.log(\"Setting cell mode:\",mode,\":\",o,\"->\",n);\n\n    if (o !== n) {\n      this.showAll(state);\n    } else if (om !== mode) {\n      this.showMode(state);\n    }\n  };\n\n  this.getLayoutMode = function (state) {\n    //console.log(\"Getmode init:\",this.state.layoutMode,state.Matrix.cnt);\n    var mode = this.state.layoutMode;\n\n    if (mode === this.code.layout.Map && state.Matrix.cnt > state.Matrix.popSeries) {\n      mode = this.code.layout.Table;\n    }\n\n    return mode;\n  };\n\n  this.getCellMode = function (state) {\n    var mode = this.state.cellMode;\n\n    if (mode === this.code.cell.Single && state.Matrix.cnt > state.Matrix.popSingle) {\n      mode = this.code.cell.Series;\n    }\n\n    if (mode === this.code.cell.Series && state.Matrix.cnt > state.Matrix.popSeries) {\n      mode = this.code.cell.Sum;\n    }\n\n    return mode;\n  };\n\n  this.showMode = function (state) {\n    // show data on screen\n    if (state.React.Mode !== undefined) {\n      state.React.Mode.show(state);\n    }\n  };\n\n  this.showButton = function (state, item, main, sel) {\n    if (main && sel) {\n      item.setAttribute(\"style\", state.Html.getButtonStyle(state.Colors.colors.table, state.Colors.colors.fg, true));\n    } else if (main && !sel) {\n      item.setAttribute(\"style\", state.Html.getButtonStyle(state.Colors.colors.table, state.Colors.colors.fg, false));\n    } else if (!main && sel) {\n      item.setAttribute(\"style\", state.Html.getButtonStyle(state.Colors.colors.rest, state.Colors.colors.fg, true));\n    } else if (!main && !sel) {\n      item.setAttribute(\"style\", state.Html.getButtonStyle(state.Colors.colors.rest, state.Colors.colors.fg, false));\n    }\n  };\n\n  this.showAll = function (state, reload) {\n    // show data on screen\n    //var documentLog = document.getElementById(\"log\");\n    console.log(\"this.Showing data.\");\n\n    if (reload === undefined || reload) {\n      state.Html.setFootnote(state, \"Extracting data.\");\n      setTimeout(function () {\n        state.Database.dbextract(state, function (state, matrix) {\n          state.Html.setFootnote(state, \"Displaying data.\");\n          setTimeout(function () {\n            // callback\n            //console.log(\"Updating matrix.\");\n            state.Path.exportAllKeys(state); //console.log(\"Showing path\");\n\n            this.showPath(state); //console.log(\"Showing trash\");\n\n            this.showConfig(state); //console.log(\"Showing matrix\");\n\n            this.showMatrix(state, matrix); //console.log(\"Pushing URL\");\n\n            state.Utils.pushUrl(state);\n            state.Html.setFootnote(state);\n          }.bind(this), 0);\n        }.bind(this));\n      }.bind(this), 0);\n    } else {\n      console.log(\"Not updating matrix.\");\n      state.Path.exportAllKeys(state);\n      this.showPath(state);\n      this.showConfig(state);\n      state.Html.setFootnote(state);\n    }\n\n    this.showMode(state);\n  };\n\n  this.showPath = function (state) {\n    if (state.React.Path !== undefined) {\n      state.React.Path.showPath(state); // forceUpdate()\n    } else {\n      console.log(\"No react-path available.\");\n    }\n  };\n\n  this.showConfig = function (state) {\n    if (state.React.Config !== undefined) {\n      state.React.Config.show(state); // forceUpdate()\n    } else {\n      console.log(\"No react-config available.\");\n    }\n  };\n\n  this.showMatrix = function (state, matrix) {\n    if (state.React.Dataset !== undefined) {\n      state.React.Dataset.showMatrix(state, matrix);\n    }\n  };\n\n  this.useCanvas = function (state, matrix) {\n    // check if matrix elements have max 1 data\n    // loop over matrix\n    for (var ii in matrix) {\n      for (var jj in matrix[ii]) {\n        if (matrix[ii][jj].cnt > 1) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  this.scale = function (xval, xmin, xmax, ymin, ymax) {\n    if (ymin > ymax) {\n      return ymin + (xval - xmin) * (ymax - ymin) / (xmax - xmin);\n    } else {\n      return (xval - xmin) * (ymax - ymin) / (xmax - xmin);\n    }\n  };\n}\n\n;\nexport default Show;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/ShowLib.js"],"names":["Show","code","view","nopath","path","cell","Sum","Series","layout","Table","Map","state","viewMode","cellMode","layoutMode","init","par","Utils","version","toggleView","console","log","showPath","showConfig","getDim","colkey","Path","getColKey","rowkey","getRowKey","setLayoutMode","mode","om","o","getLayoutMode","n","showAll","showMode","setCellMode","getCellMode","Matrix","cnt","popSeries","Single","popSingle","React","Mode","undefined","show","showButton","item","main","sel","setAttribute","Html","getButtonStyle","Colors","colors","table","fg","rest","reload","setFootnote","setTimeout","Database","dbextract","matrix","exportAllKeys","showMatrix","pushUrl","bind","Config","Dataset","useCanvas","ii","jj","scale","xval","xmin","xmax","ymin","ymax"],"mappings":"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","sourcesContent":["//console.log(\"Loading ShowLib.js\");\n\nfunction Show() {\n    this.code={view:{nopath:0,\n\t\t     path:1,\n\t\t    },\n\t       cell:{Sum:0,\n\t\t     Series:1,\n\t\t    },\n\t       layout:{Table:0,\n\t\t       Map:1,\n\t\t      }\n\t      };\n    this.state={viewMode:0,       // should we show trash contents?\n\t\tcellMode:0,     // sum, series, item\n\t\tlayoutMode:0    // table, map\n\t       };\n    this.init=function(state){\n\tvar par=\"Show\"+state.Utils.version;\n\tstate.Utils.init(par,this);\n    };\n    this.toggleView=function(state) {\n\tif (this.state.viewMode === this.code.view.nopath) {\n\t    this.state.viewMode=this.code.view.path;\n\t} if (this.state.viewMode === this.code.view.path) {\n\t    this.state.viewMode=this.code.view.nopath;\n\t};\n\tconsole.log(\"Show.view:\",this.state.viewMode);\n\tthis.showPath(state);\n\tthis.showConfig(state);\n    };\n    this.getDim=function(state) {\n\tvar colkey=state.Path.getColKey(state)||\"\";\n\tvar rowkey=state.Path.getRowKey(state)||\"\";\n\tif (colkey !== \"\" && rowkey !== \"\") {\n\t    return 2;\n\t} else if (colkey !== \"\" || rowkey !== \"\") {\n\t    return 1;\n\t} else  {\n\t    return 0;\n\t}  \n    };\n    this.setLayoutMode=function(state,mode) {\n\tvar om=this.state.layoutMode;\n\tvar o=this.getLayoutMode(state);\n\tthis.state.layoutMode=mode;\n\tvar n=this.getLayoutMode(state);\n\t//console.log(\"Setting layout mode:\",mode,\":\",o,\"->\",n);\n\tif (o !== n) {\n\t    this.showAll(state);\n\t} else if (om !== mode) {\n\t    this.showMode(state);\n\t}\n    };\n    this.setCellMode=function(state,mode) {\n\tvar om=this.state.cellMode;\n\tvar o=this.getCellMode(state);\n\tthis.state.cellMode=mode;\n\tvar n=this.getCellMode(state);\n\t//console.log(\"Setting cell mode:\",mode,\":\",o,\"->\",n);\n\tif (o !== n) {\n\t    this.showAll(state);\n\t} else if (om !== mode) {\n\t    this.showMode(state);\n\t}\n    };\n    this.getLayoutMode=function(state) {\n\t//console.log(\"Getmode init:\",this.state.layoutMode,state.Matrix.cnt);\n\tvar mode=this.state.layoutMode;\n\tif (mode  === this.code.layout.Map && state.Matrix.cnt > state.Matrix.popSeries) {\n\t    mode=this.code.layout.Table;\n\t}\n\treturn mode;\n    };\n    this.getCellMode=function(state) {\n\tvar mode=this.state.cellMode;\n\tif (mode  === this.code.cell.Single && state.Matrix.cnt > state.Matrix.popSingle) {\n\t    mode=this.code.cell.Series;\n\t}\n\tif (mode  === this.code.cell.Series && state.Matrix.cnt > state.Matrix.popSeries) {\n\t    mode=this.code.cell.Sum;\n\t}\n\treturn mode;\n    };\n    this.showMode=function(state) { // show data on screen\n\tif (state.React.Mode !== undefined) {\n\t    state.React.Mode.show(state);\n\t}\n    };\n    this.showButton=function(state,item,main,sel) {\n\tif (main && sel) {\n\t    item.setAttribute(\"style\", state.Html.getButtonStyle(state.Colors.colors.table,state.Colors.colors.fg,true)  );\n\t} else if (main && ! sel) {\n\t    item.setAttribute(\"style\", state.Html.getButtonStyle(state.Colors.colors.table,state.Colors.colors.fg,false)  );\n\t} else if (! main && sel) {\n\t    item.setAttribute(\"style\", state.Html.getButtonStyle(state.Colors.colors.rest,state.Colors.colors.fg,true)  );\n\t} else if (! main && ! sel) {\n\t    item.setAttribute(\"style\", state.Html.getButtonStyle(state.Colors.colors.rest,state.Colors.colors.fg,false)  );\n\t}\n    };\n    this.showAll=function(state,reload) { // show data on screen\n\t//var documentLog = document.getElementById(\"log\");\n\tconsole.log(\"this.Showing data.\");\n\tif (reload  === undefined || reload) {\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    setTimeout(function() {\n\t\tstate.Database.dbextract(state,function (state,matrix){\n\t\t    state.Html.setFootnote(state,\"Displaying data.\");\n\t\t    setTimeout(function (){  // callback\n\t\t\t//console.log(\"Updating matrix.\");\n\t\t\tstate.Path.exportAllKeys(state);\n\t\t\t//console.log(\"Showing path\");\n\t\t\tthis.showPath(state);\n\t\t\t//console.log(\"Showing trash\");\n\t\t\tthis.showConfig(state);\n\t\t\t//console.log(\"Showing matrix\");\n\t\t\tthis.showMatrix(state,matrix);\n\t\t\t//console.log(\"Pushing URL\");\n\t\t\tstate.Utils.pushUrl(state);\n\t\t\tstate.Html.setFootnote(state);\n\t\t    }.bind(this),0);\n\t\t}.bind(this));\n\t    }.bind(this),0);\n\t} else {\n\t    console.log(\"Not updating matrix.\");\n\t    state.Path.exportAllKeys(state);\n\t    this.showPath(state);\n\t    this.showConfig(state);\n\t    state.Html.setFootnote(state);\n\t}\n\tthis.showMode(state);\n    };\n    this.showPath=function(state) {\n\tif (state.React.Path !== undefined) {\n\t    state.React.Path.showPath(state); // forceUpdate()\n\t} else {\n\t    console.log(\"No react-path available.\");\n\t}\n    };\n    this.showConfig=function(state) {\n\tif (state.React.Config !== undefined) {\n\t    state.React.Config.show(state); // forceUpdate()\n\t} else {\n\t    console.log(\"No react-config available.\");\n\t}\n    };\n    this.showMatrix=function(state,matrix) {\n\tif (state.React.Dataset !== undefined) {\n\t    state.React.Dataset.showMatrix(state,matrix);\n\t}\n    };\n    this.useCanvas=function(state,matrix) {    // check if matrix elements have max 1 data\n\t// loop over matrix\n\tfor (var ii in matrix) {\n\t    for (var jj in matrix[ii]) {\n\t\tif (matrix[ii][jj].cnt > 1) {\n\t\t    return false;\n\t\t}\n\t    }\n\t}\n\treturn true;\n    };\n    this.scale=function(xval,xmin,xmax,ymin,ymax) {\n\tif (ymin>ymax) {\n\t    return ymin + (xval-xmin)*(ymax-ymin)/(xmax-xmin);\n\t} else {\n\t    return (xval-xmin)*(ymax-ymin)/(xmax-xmin);\n\t}\n    }\n};\nexport default Show;\n"]},"metadata":{},"sourceType":"module"}