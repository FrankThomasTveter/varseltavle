{"ast":null,"code":"//console.log(\"Loading PathLib.js\");\nfunction Path() {\n  this.keys = {\n    path: [],\n    // selected keys\n    other: [] // keys available for selection\n\n  };\n  this.other = {\n    table: [],\n    // table keys\n    rest: [] // keys available for table\n\n  };\n  this.trash = []; // remaining valid keys\n\n  this.select = {\n    val: {}\n  }; // current selection criteria\n\n  this.where = {}; // current cache for where expressions\n\n  this.filter = {\n    val: {}\n  }; // initial filter for data...\n\n  this.ignore = [\"max\", \"min\", \"minlat\", \"minlon\", \"maxlat\", \"maxlon\", \"cnt\", \"level\"]; // only visible in 1D and 0D tables\n\n  this.type = {\n    path: {\n      ityp: -1,\n      ptyp: \"path\"\n    },\n    eye: {\n      ityp: 0,\n      ptyp: \"eye\"\n    },\n    table: {\n      ityp: 1,\n      ptyp: \"table\"\n    },\n    rest: {\n      ityp: 2,\n      ptyp: \"rest\"\n    },\n    trash: {\n      ityp: 3,\n      ptyp: \"trash\"\n    },\n    trashRest: {\n      ityp: 4,\n      ptyp: \"trashRest\"\n    },\n    row: {\n      ityp: 5,\n      ptyp: \"row\"\n    },\n    col: {\n      ityp: 6,\n      ptyp: \"col\"\n    },\n    item: {\n      ityp: 7,\n      ptyp: \"item\"\n    }\n  };\n  this.order = undefined; // how to order data\t    \n\n  this.init = function (state) {\n    var par = \"Path\";\n    state.Utils.init(par, this);\n  };\n\n  this.cleanSelect = function (state) {\n    var pkeys = state.Path.keys.path;\n    var keys = Object.keys(state.Path.select.val);\n    var lenk = keys.length;\n\n    for (var ii = 0; ii < lenk; ii++) {\n      var key = keys[ii];\n\n      if (pkeys.indexOf(key) === -1) {\n        state.Path.select.val[key] = undefined;\n      }\n    }\n  };\n\n  this.setFilter = function (state) {\n    state.Path.cleanSelect(state);\n    this.filter.val = state.Utils.cp(state.Path.select.val);\n    state.Utils.pushUrl(state);\n    console.log(\"Setting filter.\");\n  };\n\n  this.getSnapshot = function (state) {\n    // store state\n    return {\n      keys: state.Utils.cp(state.Path.keys),\n      other: state.Utils.cp(state.Path.other),\n      select: state.Utils.cp(state.Path.select),\n      order: state.Utils.cp(state.Path.order)\n    };\n  };\n\n  this.setSnapshot = function (state, snapshot) {\n    // store state\n    state.Utils.restore(state.Path, snapshot);\n  };\n\n  this.toggleSelect = function (state, key, val) {\n    var vals = state.Path.select.val[key];\n    console.log(\"toggleSelect:\", key, val, JSON.stringify(vals));\n\n    if (vals !== undefined) {\n      var vid = vals.indexOf(val);\n\n      if (vid !== -1) {\n        // remove item\n        vals.splice(vid, 1);\n\n        if (vals.length === 0) {\n          // can never be totally empty...\n          vals.push(\"MAX(\" + key + \")\");\n        }\n\n        state.Path.select.val[key] = vals;\n      } else {\n        state.Path.select.val[key].push(val); // add item\n      }\n\n      this.setWhere(state, key);\n      state.Show.showPath(state);\n      console.log(\"Finally Vals:\", key, JSON.stringify(state.Path.select.val[key]));\n    }\n  };\n\n  this.getTitle = function (state) {\n    var title = \"\";\n    var keys = state.Path.keys.path;\n    var parse;\n    keys.forEach(function (key, index) {\n      var vals = state.Path.select.val[key]; //console.log(\"   select:\",key,JSON.stringify(vals));\n\n      if (vals === undefined) {\n        vals = [];\n      }\n\n      ;\n      var lenv = vals.length;\n\n      for (var ii = 0; ii < lenv; ii++) {\n        var val = vals[ii];\n\n        if (title !== \"\") {\n          title = title + \" | \";\n        }\n\n        ;\n\n        if (val === \"null\") {\n          title = title + key + \" is NULL\";\n        } else if (val === \"MAX(\" + key + \")\") {\n          // this is a function\n          parse = state.Utils.getMax(state.Database.values[key]);\n\n          if (parse === undefined) {\n            title = title + key + \" is NULL\";\n          } else {\n            title = title + parse;\n          }\n\n          ;\n        } else if (val === \"MIN(\" + key + \")\") {\n          // this is a function\n          parse = state.Utils.getMin(state.Database.values[key]);\n\n          if (parse === undefined) {\n            title = title + key + \" is NULL\";\n          } else {\n            title = title + parse;\n          }\n\n          ;\n        } else {\n          title = title + val;\n        }\n\n        ;\n      }\n    }); //console.log(\"Pathlib getTitle keys:\",JSON.stringify(keys),title);\n\n    return title;\n  };\n\n  this.makeWhere = function (state) {\n    state.Path.keys.path.forEach(function (item, index) {\n      this.setWhere(state, item);\n    }.bind(this));\n  };\n\n  this.setWhere = function (state, key) {\n    var where = this.parseWhere(state, key);\n    state.Path.where[key] = where;\n  };\n\n  this.parseWhere = function (state, key) {\n    var parse;\n    var where = \"\";\n    var vals = state.Path.select.val[key];\n\n    if (vals === undefined) {\n      vals = [];\n    }\n\n    ;\n    var lenv = vals.length;\n\n    for (var ii = 0; ii < lenv; ii++) {\n      var val = vals[ii];\n\n      if (where !== \"\") {\n        where = where + \" OR \";\n      }\n\n      ;\n\n      if (val === \"null\") {\n        where = where + key + \" is NULL\";\n      } else if (val === \"MAX(\" + key + \")\") {\n        // this is a function\n        parse = state.Utils.getMax(state.Database.values[key]); //console.log(\"parseWhere:\",key,parse,JSON.stringify(state.Database.values[key]));\n\n        if (parse === undefined) {\n          where = where + key + \" is NULL\";\n        } else {\n          where = where + key + \"='\" + parse + \"'\";\n        }\n\n        ;\n      } else if (val === \"MIN(\" + key + \")\") {\n        // this is a function\n        parse = state.Utils.getMin(state.Database.values[key]);\n\n        if (parse === undefined) {\n          where = where + key + \" is NULL\";\n        } else {\n          where = where + key + \"='\" + parse + \"'\";\n        }\n\n        ;\n      } else {\n        where = where + key + \"='\" + val + \"'\";\n      }\n    }\n\n    ;\n    return where;\n  };\n\n  this.makeCnt = function (state, key) {\n    return state.Path.select.val[key].length;\n  };\n\n  this.getOrderValues = function (state, skey) {\n    if (state.Path.order === undefined) {\n      state.Path.order = {};\n    }\n\n    ;\n\n    if (state.Path.order[skey] === undefined) {\n      //console.log(\"Copying:\",JSON.stringify(Matrix.values[skey]));\n      state.Path.order[skey] = state.Utils.cp(state.Matrix.values[skey]);\n    } else {\n      var vals = state.Matrix.values[skey];\n      var plen = vals;\n\n      for (var ii = 0; ii < plen; ii++) {\n        var val = vals[ii];\n\n        if (state.Path.order[skey].indexOf(val) === -1) {\n          state.Path.order[skey].push(val);\n        }\n      }\n\n      ;\n    }\n\n    ;\n    return state.Path.order[skey];\n  };\n\n  this.bumpOrder = function (state, skey, value) {\n    console.log(\"Bump order:\", skey, value);\n    var vid = state.Path.order[skey].indexOf(value);\n\n    if (vid !== -1 && vid > 0) {\n      var src = state.Path.order[skey].splice(vid, 1); // remove from array   \n\n      state.Utils.spliceArray(state.Path.order[skey], vid - 1, 0, src);\n    }\n\n    ;\n    state.Show.showConfig(state);\n  };\n\n  this.makePath = function (state) {\n    // note that not all keys are present in the data!\n    //console.log(\"Entering makepath.\",JSON.stringify(this.keys));\n    var ii, key;\n    var pathSet = [];\n\n    if (this.keys.path === undefined) {\n      this.keys.path = [];\n    }\n\n    ;\n\n    if (this.keys.other === undefined) {\n      this.keys.other = [];\n    }\n\n    ;\n\n    if (this.trash === undefined) {\n      this.trash = [];\n    }\n\n    ;\n\n    if (this.keys.path.length > 0 || this.keys.other.length > 0 || this.trash.length > 0) {\n      // remove duplicates\n      //console.log(\"Filtering.\");\n      var olen;\n      this.keys.path = this.keys.path.filter(this.Unique);\n      this.keys.other = this.keys.other.filter(this.Unique);\n      this.trash = this.trash.filter(this.Unique); //console.log(\"setup:\",JSON.stringify(setup));\n      //console.log(\"Remove invalid keys from path.\");\n      // remove invalid keys from path\n\n      var plen = this.keys.path.length;\n\n      for (ii = 0; ii < plen; ii++) {\n        key = this.keys.path[ii];\n\n        if (state.Database.keyCnt[key] === undefined) {\n          this.keys.path.splice(ii, 1);\n          ii = ii - 1;\n          plen = plen - 1;\n        }\n      } //console.log(\"Remove invalid keys from other.\");\n      // remove invalid keys from other\n\n\n      olen = this.keys.other.length;\n\n      for (ii = 0; ii < olen; ii++) {\n        key = this.keys.other[ii];\n\n        if (state.Database.keyCnt[key] === undefined) {\n          this.other.rest.splice(ii, 1);\n          ii = ii - 1;\n          olen = olen - 1;\n        }\n      } //console.log(\"Remove invalid keys from trash.\");\n      // remove invalid keys from trash\n\n\n      olen = this.trash.length;\n\n      for (ii = 0; ii < olen; ii++) {\n        key = this.trash[ii];\n\n        if (state.Database.keyCnt[key] === undefined) {\n          this.trash.splice(ii, 1);\n          ii = ii - 1;\n          olen = olen - 1;\n        }\n      } //console.log(\"Update trash with keys.\");\n      // we already have a path, update trash with new keys\n\n\n      for (key in state.Database.keyCnt) {\n        if (this.keys.path.indexOf(key) === -1 && this.keys.other.indexOf(key) === -1 && this.trash.indexOf(key) === -1 && state.Utils.missing(this.ignore, key)) {\n          pathSet[key] = \"trash\";\n          this.select.val[key] = \"\";\n          this.where[key] = \"\";\n          this.trash.push(key);\n        }\n      }\n    } else {\n      // new path...\n      console.log(\"New path\"); // ...define this.select.val for all keys in input data\n\n      for (key in state.Database.keyCnt) {\n        pathSet[key] = \"data\";\n      }\n\n      ;\n      this.keys.path = [];\n      this.other.table = [];\n      this.other.rest = [];\n      this.select.val = {}; // no values are set so far\n\n      this.where = {};\n      console.log(\"Copy default trash keys.\", JSON.stringify(state.Default.trash)); // copy default trash keys (that are used) to trash...\n\n      if (state.Default.trash !== undefined) {\n        var tlen = state.Default.trash.length;\n\n        for (ii = 0; ii < tlen; ii++) {\n          key = state.Default.trash[ii];\n\n          if (pathSet[key] !== undefined) {\n            if (state.Utils.missing(this.trash, key)) {\n              this.trash.push(key);\n            }\n\n            ;\n            pathSet[key] = undefined; // ignore key from now on...\n          }\n        } //console.log(\"Pathset:\",JSON.stringify(pathSet),JSON.stringify(state.Default.trash));\n\n      }\n\n      ; //console.log(\"Copy default other keys.\");\n\n      console.log(\"makePath A:\", JSON.stringify(state.Path.keys), JSON.stringify(state.Path.other), JSON.stringify(state.Path.trash)); // console.log(\"Added trash:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n      // copy default other keys (that are used) to other...\n\n      if (state.Default.other !== undefined) {\n        var klen = state.Default.other.length;\n\n        for (ii = 0; ii < klen; ii++) {\n          key = state.Default.other[ii];\n\n          if (pathSet[key] !== undefined) {\n            // key not present in input data\n            if (state.Utils.missing(this.keys.other, key)) {\n              this.keys.other.push(key);\n            }\n\n            ;\n            pathSet[key] = \"found\";\n          }\n        }\n      }\n\n      console.log(\"makePath B:\", JSON.stringify(state.Path.keys), JSON.stringify(state.Path.other), JSON.stringify(state.Path.trash)); //console.log(\"Add missing keys.\");\n      // add missing keys to path\n\n      for (key in state.Database.keyCnt) {\n        if (state.Utils.missing(this.ignore, key)) {\n          if (pathSet[key] === \"data\") {\n            if (state.Utils.missing(this.keys.other, key)) {\n              this.keys.other.push(key);\n            }\n\n            ; //console.log(\"Added key:\",key);\n\n            pathSet[key] = \"added\";\n          }\n        }\n\n        ;\n      }\n\n      ; // add undefined values in values\n      // for (key in state.Database.keyCnt) {\n      //     if (state.Database.keyCnt[key].cnt<state.Database.cnt) {\n      // \tstate.Database.values[key].push(undefined);\n      //     }\n      // }\n      // // sort sub-path according to count...\n      // this.keys.other=this.keys.other.sort(function(state,a, b) {\n      //     if (state.Database.values[a]  === undefined) {\n      // \treturn -1;\n      //     } else if (state.Database.values[b]  === undefined) {\n      // \treturn 1;\n      //     } else {\n      // \treturn state.Database.values[a].length - state.Database.values[b].length\n      //     }\n      // });\n\n      console.log(\"makePath C:\", JSON.stringify(state.Path.keys), JSON.stringify(state.Path.other), JSON.stringify(state.Path.trash)); //console.log(\"Push other keys to table and rest.\");\n\n      var glen = this.keys.other.length;\n\n      for (ii = 0; ii < glen; ii++) {\n        key = this.keys.other[ii];\n\n        if (ii < 2) {\n          this.other.table.push(key);\n        } else {\n          this.other.rest.push(key);\n        }\n      }\n    } //console.log(\"makePath D:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n\n\n    state.Navigate.reset(state); //console.log(\"keys:\",JSON.stringify(state.Database.values));\n    //console.log(\"Completed makepath.\");\n  };\n\n  this.getIndex = function (state, trg) {\n    return this.keys.path.indexOf(trg);\n  };\n\n  this.exportAllKeys = function (state) {\n    // export keys from \"all\" to \"rest\"\n    this.other.table = [];\n    this.other.rest = [];\n    var jj = 0;\n    var key, ii;\n\n    if (this.keys.other !== undefined) {\n      var olen = this.keys.other.length;\n\n      for (ii = 0; ii < olen; ii++) {\n        key = this.keys.other[ii];\n\n        if (state.Matrix.keyCnt[key] !== undefined && state.Matrix.keyCnt[key] > 0) {\n          if (jj < 2) {\n            this.other.table.push(key);\n            jj = jj + 1;\n          } else {\n            this.other.rest.push(key);\n          }\n        }\n      }\n\n      ;\n    } //this.sortTableKeys(state);\n    //console.log(\"Exported:\",JSON.stringify(this.keys.other),JSON.stringify(this.other));\n\n  }; // check if keys are inter-dependent, (\"redundant\", \"control\", \"dependent\", \"unknown\") \n\n\n  this.compareKeys = function (state, where, keys) {\n    var key; //var where = state.Database.getWhere(state);\n\n    var ret = {\n      dep: {},\n      val: {}\n    };\n    var hits = {};\n    var maxh = {};\n    var docs = state.Database.getCntDocs(state, where, keys); // current table keys\n\n    var slen = keys.length;\n    var dlen = docs.length;\n\n    for (var ii = 0; ii < dlen; ii++) {\n      var doc = docs[ii];\n\n      for (var jj = 0; jj < slen; jj++) {\n        key = keys[jj];\n\n        if (doc[key] !== undefined) {\n          var val = doc[key];\n          ret.val[key] = val;\n\n          if (hits[key] === undefined) {\n            hits[key] = {};\n          }\n\n          hits[key][val] = 1 + (hits[key][val] || 0); //console.log(\"Found:\",key,val,hits[key][val]);\n\n          if (hits[key][val] > (maxh[key] || 0)) {\n            maxh[key] = hits[key][val];\n          }\n        }\n\n        ;\n      }\n    }\n\n    ;\n\n    for (var kk = 0; kk < slen; kk++) {\n      key = keys[kk];\n\n      if (maxh[key] !== undefined) {\n        if (maxh[key] === 1) {\n          // remove the other key\n          ret.dep[key] = \"control\";\n        } else if (maxh[key] === dlen) {\n          // remove key from table\n          ret.dep[key] = \"redundant\";\n        } else {\n          ret.dep[key] = \"dependent\";\n        }\n      } else {\n        ret.dep[key] = \"unknown\";\n      }\n    }\n\n    ;\n    return ret;\n  };\n\n  this.getDestination = function (state, keys, dependancy) {\n    var key;\n    var destination = {};\n    var slen = keys.length;\n\n    for (var jj = 0; jj < slen; jj++) {\n      key = keys[jj];\n\n      if (dependancy.dep[key] === \"control\") {\n        for (var rr = 0; rr < slen; rr++) {\n          var rkey = keys[rr];\n\n          if (dependancy.dep[rkey] === \"control\") {\n            // do not remove every \"control\" variable\n            if (rr > jj) {\n              destination[rkey] = \"path\";\n            }\n\n            ;\n          } else {\n            // remove all other variables\n            if (rr !== jj) {\n              destination[rkey] = \"trash\";\n            }\n\n            ;\n          }\n        }\n      }\n    }\n\n    var cnt = 0;\n\n    for (var kk = slen - 1; kk >= 0; kk--) {\n      key = keys[kk];\n\n      if (dependancy[key] === \"redundant\") {\n        // leave at least one redundant variable\n        cnt = cnt + 1;\n\n        if (cnt < slen) {\n          destination[key] = \"path\";\n        }\n      }\n    }\n\n    ;\n    return destination;\n  };\n\n  this.getNextTableCandidate = function (state, where, key, cand) {\n    var clen = cand.length;\n\n    for (var cc = 0; cc < clen; cc++) {\n      var ckey = cand[cc];\n      var table = [key, ckey];\n      var dependancy = this.compareKeys(state, where, table);\n      var destination = this.getDestination(state, table, dependancy);\n\n      if (destination[ckey] === undefined) {\n        cand.splice(cc, 1);\n        return ckey;\n      }\n    }\n\n    return; // no candidate\n  };\n\n  this.disposeTableKey = function (state, key, dependancy, destination) {\n    var bdone;\n\n    if (destination[key] === \"path\") {\n      // trash key\n      bdone = false;\n      state.Utils.moveToArray(state.Path.keys.other, state.Path.keys.path, key, -1);\n      var val = dependancy.val[key];\n      state.Path.select.val[key] = [val];\n      state.Path.where[key] = key + '=\"' + val + '\"'; //this.order[key]=order;\n    } else if (destination[key] === \"trash\") {\n      // trash key\n      bdone = false;\n      state.Utils.moveToArray(state.Path.keys.other, state.Path.trash, key, 0);\n    }\n\n    ;\n    return bdone;\n  };\n\n  this.checkTableKeys = function (state) {\n    var where = state.Database.getWhere(state);\n    state.Matrix.initKeyCnt(state);\n    state.Matrix.mapKeyCnt(state, where, 0, state.Path.keys.other); // possible table keys (no undefined)\n\n    state.Path.exportAllKeys(state);\n    console.log(\"checkTableKeys:\", JSON.stringify(state.Path.keys));\n    var table = state.Path.other.table; // current table-keys\n\n    var cand = state.Path.other.rest; // current candidates\n\n    var bdone = table.length < 2;\n\n    do {\n      //check current table-keys\n      var dependancy = this.compareKeys(state, where, table);\n      var destination = this.getDestination(state, table, dependancy); // check if first key is invalid\n\n      var fkey = table[0];\n      var skey = table[1];\n      var fdest = destination[fkey];\n      var sdest = destination[skey];\n      console.log(\"Looping:\", fkey, fdest, skey, sdest);\n\n      if (sdest !== undefined) {\n        // second key is in-valid\n        this.disposeTableKey(state, skey, dependancy, destination); // get next candidate\n\n        var ckey = this.getNextTableCandidate(state, where, fkey, cand);\n\n        if (ckey !== undefined) {\n          console.log(\"Found candidate:\", fkey, ckey, \" removing \", skey);\n          table = [fkey, ckey];\n          bdone = false;\n        } else {\n          // no more candidates\n          bdone = true;\n        }\n      } else if (fdest === undefined) {\n        // first key is in-valid\n        // get next candidate\n        var ckey = this.getNextTableCandidate(state, where, skey, cand);\n\n        if (ckey !== undefined) {\n          console.log(\"Found candidate:\", skey, ckey, \" removing \", fkey);\n          this.disposeTableKey(state, fkey, dependancy, destination);\n          table = [skey, ckey];\n          bdone = false;\n        } else {\n          // no more candidates\n          bdone = true;\n        }\n      } else {\n        // both keys are valid\n        console.log(\"Keys ok:\", fkey, skey);\n        bdone = true;\n      }\n\n      if (!bdone) {\n        state.Path.exportAllKeys(state);\n      }\n    } while (!bdone); //console.log(\"this.checkTableKeys Done.\",JSON.stringify(state.Path.other.table));\n\n  };\n\n  this.checkTableKeysOld = function (state) {\n    var ret = [];\n    var where = state.Database.getWhere(state);\n    state.Matrix.initKeyCnt(state);\n    state.Matrix.mapKeyCnt(state, where, 0, state.Path.keys.other); // possible table keys (no undefined)\n\n    state.Path.exportAllKeys(state);\n    console.log(\"this.checkTableKeys Entering.\", JSON.stringify(state.Path.keys)); //var keys=state.Path.other.table;\n\n    var bdone = state.Path.other.table.length > 1; //var order=state.Utils.cp(state.Path.keys.other);\n\n    do {\n      console.log(\"this.checkTableKeys Looping.\", state.Path.other.rest.length);\n      bdone = true;\n\n      if (state.Path.other.table.length > 1) {\n        // check for number of column values\n        var dependancy = this.compareKeys(state, where, state.Path.other.table);\n        var destination = this.getDestination(state, state.Path.other.table, dependancy);\n        console.log(\"Rm:\", JSON.stringify(dependancy), JSON.stringify(destination));\n        var slen = state.Path.other.table.length;\n\n        for (var jj = 0; jj < slen; jj++) {\n          var key = state.Path.other.table[jj];\n\n          if (destination[key] === \"path\") {\n            // trash key\n            bdone = false;\n            state.Utils.moveToArray(state.Path.keys.other, state.Path.keys.path, key, -1);\n            var val = dependancy.val[key];\n            state.Path.select.val[key] = [val];\n            state.Path.where[key] = key + '=\"' + val + '\"'; //this.order[key]=order;\n          } else if (destination[key] === \"trash\") {\n            // trash key\n            bdone = false;\n            state.Utils.moveToArray(state.Path.keys.other, state.Path.trash, key, 0);\n          }\n\n          ;\n        }\n\n        if (!bdone) {\n          state.Path.exportAllKeys(state);\n        }\n      }\n\n      ;\n    } while (!bdone); //console.log(\"this.checkTableKeys Done.\",JSON.stringify(state.Path.other.table));\n\n\n    return ret;\n  }; // get X-priority, {colx,coly1,coly2...)\n\n\n  this.sortTableKeys = function (state) {\n    // make priority index\n    var arr = state.Utils.cp(this.other.table);\n    var pri = state.Layout.getPriorityIndex(state, arr); // sort the array according to priority\n\n    this.other.table = arr.sort(function (a, b) {\n      if (a === \"\") {\n        return 1;\n      } else if (b === \"\") {\n        return -1;\n      } else if (pri[a] < pri[b]) {\n        return 1;\n      } else if (pri[a] > pri[b]) {\n        return -1;\n      } else {\n        return 0;\n      }\n    }); //console.log(\"TableKeys:\",JSON.stringify(this.other.table),\n    //\t\" Pri:\",JSON.stringify(state.Layout.priority),\n    //\t\" P:\",JSON.stringify(pri));\n\n    return;\n  };\n\n  this.keyVal = function (state, key) {\n    if (this.select.val[key] !== undefined && this.select.val[key] !== null && this.select.val[key] !== \"\") {\n      return this.select.val[key];\n    } else {\n      return;\n    }\n  };\n\n  this.keyValOk = function (state, val) {\n    var ok = true;\n    return ok;\n  };\n\n  this.makeOrder = function (state, typ, order) {\n    // rearrange setup according to order...\n    if (order !== undefined) {\n      var buff = [];\n\n      for (var kk = 0; kk < order.length; kk++) {\n        if (order[kk] !== \"\") {\n          var sin = this.keys[typ].indexOf(order[kk]);\n\n          if (sin !== -1) {\n            var src = this.keys[typ].splice(sin, 1); // remove from path\n\n            buff = buff.concat(src);\n          }\n        }\n      }\n\n      state.Utils.spliceArray(this.keys[typ], 0, 0, buff);\n    }\n  };\n\n  this.moveKey = function (state, styp, skey, ttyp, tid) {\n    var sid = this.keys[styp].indexOf(skey);\n\n    if (sid !== -1) {\n      var src = this.keys[styp].splice(sid, 1); // remove from path\n\n      if (tid === undefined || tid === -1) {\n        this.keys[ttyp] = this.keys[ttyp].concat(src); // last position\n      } else {\n        state.Utils.spliceArray(this.keys[ttyp], tid, 0, src);\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveKeys = function (state, styp, skeys, ttyp, tid) {\n    var len = skeys.length;\n\n    for (var ss = 0; ss < len; ss++) {\n      var skey = skeys[ss];\n      var sid = this.keys[styp].indexOf(skey);\n\n      if (sid !== -1) {\n        var src = this.keys[styp].splice(sid, 1); // remove from path\n\n        if (tid === undefined || tid === -1) {\n          this.keys[ttyp] = this.keys[ttyp].concat(src); // last position\n        } else {\n          state.Utils.spliceArray(this.keys[ttyp], tid, 0, src);\n        }\n      }\n    }\n  };\n\n  this.swapTableKey = function (state, skey, tkey) {\n    var sid = this.other.table.indexOf(skey);\n    var tid = this.other.table.indexOf(tkey);\n\n    if (tid !== sid && this.other.table.length > 1) {\n      var tin2 = this.keys.other.indexOf(this.other.table[1]);\n      var tkey2 = this.keys.other.splice(tin2, 1); // remove from array\n\n      state.Utils.spliceArray(this.keys.other, 0, 0, tkey2); //console.log(\"Swapped:\",tkey2,tkey,JSON.stringify(this.keys.other));\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.delTableKey = function (state, key) {\n    var secondkey;\n    var secondind;\n    var sid = this.keys.other.indexOf(key);\n\n    if (sid !== -1) {\n      var sin = this.other.table.indexOf(key);\n      var save = sin === 0;\n\n      if (save) {\n        secondkey = this.other.table[1];\n        secondind = this.pullKey(state, \"other\", secondkey);\n      }\n\n      this.pullKey(state, \"other\", key);\n\n      if (save && secondind !== undefined && secondind !== -1) {\n        this.pushKey(state, \"other\", secondkey, secondind);\n      }\n\n      return sin;\n    }\n  };\n\n  this.moveTableKey = function (state, skey, ttyp, tid) {\n    var sid = this.keys.other.indexOf(skey);\n\n    if (sid !== -1) {\n      //var sin=\n      this.delTableKey(state, skey);\n\n      if (tid === undefined || tid === -1) {\n        this.keys[ttyp] = this.keys[ttyp].concat(skey); // last position\n      } else {\n        state.Utils.spliceArray(this.keys[ttyp], tid, 0, skey);\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveKey2Table = function (state, styp, skey, tkey) {\n    //console.log(\"MoveKey2Table:\",JSON.stringify(this.keys));\n    var tid = this.keys.other.indexOf(tkey);\n    var sid = this.keys[styp].indexOf(skey);\n\n    if (tid !== -1 && sid !== -1 && skey !== tkey) {\n      // exists and is not the same\n      this.keys[styp][sid] = tkey;\n      this.keys.other[tid] = skey;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveTrash2Table = function (state, tkey) {\n    var secondkey;\n    var secondind;\n    var tid = this.other.table.indexOf(tkey);\n\n    if (tid !== -1) {\n      var save = tid === 0;\n\n      if (save) {\n        secondkey = this.other.table[1];\n        secondind = this.pullKey(state, \"other\", secondkey);\n      }\n\n      ;\n      var tin = this.keys.other.indexOf(tkey);\n      this.moveTrash(state, \"other\", tin + 1);\n\n      if (save && secondind !== undefined && secondind !== -1) {\n        this.pushKey(state, \"other\", secondkey, secondind);\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveTrash = function (state, ttyp, tin) {\n    state.Utils.spliceArray(this.keys[ttyp], tin, 0, this.trash);\n    this.trash = [];\n  };\n\n  this.moveAllKey = function (state, styp, skey, ttyp, tid) {\n    var lenp = this.keys[styp].length;\n    var sid = this.keys[styp].indexOf(skey);\n\n    if (sid !== -1) {\n      var src = this.keys[styp].splice(sid, lenp - sid);\n      state.Utils.spliceArray(this.keys[ttyp], tid, 0, src);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveAllFirst = function (state, ttyp, tin) {\n    var tlen = this.keys[ttyp].length;\n    var src = this.keys[ttyp].splice(tin, tlen - tin);\n    state.Utils.spliceArray(this.keys[ttyp], 0, 0, src);\n  };\n\n  this.filterKeys = function (state, arr) {\n    var out = [];\n    var alen = arr.length;\n\n    for (var ii = 0; ii < alen; ii++) {\n      var val = arr[ii];\n\n      if (this.keyValOk(state, val)) {\n        out.push(val);\n      }\n    } //console.log(\"CheckOk \",JSON.stringify(arr),\"->\",JSON.stringify(out));\n\n\n    return out;\n  };\n\n  this.pullArrayKey = function (state, array, key) {\n    var sin = array.indexOf(key);\n\n    if (sin !== -1) {\n      //var src=\n      array.splice(sin, 1); // remove from path\n    }\n\n    ;\n    return sin;\n  }; //////////////////////////////// COL/ROW FUNCTIONS ///////////////////////\n\n\n  this.getColKey = function (state) {\n    var arr = state.Utils.cp(this.other.table);\n    var pri = state.Layout.getPriorityIndex(state, arr);\n\n    if (state.Show.getLayoutMode(state) === state.Show.code.layout.Map) {\n      return \"_lon\";\n    } else if (pri[this.other.table[0]] >= pri[this.other.table[1]]) {\n      return this.other.table[0];\n    } else {\n      return this.other.table[1];\n    }\n  };\n\n  this.getRowKey = function (state) {\n    var arr = state.Utils.cp(this.other.table);\n    var pri = state.Layout.getPriorityIndex(state, arr);\n\n    if (state.Show.getLayoutMode(state) === state.Show.code.layout.Map) {\n      return \"_lat\";\n    } else if (pri[this.other.table[0]] >= pri[this.other.table[1]]) {\n      return this.other.table[1];\n    } else {\n      return this.other.table[0];\n    }\n  };\n\n  this.pushKey = function (state, typ, key, ind) {\n    if (key !== undefined && key !== \"\") {\n      state.Utils.spliceArray(this.keys[typ], ind, 0, key);\n    }\n  };\n\n  this.pullKey = function (state, typ, key) {\n    var sin = this.keys[typ].indexOf(key);\n\n    if (sin !== -1) {\n      var src = this.keys[typ].splice(sin, 1); // remove from path\n\n      if (src !== key) {\n        console.log(\"System error:\", src, key);\n      }\n\n      return sin;\n    }\n\n    ;\n  };\n\n  this.pushColKey = function (state, key) {\n    if (key !== undefined && key !== \"\") {\n      state.Utils.spliceArray(this.keys.other, 0, 0, key);\n    }\n  };\n\n  this.pushRowKey = function (state, key) {\n    if (key !== undefined && key !== \"\") {\n      state.Utils.spliceArray(this.keys.other, 1, 0, key);\n    }\n  };\n\n  this.checkNewPath = function (state, styp, skey) {\n    // check if values are defined for path\n    var ok, ii;\n    var sid = this.keys.path.indexOf(skey);\n\n    if (styp === this.type.table.ptyp) {\n      ok = true;\n      var lent = this.other.table.length - 1;\n\n      if (sid !== undefined) {\n        lent = sid + 1;\n      }\n\n      ;\n\n      for (ii = 0; ii <= lent; ii++) {\n        var key = this.other.table[ii];\n\n        if (this.keyVal(state, key) === undefined) {\n          ok = false;\n        }\n      }\n    } else if (styp === this.type.rest.ptyp) {\n      ok = this.checkNewPath(state, this.type.table.ptyp);\n\n      if (ok) {\n        var lenr = this.other.rest.length - 1;\n\n        if (sid !== undefined) {\n          lenr = sid + 1;\n        }\n\n        ;\n\n        for (ii = 0; ii <= lenr; ii++) {\n          key = this.other.rest[ii];\n\n          if (this.keyVal(state, key) === undefined) {\n            ok = false;\n          }\n        }\n      }\n    }\n\n    return ok;\n  }; //values[key]=values[key].filter(this.Unique);\n\n\n  this.Unique = function (value, index, self) {\n    return self.indexOf(value) === index;\n  };\n}\n\n;\nexport default Path;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/PathLib.js"],"names":["Path","keys","path","other","table","rest","trash","select","val","where","filter","ignore","type","ityp","ptyp","eye","trashRest","row","col","item","order","undefined","init","state","par","Utils","cleanSelect","pkeys","Object","lenk","length","ii","key","indexOf","setFilter","cp","pushUrl","console","log","getSnapshot","setSnapshot","snapshot","restore","toggleSelect","vals","JSON","stringify","vid","splice","push","setWhere","Show","showPath","getTitle","title","parse","forEach","index","lenv","getMax","Database","values","getMin","makeWhere","bind","parseWhere","makeCnt","getOrderValues","skey","Matrix","plen","bumpOrder","value","src","spliceArray","showConfig","makePath","pathSet","olen","Unique","keyCnt","missing","Default","tlen","klen","glen","Navigate","reset","getIndex","trg","exportAllKeys","jj","compareKeys","ret","dep","hits","maxh","docs","getCntDocs","slen","dlen","doc","kk","getDestination","dependancy","destination","rr","rkey","cnt","getNextTableCandidate","cand","clen","cc","ckey","disposeTableKey","bdone","moveToArray","checkTableKeys","getWhere","initKeyCnt","mapKeyCnt","fkey","fdest","sdest","checkTableKeysOld","sortTableKeys","arr","pri","Layout","getPriorityIndex","sort","a","b","keyVal","keyValOk","ok","makeOrder","typ","buff","sin","concat","moveKey","styp","ttyp","tid","sid","moveKeys","skeys","len","ss","swapTableKey","tkey","tin2","tkey2","delTableKey","secondkey","secondind","save","pullKey","pushKey","moveTableKey","moveKey2Table","moveTrash2Table","tin","moveTrash","moveAllKey","lenp","moveAllFirst","filterKeys","out","alen","pullArrayKey","array","getColKey","getLayoutMode","code","layout","Map","getRowKey","ind","pushColKey","pushRowKey","checkNewPath","lent","lenr","self"],"mappings":"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","sourcesContent":["//console.log(\"Loading PathLib.js\");\n\nfunction Path() {\n    this.keys={path:[], // selected keys\n\t       other:[] // keys available for selection\n\t      };\n    this.other={table:[], // table keys\n\t\trest:[]   // keys available for table\n\t       };\n    this.trash=[];         // remaining valid keys\n    this.select={val:{}};  // current selection criteria\n    this.where={};         // current cache for where expressions\n    this.filter={val:{}};  // initial filter for data...\n    this.ignore=[\"max\",\"min\",\"minlat\",\"minlon\",\"maxlat\",\"maxlon\",\"cnt\",\"level\"]; // only visible in 1D and 0D tables\n    this.type = {\n\tpath :      {ityp:-1,ptyp:\"path\"},\n\teye :       {ityp:0, ptyp:\"eye\"},\n\ttable :     {ityp:1, ptyp:\"table\"},\n\trest :      {ityp:2, ptyp:\"rest\"},\n\ttrash :     {ityp:3, ptyp:\"trash\"},\n\ttrashRest : {ityp:4, ptyp:\"trashRest\"},\n\trow :       {ityp:5, ptyp:\"row\"},\n\tcol :       {ityp:6, ptyp:\"col\"},\n\titem :      {ityp:7, ptyp:\"item\"}\n    };\n    this.order=undefined; // how to order data\t    \n    this.init=function(state){\n\tvar par=\"Path\";\n\tstate.Utils.init(par,this);\n    };\n    this.cleanSelect=function(state) {\n\tvar pkeys=state.Path.keys.path;\n\tvar keys=Object.keys(state.Path.select.val);\n\tvar lenk=keys.length;\n\tfor (var ii=0;ii<lenk;ii++) {\n\t    var key=keys[ii];\n\t    if (pkeys.indexOf(key) === -1) {\n\t\tstate.Path.select.val[key]=undefined;\n\t    }\n\t}\n    };\n    this.setFilter=function(state) {\n\tstate.Path.cleanSelect(state);\n\tthis.filter.val=state.Utils.cp(state.Path.select.val);\n\tstate.Utils.pushUrl(state);\n\tconsole.log(\"Setting filter.\");\n    };\n    this.getSnapshot=function(state) { // store state\n\treturn {keys:state.Utils.cp(state.Path.keys),\n\t\tother:state.Utils.cp(state.Path.other),\n\t\tselect:state.Utils.cp(state.Path.select),\n\t\torder:state.Utils.cp(state.Path.order)};\n    };\n    this.setSnapshot=function(state,snapshot) { // store state\n\tstate.Utils.restore(state.Path,snapshot);\n    };\n    this.toggleSelect=function(state,key,val) {\n\tvar vals=state.Path.select.val[key];\n\tconsole.log(\"toggleSelect:\",key,val,JSON.stringify(vals));\n\tif (vals !== undefined) {\n\t    var vid=vals.indexOf(val)\n\t    if (vid !== -1) {  // remove item\n\t\tvals.splice(vid,1);\n\t\tif (vals.length===0) { // can never be totally empty...\n\t\t    vals.push(\"MAX(\"+key+\")\");\n\t\t}\n\t\tstate.Path.select.val[key]=vals;\n\t    } else {\n\t\tstate.Path.select.val[key].push(val); // add item\n\t    }\n\t    this.setWhere(state,key);\n\t    state.Show.showPath(state);\n\t    console.log(\"Finally Vals:\",key,JSON.stringify(state.Path.select.val[key]));\n\t}\n    };\n    this.getTitle=function(state) {\n\tvar title=\"\";\n\tvar keys=state.Path.keys.path;\n\tvar parse;\n\tkeys.forEach(\n\t    function(key,index) {\n\t\tvar vals=state.Path.select.val[key];\n\t\t//console.log(\"   select:\",key,JSON.stringify(vals));\n\t\tif (vals === undefined) {vals=[];};\n\t\tvar lenv=vals.length\n\t\tfor (var ii=0;ii<lenv;ii++) {\n\t\t    var val=vals[ii]\n\t\t    if (title !== \"\") { title=title + \" | \";};\n\t\t    if (val === \"null\") {\n\t\t\ttitle = title + key + \" is NULL\";\n\t\t    } else if (val===\"MAX(\"+key+\")\") { // this is a function\n\t\t\tparse=state.Utils.getMax(state.Database.values[key]);\n\t\t\tif (parse === undefined) {\n\t\t\t    title = title + key + \" is NULL\";\n\t\t\t} else {\n\t\t\t    title = title + parse;\n\t\t\t};\n\t\t    } else if (val===\"MIN(\"+key+\")\") { // this is a function\n\t\t\tparse=state.Utils.getMin(state.Database.values[key]);\n\t\t\tif (parse === undefined) {\n\t\t\t    title = title + key + \" is NULL\";\n\t\t\t} else {\n\t\t\t    title = title + parse;\n\t\t\t};\n\t\t    } else {\n\t\t\ttitle = title + val;\n\t\t    };\n\t\t}\n\t\t\n\t    }\n\t);\n\t//console.log(\"Pathlib getTitle keys:\",JSON.stringify(keys),title);\n\treturn title;\n    };\n    this.makeWhere=function(state) {\n\tstate.Path.keys.path.forEach(function(item,index) {this.setWhere(state,item);}.bind(this));\n    };\n    this.setWhere=function(state,key) {\n\tvar where=this.parseWhere(state,key);\n\tstate.Path.where[key]=where;\n    };\n    this.parseWhere=function(state,key) {\n\tvar parse;\n\tvar where=\"\";\n\tvar vals=state.Path.select.val[key];\n\tif (vals === undefined) {vals=[];};\n\tvar lenv=vals.length\n\tfor (var ii=0;ii<lenv;ii++) {\n\t    var val=vals[ii]\n\t    if (where !== \"\") { where=where + \" OR \";};\n\t    if (val === \"null\") {\n\t\twhere = where + key + \" is NULL\";\n\t    } else if (val===\"MAX(\"+key+\")\") { // this is a function\n\t\tparse=state.Utils.getMax(state.Database.values[key]);\n\t\t//console.log(\"parseWhere:\",key,parse,JSON.stringify(state.Database.values[key]));\n\t\tif (parse === undefined) {\n\t\t    where = where + key + \" is NULL\";\n\t\t} else {\n\t\t    where = where + key + \"='\"+parse+\"'\";\n\t\t};\n\t    } else if (val===\"MIN(\"+key+\")\") { // this is a function\n\t\tparse=state.Utils.getMin(state.Database.values[key]);\n\t\tif (parse === undefined) {\n\t\t    where = where + key + \" is NULL\";\n\t\t} else {\n\t\t    where = where + key + \"='\"+parse+\"'\";\n\t\t};\n\t    } else {\n\t\twhere = where + key + \"='\"+val+\"'\";\n\t    }\n\t};\n\treturn where;\n    };\n    this.makeCnt=function(state,key) {\n\treturn state.Path.select.val[key].length;\n    };\n    this.getOrderValues=function(state,skey){\n        if (state.Path.order === undefined) {state.Path.order={};};\n        if (state.Path.order[skey] === undefined) {\n            //console.log(\"Copying:\",JSON.stringify(Matrix.values[skey]));\n            state.Path.order[skey]=state.Utils.cp(state.Matrix.values[skey]);\n        } else {\n\t    var vals = state.Matrix.values[skey];\n\t    var plen = vals;\n\t    for (var ii = 0; ii < plen; ii++) {\n\t\tvar val=vals[ii];\n\t\tif (state.Path.order[skey].indexOf(val)===-1) {\n\t\t    state.Path.order[skey].push(val);\n\t\t}\n\t    };\n\t};\n\treturn state.Path.order[skey];\n    };\n    this.bumpOrder=function(state,skey,value) {\n\tconsole.log(\"Bump order:\",skey,value);\n\tvar vid=state.Path.order[skey].indexOf(value);\n\tif (vid !== -1 && vid > 0) {\n\t    var src=state.Path.order[skey].splice(vid, 1); // remove from array   \n\t    state.Utils.spliceArray(state.Path.order[skey],vid-1,0,src);\n\t};\n\tstate.Show.showConfig(state);\n    };\n    this.makePath=function(state) { // note that not all keys are present in the data!\n\t//console.log(\"Entering makepath.\",JSON.stringify(this.keys));\n\tvar ii,key;\n\tvar pathSet=[];\n\tif (this.keys.path === undefined) {this.keys.path=[];};\n\tif (this.keys.other === undefined) {this.keys.other=[];};\n\tif (this.trash === undefined) {this.trash=[];};\n\tif (this.keys.path.length > 0 ||\n\t    this.keys.other.length > 0 ||\n\t    this.trash.length > 0) {\n\t    // remove duplicates\n\t    //console.log(\"Filtering.\");\n\t    var olen;\n\t    this.keys.path=this.keys.path.filter(this.Unique);\n\t    this.keys.other=this.keys.other.filter(this.Unique);\n\t    this.trash=this.trash.filter(this.Unique);\n\t    //console.log(\"setup:\",JSON.stringify(setup));\n\t    //console.log(\"Remove invalid keys from path.\");\n\t    // remove invalid keys from path\n\t    var plen = this.keys.path.length;\n\t    for (ii = 0; ii < plen; ii++) {\n\t\tkey=this.keys.path[ii];\n\t\tif (state.Database.keyCnt[key]  === undefined) {\n\t\t    this.keys.path.splice(ii, 1);\n\t\t    ii=ii-1;\n\t\t    plen=plen-1;\n\t\t}\n\t    }\n\t    //console.log(\"Remove invalid keys from other.\");\n\t    // remove invalid keys from other\n\t    olen = this.keys.other.length;\n\t    for (ii = 0; ii < olen; ii++) {\n\t\tkey=this.keys.other[ii];\n\t\tif (state.Database.keyCnt[key]  === undefined) {\n\t\t    this.other.rest.splice(ii, 1);\n\t\t    ii=ii-1;\n\t\t    olen=olen-1;\n\t\t}\n\t    }\n\t    //console.log(\"Remove invalid keys from trash.\");\n\t    // remove invalid keys from trash\n\t    olen = this.trash.length;\n\t    for (ii = 0; ii < olen; ii++) {\n\t\tkey=this.trash[ii];\n\t\tif (state.Database.keyCnt[key]  === undefined) {\n\t\t    this.trash.splice(ii, 1);\n\t\t    ii=ii-1;\n\t\t    olen=olen-1;\n\t\t}\n\t    }\n\t    //console.log(\"Update trash with keys.\");\n\t    // we already have a path, update trash with new keys\n\t    for (key in state.Database.keyCnt) {\n\t\tif (this.keys.path.indexOf(key)  === -1 && \n\t\t    this.keys.other.indexOf(key)  === -1 && \n\t\t    this.trash.indexOf(key)  === -1 &&\n\t\t    state.Utils.missing(this.ignore,key)) {\n\t\t    pathSet[key]=\"trash\";\n\t\t    this.select.val[key]=\"\";\n\t\t    this.where[key]=\"\";\n\t\t    this.trash.push(key);\n\t\t}\n\t    }\n\t} else {\n\t    // new path...\n\t    console.log(\"New path\");\n\t    // ...define this.select.val for all keys in input data\n\t    for (key in state.Database.keyCnt) {\n\t\tpathSet[key]=\"data\";\n\t    };\n\t    this.keys.path=[];\n\t    this.other.table=[]\n\t    this.other.rest=[]\n\t    this.select.val={}; // no values are set so far\n\t    this.where={}\n\t    console.log(\"Copy default trash keys.\",JSON.stringify(state.Default.trash));\n\t    // copy default trash keys (that are used) to trash...\n\t    if (state.Default.trash !== undefined) {\n\t\tvar tlen = state.Default.trash.length;\n\t\tfor (ii = 0; ii < tlen; ii++) {\n\t\t    key=state.Default.trash[ii];\n\t\t    if (pathSet[key] !== undefined) {\n\t\t\tif (state.Utils.missing(this.trash,key)) { \n\t\t\t    this.trash.push(key);\n\t\t\t};\n\t\t\tpathSet[key]=undefined; // ignore key from now on...\n\t\t    }\n\t\t}\n\t\t//console.log(\"Pathset:\",JSON.stringify(pathSet),JSON.stringify(state.Default.trash));\n\t    };\n\t    //console.log(\"Copy default other keys.\");\n\t    console.log(\"makePath A:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n\t    // console.log(\"Added trash:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n\t    // copy default other keys (that are used) to other...\n\t    if (state.Default.other !== undefined) {\n\t\tvar klen = state.Default.other.length;\n\t\tfor (ii = 0; ii < klen; ii++) {\n\t\t    key=state.Default.other[ii];\n\t\t    if (pathSet[key] !== undefined) { // key not present in input data\n\t\t\tif (state.Utils.missing(this.keys.other,key)) {\n\t\t\t    this.keys.other.push(key);\n\t\t\t};\n\t\t\tpathSet[key]=\"found\";\n\t\t    }\n\t\t}\n\t    }\n\t    console.log(\"makePath B:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n\t    //console.log(\"Add missing keys.\");\n\t    // add missing keys to path\n\t    for (key in state.Database.keyCnt) {\n\t\tif (state.Utils.missing(this.ignore,key)) {\n\t\t    if (pathSet[key] === \"data\") {\n\t\t\tif (state.Utils.missing(this.keys.other,key)) {\n\t\t\t    this.keys.other.push(key);\n\t\t\t};\n\t\t\t//console.log(\"Added key:\",key);\n\t\t\tpathSet[key] = \"added\";\n\t\t    }\n\t\t};\n\t    };\n\t    // add undefined values in values\n\t    // for (key in state.Database.keyCnt) {\n\t    //     if (state.Database.keyCnt[key].cnt<state.Database.cnt) {\n\t    // \tstate.Database.values[key].push(undefined);\n\t    //     }\n\t    // }\n\t    // // sort sub-path according to count...\n\t    // this.keys.other=this.keys.other.sort(function(state,a, b) {\n\t    //     if (state.Database.values[a]  === undefined) {\n\t    // \treturn -1;\n\t    //     } else if (state.Database.values[b]  === undefined) {\n\t    // \treturn 1;\n\t    //     } else {\n\t    // \treturn state.Database.values[a].length - state.Database.values[b].length\n\t    //     }\n\t    // });\n\t    console.log(\"makePath C:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n\t    //console.log(\"Push other keys to table and rest.\");\n\t    var glen = this.keys.other.length;\n\t    for (ii = 0; ii < glen; ii++) {\n\t\tkey=this.keys.other[ii];\n\t\tif (ii<2) {\n\t\t    this.other.table.push(key);\n\t\t} else {\n\t\t    this.other.rest.push(key);\n\t\t}\n\t    }\n\t}\n\t//console.log(\"makePath D:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n\tstate.Navigate.reset(state);\n\t//console.log(\"keys:\",JSON.stringify(state.Database.values));\n\t//console.log(\"Completed makepath.\");\n    };\n    this.getIndex=function(state,trg) {\n\treturn this.keys.path.indexOf(trg);\n    };\n    this.exportAllKeys=function(state) { // export keys from \"all\" to \"rest\"\n\tthis.other.table=[];\n\tthis.other.rest=[];\n\tvar jj=0;\n\tvar key,ii;\n\tif (this.keys.other !== undefined) {\n\t    var olen=this.keys.other.length;\n\t    for (ii=0;ii<olen;ii++) {\n\t\tkey=this.keys.other[ii];\n\t\tif (state.Matrix.keyCnt[key] !== undefined &&\n\t\t    state.Matrix.keyCnt[key] > 0) {\n\t\t    if (jj < 2) {\n\t\t\tthis.other.table.push(key);\n\t\t\tjj=jj+1;\n\t\t    } else {\n\t\t\tthis.other.rest.push(key);\n\t\t    }\n\t\t}\n\t    };\n\t}\n\t//this.sortTableKeys(state);\n\t//console.log(\"Exported:\",JSON.stringify(this.keys.other),JSON.stringify(this.other));\n    };\n    // check if keys are inter-dependent, (\"redundant\", \"control\", \"dependent\", \"unknown\") \n    this.compareKeys=function(state,where,keys) {\n\tvar key;\n\t//var where = state.Database.getWhere(state);\n\tvar ret={dep:{},val:{}};\n\tvar hits={};\n\tvar maxh={};\n\tvar docs=state.Database.getCntDocs(state,where,keys); // current table keys\n\tvar slen=keys.length;\n\tvar dlen = docs.length;\n\tfor (var ii = 0; ii < dlen; ii++) {\n    \t    var doc=docs[ii];\n\t    for (var jj=0;jj<slen;jj++) {\n\t\tkey=keys[jj];\n\t\tif (doc[key] !== undefined) {\n\t\t    var val=doc[key];\n\t\t    ret.val[key]=val;\n\t\t    if (hits[key]  === undefined) {hits[key]={};}\n\t\t    hits[key][val] = 1+ (hits[key][val]||0);\n\t\t    //console.log(\"Found:\",key,val,hits[key][val]);\n\t\t    if (hits[key][val] > (maxh[key]||0)) {\n\t\t\tmaxh[key]=hits[key][val];\n\t\t    }\n\t\t};\n\t    }\n\t};\n\tfor (var kk=0;kk<slen;kk++) {\n\t    key=keys[kk];\n\t    if (maxh[key] !== undefined) {\n\t\tif (maxh[key]  === 1) {            // remove the other key\n\t\t    ret.dep[key]=\"control\";\n\t\t} else if (maxh[key]  === dlen) { // remove key from table\n\t\t    ret.dep[key]=\"redundant\";\n\t\t} else {\n\t\t    ret.dep[key]=\"dependent\";\n\t\t}\n\t    } else {\n\t\tret.dep[key]=\"unknown\";\n\t    }\n\t};\n\treturn ret;\n    };\n    this.getDestination=function(state,keys,dependancy){\n\tvar key;\n\tvar destination={};\n\tvar slen=keys.length;\n\tfor (var jj=0;jj<slen;jj++) {\n\t    key=keys[jj];\n\t    if (dependancy.dep[key]  === \"control\") {\n\t\tfor (var rr=0;rr<slen;rr++) {\n\t\t    var rkey=keys[rr];\n\t\t    if (dependancy.dep[rkey] === \"control\") { // do not remove every \"control\" variable\n\t\t\tif (rr > jj) {\n\t\t\t    destination[rkey]=\"path\";\n\t\t\t};\n\t\t    } else { // remove all other variables\n\t\t\tif (rr !== jj) {\n\t\t\t    destination[rkey]=\"trash\";\n\t\t\t};\n\t\t    }\n\t\t}\n\t    }\n\t}\n\tvar cnt=0;\n\tfor (var kk=slen-1;kk>=0;kk--) {\n\t    key=keys[kk];\n\t    if (dependancy[key]  === \"redundant\") { // leave at least one redundant variable\n\t\tcnt=cnt+1;\n\t\tif (cnt < slen) {\n\t\t    destination[key]=\"path\";\n\t\t}\n\t    }\n\t};\n\treturn destination;\n    };\n    this.getNextTableCandidate=function(state,where,key,cand) {\n\tvar clen=cand.length;\n\tfor (var cc=0; cc<clen; cc++) {\n\t    var ckey=cand[cc];\n\t    var table=[key,ckey];\n\t    var dependancy=this.compareKeys(state,where,table);\n\t    var destination=this.getDestination(state,table,dependancy);\n\t    if (destination[ckey] === undefined) {\n\t\tcand.splice(cc,1);\n\t\treturn ckey;\n\t    }\n\t}\n\treturn; // no candidate\n    };\n    this.disposeTableKey=function(state,key,dependancy,destination){\n\tvar bdone;\n\tif (destination[key]  === \"path\") {// trash key\n\t    bdone=false;\n\t    state.Utils.moveToArray(state.Path.keys.other,state.Path.keys.path,key,-1);\n\t    var val=dependancy.val[key];\n\t    state.Path.select.val[key]=[val];\n\t    state.Path.where[key]=key+'=\"'+val+'\"'\n\t    //this.order[key]=order;\n\t} else if (destination[key]  === \"trash\") {// trash key\n\t    bdone=false;\n\t    state.Utils.moveToArray(state.Path.keys.other,state.Path.trash,key,0);\n\t};\n\treturn bdone;\n    };\n    this.checkTableKeys=function(state) {\n\tvar where = state.Database.getWhere(state);\n\tstate.Matrix.initKeyCnt(state);\n\tstate.Matrix.mapKeyCnt(state,where,0,state.Path.keys.other); // possible table keys (no undefined)\n\tstate.Path.exportAllKeys(state);\n\tconsole.log(\"checkTableKeys:\",JSON.stringify(state.Path.keys));\n\tvar table=state.Path.other.table;  // current table-keys\n\tvar cand=state.Path.other.rest;    // current candidates\n\tvar bdone=(table.length < 2);\n\tdo {\n\t    //check current table-keys\n\t    var dependancy=this.compareKeys(state,where,table);\n\t    var destination=this.getDestination(state,table,dependancy);\n\t    // check if first key is invalid\n\t    var fkey=table[0];\n\t    var skey=table[1];\n\t    var fdest=destination[fkey];\n\t    var sdest=destination[skey];\n\t    console.log(\"Looping:\",fkey,fdest,skey,sdest);\n\t    if (sdest !== undefined) {        // second key is in-valid\n\t\tthis.disposeTableKey(state,skey,dependancy,destination)\n\t\t// get next candidate\n\t\tvar ckey=this.getNextTableCandidate(state,where,fkey,cand);\n\t\tif (ckey !== undefined) {\n\t\t    console.log(\"Found candidate:\",fkey,ckey,\" removing \",skey);\n\t\t    table=[fkey,ckey];\n\t\t    bdone=false;\n\t\t} else { // no more candidates\n\t\t    bdone=true;\n\t\t}\n\t    } else if (fdest === undefined) { // first key is in-valid\n\t\t// get next candidate\n\t\tvar ckey=this.getNextTableCandidate(state,where,skey,cand);\n\t\tif (ckey !== undefined) {\n\t\t    console.log(\"Found candidate:\",skey,ckey,\" removing \",fkey);\n\t\t    this.disposeTableKey(state,fkey,dependancy,destination)\n\t\t    table=[skey,ckey];\n\t\t    bdone=false;\n\t\t} else { // no more candidates\n\t\t    bdone=true;\n\t\t}\n\t    } else {    // both keys are valid\n\t\tconsole.log(\"Keys ok:\",fkey,skey);\n\t\tbdone=true;\n\t    }\n\t    if (! bdone) {state.Path.exportAllKeys(state);}\n\t} while (! bdone);\n\t//console.log(\"this.checkTableKeys Done.\",JSON.stringify(state.Path.other.table));\n    };\n    this.checkTableKeysOld=function(state) {\n\tvar ret=[];\n\tvar where = state.Database.getWhere(state);\n\tstate.Matrix.initKeyCnt(state);\n\tstate.Matrix.mapKeyCnt(state,where,0,state.Path.keys.other); // possible table keys (no undefined)\n\tstate.Path.exportAllKeys(state);\n\tconsole.log(\"this.checkTableKeys Entering.\",JSON.stringify(state.Path.keys));\n\t//var keys=state.Path.other.table;\n\tvar bdone= state.Path.other.table.length > 1;\n\t//var order=state.Utils.cp(state.Path.keys.other);\n\tdo {\n\t    console.log(\"this.checkTableKeys Looping.\",state.Path.other.rest.length);\n\t    bdone=true;\n\t    if (state.Path.other.table.length > 1) {\n\t\t// check for number of column values\n\t\tvar dependancy=this.compareKeys(state,where,state.Path.other.table);\n\t\tvar destination=this.getDestination(state,state.Path.other.table,dependancy);\n\t\tconsole.log(\"Rm:\",JSON.stringify(dependancy),JSON.stringify(destination));\n\t\tvar slen=state.Path.other.table.length;\n\t\tfor (var jj=0;jj<slen;jj++) {\n\t\t    var key=state.Path.other.table[jj];\n\t\t    if (destination[key]  === \"path\") {// trash key\n\t\t\tbdone=false;\n\t\t\tstate.Utils.moveToArray(state.Path.keys.other,state.Path.keys.path,key,-1);\n\t\t\tvar val=dependancy.val[key];\n\t\t\tstate.Path.select.val[key]=[val];\n\t\t\tstate.Path.where[key]=key+'=\"'+val+'\"'\n\t\t\t//this.order[key]=order;\n\t\t    } else if (destination[key]  === \"trash\") {// trash key\n\t\t\tbdone=false;\n\t\t\tstate.Utils.moveToArray(state.Path.keys.other,state.Path.trash,key,0);\n\t\t    };\n\t\t}\n\t\tif (! bdone) {state.Path.exportAllKeys(state);}\n\t    };\n\t} while (! bdone);\n\t//console.log(\"this.checkTableKeys Done.\",JSON.stringify(state.Path.other.table));\n\treturn ret;\n    };\n    // get X-priority, {colx,coly1,coly2...)\n    this.sortTableKeys=function(state){\n\t// make priority index\n\tvar arr=state.Utils.cp(this.other.table);\n\tvar pri=state.Layout.getPriorityIndex(state,arr);\n\t// sort the array according to priority\n\tthis.other.table=arr.sort(function(a,b){\n\t    if (a  === \"\") { \n\t\treturn 1;\n\t    } else if (b  === \"\") {\n\t\treturn -1;\n\t    } else if (pri[a]<pri[b]) { \n\t\treturn 1;\n\t    } else if (pri[a]>pri[b]) {\n\t\treturn -1;\n\t    } else {\n\t\treturn 0;\n\t    }\n\t});\n\t//console.log(\"TableKeys:\",JSON.stringify(this.other.table),\n\t//\t\" Pri:\",JSON.stringify(state.Layout.priority),\n\t//\t\" P:\",JSON.stringify(pri));\n\treturn\n    };\n    this.keyVal=function(state,key) {\n\tif (this.select.val[key] !== undefined &&\n\t    this.select.val[key] !== null &&\n\t    this.select.val[key] !== \"\") {\n\t    return this.select.val[key];\n\t} else {\n\t    return;\n\t}\n    }    \n    \n    this.keyValOk=function(state,val) {\n\tvar ok=true;\n\treturn ok;\n    };\n    this.makeOrder=function(state,typ,order) { // rearrange setup according to order...\n\tif (order !== undefined) {\n\t    var buff=[];\n\t    for (var kk=0; kk < order.length ;kk++){\n\t\tif (order[kk] !== \"\") {\n\t\t    var sin=this.keys[typ].indexOf(order[kk]);\n\t\t    if (sin !== -1) {\n\t\t\tvar src=this.keys[typ].splice(sin, 1); // remove from path\n\t\t\tbuff=buff.concat(src);\n\t\t    }\n\t\t}\n\t    }\n\t    state.Utils.spliceArray(this.keys[typ],0,0,buff);\n\t}\n    };\n    this.moveKey=function(state,styp,skey,ttyp,tid) {\n\tvar sid=this.keys[styp].indexOf(skey);\n\tif (sid !== -1) {\n\t    var src=this.keys[styp].splice(sid, 1);    // remove from path\n\t    if (tid  === undefined || tid  === -1) {\n\t\tthis.keys[ttyp]=this.keys[ttyp].concat(src);         // last position\n\t    } else {\n\t\tstate.Utils.spliceArray(this.keys[ttyp],tid, 0, src);\n\t    }\n\t    return true;\n\t}else {\n\t    return false;\n\t}\n    };\n    this.moveKeys=function(state,styp,skeys,ttyp,tid) {\n\tvar len=skeys.length\n\tfor (var ss=0;ss<len;ss++) {\n\t    var skey=skeys[ss];\n\t    var sid=this.keys[styp].indexOf(skey);\n\t    if (sid !== -1) {\n\t\tvar src=this.keys[styp].splice(sid, 1);    // remove from path\n\t\tif (tid  === undefined || tid  === -1) {\n\t\t    this.keys[ttyp]=this.keys[ttyp].concat(src);         // last position\n\t\t} else {\n\t\t    state.Utils.spliceArray(this.keys[ttyp],tid, 0, src);\n\t\t}\n\t    }\n\t}\n    };\n    this.swapTableKey=function(state,skey,tkey) {\n\tvar sid=this.other.table.indexOf(skey);\n\tvar tid=this.other.table.indexOf(tkey);\n\tif (tid !== sid && this.other.table.length > 1) {\n\t    var tin2=this.keys.other.indexOf(this.other.table[1]);\n\t    var tkey2=this.keys.other.splice(tin2, 1);    // remove from array\n\t    state.Utils.spliceArray(this.keys.other,0, 0, tkey2);\n\t    //console.log(\"Swapped:\",tkey2,tkey,JSON.stringify(this.keys.other));\n\t    return true;\n\t} else {\n\t    return false;\n\t}\n    };\n    this.delTableKey=function(state,key) {\n\tvar secondkey;\n\tvar secondind;\n\tvar sid=this.keys.other.indexOf(key);\n\tif (sid !== -1) {\n\t    var sin=this.other.table.indexOf(key);\n\t    var save=(sin  === 0);\n\t    if (save) {\n\t\tsecondkey=this.other.table[1];\n\t\tsecondind=this.pullKey(state,\"other\",secondkey);\n\t    }\n\t    this.pullKey(state,\"other\",key);\n\t    if (save && secondind !== undefined && secondind !== -1) {\n\t\tthis.pushKey(state,\"other\",secondkey,secondind);\n\t    }\n\t    return sin;\n\t}\n    };\n    this.moveTableKey=function(state,skey,ttyp,tid) {\n\tvar sid=this.keys.other.indexOf(skey);\n\tif (sid !== -1) {\n\t    //var sin=\n\t    this.delTableKey(state,skey);\n\t    if (tid  === undefined || tid  === -1) {\n\t\tthis.keys[ttyp]=this.keys[ttyp].concat(skey);         // last position\n\t    } else {\n\t\tstate.Utils.spliceArray(this.keys[ttyp],tid, 0, skey);\n\t    }\n\t    return true;\n\t}else {\n\t    return false;\n\t}\n    };\n    this.moveKey2Table=function(state,styp,skey,tkey) {\n\t//console.log(\"MoveKey2Table:\",JSON.stringify(this.keys));\n\tvar tid=this.keys.other.indexOf(tkey);\n\tvar sid=this.keys[styp].indexOf(skey)\n\tif (tid !== -1 && sid !== -1 && skey !== tkey) { // exists and is not the same\n\t    this.keys[styp][sid]=tkey\n\t    this.keys.other[tid]=skey\n\t    return true;\n\t} else {\n\t    return false;\n\t}\n    };\n    this.moveTrash2Table=function(state,tkey) {\n\tvar secondkey;\n\tvar secondind;\n\tvar tid=this.other.table.indexOf(tkey);\n\tif (tid !== -1) {\n\t    var save=(tid  === 0);\n\t    if (save) {\n\t\tsecondkey=this.other.table[1];\n\t\tsecondind=this.pullKey(state,\"other\",secondkey);\n\t    };\n\t    var tin=this.keys.other.indexOf(tkey);\n\t    this.moveTrash(state,\"other\",tin+1);\n\t    if (save && secondind !== undefined && secondind !== -1) {\n\t\tthis.pushKey(state,\"other\",secondkey,secondind);\n\t    }\n\t    return true;\n\t} else {\n\t    return false;\n\t}\n    };\n    this.moveTrash=function(state,ttyp,tin) {\n\tstate.Utils.spliceArray(this.keys[ttyp],tin, 0, this.trash);\n\tthis.trash=[];\n    };\n    this.moveAllKey=function(state,styp,skey,ttyp,tid) {\n\tvar lenp=this.keys[styp].length;\n\tvar sid=this.keys[styp].indexOf(skey);\n\tif (sid !== -1) {\n\t    var src=this.keys[styp].splice(sid,lenp-sid);\n\t    state.Utils.spliceArray(this.keys[ttyp],tid,0,src);\n\t    return true;\n\t} else {\n\t    return false;\n\t}\n    };\n    this.moveAllFirst=function(state,ttyp,tin) {\n\tvar tlen=this.keys[ttyp].length;\n\tvar src=this.keys[ttyp].splice(tin,tlen-tin);\n\tstate.Utils.spliceArray(this.keys[ttyp],0, 0,src);\n    };\n    this.filterKeys=function(state,arr) {\n\tvar out=[];\n\tvar alen=arr.length;\n\tfor(var ii=0; ii<alen; ii++) {\n\t    var val=arr[ii];\n\t    if (this.keyValOk(state,val)) {\n\t\tout.push(val);\n\t    }\n\t}\n\t//console.log(\"CheckOk \",JSON.stringify(arr),\"->\",JSON.stringify(out));\n\treturn out;\n    };\n    this.pullArrayKey=function(state,array,key) {\n\tvar sin=array.indexOf(key);\n\tif (sin !== -1) {\n\t    //var src=\n\t    array.splice(sin, 1);    // remove from path\n\t};\n\treturn sin;\n    };\n    //////////////////////////////// COL/ROW FUNCTIONS ///////////////////////\n    this.getColKey=function(state) {\n\tvar arr=state.Utils.cp(this.other.table);\n\tvar pri=state.Layout.getPriorityIndex(state,arr);\n\tif (state.Show.getLayoutMode(state) === state.Show.code.layout.Map) {\n\t    return \"_lon\";\n\t} else if (pri[this.other.table[0]] >= pri[this.other.table[1]]) {\n\t    return this.other.table[0];\n\t} else {\n\t    return this.other.table[1];\n\t}\n    };\n    this.getRowKey=function(state) {\n\tvar arr=state.Utils.cp(this.other.table);\n\tvar pri=state.Layout.getPriorityIndex(state,arr);\n\tif (state.Show.getLayoutMode(state) === state.Show.code.layout.Map) {\n\t    return \"_lat\";\n\t} else if (pri[this.other.table[0]] >= pri[this.other.table[1]]) {\n\t    return this.other.table[1];\n\t} else {\n\t    return this.other.table[0];\n\t}\n    };\n    this.pushKey=function(state,typ,key,ind) {\n\tif (key !== undefined && key !== \"\") {\n\t    state.Utils.spliceArray(this.keys[typ], ind, 0, key);\n\t}\n    };\n    this.pullKey=function(state,typ,key) {\n\tvar sin=this.keys[typ].indexOf(key);\n\tif (sin !== -1) {\n\t    var src=this.keys[typ].splice(sin, 1);    // remove from path\n\t    if (src !== key) {console.log(\"System error:\",src,key);}\n\t    return sin;\n\t};\n    };\n    this.pushColKey=function(state,key) {\n\tif (key !== undefined && key !== \"\") {\n\t    state.Utils.spliceArray(this.keys.other,0, 0, key);\n\t}\n    };\n    this.pushRowKey=function(state,key) {\n\tif (key !== undefined && key !== \"\") {\n\t    state.Utils.spliceArray(this.keys.other,1, 0, key);\n\t}\n    };\n    this.checkNewPath=function(state,styp,skey) { // check if values are defined for path\n\tvar ok,ii;\n\tvar sid=this.keys.path.indexOf(skey);\n\tif (styp  === this.type.table.ptyp) {\n\t    ok=true;\n\t    var lent=this.other.table.length-1;\n\t    if (sid !== undefined) {lent=sid+1;};\n\t    for (ii = 0; ii <= lent; ii++) {\n\t\tvar key=this.other.table[ii];\n\t\tif (this.keyVal(state,key)  === undefined) {\n\t\t    ok=false;\n\t\t}\n\t    }\n\t} else if (styp  === this.type.rest.ptyp) {\n\t    ok=this.checkNewPath(state,this.type.table.ptyp);\n\t    if (ok) {\n\t\tvar lenr=this.other.rest.length-1;\n\t\tif (sid !== undefined) {lenr=sid+1;};\n\t\tfor (ii = 0; ii <= lenr; ii++) {\n\t\t    key=this.other.rest[ii];\n\t\t    if (this.keyVal(state,key)  === undefined) {\n\t\t\tok=false;\n\t\t    }\n\t\t}\n\t    }\n\t}\n\treturn ok;\n    };\n    //values[key]=values[key].filter(this.Unique);\n    this.Unique=function(value, index, self) { \n\treturn self.indexOf(value)  === index;\n    }\n};\nexport default Path;\n"]},"metadata":{},"sourceType":"module"}