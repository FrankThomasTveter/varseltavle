{"ast":null,"code":"import _classCallCheck from\"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{withStyles}from'@material-ui/core/styles';import Chip from'@material-ui/core/Chip';import SelIcon from'@material-ui/icons/Done';var styles=function styles(theme){return{key:{display:'inline-block',marginRight:'auto'},selectchip:{margin:theme.spacing.unit,cursor:\"pointer\",color:\"red\",borderColor:\"green\"},restchip:{margin:theme.spacing.unit,cursor:\"pointer\",color:\"gray\",borderColor:\"gray\"}};};function getChipClass(classes,active){if(active){return classes.selectchip;}else{return classes.restchip;};};function getChipIcon(active){if(active){return React.createElement(SelIcon,null);}else{return null;};}var Archive=/*#__PURE__*/function(_Component){_inherits(Archive,_Component);function Archive(){_classCallCheck(this,Archive);return _possibleConstructorReturn(this,_getPrototypeOf(Archive).apply(this,arguments));}_createClass(Archive,[{key:\"render\",value:function render(){var _this$props=this.props,classes=_this$props.classes,state=_this$props.state,item=_this$props.item,index=_this$props.index,active=_this$props.active;//console.log(\"Rendering Archive...\",item,index,active);\nvar chip=getChipClass(classes,active);var icon=getChipIcon(active);var onclick=function onclick(){//console.log(\"Chip:\",item,index,active);\nstate.Database.selectIndex(state,item,index);};//console.log(\"...archive:\",JSON.stringify(item),JSON.stringify(index),active);\nreturn React.createElement(\"div\",{className:classes.archive},React.createElement(Chip,{icon:icon,label:item,onClick:onclick,className:chip,variant:\"outlined\"}));}}]);return Archive;}(Component);export default withStyles(styles)(Archive);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/ArchiveComponent.js"],"names":["React","Component","withStyles","Chip","SelIcon","styles","theme","key","display","marginRight","selectchip","margin","spacing","unit","cursor","color","borderColor","restchip","getChipClass","classes","active","getChipIcon","Archive","props","state","item","index","chip","icon","onclick","Database","selectIndex","archive"],"mappings":"wkBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CAEA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,yBAApB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACrBC,GAAG,CAAE,CACRC,OAAO,CAAE,cADD,CAEDC,WAAW,CAAE,MAFZ,CADgB,CAKrBC,UAAU,CAAE,CACRC,MAAM,CAAEL,KAAK,CAACM,OAAN,CAAcC,IADd,CAEfC,MAAM,CAAE,SAFO,CAGRC,KAAK,CAAC,KAHE,CAIRC,WAAW,CAAC,OAJJ,CALS,CAWrBC,QAAQ,CAAE,CACNN,MAAM,CAAEL,KAAK,CAACM,OAAN,CAAcC,IADhB,CAEbC,MAAM,CAAE,SAFK,CAGNC,KAAK,CAAC,MAHA,CAINC,WAAW,CAAC,MAJN,CAXW,CAAL,EAApB,CAkBA,QAASE,CAAAA,YAAT,CAAsBC,OAAtB,CAA8BC,MAA9B,CAAsC,CAClC,GAAIA,MAAJ,CAAY,CACf,MAAOD,CAAAA,OAAO,CAACT,UAAf,CACI,CAFD,IAEO,CACV,MAAOS,CAAAA,OAAO,CAACF,QAAf,CACI,EACJ,EACD,QAASI,CAAAA,WAAT,CAAqBD,MAArB,CAA6B,CACzB,GAAIA,MAAJ,CAAY,CACf,MAAO,qBAAC,OAAD,MAAP,CACI,CAFD,IAEQ,CACX,MAAO,KAAP,CACI,EACJ,C,GAEKE,CAAAA,O,qQACO,iBAC2C,KAAKC,KADhD,CACGJ,OADH,aACGA,OADH,CACYK,KADZ,aACYA,KADZ,CACmBC,IADnB,aACmBA,IADnB,CACyBC,KADzB,aACyBA,KADzB,CACgCN,MADhC,aACgCA,MADhC,CAEZ;AACA,GAAIO,CAAAA,IAAI,CAACT,YAAY,CAACC,OAAD,CAASC,MAAT,CAArB,CACA,GAAIQ,CAAAA,IAAI,CAACP,WAAW,CAACD,MAAD,CAApB,CACA,GAAIS,CAAAA,OAAO,CAAC,QAARA,CAAAA,OAAQ,EAAM,CACd;AACAL,KAAK,CAACM,QAAN,CAAeC,WAAf,CAA2BP,KAA3B,CAAiCC,IAAjC,CAAsCC,KAAtC,EACH,CAHD,CAIA;AACA,MACC,4BAAK,SAAS,CAAEP,OAAO,CAACa,OAAxB,EACC,oBAAC,IAAD,EACE,IAAI,CAAEJ,IADR,CAEE,KAAK,CAAEH,IAFT,CAGE,OAAO,CAAEI,OAHX,CAIE,SAAS,CAAEF,IAJb,CAKE,OAAO,CAAC,UALV,EADD,CADD,CAWI,C,qBAtBiB1B,S,EA6BtB,cAAeC,CAAAA,UAAU,CAACG,MAAD,CAAV,CAAmBiB,OAAnB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport SelIcon from '@material-ui/icons/Done';\n\nconst styles = theme => ({\n    key: {\n\tdisplay: 'inline-block',\n        marginRight: 'auto',\n    },\n    selectchip: {\n        margin: theme.spacing.unit,\n\tcursor: \"pointer\",\n        color:\"red\",\n        borderColor:\"green\",\n    },\n    restchip: {\n        margin: theme.spacing.unit,\n\tcursor: \"pointer\",\n        color:\"gray\",\n        borderColor:\"gray\",\n    },\n});\nfunction getChipClass(classes,active) {\n    if (active) {\n\treturn classes.selectchip;\n    } else {\n\treturn classes.restchip\n    };\n};\nfunction getChipIcon(active) {\n    if (active) {\n\treturn <SelIcon/>;\n    } else  {\n\treturn null;\n    };\n}\n\nclass Archive extends Component {\n    render() {\n        const { classes, state, item, index, active } = this.props;\n\t//console.log(\"Rendering Archive...\",item,index,active);\n\tvar chip=getChipClass(classes,active);\n\tvar icon=getChipIcon(active);\n\tvar onclick=() => {\n\t    //console.log(\"Chip:\",item,index,active);\n\t    state.Database.selectIndex(state,item,index);\n\t};\n\t//console.log(\"...archive:\",JSON.stringify(item),JSON.stringify(index),active);\n\treturn (\n\t\t<div className={classes.archive}>\n\t \t<Chip\n\t    icon={icon}\n\t    label={item}\n\t    onClick={onclick}\n\t    className={chip}\n\t    variant=\"outlined\"\n\t\t/>\n\t\t</div>\n\t);\n    }\n}\n\nArchive.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Archive);\n"]},"metadata":{},"sourceType":"module"}