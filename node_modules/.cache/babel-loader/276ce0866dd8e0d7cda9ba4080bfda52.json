{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/CellTooltip.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ReactTooltip from 'react-tooltip';\nimport Button from '@material-ui/core/Button';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nvar styles = function styles(theme) {\n  return {\n    button: {\n      color: 'white',\n      \"&$buttonDisabled\": {\n        color: theme.palette.primary.main\n      }\n    },\n    buttonDisabled: {}\n  };\n};\n\nfunction FullDetails(props) {\n  var state = props.state,\n      classes = props.classes,\n      data = props.data,\n      element = props.element;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Rowkey: \", data.rowkey, \" Colkey: \", data.colkey), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Full details.\"));\n}\n\n;\n\nfunction GeneralDetails(props) {\n  var state = props.state,\n      classes = props.classes,\n      data = props.data,\n      element = props.element,\n      onclick = props.onclick;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Rowkey: \", data.rowkey, \" Colkey: \", data.colkey), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Some details.\"), React.createElement(Button, {\n    className: classes.button,\n    onClick: onclick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(InfoIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })));\n}\n\n;\n\nfunction Tooltip(props) {\n  var state = props.state,\n      classes = props.classes,\n      data = props.data,\n      element = props.element;\n  var available = state.Matrix.checkTooltip(state, data);\n  var tooltip = state.Matrix.getTooltip(state, data);\n\n  if (available) {\n    return React.createElement(FullDetails, {\n      state: state,\n      classes: classes,\n      data: data,\n      tooltip: tooltip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n  } else {\n    var onclick = function onclick() {\n      state.Matrix.addTooltip(state, data);\n      element.update();\n    };\n\n    return React.createElement(GeneralDetails, {\n      state: state,\n      classes: classes,\n      data: data,\n      onclick: onclick,\n      tooltip: tooltip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    });\n  }\n}\n\n;\n\nvar CellTooltip =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CellTooltip, _Component);\n\n  function CellTooltip() {\n    _classCallCheck(this, CellTooltip);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CellTooltip).apply(this, arguments));\n  }\n\n  _createClass(CellTooltip, [{\n    key: \"update\",\n    value: function update() {\n      console.log(\"Rebuilding tooltip.\");\n      this.forceUpdate();\n      ReactTooltip.rebuild();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state; //console.log(\"##### Rendering CellTooltip.\");\n\n      return React.createElement(ReactTooltip, {\n        id: \"cell\",\n        getContent: function getContent(dataTip) {\n          if (dataTip == null) {\n            return null;\n          } else {\n            var data = JSON.parse(dataTip); //console.log(\"Tooltip:\",JSON.stringify(dataTip),JSON.stringify(data));\n\n            return React.createElement(Tooltip, {\n              state: state,\n              classes: classes,\n              data: data,\n              element: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63\n              },\n              __self: this\n            });\n          }\n        } //\t\teffect='solid'\n        ,\n        delayHide: 500,\n        delayShow: 200,\n        delayUpdate: 500,\n        place: 'bottom',\n        border: true,\n        type: 'light',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }); // {console.log(\"Datatip:\",dataTip);\n      //\t\t\t\t  \n    }\n  }]);\n\n  return CellTooltip;\n}(Component);\n\n;\nCellTooltip.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CellTooltip);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/CellTooltip.js"],"names":["React","Component","PropTypes","withStyles","ReactTooltip","Button","InfoIcon","CancelIcon","styles","theme","button","color","palette","primary","main","buttonDisabled","FullDetails","props","state","classes","data","element","rowkey","colkey","GeneralDetails","onclick","Tooltip","available","Matrix","checkTooltip","tooltip","getTooltip","addTooltip","update","CellTooltip","console","log","forceUpdate","rebuild","dataTip","JSON","parse","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ReactTooltip from 'react-tooltip'\nimport Button from '@material-ui/core/Button';\n\nimport InfoIcon from '@material-ui/icons/Info';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\n\nconst styles = theme => ({\n    button: {\n\tcolor:'white',\n\t\"&$buttonDisabled\": {\n            color: theme.palette.primary.main,\n\t},\n    },\n    buttonDisabled: {},\n});\nfunction FullDetails(props){\n    const {state,classes,data,element}=props;\n    return (<div>\n\t    <h3>Rowkey: {data.rowkey} Colkey: {data.colkey}</h3>\n\t    <p>Full details.</p>\n\t    </div>\n\t   );\n};\nfunction GeneralDetails(props) {\n    const {state,classes,data,element,onclick}=props;\n    return (<div>\n\t    <h3>Rowkey: {data.rowkey} Colkey: {data.colkey}</h3>\n\t    <p>Some details.</p>\n\t    <Button className={classes.button} onClick={onclick}><InfoIcon/></Button>\n\t    </div>\n\t   );\n};\nfunction Tooltip(props) {\n    const {state,classes,data,element}=props;\n    var available=state.Matrix.checkTooltip(state,data);\n    var tooltip=state.Matrix.getTooltip(state,data);\n    if (available) {\n\treturn (<FullDetails state={state} classes={classes} data={data} tooltip={tooltip}/>);\n    } else {\n\tvar onclick=() => {state.Matrix.addTooltip(state,data);element.update();}\n\treturn (<GeneralDetails state={state} classes={classes} data={data} onclick={onclick} tooltip={tooltip}/>);\n    }\n};\nclass CellTooltip extends Component {\n    update() {\n\tconsole.log(\"Rebuilding tooltip.\");\n\tthis.forceUpdate();\n\tReactTooltip.rebuild();\n    };\n    render() {\n\tconst { classes, state } = this.props;\n\t//console.log(\"##### Rendering CellTooltip.\");\n\treturn (<ReactTooltip id='cell' \n\t\tgetContent={(dataTip) =>{if (dataTip==null) {\n\t\t    return null;\n\t\t} else {\n\t\t    const data=JSON.parse(dataTip);\n\t\t    //console.log(\"Tooltip:\",JSON.stringify(dataTip),JSON.stringify(data));\n\t\t    return (<Tooltip state={state} classes={classes} data={data} element={this}/>);\n\t\t}}}\n//\t\teffect='solid'\n\t\tdelayHide={500}\n\t\tdelayShow={200}\n\t\tdelayUpdate={500}\n\t\tplace={'bottom'}\n\t\tborder={true}\n\t\ttype={'light'}\n\t\t/>);\n\t// {console.log(\"Datatip:\",dataTip);\n\t//\t\t\t\t  \n    };\n};\nCellTooltip.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CellTooltip);\n"]},"metadata":{},"sourceType":"module"}