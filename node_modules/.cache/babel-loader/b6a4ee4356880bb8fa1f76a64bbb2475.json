{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/Table1DComponent.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { teal_palette } from '../mui/metMuiThemes';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport SummaryCell from './SummaryCell';\nimport SeriesCell from './SeriesCell';\nimport CanvasText from './CanvasTextComponent';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      height: '100%'\n    },\n    paper: {\n      overflow: 'hidden',\n      tableLayout: 'fixed',\n      padding: 0,\n      margin: 0\n    },\n    divTable: {\n      display: 'table',\n      width: '100%'\n    },\n    divTableRow: {\n      display: 'table-row'\n    },\n    divTableCell: {\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    },\n    divTableCellCursor: {\n      cursor: \"pointer\",\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    },\n    divTableHead: {\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    },\n    divTableHeading: {\n      display: 'table-header-group'\n    },\n    divTableHeadingCenter: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    divTableFoot: {\n      backgroundColor: '#DDD',\n      display: 'table-footer-group',\n      fontWeight: 'bold'\n    },\n    divTableBody: {\n      display: 'table-row-group'\n    }\n  };\n}; //const mui = createTheme({palette:teal_palette});\n\n\nfunction getTextWidth(txt, fontname, fontsize) {\n  if (getTextWidth.c === undefined) {\n    getTextWidth.c = document.createElement('canvas');\n    getTextWidth.ctx = getTextWidth.c.getContext('2d');\n  }\n\n  if (fontname !== undefined) {\n    getTextWidth.ctx.font = fontsize + ' ' + fontname;\n  }\n\n  return getTextWidth.ctx.measureText(txt).width;\n}\n\n;\n\nfunction getTextHeight(fontname, fontsize) {\n  if (getTextHeight.c === undefined) {\n    getTextHeight.c = document.createElement('canvas');\n    getTextHeight.ctx = getTextHeight.c.getContext('2d');\n  }\n\n  if (fontname !== undefined) {\n    getTextHeight.ctx.font = fontsize + ' ' + fontname;\n  }\n\n  return getTextHeight.ctx.measureText('M').width;\n}\n\nfunction maxWidth(values, border) {\n  var swidth = 0;\n  var mwidth = 0;\n  var lenv = values.length;\n\n  for (var ii = 0; ii < lenv; ii++) {\n    var cwidth = getTextWidth(values[ii]) + 2 * border;\n\n    if (cwidth > mwidth) {\n      mwidth = cwidth;\n    }\n\n    swidth = swidth + cwidth;\n  }\n\n  return {\n    max: mwidth,\n    sum: swidth\n  };\n}\n\nfunction setPlan(plan, set) {\n  var keys = Object.keys(set);\n  var lenk = keys.length;\n\n  for (var ii = 0; ii < lenk; ii++) {\n    var key = keys[ii];\n    var val = set[key];\n    plan[key] = val;\n  }\n\n  ;\n}\n\nfunction makePlan(label, colvalues, rowvalues, iwidth, iheight, border) {\n  var plan = {\n    cell: {\n      rotate: false,\n      step: 1,\n      border: border,\n      width: 100,\n      height: 100,\n      xoffset: 0,\n      yoffset: 0\n    },\n    hdr: {\n      rotate: false,\n      step: 1,\n      border: border,\n      width: 100,\n      height: 100,\n      xoffset: 0,\n      yoffset: 0\n    },\n    row: {\n      rotate: false,\n      step: 1,\n      border: border,\n      width: 100,\n      height: 100,\n      xoffset: 0,\n      yoffset: 0\n    },\n    col: {\n      rotate: false,\n      step: 1,\n      border: border,\n      width: 100,\n      height: 100,\n      xoffset: 0,\n      yoffset: 0\n    }\n  };\n\n  if (iwidth <= 0) {\n    return plan;\n  }\n\n  ; // text boundaries\n\n  var wh = maxWidth(rowvalues, border);\n  var ww = maxWidth(colvalues, border);\n  var zwidth = getTextWidth(label) + 2 * border; //props.theme.spacing.unit;\n  // var zheight=getTextHeight(label) + 2 * border;  //props.theme.spacing.unit;\n  // table boundaries\n\n  var mheight = getTextHeight() + 2 * border; //props.theme.spacing.unit;\n\n  var hwidth = Math.max(wh.max, zwidth) + mheight;\n  var width = iwidth - hwidth; // calculate cell width...\n\n  var mwidth = ww.max; //var swidth=ww.sum;\n\n  var lenc = colvalues.length;\n  var lenr = rowvalues.length;\n  var hh, hw, ch, cw, hx, rot, stp;\n\n  if (mwidth * lenc < width) {\n    // horisontal\n    rot = false;\n    stp = 1;\n    cw = width / lenc;\n    hh = mheight;\n    hx = (plan.cell.width - mwidth) / 2; //console.log(\"Plan (normal):\",JSON.stringify(plan));\n  } else if (mheight * lenc < width) {\n    // rotate\n    rot = true;\n    stp = 1;\n    cw = width / lenc;\n    hh = mwidth;\n    hx = (plan.cell.width - mheight) / 2; //console.log(\"Plan (rot):\",JSON.stringify(plan),lenc,plan.cell.width*lenc);\n  } else {\n    // rotate and use steps\n    rot = true;\n    stp = Math.ceil(lenc * mheight / width);\n    cw = plan.step * width / lenc;\n    hh = mwidth;\n    hx = (plan.cell.width - mheight) / 2; //console.log(\"Plan (rot+step):\",JSON.stringify(plan),lenc,height,width);\n  } // calculate cell height\n\n\n  var height = iheight - plan.hdr.height;\n\n  if (mheight * lenr < height) {\n    // \n    ch = Math.min(mheight * 10, height / lenr);\n  } else {\n    ch = mheight;\n  }\n\n  hw = hwidth;\n  setPlan(plan.cell, {\n    width: cw,\n    height: ch\n  });\n  setPlan(plan.hdr, {\n    width: hw,\n    height: hh\n  });\n  setPlan(plan.col, {\n    width: cw,\n    height: hh,\n    xoffset: hx,\n    step: stp,\n    rotate: rot\n  });\n  setPlan(plan.row, {\n    width: hw,\n    height: ch\n  }); //console.log(\"Plan (finally):\",JSON.stringify(plan),mheight,mwidth,height,width,lenr);\n\n  return plan;\n} // ---------------- DATA\n\n\nfunction DataCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      elements = props.elements,\n      mode = props.mode,\n      plan = props.plan,\n      other = _objectWithoutProperties(props, [\"classes\", \"state\", \"elements\", \"mode\", \"plan\"]);\n\n  if (elements === undefined) {\n    return React.createElement(\"div\", {\n      className: classes.divTableCell,\n      style: {\n        backgroundColor: '#EEE'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    });\n  } else if (mode === state.Show.code.cell.Sum) {\n    return React.createElement(SummaryCell, Object.assign({}, other, {\n      state: state,\n      elements: elements,\n      plan: plan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })); //return null;\n  } else {\n    return React.createElement(SeriesCell, Object.assign({}, other, {\n      state: state,\n      elements: elements,\n      plan: plan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })); //return null;\n  }\n}\n\nfunction renderDataCell(classes, state, colkey, colvalues, colvalue, index, range, mode, plan) {\n  var title = state.Database.getWhereDetail(colkey, colvalues[index]); //console.log(\"Making data cell:\",colvalue,index,JSON.stringify(plan));\n\n  if ((index - 1) % plan.step === 0) {\n    // get elements and range\n    //console.log(\"Processing:\",colvalues[index],plan.step);\n    var elements = state.Matrix.getMatrixElements(colvalues, \"\", state.React.matrix, index, plan.step); //console.log(\"Elements:\",JSON.stringify(elements),mode);\n    // get count and colwhere\n\n    var cnt = Math.min(colvalues.length, index + plan.step) - index;\n    var colwhere = state.Database.getColWhere(colkey, colvalues, index, plan.step);\n    return React.createElement(DataCell, {\n      classes: classes,\n      state: state,\n      key: \"col-\".concat(index),\n      index: index,\n      onclick: onclick,\n      title: title,\n      colkey: colkey,\n      colvalues: colvalues,\n      colval: colvalue,\n      colwhere: colwhere,\n      elements: elements,\n      mode: mode,\n      plan: plan,\n      range: range,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    });\n  } else {\n    return null;\n  }\n}\n\nfunction DataRow(props) {\n  var classes = props.classes,\n      state = props.state,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      mode = props.mode,\n      plan = props.plan;\n  var range = [undefined, undefined];\n\n  if (state.React.matrix !== undefined) {\n    range = state.Matrix.getRange(state, state.React.matrix, colvalues, [\"\"]);\n  }\n\n  ;\n  console.log(\"Matrix:\", JSON.stringify(state.React.matrix));\n  console.log(\"Making data cols.\", colkey, JSON.stringify(colvalues));\n  console.log(\"We have a matrix with range:\", JSON.stringify(range));\n\n  var mapFunction = function mapFunction(colvalue, index) {\n    return renderDataCell(classes, state, colkey, colvalues, colvalue, index, range, mode, plan);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.divTableRow,\n    key: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, colvalues.map(mapFunction));\n}\n\n; // ---------------- HDR\n\nfunction renderHdrCell(classes, state, colkey, colvalues, plan, val, index) {\n  if ((index - 1) % plan.step === 0) {\n    //console.log(\"HdrCell:\",index,plan.step);\n    var cnt = Math.min(colvalues.length, index + plan.step) - index;\n    var colwhere = state.Database.getColWhere(colkey, colvalues, index, plan.step);\n\n    var onclick = function onclick() {\n      return state.Navigate.selectKey(state, colkey, colvalues[index], colwhere, cnt);\n    };\n\n    var title = colwhere;\n    var cursor = classes.divTableCell;\n\n    if (onclick !== undefined) {\n      cursor = classes.divTableCellCursor;\n    }\n\n    return React.createElement(\"div\", {\n      className: cursor,\n      onClick: onclick,\n      style: {\n        backgroundColor: '#DDD'\n      },\n      title: title,\n      key: \"col-\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(CanvasText, {\n      state: state,\n      index: index,\n      plan: plan.col,\n      label: val,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }));\n  } else {\n    return null;\n  }\n}\n\nfunction HdrRow(props) {\n  var classes = props.classes,\n      state = props.state,\n      plan = props.plan,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      label = props.label; //, rowvalues\n  //console.log(\"Making header row.\",colkey,JSON.stringify(colvalues));\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderHdrCell(classes, state, colkey, colvalues, plan, val, index);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.divTableRow,\n    key: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, colvalues.map(mapFunction));\n} // ---------------- Details\n\n\nfunction Details(props) {\n  var classes = props.classes,\n      state = props.state; // classes, element\n\n  var colkey = state.Path.getColKey(state) || \"\";\n  var colvalues = state.Path.filterKeys(state, state.Matrix.values[colkey] || [\"\"]);\n  var cellMode = state.Show.getCellMode(state); //var ncol=colvalues.length + 1;\n  //DOM.style.font\n\n  var border = 2;\n  var label = colkey;\n  var width = 0.8 * window.innerWidth;\n  var height = 0.8 * (window.innerHeight - 200);\n  var plan = makePlan(label, colvalues, [\"\"], width, height, border); //console.log(\"Details => Width/Height:\",window.innerWidth,window.innerHeight,plan.cell.width,plan.hdr.height)\n  //console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(colvalues));\n\n  return React.createElement(\"div\", {\n    className: classes.divTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.divTableBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(HdrRow, {\n    classes: classes,\n    state: state,\n    plan: plan,\n    colkey: colkey,\n    colvalues: colvalues,\n    label: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }), React.createElement(DataRow, {\n    classes: classes,\n    state: state,\n    plan: plan,\n    colkey: colkey,\n    colvalues: colvalues,\n    mode: cellMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  })));\n}\n\nvar Table1D =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Table1D, _Component);\n\n  function Table1D() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Table1D);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Table1D)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.updateWindowDimensions = function () {\n      _this.width = window.innerWidth;\n      _this.height = window.innerHeight;\n      _this.bbx = _this.el.getBoundingClientRect(); //console.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n\n    return _this;\n  }\n\n  _createClass(Table1D, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n  }, {\n    key: \"element\",\n    value: function element(el) {\n      if (el !== undefined && el !== null) {\n        this.el = el;\n        this.bbx = this.el.getBoundingClientRect(); //console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n      }\n\n      ;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state; //console.log(\"##### Rendering Table1D.\");\n\n      return React.createElement(\"div\", {\n        ref: function ref(el) {\n          _this2.element(el);\n        },\n        className: classes.root,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(Details, {\n        state: state,\n        classes: classes,\n        element: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Table1D;\n}(Component);\n\nTable1D.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Table1D);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/Table1DComponent.js"],"names":["React","Component","PropTypes","withStyles","teal_palette","Paper","Grid","SummaryCell","SeriesCell","CanvasText","styles","theme","root","height","paper","overflow","tableLayout","padding","margin","divTable","display","width","divTableRow","divTableCell","border","divTableCellCursor","cursor","divTableHead","divTableHeading","divTableHeadingCenter","justifyContent","divTableFoot","backgroundColor","fontWeight","divTableBody","getTextWidth","txt","fontname","fontsize","c","undefined","document","createElement","ctx","getContext","font","measureText","getTextHeight","maxWidth","values","swidth","mwidth","lenv","length","ii","cwidth","max","sum","setPlan","plan","set","keys","Object","lenk","key","val","makePlan","label","colvalues","rowvalues","iwidth","iheight","cell","rotate","step","xoffset","yoffset","hdr","row","col","wh","ww","zwidth","mheight","hwidth","Math","lenc","lenr","hh","hw","ch","cw","hx","rot","stp","ceil","min","DataCell","props","classes","state","elements","mode","other","Show","code","Sum","renderDataCell","colkey","colvalue","index","range","title","Database","getWhereDetail","Matrix","getMatrixElements","matrix","cnt","colwhere","getColWhere","onclick","DataRow","getRange","console","log","JSON","stringify","mapFunction","map","renderHdrCell","Navigate","selectKey","HdrRow","Details","Path","getColKey","filterKeys","cellMode","getCellMode","window","innerWidth","innerHeight","Table1D","updateWindowDimensions","bbx","el","getBoundingClientRect","addEventListener","element","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAAQC,YAAR,QAA2B,qBAA3B;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAwB,cAAxB;AACA,OAAOC,UAAP,MAAwB,uBAAxB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,IAAI,EAAE;AACTC,MAAAA,MAAM,EAAE;AADC,KADe;AAIrBC,IAAAA,KAAK,EAAE;AACVC,MAAAA,QAAQ,EAAE,QADA;AAEVC,MAAAA,WAAW,EAAE,OAFH;AAGVC,MAAAA,OAAO,EAAC,CAHE;AAIVC,MAAAA,MAAM,EAAC;AAJG,KAJc;AAUrBC,IAAAA,QAAQ,EAAE;AACbC,MAAAA,OAAO,EAAE,OADI;AAEbC,MAAAA,KAAK,EAAE;AAFM,KAVW;AAcrBC,IAAAA,WAAW,EAAG;AACjBF,MAAAA,OAAO,EAAE;AADQ,KAdO;AAiBrBG,IAAAA,YAAY,EAAC;AAChBC,MAAAA,MAAM,EAAE,mBADQ;AAEhBJ,MAAAA,OAAO,EAAE,YAFO;AAGhBH,MAAAA,OAAO,EAAE;AAHO,KAjBQ;AAsBrBQ,IAAAA,kBAAkB,EAAC;AACtBC,MAAAA,MAAM,EAAE,SADc;AAEtBF,MAAAA,MAAM,EAAE,mBAFc;AAGtBJ,MAAAA,OAAO,EAAE,YAHa;AAItBH,MAAAA,OAAO,EAAE;AAJa,KAtBE;AA4BrBU,IAAAA,YAAY,EAAG;AAClBH,MAAAA,MAAM,EAAE,mBADU;AAElBJ,MAAAA,OAAO,EAAE,YAFS;AAGlBH,MAAAA,OAAO,EAAE;AAHS,KA5BM;AAiCrBW,IAAAA,eAAe,EAAG;AACrBR,MAAAA,OAAO,EAAE;AADY,KAjCG;AAoCrBS,IAAAA,qBAAqB,EAAG;AAC3BT,MAAAA,OAAO,EAAE,MADkB;AAE3BU,MAAAA,cAAc,EAAE;AAFW,KApCH;AAwCrBC,IAAAA,YAAY,EAAG;AAClBC,MAAAA,eAAe,EAAE,MADC;AAElBZ,MAAAA,OAAO,EAAE,oBAFS;AAGlBa,MAAAA,UAAU,EAAE;AAHM,KAxCM;AA6CrBC,IAAAA,YAAY,EAAG;AAClBd,MAAAA,OAAO,EAAE;AADS;AA7CM,GAAL;AAAA,CAApB,C,CAkDA;;;AAEA,SAASe,YAAT,CAAsBC,GAAtB,EAA2BC,QAA3B,EAAqCC,QAArC,EAA8C;AAC1C,MAAGH,YAAY,CAACI,CAAb,KAAmBC,SAAtB,EAAgC;AAC5BL,IAAAA,YAAY,CAACI,CAAb,GAAeE,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAP,IAAAA,YAAY,CAACQ,GAAb,GAAiBR,YAAY,CAACI,CAAb,CAAeK,UAAf,CAA0B,IAA1B,CAAjB;AACH;;AACD,MAAIP,QAAQ,KAAKG,SAAjB,EAA4B;AAC/BL,IAAAA,YAAY,CAACQ,GAAb,CAAiBE,IAAjB,GAAwBP,QAAQ,GAAG,GAAX,GAAiBD,QAAzC;AACI;;AACD,SAAOF,YAAY,CAACQ,GAAb,CAAiBG,WAAjB,CAA6BV,GAA7B,EAAkCf,KAAzC;AACH;;AAAA;;AACD,SAAS0B,aAAT,CAAuBV,QAAvB,EAAiCC,QAAjC,EAA0C;AACtC,MAAGS,aAAa,CAACR,CAAd,KAAoBC,SAAvB,EAAiC;AAC7BO,IAAAA,aAAa,CAACR,CAAd,GAAgBE,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAhB;AACAK,IAAAA,aAAa,CAACJ,GAAd,GAAkBI,aAAa,CAACR,CAAd,CAAgBK,UAAhB,CAA2B,IAA3B,CAAlB;AACH;;AACD,MAAIP,QAAQ,KAAKG,SAAjB,EAA4B;AAC/BO,IAAAA,aAAa,CAACJ,GAAd,CAAkBE,IAAlB,GAAyBP,QAAQ,GAAG,GAAX,GAAiBD,QAA1C;AACI;;AACD,SAAOU,aAAa,CAACJ,GAAd,CAAkBG,WAAlB,CAA8B,GAA9B,EAAmCzB,KAA1C;AACH;;AACD,SAAS2B,QAAT,CAAkBC,MAAlB,EAAyBzB,MAAzB,EAAiC;AAC7B,MAAI0B,MAAM,GAAC,CAAX;AACA,MAAIC,MAAM,GAAC,CAAX;AACA,MAAIC,IAAI,GAACH,MAAM,CAACI,MAAhB;;AACA,OAAK,IAAIC,EAAE,GAAC,CAAZ,EAAcA,EAAE,GAACF,IAAjB,EAAsBE,EAAE,EAAxB,EAA4B;AAC/B,QAAIC,MAAM,GAAGpB,YAAY,CAACc,MAAM,CAACK,EAAD,CAAP,CAAZ,GAAyB,IAAE9B,MAAxC;;AACA,QAAI+B,MAAM,GAAGJ,MAAb,EAAqB;AACjBA,MAAAA,MAAM,GAACI,MAAP;AACH;;AACDL,IAAAA,MAAM,GAACA,MAAM,GAACK,MAAd;AACI;;AACD,SAAO;AAACC,IAAAA,GAAG,EAACL,MAAL;AAAYM,IAAAA,GAAG,EAACP;AAAhB,GAAP;AACH;;AACD,SAASQ,OAAT,CAAiBC,IAAjB,EAAsBC,GAAtB,EAA2B;AACvB,MAAIC,IAAI,GAACC,MAAM,CAACD,IAAP,CAAYD,GAAZ,CAAT;AACA,MAAIG,IAAI,GAACF,IAAI,CAACR,MAAd;;AACA,OAAK,IAAIC,EAAE,GAAC,CAAZ,EAAeA,EAAE,GAACS,IAAlB,EAAwBT,EAAE,EAA1B,EAA8B;AACjC,QAAIU,GAAG,GAACH,IAAI,CAACP,EAAD,CAAZ;AACA,QAAIW,GAAG,GAACL,GAAG,CAACI,GAAD,CAAX;AACAL,IAAAA,IAAI,CAACK,GAAD,CAAJ,GAAUC,GAAV;AACI;;AAAA;AACJ;;AACD,SAASC,QAAT,CAAkBC,KAAlB,EAAwBC,SAAxB,EAAkCC,SAAlC,EAA4CC,MAA5C,EAAmDC,OAAnD,EAA2D/C,MAA3D,EAAmE;AAC/D,MAAImC,IAAI,GAAC;AAACa,IAAAA,IAAI,EAAC;AAACC,MAAAA,MAAM,EAAC,KAAR;AAAcC,MAAAA,IAAI,EAAC,CAAnB;AAAqBlD,MAAAA,MAAM,EAACA,MAA5B;AAAmCH,MAAAA,KAAK,EAAC,GAAzC;AAA6CR,MAAAA,MAAM,EAAC,GAApD;AAAwD8D,MAAAA,OAAO,EAAC,CAAhE;AAAkEC,MAAAA,OAAO,EAAC;AAA1E,KAAN;AACNC,IAAAA,GAAG,EAAC;AAACJ,MAAAA,MAAM,EAAC,KAAR;AAAcC,MAAAA,IAAI,EAAC,CAAnB;AAAqBlD,MAAAA,MAAM,EAACA,MAA5B;AAAmCH,MAAAA,KAAK,EAAC,GAAzC;AAA6CR,MAAAA,MAAM,EAAC,GAApD;AAAwD8D,MAAAA,OAAO,EAAC,CAAhE;AAAkEC,MAAAA,OAAO,EAAC;AAA1E,KADE;AAENE,IAAAA,GAAG,EAAC;AAACL,MAAAA,MAAM,EAAC,KAAR;AAAcC,MAAAA,IAAI,EAAC,CAAnB;AAAqBlD,MAAAA,MAAM,EAACA,MAA5B;AAAmCH,MAAAA,KAAK,EAAC,GAAzC;AAA6CR,MAAAA,MAAM,EAAC,GAApD;AAAwD8D,MAAAA,OAAO,EAAC,CAAhE;AAAkEC,MAAAA,OAAO,EAAC;AAA1E,KAFE;AAGNG,IAAAA,GAAG,EAAC;AAACN,MAAAA,MAAM,EAAC,KAAR;AAAcC,MAAAA,IAAI,EAAC,CAAnB;AAAqBlD,MAAAA,MAAM,EAACA,MAA5B;AAAmCH,MAAAA,KAAK,EAAC,GAAzC;AAA6CR,MAAAA,MAAM,EAAC,GAApD;AAAwD8D,MAAAA,OAAO,EAAC,CAAhE;AAAkEC,MAAAA,OAAO,EAAC;AAA1E;AAHE,GAAT;;AAIA,MAAIN,MAAM,IAAI,CAAd,EAAiB;AAAE,WAAOX,IAAP;AAAa;;AAAA,GAL+B,CAM/D;;AACA,MAAIqB,EAAE,GAAChC,QAAQ,CAACqB,SAAD,EAAW7C,MAAX,CAAf;AACA,MAAIyD,EAAE,GAACjC,QAAQ,CAACoB,SAAD,EAAW5C,MAAX,CAAf;AACA,MAAI0D,MAAM,GAAE/C,YAAY,CAACgC,KAAD,CAAZ,GAAsB,IAAI3C,MAAtC,CAT+D,CASf;AAChD;AACA;;AACA,MAAI2D,OAAO,GAACpC,aAAa,KAAK,IAAIvB,MAAlC,CAZ+D,CAYf;;AAChD,MAAI4D,MAAM,GAACC,IAAI,CAAC7B,GAAL,CAASwB,EAAE,CAACxB,GAAZ,EAAgB0B,MAAhB,IAA0BC,OAArC;AACA,MAAI9D,KAAK,GAACiD,MAAM,GAACc,MAAjB,CAd+D,CAe/D;;AACA,MAAIjC,MAAM,GAAC8B,EAAE,CAACzB,GAAd,CAhB+D,CAiB/D;;AACA,MAAI8B,IAAI,GAAClB,SAAS,CAACf,MAAnB;AACA,MAAIkC,IAAI,GAAClB,SAAS,CAAChB,MAAnB;AACA,MAAImC,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB,EAAoBC,EAApB,EAAwBC,GAAxB,EAA6BC,GAA7B;;AACA,MAAI3C,MAAM,GAACmC,IAAP,GAAcjE,KAAlB,EAAyB;AAAE;AAC9BwE,IAAAA,GAAG,GAAC,KAAJ;AACAC,IAAAA,GAAG,GAAC,CAAJ;AACAH,IAAAA,EAAE,GAACtE,KAAK,GAACiE,IAAT;AACAE,IAAAA,EAAE,GAACL,OAAH;AACAS,IAAAA,EAAE,GAAC,CAACjC,IAAI,CAACa,IAAL,CAAUnD,KAAV,GAAgB8B,MAAjB,IAAyB,CAA5B,CAL4B,CAM5B;AACI,GAPD,MAOO,IAAIgC,OAAO,GAACG,IAAR,GAAejE,KAAnB,EAA0B;AAAE;AACtCwE,IAAAA,GAAG,GAAC,IAAJ;AACAC,IAAAA,GAAG,GAAC,CAAJ;AACAH,IAAAA,EAAE,GAACtE,KAAK,GAACiE,IAAT;AACAE,IAAAA,EAAE,GAACrC,MAAH;AACAyC,IAAAA,EAAE,GAAC,CAACjC,IAAI,CAACa,IAAL,CAAUnD,KAAV,GAAgB8D,OAAjB,IAA0B,CAA7B,CALoC,CAMpC;AACI,GAPM,MAOA;AAAE;AACZU,IAAAA,GAAG,GAAC,IAAJ;AACAC,IAAAA,GAAG,GAACT,IAAI,CAACU,IAAL,CAAUT,IAAI,GAACH,OAAL,GAAa9D,KAAvB,CAAJ;AACAsE,IAAAA,EAAE,GAAChC,IAAI,CAACe,IAAL,GAAUrD,KAAV,GAAgBiE,IAAnB;AACAE,IAAAA,EAAE,GAACrC,MAAH;AACAyC,IAAAA,EAAE,GAAC,CAACjC,IAAI,CAACa,IAAL,CAAUnD,KAAV,GAAgB8D,OAAjB,IAA0B,CAA7B,CALU,CAMV;AACI,GA1C8D,CA2C/D;;;AACA,MAAItE,MAAM,GAAC0D,OAAO,GAACZ,IAAI,CAACkB,GAAL,CAAShE,MAA5B;;AACA,MAAIsE,OAAO,GAACI,IAAR,GAAe1E,MAAnB,EAA2B;AAAE;AAChC6E,IAAAA,EAAE,GAACL,IAAI,CAACW,GAAL,CAASb,OAAO,GAAC,EAAjB,EAAoBtE,MAAM,GAAC0E,IAA3B,CAAH;AACI,GAFD,MAEO;AACVG,IAAAA,EAAE,GAACP,OAAH;AACI;;AACDM,EAAAA,EAAE,GAACL,MAAH;AACA1B,EAAAA,OAAO,CAACC,IAAI,CAACa,IAAN,EAAW;AAACnD,IAAAA,KAAK,EAACsE,EAAP;AAAU9E,IAAAA,MAAM,EAAC6E;AAAjB,GAAX,CAAP;AACAhC,EAAAA,OAAO,CAACC,IAAI,CAACkB,GAAN,EAAW;AAACxD,IAAAA,KAAK,EAACoE,EAAP;AAAU5E,IAAAA,MAAM,EAAC2E;AAAjB,GAAX,CAAP;AACA9B,EAAAA,OAAO,CAACC,IAAI,CAACoB,GAAN,EAAW;AAAC1D,IAAAA,KAAK,EAACsE,EAAP;AAAU9E,IAAAA,MAAM,EAAC2E,EAAjB;AAAoBb,IAAAA,OAAO,EAACiB,EAA5B;AAA+BlB,IAAAA,IAAI,EAACoB,GAApC;AAAwCrB,IAAAA,MAAM,EAACoB;AAA/C,GAAX,CAAP;AACAnC,EAAAA,OAAO,CAACC,IAAI,CAACmB,GAAN,EAAW;AAACzD,IAAAA,KAAK,EAACoE,EAAP;AAAU5E,IAAAA,MAAM,EAAC6E;AAAjB,GAAX,CAAP,CAtD+D,CAuD/D;;AACA,SAAO/B,IAAP;AACH,C,CACD;;;AACA,SAASsC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,MACdC,OADc,GAC6BD,KAD7B,CACdC,OADc;AAAA,MACNC,KADM,GAC6BF,KAD7B,CACNE,KADM;AAAA,MACAC,QADA,GAC6BH,KAD7B,CACAG,QADA;AAAA,MACSC,IADT,GAC6BJ,KAD7B,CACSI,IADT;AAAA,MACc3C,IADd,GAC6BuC,KAD7B,CACcvC,IADd;AAAA,MACsB4C,KADtB,4BAC6BL,KAD7B;;AAErB,MAAIG,QAAQ,KAAG7D,SAAf,EAA0B;AAC7B,WAAO;AAAK,MAAA,SAAS,EAAE2D,OAAO,CAAC5E,YAAxB;AAAsC,MAAA,KAAK,EAAE;AAACS,QAAAA,eAAe,EAAC;AAAjB,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACI,GAFD,MAEO,IAAIsE,IAAI,KAAGF,KAAK,CAACI,IAAN,CAAWC,IAAX,CAAgBjC,IAAhB,CAAqBkC,GAAhC,EAAqC;AAC/C,WAAO,oBAAC,WAAD,oBAAiBH,KAAjB;AAAwB,MAAA,KAAK,EAAEH,KAA/B;AAAsC,MAAA,QAAQ,EAAEC,QAAhD;AAA0D,MAAA,IAAI,EAAE1C,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP,CAD+C,CAE/C;AACI,GAHM,MAGA;AACV,WAAO,oBAAC,UAAD,oBAAgB4C,KAAhB;AAAuB,MAAA,KAAK,EAAEH,KAA9B;AAAqC,MAAA,QAAQ,EAAEC,QAA/C;AAAyD,MAAA,IAAI,EAAE1C,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP,CADU,CAEV;AACI;AACJ;;AACD,SAASgD,cAAT,CAAwBR,OAAxB,EAAgCC,KAAhC,EAAsCQ,MAAtC,EAA6CxC,SAA7C,EAAuDyC,QAAvD,EAAgEC,KAAhE,EAAsEC,KAAtE,EAA4ET,IAA5E,EAAiF3C,IAAjF,EAAuF;AACnF,MAAIqD,KAAK,GAACZ,KAAK,CAACa,QAAN,CAAeC,cAAf,CAA8BN,MAA9B,EAAqCxC,SAAS,CAAC0C,KAAD,CAA9C,CAAV,CADmF,CAEnF;;AACA,MAAI,CAACA,KAAK,GAAC,CAAP,IAAUnD,IAAI,CAACe,IAAf,KAAwB,CAA5B,EAA+B;AAClC;AACA;AACA,QAAI2B,QAAQ,GAACD,KAAK,CAACe,MAAN,CAAaC,iBAAb,CAA+BhD,SAA/B,EAAyC,EAAzC,EAA4CgC,KAAK,CAACpG,KAAN,CAAYqH,MAAxD,EAA+DP,KAA/D,EAAqEnD,IAAI,CAACe,IAA1E,CAAb,CAHkC,CAIlC;AACA;;AACO,QAAI4C,GAAG,GAAGjC,IAAI,CAACW,GAAL,CAAS5B,SAAS,CAACf,MAAnB,EAA0ByD,KAAK,GAACnD,IAAI,CAACe,IAArC,IAA2CoC,KAArD;AACA,QAAIS,QAAQ,GAAGnB,KAAK,CAACa,QAAN,CAAeO,WAAf,CAA2BZ,MAA3B,EAAkCxC,SAAlC,EAA4C0C,KAA5C,EAAkDnD,IAAI,CAACe,IAAvD,CAAf;AACP,WAAQ,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAEyB,OAAnB;AAA4B,MAAA,KAAK,EAAEC,KAAnC;AAA0C,MAAA,GAAG,gBAASU,KAAT,CAA7C;AAA+D,MAAA,KAAK,EAAEA,KAAtE;AAA6E,MAAA,OAAO,EAAEW,OAAtF;AAA+F,MAAA,KAAK,EAAET,KAAtG;AACP,MAAA,MAAM,EAAEJ,MADD;AACS,MAAA,SAAS,EAAExC,SADpB;AAC+B,MAAA,MAAM,EAAEyC,QADvC;AACiD,MAAA,QAAQ,EAAEU,QAD3D;AAEP,MAAA,QAAQ,EAAElB,QAFH;AAEa,MAAA,IAAI,EAAEC,IAFnB;AAEyB,MAAA,IAAI,EAAE3C,IAF/B;AAEqC,MAAA,KAAK,EAAEoD,KAF5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AAGI,GAXD,MAWO;AACV,WAAO,IAAP;AACI;AACJ;;AACD,SAASW,OAAT,CAAiBxB,KAAjB,EAAwB;AAAA,MACbC,OADa,GAC+BD,KAD/B,CACbC,OADa;AAAA,MACLC,KADK,GAC+BF,KAD/B,CACLE,KADK;AAAA,MACCQ,MADD,GAC+BV,KAD/B,CACCU,MADD;AAAA,MACQxC,SADR,GAC+B8B,KAD/B,CACQ9B,SADR;AAAA,MACkBkC,IADlB,GAC+BJ,KAD/B,CACkBI,IADlB;AAAA,MACuB3C,IADvB,GAC+BuC,KAD/B,CACuBvC,IADvB;AAEpB,MAAIoD,KAAK,GAAC,CAACvE,SAAD,EAAWA,SAAX,CAAV;;AACA,MAAI4D,KAAK,CAACpG,KAAN,CAAYqH,MAAZ,KAAqB7E,SAAzB,EAAoC;AACvCuE,IAAAA,KAAK,GAACX,KAAK,CAACe,MAAN,CAAaQ,QAAb,CAAsBvB,KAAtB,EAA4BA,KAAK,CAACpG,KAAN,CAAYqH,MAAxC,EAA+CjD,SAA/C,EAAyD,CAAC,EAAD,CAAzD,CAAN;AACI;;AAAA;AAEDwD,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBC,IAAI,CAACC,SAAL,CAAe3B,KAAK,CAACpG,KAAN,CAAYqH,MAA3B,CAAtB;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCjB,MAAhC,EAAuCkB,IAAI,CAACC,SAAL,CAAe3D,SAAf,CAAvC;AACAwD,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA2CC,IAAI,CAACC,SAAL,CAAehB,KAAf,CAA3C;;AACA,MAAIiB,WAAW,GAAE,SAAbA,WAAa,CAACnB,QAAD,EAAUC,KAAV;AAAA,WAAkBH,cAAc,CAACR,OAAD,EAASC,KAAT,EAAeQ,MAAf,EAAsBxC,SAAtB,EAAgCyC,QAAhC,EAAyCC,KAAzC,EAA+CC,KAA/C,EAAqDT,IAArD,EAA0D3C,IAA1D,CAAhC;AAAA,GAAjB;;AACA,SAAQ;AAAK,IAAA,SAAS,EAAEwC,OAAO,CAAC7E,WAAxB;AAAqC,IAAA,GAAG,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH8C,SAAS,CAAC6D,GAAV,CAAcD,WAAd,CADG,CAAR;AAGH;;AAAA,C,CAED;;AACA,SAASE,aAAT,CAAuB/B,OAAvB,EAA+BC,KAA/B,EAAqCQ,MAArC,EAA4CxC,SAA5C,EAAsDT,IAAtD,EAA2DM,GAA3D,EAA+D6C,KAA/D,EAAsE;AAClE,MAAI,CAACA,KAAK,GAAC,CAAP,IAAUnD,IAAI,CAACe,IAAf,KAAwB,CAA5B,EAA+B;AAClC;AACO,QAAI4C,GAAG,GAAGjC,IAAI,CAACW,GAAL,CAAS5B,SAAS,CAACf,MAAnB,EAA0ByD,KAAK,GAACnD,IAAI,CAACe,IAArC,IAA2CoC,KAArD;AACA,QAAIS,QAAQ,GAAGnB,KAAK,CAACa,QAAN,CAAeO,WAAf,CAA2BZ,MAA3B,EAAkCxC,SAAlC,EAA4C0C,KAA5C,EAAkDnD,IAAI,CAACe,IAAvD,CAAf;;AACP,QAAI+C,OAAO,GAAC,SAARA,OAAQ;AAAA,aAAMrB,KAAK,CAAC+B,QAAN,CAAeC,SAAf,CAAyBhC,KAAzB,EAA+BQ,MAA/B,EAAsCxC,SAAS,CAAC0C,KAAD,CAA/C,EAAuDS,QAAvD,EAAgED,GAAhE,CAAN;AAAA,KAAZ;;AACA,QAAIN,KAAK,GAACO,QAAV;AACA,QAAI7F,MAAM,GAACyE,OAAO,CAAC5E,YAAnB;;AACA,QAAIkG,OAAO,KAAKjF,SAAhB,EAA2B;AACvBd,MAAAA,MAAM,GAACyE,OAAO,CAAC1E,kBAAf;AACH;;AACD,WAAQ;AAAK,MAAA,SAAS,EAAEC,MAAhB;AAAwB,MAAA,OAAO,EAAE+F,OAAjC;AAA0C,MAAA,KAAK,EAAE;AAACzF,QAAAA,eAAe,EAAC;AAAjB,OAAjD;AAA2E,MAAA,KAAK,EAAEgF,KAAlF;AAAyF,MAAA,GAAG,gBAASF,KAAT,CAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEV,KAAnB;AAA0B,MAAA,KAAK,EAAEU,KAAjC;AAAwC,MAAA,IAAI,EAAEnD,IAAI,CAACoB,GAAnD;AAAwD,MAAA,KAAK,EAAEd,GAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,CAAR;AAGK,GAbF,MAaQ;AACX,WAAO,IAAP;AACI;AACJ;;AACD,SAASoE,MAAT,CAAgBnC,KAAhB,EAAuB;AAAA,MACXC,OADW,GACwCD,KADxC,CACXC,OADW;AAAA,MACFC,KADE,GACwCF,KADxC,CACFE,KADE;AAAA,MACKzC,IADL,GACwCuC,KADxC,CACKvC,IADL;AAAA,MACWiD,MADX,GACwCV,KADxC,CACWU,MADX;AAAA,MACmBxC,SADnB,GACwC8B,KADxC,CACmB9B,SADnB;AAAA,MAC8BD,KAD9B,GACwC+B,KADxC,CAC8B/B,KAD9B,EAC+C;AAClE;;AACA,MAAI6D,WAAW,GAAE,SAAbA,WAAa,CAAC/D,GAAD,EAAK6C,KAAL;AAAA,WAAaoB,aAAa,CAAC/B,OAAD,EAASC,KAAT,EAAeQ,MAAf,EAAsBxC,SAAtB,EAAgCT,IAAhC,EAAqCM,GAArC,EAAyC6C,KAAzC,CAA1B;AAAA,GAAjB;;AACA,SAAQ;AAAK,IAAA,SAAS,EAAEX,OAAO,CAAC7E,WAAxB;AAAqC,IAAA,GAAG,EAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH8C,SAAS,CAAC6D,GAAV,CAAcD,WAAd,CADG,CAAR;AAGH,C,CACD;;;AACA,SAASM,OAAT,CAAiBpC,KAAjB,EAAwB;AAAA,MACZC,OADY,GACOD,KADP,CACZC,OADY;AAAA,MACHC,KADG,GACOF,KADP,CACHE,KADG,EACc;;AAClC,MAAIQ,MAAM,GAAGR,KAAK,CAACmC,IAAN,CAAWC,SAAX,CAAqBpC,KAArB,KAA6B,EAA1C;AACA,MAAIhC,SAAS,GAAGgC,KAAK,CAACmC,IAAN,CAAWE,UAAX,CAAsBrC,KAAtB,EAA4BA,KAAK,CAACe,MAAN,CAAalE,MAAb,CAAoB2D,MAApB,KAA6B,CAAC,EAAD,CAAzD,CAAhB;AACA,MAAI8B,QAAQ,GAAItC,KAAK,CAACI,IAAN,CAAWmC,WAAX,CAAuBvC,KAAvB,CAAhB,CAJoB,CAKpB;AACA;;AACA,MAAI5E,MAAM,GAAC,CAAX;AACA,MAAI2C,KAAK,GAACyC,MAAV;AACA,MAAIvF,KAAK,GAAC,MAAIuH,MAAM,CAACC,UAArB;AACA,MAAIhI,MAAM,GAAC,OAAK+H,MAAM,CAACE,WAAP,GAAmB,GAAxB,CAAX;AACA,MAAInF,IAAI,GAACO,QAAQ,CAACC,KAAD,EAAOC,SAAP,EAAiB,CAAC,EAAD,CAAjB,EAAsB/C,KAAtB,EAA4BR,MAA5B,EAAmCW,MAAnC,CAAjB,CAXoB,CAYpB;AACA;;AAEA,SAAQ;AAAK,IAAA,SAAS,EAAE2E,OAAO,CAAChF,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ;AAAK,IAAA,SAAS,EAAEgF,OAAO,CAACjE,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEiE,OAAjB;AAA0B,IAAA,KAAK,EAAEC,KAAjC;AAAwC,IAAA,IAAI,EAAEzC,IAA9C;AAAoD,IAAA,MAAM,EAAEiD,MAA5D;AAAoE,IAAA,SAAS,EAAExC,SAA/E;AAA0F,IAAA,KAAK,EAAED,KAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAEG,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEgC,OAAlB;AAA2B,IAAA,KAAK,EAAEC,KAAlC;AAAyC,IAAA,IAAI,EAAEzC,IAA/C;AAAqD,IAAA,MAAM,EAAEiD,MAA7D;AAAqE,IAAA,SAAS,EAAExC,SAAhF;AAA2F,IAAA,IAAI,EAAEsE,QAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CADI,CAAR;AAMF;;IACIK,O;;;;;;;;;;;;;;;;;;UAIFC,sB,GAAyB,YAAM;AAC3B,YAAK3H,KAAL,GAAYuH,MAAM,CAACC,UAAnB;AACP,YAAKhI,MAAL,GAAY+H,MAAM,CAACE,WAAnB;AACA,YAAKG,GAAL,GAAS,MAAKC,EAAL,CAAQC,qBAAR,EAAT,CAHkC,CAIlC;AACI,K;;;;;;;wCARmB;AAChBP,MAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkC,KAAKJ,sBAAvC;AACH;;;4BAOOE,E,EAAI;AACf,UAAIA,EAAE,KAAK1G,SAAP,IAAoB0G,EAAE,KAAK,IAA/B,EAAqC;AACjC,aAAKA,EAAL,GAAQA,EAAR;AACA,aAAKD,GAAL,GAAS,KAAKC,EAAL,CAAQC,qBAAR,EAAT,CAFiC,CAGjC;AACH;;AAAA;AACG;;;6BACQ;AAAA;;AAAA,wBACe,KAAKjD,KADpB;AAAA,UACJC,OADI,eACJA,OADI;AAAA,UACKC,KADL,eACKA,KADL,EAEZ;;AACA,aAAQ;AAAK,QAAA,GAAG,EAAE,aAAA8C,EAAE,EAAE;AAAC,UAAA,MAAI,CAACG,OAAL,CAAaH,EAAb;AAAiB,SAAhC;AAAkC,QAAA,SAAS,EAAE/C,OAAO,CAACvF,IAArD;AAA4D,QAAA,KAAK,EAAE;AAACS,UAAAA,KAAK,EAAE,MAAR;AAAgBR,UAAAA,MAAM,EAAE;AAAxB,SAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACmB,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEsF,OAAO,CAACrF,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACX,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEsF,KAAhB;AAAuB,QAAA,OAAO,EAAED,OAAhC;AAAyC,QAAA,OAAO,EAAE,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADW,CADnB,CADH,CADI,CAAR;AASI;;;;EA7BiBlG,S;;AAgCtB8I,OAAO,CAACO,SAAR,GAAoB;AAChBnD,EAAAA,OAAO,EAAEjG,SAAS,CAACqJ,MAAV,CAAiBC;AADV,CAApB;AAIA,eAAerJ,UAAU,CAACO,MAAD,CAAV,CAAmBqI,OAAnB,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport {teal_palette} from '../mui/metMuiThemes';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport SummaryCell from './SummaryCell';\nimport SeriesCell  from './SeriesCell';\nimport CanvasText  from './CanvasTextComponent';\n\nconst styles = theme => ({\n    root: {\n\theight: '100%',\n    },\n    paper: {\n\toverflow: 'hidden',\n\ttableLayout: 'fixed',\n\tpadding:0,\n\tmargin:0,\n    },\n    divTable :{\n\tdisplay: 'table',\n\twidth: '100%',\n    },\n    divTableRow:  {\n\tdisplay: 'table-row',\n    },\n    divTableCell:{\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableCellCursor:{\n\tcursor: \"pointer\",\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableHead : {\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableHeading : {\n\tdisplay: 'table-header-group',\n    },\n    divTableHeadingCenter : {\n\tdisplay: 'flex',\n\tjustifyContent: 'center',\n    },\n    divTableFoot : {\n\tbackgroundColor: '#DDD',\n\tdisplay: 'table-footer-group',\n\tfontWeight: 'bold',\n    },\n    divTableBody : {\n\tdisplay: 'table-row-group',\n    }\n});\n\n//const mui = createTheme({palette:teal_palette});\n\nfunction getTextWidth(txt, fontname, fontsize){\n    if(getTextWidth.c === undefined){\n        getTextWidth.c=document.createElement('canvas');\n        getTextWidth.ctx=getTextWidth.c.getContext('2d');\n    }\n    if (fontname !== undefined) {\n\tgetTextWidth.ctx.font = fontsize + ' ' + fontname;\n    }\n    return getTextWidth.ctx.measureText(txt).width;\n};\nfunction getTextHeight(fontname, fontsize){\n    if(getTextHeight.c === undefined){\n        getTextHeight.c=document.createElement('canvas');\n        getTextHeight.ctx=getTextHeight.c.getContext('2d');\n    }\n    if (fontname !== undefined) {\n\tgetTextHeight.ctx.font = fontsize + ' ' + fontname;\n    }\n    return getTextHeight.ctx.measureText('M').width;\n}\nfunction maxWidth(values,border) {\n    var swidth=0;\n    var mwidth=0;\n    var lenv=values.length;\n    for (var ii=0;ii<lenv;ii++) {\n\tvar cwidth = getTextWidth(values[ii])+2*border;\n\tif (cwidth > mwidth) {\n\t    mwidth=cwidth;\n\t}\n\tswidth=swidth+cwidth;\n    }\n    return {max:mwidth,sum:swidth};\n}\nfunction setPlan(plan,set) {\n    var keys=Object.keys(set);\n    var lenk=keys.length;\n    for (var ii=0; ii<lenk; ii++) {\n\tvar key=keys[ii];\n\tvar val=set[key];\n\tplan[key]=val;\n    };\n}\nfunction makePlan(label,colvalues,rowvalues,iwidth,iheight,border) {\n    var plan={cell:{rotate:false,step:1,border:border,width:100,height:100,xoffset:0,yoffset:0}, \n\t      hdr:{rotate:false,step:1,border:border,width:100,height:100,xoffset:0,yoffset:0},\n\t      row:{rotate:false,step:1,border:border,width:100,height:100,xoffset:0,yoffset:0},\n\t      col:{rotate:false,step:1,border:border,width:100,height:100,xoffset:0,yoffset:0}};\n    if (iwidth <= 0) { return plan;};\n    // text boundaries\n    var wh=maxWidth(rowvalues,border);\n    var ww=maxWidth(colvalues,border);\n    var zwidth =getTextWidth(label) + 2 * border;   //props.theme.spacing.unit;\n    // var zheight=getTextHeight(label) + 2 * border;  //props.theme.spacing.unit;\n    // table boundaries\n    var mheight=getTextHeight() + 2 * border;       //props.theme.spacing.unit;\n    var hwidth=Math.max(wh.max,zwidth) + mheight;\n    var width=iwidth-hwidth;\n    // calculate cell width...\n    var mwidth=ww.max;\n    //var swidth=ww.sum;\n    var lenc=colvalues.length;\n    var lenr=rowvalues.length;\n    var hh, hw, ch, cw, hx, rot, stp;\n    if (mwidth*lenc < width) { // horisontal\n\trot=false;\n\tstp=1\n\tcw=width/lenc;\n\thh=mheight;\n\thx=(plan.cell.width-mwidth)/2;\n\t//console.log(\"Plan (normal):\",JSON.stringify(plan));\n    } else if (mheight*lenc < width) { // rotate\n\trot=true;\n\tstp=1\n\tcw=width/lenc;\n\thh=mwidth;\n\thx=(plan.cell.width-mheight)/2;\n\t//console.log(\"Plan (rot):\",JSON.stringify(plan),lenc,plan.cell.width*lenc);\n    } else { // rotate and use steps\n\trot=true;\n\tstp=Math.ceil(lenc*mheight/width);\n\tcw=plan.step*width/lenc;\n\thh=mwidth;\n\thx=(plan.cell.width-mheight)/2;\n\t//console.log(\"Plan (rot+step):\",JSON.stringify(plan),lenc,height,width);\n    }\n    // calculate cell height\n    var height=iheight-plan.hdr.height;\n    if (mheight*lenr < height) { // \n\tch=Math.min(mheight*10,height/lenr);\n    } else {\n\tch=mheight;\n    }\n    hw=hwidth;\n    setPlan(plan.cell,{width:cw,height:ch});\n    setPlan(plan.hdr, {width:hw,height:hh});\n    setPlan(plan.col, {width:cw,height:hh,xoffset:hx,step:stp,rotate:rot});\n    setPlan(plan.row, {width:hw,height:ch});    \n    //console.log(\"Plan (finally):\",JSON.stringify(plan),mheight,mwidth,height,width,lenr);\n    return plan;\n}\n// ---------------- DATA\nfunction DataCell(props) {\n    const {classes,state,elements,mode,plan,...other}=props;\n    if (elements===undefined) {\n\treturn <div className={classes.divTableCell} style={{backgroundColor:'#EEE'}}/>\n    } else if (mode===state.Show.code.cell.Sum) {\n\treturn <SummaryCell {...other} state={state} elements={elements} plan={plan}/>\n\t//return null;\n    } else {\n\treturn <SeriesCell {...other} state={state} elements={elements} plan={plan}/>\n\t//return null;\n    }\n}\nfunction renderDataCell(classes,state,colkey,colvalues,colvalue,index,range,mode,plan) {\n    var title=state.Database.getWhereDetail(colkey,colvalues[index]);\n    //console.log(\"Making data cell:\",colvalue,index,JSON.stringify(plan));\n    if ((index-1)%plan.step === 0) {\n\t// get elements and range\n\t//console.log(\"Processing:\",colvalues[index],plan.step);\n\tvar elements=state.Matrix.getMatrixElements(colvalues,\"\",state.React.matrix,index,plan.step);\n\t//console.log(\"Elements:\",JSON.stringify(elements),mode);\n\t// get count and colwhere\n        var cnt = Math.min(colvalues.length,index+plan.step)-index;\n        var colwhere = state.Database.getColWhere(colkey,colvalues,index,plan.step);\n\treturn (<DataCell classes={classes} state={state} key={`col-${index}`} index={index} onclick={onclick} title={title} \n\t\tcolkey={colkey} colvalues={colvalues} colval={colvalue} colwhere={colwhere}\n\t\telements={elements} mode={mode} plan={plan} range={range}/>);\n    } else {\n\treturn null;\n    }\n}\nfunction DataRow(props) {\n    const {classes,state,colkey,colvalues,mode,plan} = props;\n    var range=[undefined,undefined];\n    if (state.React.matrix!==undefined) {\n\trange=state.Matrix.getRange(state,state.React.matrix,colvalues,[\"\"]);\n    };\n\n    console.log(\"Matrix:\",JSON.stringify(state.React.matrix));\n\n    console.log(\"Making data cols.\",colkey,JSON.stringify(colvalues));\n    console.log(\"We have a matrix with range:\",JSON.stringify(range));\n    var mapFunction= (colvalue,index)=>renderDataCell(classes,state,colkey,colvalues,colvalue,index,range,mode,plan);\n    return (<div className={classes.divTableRow} key={\"1\"}>\n\t       {colvalues.map(mapFunction)}\n\t    </div>);\n};\n\n// ---------------- HDR\nfunction renderHdrCell(classes,state,colkey,colvalues,plan,val,index) {\n    if ((index-1)%plan.step === 0) {\n\t//console.log(\"HdrCell:\",index,plan.step);\n        var cnt = Math.min(colvalues.length,index+plan.step)-index;\n        var colwhere = state.Database.getColWhere(colkey,colvalues,index,plan.step);\n\tvar onclick=() => state.Navigate.selectKey(state,colkey,colvalues[index],colwhere,cnt);\n\tvar title=colwhere;\n\tvar cursor=classes.divTableCell;\n\tif (onclick !== undefined) {\n\t    cursor=classes.divTableCellCursor;\n\t}\n\treturn (<div className={cursor} onClick={onclick} style={{backgroundColor:'#DDD'}} title={title} key={`col-${index}`} >\n\t\t   <CanvasText state={state} index={index} plan={plan.col} label={val}></CanvasText>\n \t        </div> );\n     } else {\n\treturn null;\n    }\n}\nfunction HdrRow(props) {\n    const { classes, state, plan, colkey, colvalues, label } = props; //, rowvalues\n    //console.log(\"Making header row.\",colkey,JSON.stringify(colvalues));\n    var mapFunction= (val,index)=>renderHdrCell(classes,state,colkey,colvalues,plan,val,index);\n    return (<div className={classes.divTableRow} key={0}>\n\t       {colvalues.map(mapFunction)}\n\t    </div>);\n}\n// ---------------- Details\nfunction Details(props) {\n    const { classes, state } = props; // classes, element\n    var colkey = state.Path.getColKey(state)||\"\";\n    var colvalues = state.Path.filterKeys(state,state.Matrix.values[colkey]||[\"\"]);\n    var cellMode  = state.Show.getCellMode(state);\n    //var ncol=colvalues.length + 1;\n    //DOM.style.font\n    var border=2;\n    var label=colkey;\n    var width=0.8*window.innerWidth;\n    var height=0.8*(window.innerHeight-200);\n    var plan=makePlan(label,colvalues,[\"\"],width,height,border);\n    //console.log(\"Details => Width/Height:\",window.innerWidth,window.innerHeight,plan.cell.width,plan.hdr.height)\n    //console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(colvalues));\n\n    return (<div className={classes.divTable}>\n\t       <div className={classes.divTableBody}>\n\t          <HdrRow classes={classes} state={state} plan={plan} colkey={colkey} colvalues={colvalues} label={label}/>\n\t          <DataRow classes={classes} state={state} plan={plan} colkey={colkey} colvalues={colvalues} mode={cellMode}/>\n\t       </div>\n            </div>);\n }\nclass Table1D extends Component {\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    } \n    updateWindowDimensions = () => {\n        this.width= window.innerWidth;\n\tthis.height=window.innerHeight;\n\tthis.bbx=this.el.getBoundingClientRect();\n\t//console.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n    element(el) {\n\tif (el !== undefined && el !== null) {\n\t    this.el=el;\n\t    this.bbx=this.el.getBoundingClientRect();\n\t    //console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n\t};\n    };\n    render() {\n\tconst { classes, state } = this.props;\n\t//console.log(\"##### Rendering Table1D.\");\n\treturn (<div ref={el=>{this.element(el)}} className={classes.root}  style={{width: '100%', height: '100%'}}>\n\t\t   <Grid container spacing={24}>\n\t\t      <Grid item xs={12} > \n                         { <Paper className={classes.paper}>\n\t\t              <Details state={state} classes={classes} element={this}/>\n                           </Paper>}\n                      </Grid>\n                   </Grid>\n\t        </div>);\n    }\n}\n\nTable1D.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Table1D);\n"]},"metadata":{},"sourceType":"module"}