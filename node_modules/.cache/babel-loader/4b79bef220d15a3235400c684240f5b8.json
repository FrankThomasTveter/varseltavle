{"ast":null,"code":"import _objectWithoutProperties from\"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _classCallCheck from\"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{withStyles}from'@material-ui/core/styles';var styles=function styles(theme){return{canvas:{width:\"100%\",height:\"100%\",overflow:\"hidden\"},pointer:{cursor:\"pointer\",padding:theme.spacing.unit*0},nopointer:{padding:theme.spacing.unit*0}};};function drawMarker(ctx,height,offset,width){ctx.strokeStyle='blue';ctx.beginPath();ctx.moveTo(offset,0);ctx.lineTo(offset+width,height);ctx.moveTo(offset+width,0);ctx.lineTo(offset,height);ctx.strokeRect(offset,0,offset+width,height);ctx.stroke();};function updateCanvas(item){var _item$props=item.props,label=_item$props.label,plan=_item$props.plan,color=_item$props.color;var cnv=item.refs.text;var ctx=cnv.getContext('2d');//var cnvheight = cnv.height;\nctx.save();//ctx.translate(newx, newy);\nif(plan.font!==undefined){ctx.font=plan.font;}//ctx.font = \"40px Courier\"\nctx.clearRect(0,0,cnv.width,cnv.height);//\n//ctx.strokeStyle='gray';\n//ctx.strokeRect(0,0,cnv.width,cnv.height);\n//\n//ctx.rect(0,0,100,100);\n//ctx.stroke();\n//console.log(\">>>> Plan:\",JSON.stringify(plan),item.width,item.height);\nif(color!==undefined){//console.log(\"Using color:\",color);\nctx.fillStyle=color;}else{ctx.fillStyle='black';//console.log(\"Using black...\");\n};if(plan.rotate!==undefined&&plan.rotate){ctx.textAlign=\"left\";//left right center\nctx.translate(item.width-plan.border-plan.xoffset,item.height-plan.border);ctx.rotate(-Math.PI/2);ctx.fillText(label,0,0);// labelXposition\n}else if(plan.align===\"right\"){ctx.textAlign=\"right\";//left right center\nctx.fillText(label,plan.width-plan.border+plan.xoffset,item.height-plan.border);// labelXposition\n}else{ctx.fillText(label,plan.border+plan.xoffset,item.height-plan.border);// labelXposition\n};ctx.restore();//ctx.rect(0,0,item.width,item.height);\n//ctx.stroke();\n//console.log(\"Label:\",label,item.width,item.height, plan.border,plan.xoffset);\n//console.log(\"CanvasText:\",cnv.width,cnv.height);\nif(item.invalid){drawMarker(ctx,cnv.height,0,cnv.width);};}var CanvasTextComponent=/*#__PURE__*/function(_Component){_inherits(CanvasTextComponent,_Component);function CanvasTextComponent(){_classCallCheck(this,CanvasTextComponent);return _possibleConstructorReturn(this,_getPrototypeOf(CanvasTextComponent).apply(this,arguments));}_createClass(CanvasTextComponent,[{key:\"componentDidMount\",value:function componentDidMount(){updateCanvas(this);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){updateCanvas(this);}},{key:\"render\",value:function render(){var _this$props=this.props,classes=_this$props.classes,onclick=_this$props.onclick,title=_this$props.title,plan=_this$props.plan,color=_this$props.color,invalid=_this$props.invalid,other=_objectWithoutProperties(_this$props,[\"classes\",\"onclick\",\"title\",\"plan\",\"color\",\"invalid\"]);this.width=plan.width;this.height=plan.height;this.invalid=invalid;this.color=color;//console.log(\"Got color:\",color);\nreturn React.createElement(\"canvas\",Object.assign({},other,{className:classes.canvas,classes:classes,onClick:onclick,title:title,plan:plan,width:plan.width,height:plan.height,ref:\"text\"}));}}]);return CanvasTextComponent;}(Component);export default withStyles(styles)(CanvasTextComponent);// function getTextWidth(txt, fontname, fontsize){\n//     if(getTextWidth.c === undefined){\n//         getTextWidth.c=document.createElement('canvas');\n//         getTextWidth.ctx=getTextWidth.c.getContext('2d');\n//     }\n//     if (fontname !== undefined) {\n// \tgetTextWidth.ctx.font = fontsize + ' ' + fontname;\n//     }\n//     return getTextWidth.ctx.measureText(txt).width;\n// };\n// function getTextHeight(fontname, fontsize){\n//     if(getTextHeight.c === undefined){\n//         getTextHeight.c=document.createElement('canvas');\n//         getTextHeight.ctx=getTextHeight.c.getContext('2d');\n//     }\n//     if (fontname !== undefined) {\n// \tgetTextHeight.ctx.font = fontsize + ' ' + fontname;\n//     }\n//     return getTextHeight.ctx.measureText('M').width;\n// }","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/CanvasTextComponent.js"],"names":["React","Component","withStyles","styles","theme","canvas","width","height","overflow","pointer","cursor","padding","spacing","unit","nopointer","drawMarker","ctx","offset","strokeStyle","beginPath","moveTo","lineTo","strokeRect","stroke","updateCanvas","item","props","label","plan","color","cnv","refs","text","getContext","save","font","undefined","clearRect","fillStyle","rotate","textAlign","translate","border","xoffset","Math","PI","fillText","align","restore","invalid","CanvasTextComponent","classes","onclick","title","other"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    canvas: {\n\twidth:\"100%\",\n\theight:\"100%\",\n\toverflow:\"hidden\",\n    },\n    pointer: {\n\tcursor:\"pointer\",\n\tpadding: theme.spacing.unit*0,\n    },\n    nopointer: {\n\tpadding: theme.spacing.unit*0,\n    },\n});\nfunction drawMarker(ctx,height,offset,width) {\n    ctx.strokeStyle='blue';\n    ctx.beginPath();\n    ctx.moveTo(offset,0);\n    ctx.lineTo(offset+width,height);\n    ctx.moveTo(offset+width,0);\n    ctx.lineTo(offset,height);\n    ctx.strokeRect(offset,0,offset+width,height);\n    ctx.stroke();\n};\nfunction updateCanvas(item) {\n    const {label,plan,color} = item.props;\n    const cnv=item.refs.text;\n    const ctx = cnv.getContext('2d');\n    //var cnvheight = cnv.height;\n    ctx.save();\n    //ctx.translate(newx, newy);\n    if (plan.font !== undefined) {\n\tctx.font = plan.font;\n    }\n    //ctx.font = \"40px Courier\"\n    ctx.clearRect(0, 0, cnv.width, cnv.height);\n    //\n    //ctx.strokeStyle='gray';\n    //ctx.strokeRect(0,0,cnv.width,cnv.height);\n    //\n    //ctx.rect(0,0,100,100);\n    //ctx.stroke();\n    //console.log(\">>>> Plan:\",JSON.stringify(plan),item.width,item.height);\n    if (color !== undefined) {\n\t//console.log(\"Using color:\",color);\n\tctx.fillStyle=color;\n    } else {\n\tctx.fillStyle='black';\n\t//console.log(\"Using black...\");\n    };\n    if (plan.rotate !== undefined && plan.rotate) {\n\tctx.textAlign = \"left\"; //left right center\n\tctx.translate(item.width-plan.border-plan.xoffset,item.height-plan.border);\n\tctx.rotate(-Math.PI/2);\n\tctx.fillText(label, 0, 0); // labelXposition\n    } else if (plan.align === \"right\") {\n\tctx.textAlign = \"right\"; //left right center\n\tctx.fillText(label, plan.width-plan.border+plan.xoffset, item.height-plan.border); // labelXposition\n    } else {\n\tctx.fillText(label, plan.border+plan.xoffset, item.height-plan.border); // labelXposition\n    };\n    ctx.restore();\n    //ctx.rect(0,0,item.width,item.height);\n    //ctx.stroke();\n    //console.log(\"Label:\",label,item.width,item.height, plan.border,plan.xoffset);\n    //console.log(\"CanvasText:\",cnv.width,cnv.height);\n    if (item.invalid) {\n\tdrawMarker(ctx,cnv.height,0,cnv.width);\n    };\n}\n    \n\nclass CanvasTextComponent extends Component {\n    componentDidMount() {\n        updateCanvas(this);\n    }\n    componentDidUpdate() {\n        updateCanvas(this);\n    }\n    render() {\n        const { classes, onclick, title, plan, color, invalid, ...other } = this.props;\n\tthis.width=plan.width;\n\tthis.height=plan.height;\n\tthis.invalid=invalid;\n\tthis.color=color;\n\t//console.log(\"Got color:\",color);\n        return (\n\t\t<canvas {...other} className={classes.canvas} classes={classes} onClick={onclick} title={title} \n\t            plan={plan} width={plan.width} height={plan.height} ref=\"text\" />\n        );\n    }\n}\n\nCanvasTextComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CanvasTextComponent);\n// function getTextWidth(txt, fontname, fontsize){\n//     if(getTextWidth.c === undefined){\n//         getTextWidth.c=document.createElement('canvas');\n//         getTextWidth.ctx=getTextWidth.c.getContext('2d');\n//     }\n//     if (fontname !== undefined) {\n// \tgetTextWidth.ctx.font = fontsize + ' ' + fontname;\n//     }\n//     return getTextWidth.ctx.measureText(txt).width;\n// };\n// function getTextHeight(fontname, fontsize){\n//     if(getTextHeight.c === undefined){\n//         getTextHeight.c=document.createElement('canvas');\n//         getTextHeight.ctx=getTextHeight.c.getContext('2d');\n//     }\n//     if (fontname !== undefined) {\n// \tgetTextHeight.ctx.font = fontsize + ' ' + fontname;\n//     }\n//     return getTextHeight.ctx.measureText('M').width;\n// }\n"]},"metadata":{},"sourceType":"module"}