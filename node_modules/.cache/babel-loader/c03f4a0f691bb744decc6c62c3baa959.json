{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/FullScreenComponent.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\nimport NoFullscreenIcon from '@material-ui/icons/FullscreenExit';\n\nvar styles = function styles(theme) {\n  return {\n    view: {\n      marginLeft: 'auto'\n    }\n  };\n};\n\nfunction FullscreenIconMode(props) {\n  var state = props.state;\n\n  if (state.Layout.fullscreen) {\n    return React.createElement(NoFullscreenIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(FullscreenIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  }\n}\n\n;\n\nvar Fullscreen =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Fullscreen, _Component);\n\n  function Fullscreen() {\n    _classCallCheck(this, Fullscreen);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Fullscreen).apply(this, arguments));\n  }\n\n  _createClass(Fullscreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state;\n\n      var onclick = function onclick(event) {\n        return state.Layout.toggleFullScreen(state);\n      };\n\n      return React.createElement(\"div\", {\n        className: classes.view,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: onclick,\n        title: \"Toggle Full Screen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(FullscreenIconMode, {\n        state: state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Fullscreen;\n}(Component);\n\nFullscreen.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Fullscreen);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/FullScreenComponent.js"],"names":["React","Component","PropTypes","withStyles","Button","FullscreenIcon","NoFullscreenIcon","styles","theme","view","marginLeft","FullscreenIconMode","props","state","Layout","fullscreen","Fullscreen","classes","onclick","event","toggleFullScreen","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,IAAI,EAAE;AACFC,MAAAA,UAAU,EAAE;AADV;AADe,GAAL;AAAA,CAApB;;AAKA,SAASC,kBAAT,CAA6BC,KAA7B,EAAoC;AAAA,MACzBC,KADyB,GAChBD,KADgB,CACzBC,KADyB;;AAEhC,MAAIA,KAAK,CAACC,MAAN,CAAaC,UAAjB,EAA6B;AAChC,WAAQ,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACI,GAFD,MAEO;AACV,WAAQ,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACI;AACJ;;AAAA;;IACKC,U;;;;;;;;;;;;;6BACO;AAAA,wBACW,KAAKJ,KADhB;AAAA,UACLK,OADK,eACLA,OADK;AAAA,UACIJ,KADJ,eACIA,KADJ;;AAEZ,UAAIK,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD;AAAA,eAAWN,KAAK,CAACC,MAAN,CAAaM,gBAAb,CAA8BP,KAA9B,CAAX;AAAA,OAAd;;AACA,aACC;AAAK,QAAA,SAAS,EAAEI,OAAO,CAACR,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,MAAD;AACiB,QAAA,OAAO,EAAES,OAD1B;AAEU,QAAA,KAAK,EAAE,oBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIO,oBAAC,kBAAD;AAAoB,QAAA,KAAK,EAAEL,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJP,CADH,CADD;AAUI;;;;EAdoBZ,S;;AAiBzBe,UAAU,CAACK,SAAX,GAAuB;AACnBJ,EAAAA,OAAO,EAAEf,SAAS,CAACoB,MAAV,CAAiBC;AADP,CAAvB;AAIA,eAAepB,UAAU,CAACI,MAAD,CAAV,CAAmBS,UAAnB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\nimport NoFullscreenIcon from '@material-ui/icons/FullscreenExit';\n\nconst styles = theme => ({\n    view: {\n        marginLeft: 'auto',\n    },\n});\nfunction FullscreenIconMode (props) {\n    const {state} = props;\n    if (state.Layout.fullscreen) {\n\treturn (<NoFullscreenIcon/>);\n    } else {\n\treturn (<FullscreenIcon/>);\n    }\n};\nclass Fullscreen extends Component {\n    render() {\n\tconst {classes, state}=this.props;\n\tvar onclick = (event) => state.Layout.toggleFullScreen(state);\n\treturn (\n\t\t<div className={classes.view}>\n\t\t   <Button\n                      onClick={onclick}\n\t              title={\"Toggle Full Screen\"}\n\t\t    >\n\t  \t       {<FullscreenIconMode state={state}/>}\n                    </Button>\n\t\t</div>\n\t);\n    }\n}\n\nFullscreen.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Fullscreen);\n"]},"metadata":{},"sourceType":"module"}