{"ast":null,"code":"import _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/SeriesCell.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CanvasGraph from './CanvasGraphComponent'; //\ttextAlign: \"center\",\n\nvar styles = function styles(theme) {\n  return {\n    pointer: {\n      textAlign: \"center\",\n      cursor: \"pointer\",\n      padding: 0,\n      overflow: 'hidden',\n      tableLayout: 'fixed'\n    },\n    nopointer: {\n      textAlign: \"center\",\n      padding: 0,\n      overflow: 'hidden',\n      tableLayout: 'fixed'\n    },\n    div: {\n      overflow: 'hidden',\n      tableLayout: 'fixed'\n    },\n    divTableCell: {\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    },\n    divTableCellCursor: {\n      cursor: \"pointer\",\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    }\n  };\n}; //\tpadding: \"0px\";\n//\ttextAlign: \"center\",\n\n\nfunction SeriesCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      onclick = props.onclick,\n      colwhere = props.colwhere,\n      rowwhere = props.rowwhere,\n      elements = props.elements,\n      plan = props.plan,\n      key = props.key,\n      other = _objectWithoutProperties(props, [\"classes\", \"state\", \"onclick\", \"colwhere\", \"rowwhere\", \"elements\", \"plan\", \"key\"]);\n\n  var cnt = 0;\n  var lev = -1;\n  var elen = elements.length;\n\n  for (var ee = 0; ee < elen; ee++) {\n    cnt = cnt + elements[ee].cnt;\n    lev = Math.max(lev, elements[ee].lev);\n  }\n\n  ;\n  var bgcolor = state.Colors.getLevelColor(lev);\n  var title = \"\";\n\n  if (colwhere !== \"\" && rowwhere !== \"\") {\n    title = \"(\" + colwhere + \") AND (\" + rowwhere + \")\";\n  } else if (colwhere !== \"\") {\n    title = colwhere;\n  } else if (rowwhere !== \"\") {\n    title = rowwhere;\n  } // var bgcolor=state.Colors.getLevelColor(lev);\n  // bgcolor={bgcolor} \n  // height={plan.cell}\n  // width={plan.width}\n  //console.log(\"SeriesCell:\",JSON.stringify(elements));\n\n\n  return React.createElement(\"div\", {\n    className: onclick !== undefined ? classes.divTableCellCursor : classes.divTableCell,\n    style: {\n      backgroundColor: bgcolor\n    },\n    onClick: onclick,\n    title: title,\n    key: key,\n    height: plan.cell,\n    width: plan.width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(CanvasGraph, Object.assign({}, other, {\n    state: state,\n    onclick: onclick,\n    title: title,\n    elements: elements,\n    level: lev,\n    plan: plan,\n    bgcolor: bgcolor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })));\n}\n\nSeriesCell.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SeriesCell);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/SeriesCell.js"],"names":["React","PropTypes","withStyles","CanvasGraph","styles","theme","pointer","textAlign","cursor","padding","overflow","tableLayout","nopointer","div","divTableCell","border","display","divTableCellCursor","SeriesCell","props","classes","state","onclick","colwhere","rowwhere","elements","plan","key","other","cnt","lev","elen","length","ee","Math","max","bgcolor","Colors","getLevelColor","title","undefined","backgroundColor","cell","width","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CanvasGraph from './CanvasGraphComponent';\n\n//\ttextAlign: \"center\",\nconst styles = theme => ({\n    pointer: {\n\ttextAlign: \"center\",\n\tcursor:\"pointer\",\n\tpadding: 0,\n\toverflow: 'hidden',\n\ttableLayout: 'fixed',\n    },\n    nopointer: {\n\ttextAlign: \"center\",\n\tpadding: 0,\n\toverflow: 'hidden',\n\ttableLayout: 'fixed',\n    },\n    div: {\n\toverflow: 'hidden',\n\ttableLayout: 'fixed',\n    },\n    divTableCell:{\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableCellCursor:{\n\tcursor: \"pointer\",\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n});\n//\tpadding: \"0px\";\n//\ttextAlign: \"center\",\nfunction SeriesCell(props) {\n    const { classes,state,onclick,\n\t    colwhere,rowwhere,\n\t    elements,plan,key,...other } = props;\n    var cnt=0;\n    var lev=-1;\n    var elen=elements.length;\n    for (var ee=0;ee<elen;ee++) {\n        cnt=cnt+elements[ee].cnt;\n        lev=Math.max(lev,elements[ee].lev);\n    }; \n    var bgcolor=state.Colors.getLevelColor(lev);\n    var title=\"\";\n    if (colwhere !== \"\" && rowwhere !== \"\") {\n\ttitle=\"(\"+colwhere+\") AND (\"+rowwhere+\")\";\n    } else if (colwhere !== \"\") {\n\ttitle=colwhere;\n    } else if (rowwhere !== \"\") {\n\ttitle=rowwhere;\n    }\n    // var bgcolor=state.Colors.getLevelColor(lev);\n    // bgcolor={bgcolor} \n    // height={plan.cell}\n    // width={plan.width}\n    //console.log(\"SeriesCell:\",JSON.stringify(elements));\n    return(\n\t    <div className={(onclick !== undefined?classes.divTableCellCursor:classes.divTableCell)} style={{backgroundColor:bgcolor}} onClick={onclick} title={title} key={key} height={plan.cell} width={plan.width}>\n  \t       <CanvasGraph {...other} state={state}\n\t          onclick={onclick} title={title} elements={elements} level={lev} plan={plan} bgcolor={bgcolor}/>  \n\t     </div>\n    );\n}\n\n\n\nSeriesCell.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SeriesCell);\n"]},"metadata":{},"sourceType":"module"}