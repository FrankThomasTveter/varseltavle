{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/Table2DComponent.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport ReactDOM from 'react-dom';\nimport SummaryCell from './SummaryCell';\nimport SeriesCell from './SeriesCell';\nimport CanvasText from './CanvasTextComponent'; //console.log(\"Inside Table.\")\n//        flexGrow: 1,\n//\t\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      height: '100%',\n      maxWidth: '100%'\n    },\n    table: {\n      textAlign: 'left',\n      padding: \"0px\",\n      borderStyle: 'solid',\n      overflow: 'hidden',\n      tableLayout: 'fixed',\n      borderSpacing: 0\n    },\n    dataCell: {\n      cursor: \"pointer\",\n      padding: theme.spacing.unit * 0\n    },\n    dataCellFill: {\n      cursor: \"pointer\",\n      padding: theme.spacing.unit * 1\n    },\n    hdrCell: {\n      cursor: \"pointer\",\n      padding: theme.spacing.unit * 0\n    },\n    hdrCellEmpty: {\n      padding: theme.spacing.unit * 0\n    },\n    hdrCellFill: {\n      padding: theme.spacing.unit * 1\n    }\n  };\n};\n\nfunction getTextWidth(txt, fontname, fontsize) {\n  if (getTextWidth.c === undefined) {\n    getTextWidth.c = document.createElement('canvas');\n    getTextWidth.ctx = getTextWidth.c.getContext('2d');\n  }\n\n  if (fontname !== undefined) {\n    getTextWidth.ctx.font = fontsize + ' ' + fontname;\n  }\n\n  return getTextWidth.ctx.measureText(txt).width;\n}\n\n;\n\nfunction getTextHeight(fontname, fontsize) {\n  if (getTextHeight.c === undefined) {\n    getTextHeight.c = document.createElement('canvas');\n    getTextHeight.ctx = getTextHeight.c.getContext('2d');\n  }\n\n  if (fontname !== undefined) {\n    getTextHeight.ctx.font = fontsize + ' ' + fontname;\n  }\n\n  return getTextHeight.ctx.measureText('M').width;\n}\n\nfunction maxWidth(values, border) {\n  var swidth = 0;\n  var mwidth = 0;\n  var lenv = values.length;\n\n  for (var ii = 0; ii < lenv; ii++) {\n    var cwidth = getTextWidth(values[ii]) + 2 * border;\n\n    if (cwidth > mwidth) {\n      mwidth = cwidth;\n    }\n\n    swidth = swidth + cwidth;\n  }\n\n  return {\n    max: mwidth,\n    sum: swidth\n  };\n}\n\nfunction makePlan(label, colvalues, rowvalues, iwidth, iheight, border) {\n  var plan = {\n    rotate: false,\n    step: 1,\n    head: 100,\n    cell: 100,\n    width: 100,\n    height: 100,\n    border: border,\n    shift: 0\n  };\n\n  if (iwidth <= 0) {\n    return plan;\n  }\n\n  ; // text boundaries\n\n  var wh = maxWidth(rowvalues, border);\n  var ww = maxWidth(colvalues, border);\n  var zwidth = getTextWidth(label) + 2 * border; //props.theme.spacing.unit;\n\n  var zheight = getTextHeight(label) + 2 * border; //props.theme.spacing.unit;\n  // table boundaries\n\n  var mheight = getTextHeight() + 2 * border; //props.theme.spacing.unit;\n\n  var hwidth = Math.max(wh.max, zwidth) + mheight;\n  var width = iwidth - hwidth; // calculate cell width...\n\n  var mwidth = ww.max;\n  var swidth = ww.sum;\n  var lenc = colvalues.length;\n  var lenr = rowvalues.length;\n\n  if (mwidth * lenc < width) {\n    // horisontal\n    plan.rotate = false;\n    plan.step = 1;\n    plan.width = width / lenc;\n    plan.height = mheight;\n    plan.shift = (plan.width - mwidth) / 2;\n    console.log(\"Plan (normal):\", JSON.stringify(plan));\n  } else if (mheight * lenc < width) {\n    // rotate\n    plan.rotate = true;\n    plan.step = 1;\n    plan.width = width / lenc;\n    plan.height = mwidth;\n    plan.shift = (plan.width - mheight) / 2;\n    console.log(\"Plan (rot):\", JSON.stringify(plan), lenc, plan.width * lenc);\n  } else {\n    // rotate and use steps\n    plan.rotate = true;\n    plan.step = Math.ceil(lenc * mheight / width);\n    plan.width = plan.step * width / lenc;\n    plan.height = mwidth;\n    plan.shift = (plan.width - mheight) / 2;\n    console.log(\"Plan (rot+step):\", JSON.stringify(plan), lenc, height, width);\n  } // calculate cell height\n\n\n  var height = iheight - plan.height;\n\n  if (mheight * lenr < height) {\n    // \n    plan.cell = Math.min(mheight * 10, height / lenr);\n  } else {\n    plan.cell = mheight;\n  }\n\n  plan.head = hwidth;\n  console.log(\"Plan (finally):\", JSON.stringify(plan), mheight, mwidth, height, width, lenr);\n  return plan;\n} // ---------------- DATA\n\n\nfunction FirstDataCell(props) {\n  var classes = props.classes,\n      rowval = props.rowval,\n      onclick = props.onclick,\n      title = props.title,\n      width = props.width,\n      height = props.height; //console.log(\"Making first data cell.\");\n\n  return React.createElement(TableCell, {\n    className: classes.dataCellFill,\n    onClick: onclick,\n    title: title,\n    width: width,\n    height: height,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, rowval);\n}\n\nfunction DataCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      elements = props.elements,\n      mode = props.mode,\n      plan = props.plan,\n      other = _objectWithoutProperties(props, [\"classes\", \"state\", \"elements\", \"mode\", \"plan\"]);\n\n  if (elements === undefined) {\n    return React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    });\n  } else if (mode === state.Show.code.cell.Sum) {\n    //return <TableCell className={classes.dataCell}>YY</TableCell>;\n    return React.createElement(SummaryCell, Object.assign({}, other, {\n      state: state,\n      elements: elements,\n      plan: plan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(SeriesCell, Object.assign({}, other, {\n      state: state,\n      elements: elements,\n      plan: plan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }));\n  }\n}\n\nfunction renderDataCell(classes, state, colkey, colvalues, rowkey, rowval, rowindex, rowwhere, range, mode, plan, val, index) {\n  var title = state.Database.getWhereDetail(colkey, colvalues[index]); //console.log(\"Making data cell:\",rowval,val,index,plan,JSON.stringify(colvalues));\n\n  if ((index - 1) % plan.step === 0) {\n    // get elements and range\n    var elements = state.Matrix.getMatrixElements(colvalues, rowval, state.React.matrix, index, plan.step); // get count and colwhere\n\n    var cnt = Math.min(colvalues.length, index + plan.step) - index;\n    var colwhere = state.Database.getColWhere(colkey, colvalues, index, plan.step); // make onclick and title\n\n    var onclick = function onclick() {\n      return state.Navigate.selectItem(state, colkey, rowkey, colvalues[index], rowval, colwhere, rowwhere, cnt, 1);\n    };\n\n    return React.createElement(DataCell, {\n      className: classes.dataCell,\n      classes: classes,\n      state: state,\n      key: \"col-\".concat(index),\n      index: index,\n      onclick: onclick,\n      title: title,\n      colkey: colkey,\n      rowkey: rowkey,\n      colvalues: colvalues,\n      colval: val,\n      rowval: rowval,\n      colwhere: colwhere,\n      rowwhere: rowwhere,\n      elements: elements,\n      mode: mode,\n      plan: plan,\n      range: range,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    });\n  } else {\n    return null;\n  }\n}\n\nfunction dataRow(classes, state, colkey, rowkey, colvalues, mode, plan, rowval, rowindex) {\n  var rowwhere = state.Database.getWhereDetail(rowkey, rowval);\n\n  var onclick = function onclick() {\n    return state.Navigate.selectKey(state, rowkey, rowval, rowwhere, 1);\n  };\n\n  var range = [undefined, undefined];\n\n  if (state.React.matrix !== undefined) {\n    range = state.Matrix.getRange(state, state.React.matrix, colvalues, [rowval]);\n  }\n\n  ; //console.log(\"Making data cols.\",colkey,JSON.stringify(colvalues));\n  //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderDataCell(classes, state, colkey, colvalues, rowkey, rowval, rowindex, rowwhere, range, mode, plan, val, index);\n  };\n\n  return React.createElement(TableRow, {\n    key: rowindex.toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(FirstDataCell, {\n    classes: classes,\n    key: '0',\n    rowval: rowval,\n    onclick: onclick,\n    title: rowwhere,\n    width: plan.head,\n    height: plan.cell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }), colvalues.map(mapFunction));\n}\n\n;\n\nfunction renderZeroRow(classes, state, colkey, colvalues, plan) {\n  return React.createElement(TableRow, {\n    key: '1',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    key: \"0\",\n    state: state,\n    index: '0',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"No data\"));\n}\n\n;\n\nfunction DataRows(props) {\n  var classes = props.classes,\n      state = props.state,\n      plan = props.plan,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey,\n      rowvalues = props.rowvalues,\n      mode = props.mode; //console.log(\"Making data cols.\",colkey,JSON.stringify(colvalues));\n\n  var mapFunction = function mapFunction(val, index) {\n    return dataRow(classes, state, colkey, rowkey, colvalues, mode, plan, val, index);\n  };\n\n  if (rowvalues.length === 0) {\n    return renderZeroRow(classes, state, colkey, colvalues, plan);\n  } else {\n    return rowvalues.map(mapFunction);\n  }\n} // ---------------- HDR\n\n\nfunction FirstHdrCell(props) {\n  var classes = props.classes,\n      label = props.label,\n      width = props.width; //console.log(\"Making first header cell.\",label);\n\n  return React.createElement(TableCell, {\n    className: classes.hdrCellFill,\n    width: width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, label);\n}\n\nfunction renderHdrCell(classes, state, colkey, colvalues, rowkey, plan, val, index) {\n  if ((index - 1) % plan.step === 0) {\n    //console.log(\"HdrCell:\",index,plan.step);\n    var cnt = Math.min(colvalues.length, index + plan.step) - index;\n    var colwhere = state.Database.getColWhere(colkey, colvalues, index, plan.step);\n\n    var onclick = function onclick() {\n      return state.Navigate.selectKey(state, colkey, colvalues[index], colwhere, cnt);\n    };\n\n    var title = colwhere;\n    var ref = React.createRef(); //console.log(\"Ref:\",JSON.stringify(ref));\n\n    var cursor = classes.hdrCellEmpty;\n\n    if (onclick !== undefined) {\n      cursor = classes.hdrCell;\n    } //var rotate=undefined;\n\n\n    var rotate = 1; //[(onclick !== undefined?classes.hdrCell:classes.hdrCellEmpty),\n\n    return React.createElement(TableCell, {\n      className: onclick !== undefined ? classes.hdrCell : classes.hdrCellEmpty,\n      onClick: onclick,\n      title: title,\n      key: \"col-\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(CanvasText, {\n      state: state,\n      index: index,\n      plan: plan,\n      label: val,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }));\n  } else {\n    return null;\n  }\n}\n\nfunction HdrRow(props) {\n  var classes = props.classes,\n      state = props.state,\n      plan = props.plan,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey,\n      label = props.label; //, rowvalues\n  //console.log(\"Making header row.\",colkey,JSON.stringify(colvalues));\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderHdrCell(classes, state, colkey, colvalues, rowkey, plan, val, index);\n  };\n\n  return React.createElement(TableRow, {\n    key: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(FirstHdrCell, {\n    classes: classes,\n    label: label,\n    width: plan.head,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }), colvalues.map(mapFunction));\n} // ---------------- Details\n\n\nfunction Details(props) {\n  var classes = props.classes,\n      state = props.state,\n      element = props.element; // classes, \n\n  var colkey = state.Path.getColKey(state) || \"\";\n  var rowkey = state.Path.getRowKey(state) || \"\";\n  var colvalues = state.Path.filterKeys(state, state.Matrix.values[colkey] || [\"\"]);\n  var rowvalues = state.Path.filterKeys(state, state.Matrix.values[rowkey] || [\"\"]);\n  var cellMode = state.Show.getCellMode(state);\n  var ncol = colvalues.length + 1;\n  var nrow = rowvalues.length + 1; //DOM.style.font\n\n  var border = 3;\n  var label = rowkey + \"\\\\\" + colkey;\n  var width = 0.8 * window.innerWidth;\n  var height = 0.8 * window.innerHeight;\n  var plan = makePlan(label, colvalues, rowvalues, width, height, border);\n  console.log(\"Details => Width/Height:\", window.innerWidth, window.innerHeight, plan.width, plan.height); //console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(state.Matrix.values[colkey]||[\"\"]));\n  //console.log(\"Rowkey:\",rowkey,\" rowval:\",JSON.stringify(state.Matrix.values[rowkey]||[\"\"]));\n\n  return React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, React.createElement(HdrRow, {\n    classes: classes,\n    state: state,\n    plan: plan,\n    colkey: colkey,\n    colvalues: colvalues,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    label: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  })), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, React.createElement(DataRows, {\n    classes: classes,\n    state: state,\n    plan: plan,\n    colkey: colkey,\n    colvalues: colvalues,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    mode: cellMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  })));\n} //<div  style={{width: '100%', height: '100%'}}>\n//</div>\n\n\nvar Table2D =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Table2D, _Component);\n\n  function Table2D(props) {\n    var _this;\n\n    _classCallCheck(this, Table2D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table2D).call(this, props)); //this.state=props.state;\n\n    _this.updateWindowDimensions = function () {\n      _this.width = window.innerWidth;\n      _this.height = window.innerHeight;\n      _this.bbx = _this.el.getBoundingClientRect();\n      console.log(\"Width/Height:\", _this.width, _this.height, _this.bbx.width, _this.bbx.height);\n    };\n\n    return _this;\n  }\n\n  _createClass(Table2D, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n  }, {\n    key: \"element\",\n    value: function element(el) {\n      if (el !== undefined && el !== null) {\n        this.el = el;\n        this.bbx = this.el.getBoundingClientRect();\n        console.log(\"BBX width/height:\", this.bbx.width, this.bbx.height);\n      }\n\n      ;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state;\n      console.log(\"##### Rendering Table2D.\");\n      return React.createElement(\"div\", {\n        ref: function ref(el) {\n          _this2.element(el);\n        },\n        className: classes.root,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(Details, {\n        state: state,\n        classes: classes,\n        element: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Table2D;\n}(Component);\n\nTable2D.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Table2D);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/Table2DComponent.js"],"names":["React","Component","PropTypes","withStyles","Paper","Grid","Table","TableBody","TableRow","TableHead","TableCell","ReactDOM","SummaryCell","SeriesCell","CanvasText","styles","theme","root","height","maxWidth","table","textAlign","padding","borderStyle","overflow","tableLayout","borderSpacing","dataCell","cursor","spacing","unit","dataCellFill","hdrCell","hdrCellEmpty","hdrCellFill","getTextWidth","txt","fontname","fontsize","c","undefined","document","createElement","ctx","getContext","font","measureText","width","getTextHeight","values","border","swidth","mwidth","lenv","length","ii","cwidth","max","sum","makePlan","label","colvalues","rowvalues","iwidth","iheight","plan","rotate","step","head","cell","shift","wh","ww","zwidth","zheight","mheight","hwidth","Math","lenc","lenr","console","log","JSON","stringify","ceil","min","FirstDataCell","props","classes","rowval","onclick","title","DataCell","state","elements","mode","other","Show","code","Sum","renderDataCell","colkey","rowkey","rowindex","rowwhere","range","val","index","Database","getWhereDetail","Matrix","getMatrixElements","matrix","cnt","colwhere","getColWhere","Navigate","selectItem","dataRow","selectKey","getRange","mapFunction","toString","map","renderZeroRow","DataRows","FirstHdrCell","renderHdrCell","ref","createRef","HdrRow","Details","element","Path","getColKey","getRowKey","filterKeys","cellMode","getCellMode","ncol","nrow","window","innerWidth","innerHeight","Table2D","updateWindowDimensions","bbx","el","getBoundingClientRect","addEventListener","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport ReactDOM from 'react-dom';\n\nimport SummaryCell from './SummaryCell';\nimport SeriesCell  from './SeriesCell';\nimport CanvasText  from './CanvasTextComponent';\n\n//console.log(\"Inside Table.\")\n\n//        flexGrow: 1,\n//\t\n\nconst styles = theme => ({\n    root: {\n\theight: '100%',\n\tmaxWidth: '100%',\n    },\n    table: {\n        textAlign: 'left',\n\tpadding: \"0px\",\n\tborderStyle: 'solid',\n\toverflow: 'hidden',\n\ttableLayout: 'fixed',\n\tborderSpacing: 0,\n    },\n    dataCell : {\n\tcursor: \"pointer\",\n\tpadding: theme.spacing.unit*0,\n    },\n    dataCellFill : {\n\tcursor: \"pointer\",\n\tpadding: theme.spacing.unit*1,\n    },\n    hdrCell : {\n\tcursor: \"pointer\",\n\tpadding: theme.spacing.unit*0,\n    },\n    hdrCellEmpty : {\n\tpadding: theme.spacing.unit*0,\n    },\n    hdrCellFill : {\n\tpadding: theme.spacing.unit*1,\n    },\n});\nfunction getTextWidth(txt, fontname, fontsize){\n    if(getTextWidth.c === undefined){\n        getTextWidth.c=document.createElement('canvas');\n        getTextWidth.ctx=getTextWidth.c.getContext('2d');\n    }\n    if (fontname !== undefined) {\n\tgetTextWidth.ctx.font = fontsize + ' ' + fontname;\n    }\n    return getTextWidth.ctx.measureText(txt).width;\n};\nfunction getTextHeight(fontname, fontsize){\n    if(getTextHeight.c === undefined){\n        getTextHeight.c=document.createElement('canvas');\n        getTextHeight.ctx=getTextHeight.c.getContext('2d');\n    }\n    if (fontname !== undefined) {\n\tgetTextHeight.ctx.font = fontsize + ' ' + fontname;\n    }\n    return getTextHeight.ctx.measureText('M').width;\n}\nfunction maxWidth(values,border) {\n    var swidth=0;\n    var mwidth=0;\n    var lenv=values.length;\n    for (var ii=0;ii<lenv;ii++) {\n\tvar cwidth = getTextWidth(values[ii])+2*border;\n\tif (cwidth > mwidth) {\n\t    mwidth=cwidth;\n\t}\n\tswidth=swidth+cwidth;\n    }\n    return {max:mwidth,sum:swidth};\n}\nfunction makePlan(label,colvalues,rowvalues,iwidth,iheight,border) {\n    var plan={rotate:false, step:1, head:100, cell:100, width:100, height:100, border:border, shift:0};\n    if (iwidth <= 0) { return plan;};\n    // text boundaries\n    var wh=maxWidth(rowvalues,border);\n    var ww=maxWidth(colvalues,border);\n    var zwidth =getTextWidth(label) + 2 * border;   //props.theme.spacing.unit;\n    var zheight=getTextHeight(label) + 2 * border;  //props.theme.spacing.unit;\n    // table boundaries\n    var mheight=getTextHeight() + 2 * border;       //props.theme.spacing.unit;\n    var hwidth=Math.max(wh.max,zwidth) + mheight;\n    var width=iwidth-hwidth;\n    // calculate cell width...\n    var mwidth=ww.max;\n    var swidth=ww.sum;\n    var lenc=colvalues.length;\n    var lenr=rowvalues.length;\n    if (mwidth*lenc < width) { // horisontal\n\tplan.rotate=false;\n\tplan.step=1;\n\tplan.width=width/lenc;\n\tplan.height=mheight;\n\tplan.shift=(plan.width-mwidth)/2;\n\tconsole.log(\"Plan (normal):\",JSON.stringify(plan));\n    } else if (mheight*lenc < width) { // rotate\n\tplan.rotate=true;\n\tplan.step=1;\n\tplan.width=width/lenc;\n\tplan.height=mwidth;\n\tplan.shift=(plan.width-mheight)/2;\n\tconsole.log(\"Plan (rot):\",JSON.stringify(plan),lenc,plan.width*lenc);\n    } else { // rotate and use steps\n\tplan.rotate=true;\n\tplan.step=Math.ceil(lenc*mheight/width);\n\tplan.width=plan.step*width/lenc;\n\tplan.height=mwidth;\n\tplan.shift=(plan.width-mheight)/2;\n\tconsole.log(\"Plan (rot+step):\",JSON.stringify(plan),lenc,height,width);\n    }\n    // calculate cell height\n    var height=iheight-plan.height;\n    if (mheight*lenr < height) { // \n\tplan.cell=Math.min(mheight*10,height/lenr);\n    } else {\n\tplan.cell=mheight;\n    }\n    plan.head=hwidth;    \n    console.log(\"Plan (finally):\",JSON.stringify(plan),mheight,mwidth,height,width,lenr);\n    return plan;\n}\n// ---------------- DATA\nfunction FirstDataCell (props) {\n    const { classes, rowval, onclick, title, width, height } = props;\n    //console.log(\"Making first data cell.\");\n    return (<TableCell className={classes.dataCellFill} onClick={onclick} title={title} width={width} height={height}>{rowval}</TableCell>);\n}\nfunction DataCell(props) {\n    const {classes,state,elements,mode,plan,...other}=props;\n    if (elements===undefined) {\n\treturn <TableCell/>\n    } else if (mode===state.Show.code.cell.Sum) {\n\t//return <TableCell className={classes.dataCell}>YY</TableCell>;\n\treturn <SummaryCell {...other} state={state} elements={elements} plan={plan}/>\n    } else {\n\treturn <SeriesCell {...other} state={state} elements={elements} plan={plan}/>\n    }\n}\nfunction renderDataCell(classes,state,colkey,colvalues,rowkey,rowval,rowindex,rowwhere,range,mode,plan,val,index) {\n    var title=state.Database.getWhereDetail(colkey,colvalues[index]);\n    //console.log(\"Making data cell:\",rowval,val,index,plan,JSON.stringify(colvalues));\n    if ((index-1)%plan.step === 0) {\n\t// get elements and range\n\tvar elements=state.Matrix.getMatrixElements(colvalues,rowval,state.React.matrix,index,plan.step);\n\t// get count and colwhere\n        var cnt = Math.min(colvalues.length,index+plan.step)-index;\n        var colwhere = state.Database.getColWhere(colkey,colvalues,index,plan.step);\n\t// make onclick and title\n\tvar onclick=() => state.Navigate.selectItem(state,colkey,rowkey,colvalues[index],rowval,colwhere,rowwhere,cnt,1);\n\treturn (<DataCell className={classes.dataCell} classes={classes} state={state} key={`col-${index}`} index={index} onclick={onclick} title={title} \n\t\tcolkey={colkey} rowkey={rowkey} colvalues={colvalues} colval={val} rowval={rowval} colwhere={colwhere} rowwhere={rowwhere} \n\t\telements={elements} mode={mode} plan={plan} range={range}/>);\n    } else {\n\treturn null;\n    }\n}\nfunction dataRow(classes,state,colkey,rowkey,colvalues,mode,plan,rowval,rowindex) {\n    var rowwhere=state.Database.getWhereDetail(rowkey,rowval);\n    var onclick=() => state.Navigate.selectKey(state,rowkey,rowval,rowwhere,1);\n    var range=[undefined,undefined];\n    if (state.React.matrix!==undefined) {\n\trange=state.Matrix.getRange(state,state.React.matrix,colvalues,[rowval]);\n    };\n    //console.log(\"Making data cols.\",colkey,JSON.stringify(colvalues));\n    //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n    var mapFunction= (val,index)=>renderDataCell(classes,state,colkey,colvalues,rowkey,rowval,rowindex,rowwhere,range,mode,plan,val,index);\n    return (<TableRow key={rowindex.toString()}>\n\t    <FirstDataCell classes={classes} key={'0'} rowval={rowval} onclick={onclick} title={rowwhere} width={plan.head} height={plan.cell}/>\n\t    {colvalues.map(mapFunction)}\n\t    </TableRow>);\n};\nfunction renderZeroRow(classes,state,colkey,colvalues,plan) {\n    return (<TableRow key={'1'}>\n\t    <TableCell  key={`0`} state={state} index={'0'}>No data</TableCell>\n\t    </TableRow>);\n};\nfunction DataRows(props) {\n    const { classes, state, plan, colkey, colvalues, rowkey, rowvalues, mode } = props;\n    //console.log(\"Making data cols.\",colkey,JSON.stringify(colvalues));\n    var mapFunction= (val,index)=>dataRow(classes,state,colkey,rowkey,colvalues,mode,plan,val,index);\n    if (rowvalues.length===0) {\n\treturn renderZeroRow(classes,state,colkey,colvalues,plan);\n    } else {\n\treturn (rowvalues.map(mapFunction));\n    }\n}\n// ---------------- HDR\nfunction FirstHdrCell (props) {\n    const { classes, label, width } = props;\n    //console.log(\"Making first header cell.\",label);\n    return (<TableCell className={classes.hdrCellFill} width={width}>{label}</TableCell>);\n}\nfunction renderHdrCell(classes,state,colkey,colvalues,rowkey,plan,val,index) {\n    if ((index-1)%plan.step === 0) {\n\t//console.log(\"HdrCell:\",index,plan.step);\n        var cnt = Math.min(colvalues.length,index+plan.step)-index;\n        var colwhere = state.Database.getColWhere(colkey,colvalues,index,plan.step);\n\tvar onclick=() => state.Navigate.selectKey(state,colkey,colvalues[index],colwhere,cnt);\n\tvar title=colwhere;\n\tvar ref=React.createRef();\n\t//console.log(\"Ref:\",JSON.stringify(ref));\n\tvar cursor=classes.hdrCellEmpty;\n\tif (onclick !== undefined) {\n\t    cursor=classes.hdrCell;\n\t}\n\t//var rotate=undefined;\n\tvar rotate=1;\n//[(onclick !== undefined?classes.hdrCell:classes.hdrCellEmpty),\n\treturn (\n\t\t<TableCell className={(onclick !== undefined?classes.hdrCell:classes.hdrCellEmpty)} onClick={onclick} \n\t                title={title} key={`col-${index}`} >\n\t\t   <CanvasText state={state} index={index} plan={plan} label={val}></CanvasText>\n \t        </TableCell> );\n     } else {\n\treturn null;\n    }\n}\nfunction HdrRow(props) {\n    const { classes, state, plan, colkey, colvalues, rowkey, label } = props; //, rowvalues\n    //console.log(\"Making header row.\",colkey,JSON.stringify(colvalues));\n    var mapFunction= (val,index)=>renderHdrCell(classes,state,colkey,colvalues,rowkey,plan,val,index);\n    return (<TableRow key={0}>\n\t      <FirstHdrCell classes={classes} label={label} width={plan.head}/>\n\t      {colvalues.map(mapFunction)}\n\t     </TableRow>);\n}\n// ---------------- Details\nfunction Details(props) {\n    const { classes, state, element } = props; // classes, \n    var colkey = state.Path.getColKey(state)||\"\";\n    var rowkey = state.Path.getRowKey(state)||\"\";\n    var colvalues = state.Path.filterKeys(state,state.Matrix.values[colkey]||[\"\"]);\n    var rowvalues = state.Path.filterKeys(state,state.Matrix.values[rowkey]||[\"\"]);\n    var cellMode  = state.Show.getCellMode(state);\n    var ncol=colvalues.length + 1;\n    var nrow=rowvalues.length + 1;\n    //DOM.style.font\n    var border=3;\n    var label=rowkey + \"\\\\\" + colkey;\n    var width=0.8*window.innerWidth;\n    var height=0.8*window.innerHeight;\n    var plan=makePlan(label,colvalues,rowvalues,width,height,border);\n    console.log(\"Details => Width/Height:\",window.innerWidth,window.innerHeight,plan.width,plan.height)\n    //console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(state.Matrix.values[colkey]||[\"\"]));\n    //console.log(\"Rowkey:\",rowkey,\" rowval:\",JSON.stringify(state.Matrix.values[rowkey]||[\"\"]));\n    return (<Table className={classes.table}>\n\t    <TableHead>\n\t      <HdrRow classes={classes} state={state} plan={plan} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues} label={label}/>\n\t    </TableHead>\n\t    <TableBody>\n\t      <DataRows classes={classes} state={state} plan={plan} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues} mode={cellMode}/>\n\t    </TableBody>\n        </Table>);\n }\n\n//<div  style={{width: '100%', height: '100%'}}>\n//</div>\n        \nclass Table2D extends Component {\n    constructor(props) {\n\tsuper(props);\n\t//this.state=props.state;\n    }\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    } \n    updateWindowDimensions = () => {\n        this.width= window.innerWidth;\n\tthis.height=window.innerHeight;\n\tthis.bbx=this.el.getBoundingClientRect();\n\tconsole.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n    element(el) {\n\tif (el !== undefined && el !== null) {\n\t    this.el=el;\n\t    this.bbx=this.el.getBoundingClientRect();\n\t    console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n\t};\n    };\n    render() {\n\tconst { classes, state } = this.props;\n\tconsole.log(\"##### Rendering Table2D.\");\n\treturn (<div ref={el=>{this.element(el)}} className={classes.root}  style={{width: '100%', height: '100%'}}>\n\t\t   <Grid container spacing={24}>\n\t\t      <Grid item xs={12} > \n                         { <Paper className={classes.table}>\n\t\t              <Details state={state} classes={classes} element={this}/>\n                           </Paper>}\n                      </Grid>\n                   </Grid>\n\t        </div>);\n    }\n}\n\nTable2D.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Table2D);\n"]},"metadata":{},"sourceType":"module"}