{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/Table2DComponent.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport SummaryCell from './SummaryCell';\nimport SeriesCell from './SeriesCell';\nconsole.log(\"Inside Table.\");\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      height: '100%',\n      width: '100%'\n    },\n    paper: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'left'\n    },\n    table: {\n      textAlign: 'left',\n      padding: theme.spacing.unit * 2,\n      cursor: \"pointer\",\n      height: '100%',\n      width: '100%'\n    },\n    cell: {\n      cursor: \"pointer\"\n    }\n  };\n}; //function onCellClick(event) {\n//    var rowid=event.target.getAttribute(\"rowid\");\n//    event.target.innerHTML = rowid;\n//}\n\n\nfunction getStep(state, colvalues, cellMode) {\n  var step = 1;\n\n  if (cellMode === state.Show.code.mSeries) {\n    step = Math.max(1, Math.ceil(colvalues.length / 20));\n  }\n\n  return step;\n} // ---------------- DATA\n\n\nfunction FirstDataCell(props) {\n  var rowkey = props.rowkey,\n      onclick = props.onclick,\n      title = props.title;\n  console.log(\"Making first data cell.\");\n  return React.createElement(TableCell, {\n    onClick: onclick,\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, rowkey);\n}\n\nfunction DataCell(props) {\n  var state = props.state,\n      mode = props.mode,\n      other = _objectWithoutProperties(props, [\"state\", \"mode\"]);\n\n  if (mode === state.Show.code.mSum) {\n    return React.createElement(SummaryCell, Object.assign({}, other, {\n      state: state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(SeriesCell, Object.assign({}, other, {\n      state: state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n}\n\nfunction renderDataCell(classes, state, colkey, colvalues, rowkey, rowval, rowindex, rowwhere, mode, step, val, index) {\n  //console.log(\"Making data cell:\",rowval,val);\n  var title = state.Database.getWhereDetail(colkey, colvalues[index]);\n\n  if ((index - 1) % step === 0) {\n    var clen = colvalues.length; // get elements and range\n\n    var kk;\n    var elements = undefined;\n    var range = [undefined, undefined];\n\n    if (state.React.matrix !== undefined) {\n      range = state.Matrix.getRange(state.React.matrix, colvalues, [rowval]);\n\n      for (kk = index; kk < Math.min(clen, index + step); kk++) {\n        var element = state.Matrix.getMatrixElement(colvalues[kk], rowval, state.React.matrix);\n\n        if (element === undefined) {} else {\n          //console.log(\"Found:\",colvalues[kk],rowval);\n          if (elements === undefined) {\n            elements = [];\n          }\n\n          ;\n          elements.push(element);\n        }\n      }\n\n      ;\n    } // get count and colwhere\n\n\n    var cnt = 0;\n    var colwhere = \"\";\n\n    for (kk = index; kk < Math.min(clen, index + step); kk++) {\n      if (colwhere !== \"\") {\n        colwhere = colwhere + \" or \";\n      }\n\n      colwhere = colwhere + state.Database.getWhereDetail(colkey, colvalues[kk]);\n      cnt = cnt + 1;\n    }\n\n    ; // make onclick and title\n\n    var onclick = function onclick() {\n      return state.Layout.selectItem(colkey, rowkey, colvalues[index], rowval, colwhere, rowwhere, cnt, 1);\n    };\n\n    return React.createElement(DataCell, {\n      classes: classes,\n      state: state,\n      key: \"col-\".concat(index),\n      index: index,\n      onClick: onclick,\n      title: title,\n      colkey: colkey,\n      rowkey: rowkey,\n      colval: val,\n      rowval: rowval,\n      colwhere: colwhere,\n      rowwhere: rowwhere,\n      elements: elements,\n      mode: mode,\n      step: step,\n      range: range,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    });\n  } else {\n    return null;\n  }\n}\n\nfunction dataRow(classes, state, colkey, rowkey, colvalues, mode, step, rowval, rowindex) {\n  var rowwhere = state.Database.getWhereDetail(rowkey, rowval);\n\n  var onclick = function onclick() {\n    return state.Layout.selectKey(rowkey, rowval, rowwhere, 1);\n  };\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderDataCell(classes, state, colkey, rowkey, rowval, rowindex, rowwhere, mode, step, val, index);\n  };\n\n  return React.createElement(TableRow, {\n    key: rowindex.toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(FirstDataCell, {\n    key: '0',\n    rowkey: rowkey,\n    onClick: onclick,\n    title: rowwhere,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), colvalues.map(mapFunction));\n}\n\n;\n\nfunction renderZeroRow(classes, state, colkey, colvalues, step) {\n  return React.createElement(TableRow, {\n    key: '1',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    key: \"0\",\n    classes: classes,\n    state: state,\n    index: '0',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"No data\"));\n}\n\n;\n\nfunction DataRows(props) {\n  var classes = props.classes,\n      state = props.state,\n      step = props.step,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey,\n      rowvalues = props.rowvalues,\n      mode = props.mode;\n  console.log(\"Making data rows.\", rowkey, JSON.stringify(rowvalues));\n\n  var mapFunction = function mapFunction(val, index) {\n    return dataRow(classes, state, colkey, rowkey, colvalues, mode, step, val, index);\n  };\n\n  if (rowvalues.length === 0) {\n    return renderZeroRow(classes, state, colkey, colvalues, step);\n  } else {\n    return rowvalues.map(mapFunction);\n  }\n} // ---------------- HDR\n\n\nfunction FirstHdrCell(props) {\n  var colkey = props.colkey,\n      rowkey = props.rowkey;\n  var label = rowkey + \"\\\\\" + colkey;\n  console.log(\"Making first header cell.\", label);\n  return React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, label);\n}\n\nfunction renderHdrCell(classes, state, colkey, colvalues, rowkey, step, val, index) {\n  if ((index - 1) % step === 0) {\n    console.log(\"HdrCell:\", index, step);\n    var colwhere = \"\";\n    var cnt = 0;\n    var clen = colvalues.length;\n\n    for (var kk = index; kk < Math.min(clen, index + step); kk++) {\n      if (colwhere !== \"\") {\n        colwhere = colwhere + \" or \";\n      }\n\n      colwhere = colwhere + state.Database.getWhereDetail(colkey, colvalues[kk]);\n      cnt = cnt + 1;\n    }\n\n    ;\n\n    var onclick = function onclick() {\n      return state.Layout.selectKey(colkey, colvalues[index], colwhere, cnt);\n    };\n\n    var title = colwhere;\n    return React.createElement(TableCell, {\n      key: \"col-\".concat(index),\n      index: index,\n      onClick: onclick,\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    });\n  } else {\n    return null;\n  }\n}\n\nfunction HdrRow(props) {\n  var classes = props.classes,\n      state = props.state,\n      step = props.step,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey; //, rowvalues\n\n  console.log(\"Making header row.\", colkey, JSON.stringify(colvalues));\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderHdrCell(classes, state, colkey, colvalues, rowkey, step, val, index);\n  };\n\n  return React.createElement(TableRow, {\n    key: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(FirstHdrCell, {\n    colkey: colkey,\n    rowkey: rowkey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), colvalues.map(mapFunction));\n} // ---------------- Details\n\n\nfunction Details(props) {\n  var classes = props.classes,\n      state = props.state; // classes, \n\n  var colkey = state.Path.getColKey(state) || \"\";\n  var rowkey = state.Path.getRowKey(state) || \"\";\n  var colvalues = state.Path.filterKeys(state, state.Matrix.values[colkey] || [\"\"]);\n  var rowvalues = state.Path.filterKeys(state, state.Matrix.values[rowkey] || [\"\"]);\n  var cellMode = state.Show.getCellMode();\n  var step = getStep(state, colvalues, cellMode);\n  return React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(HdrRow, {\n    classes: classes,\n    state: state,\n    step: step,\n    colkey: colkey,\n    colvalues: colvalues,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  })), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(DataRows, {\n    state: state,\n    step: step,\n    colkey: colkey,\n    colvalues: colvalues,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    mode: cellMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }))));\n}\n\nfunction onCellClick(event) {\n  var rowid = event.target.getAttribute(\"rowid\");\n  event.target.innerHTML = rowid;\n}\n\nvar Table2D =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Table2D, _Component);\n\n  function Table2D(props) {\n    var _this;\n\n    _classCallCheck(this, Table2D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table2D).call(this, props));\n    _this.state = props.state;\n    return _this;\n  }\n\n  _createClass(Table2D, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state;\n      console.log(\"##### Rendering Table2D.\");\n      return React.createElement(\"div\", {\n        className: classes.root,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Details, {\n        state: state,\n        classes: classes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Table2D;\n}(Component);\n\nTable2D.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Table2D);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/Table2DComponent.js"],"names":["React","Component","PropTypes","withStyles","Paper","Grid","Table","TableBody","TableRow","TableHead","TableCell","TableSortLabel","SummaryCell","SeriesCell","console","log","styles","theme","root","flexGrow","height","width","paper","padding","spacing","unit","textAlign","table","cursor","cell","getStep","state","colvalues","cellMode","step","Show","code","mSeries","Math","max","ceil","length","FirstDataCell","props","rowkey","onclick","title","DataCell","mode","other","mSum","renderDataCell","classes","colkey","rowval","rowindex","rowwhere","val","index","Database","getWhereDetail","clen","kk","elements","undefined","range","matrix","Matrix","getRange","min","element","getMatrixElement","push","cnt","colwhere","Layout","selectItem","dataRow","selectKey","mapFunction","toString","map","renderZeroRow","DataRows","rowvalues","JSON","stringify","FirstHdrCell","label","renderHdrCell","HdrRow","Details","Path","getColKey","getRowKey","filterKeys","values","getCellMode","onCellClick","event","rowid","target","getAttribute","innerHTML","Table2D","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nimport SummaryCell from './SummaryCell';\nimport SeriesCell from './SeriesCell';\n\nconsole.log(\"Inside Table.\")\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n\theight: '100%',\n\twidth: '100%',\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'left',\n    },\n    table: {\n        textAlign: 'left',\n        padding: theme.spacing.unit * 2,\n\tcursor: \"pointer\",\n\theight: '100%',\n\twidth: '100%',\n    },\n    cell : {cursor: \"pointer\",},\n});\n\n//function onCellClick(event) {\n//    var rowid=event.target.getAttribute(\"rowid\");\n//    event.target.innerHTML = rowid;\n//}\nfunction getStep(state,colvalues,cellMode) {\n    var step=1;\n    if (cellMode === state.Show.code.mSeries) {step=Math.max(1,Math.ceil(colvalues.length/20));}\n    return step;\n}\n// ---------------- DATA\nfunction FirstDataCell (props) {\n    const { rowkey, onclick, title } = props;\n    console.log(\"Making first data cell.\");\n    return (<TableCell onClick={onclick} title={title}>{rowkey}</TableCell>);\n}\nfunction DataCell(props) {\n    const {state,mode,...other}=props;\n    if (mode===state.Show.code.mSum) {\n\treturn <SummaryCell {...other} state={state}/>\n    } else {\n\treturn <SeriesCell {...other} state={state}/>\n    }\n}\nfunction renderDataCell(classes,state,colkey,colvalues,rowkey,rowval,rowindex,rowwhere,mode,step,val,index) {\n    //console.log(\"Making data cell:\",rowval,val);\n    var title=state.Database.getWhereDetail(colkey,colvalues[index]);\n    if ((index-1)%step === 0) {\n\tvar clen=colvalues.length;\n\t// get elements and range\n\tvar kk;\n        var elements=undefined\n\tvar range=[undefined,undefined];\n\tif (state.React.matrix!==undefined) {\n\t    range=state.Matrix.getRange(state.React.matrix,colvalues,[rowval]);\n            for (kk=index;kk<Math.min(clen,index+step);kk++) {\n\t\tvar element=state.Matrix.getMatrixElement(colvalues[kk],rowval,state.React.matrix);\n\t\tif (element === undefined) {\n\t\t} else {\n                    //console.log(\"Found:\",colvalues[kk],rowval);\n                    if (elements===undefined) {elements=[];};\n                    elements.push(element);\n\t\t}\n            };               \n\t}\n\t// get count and colwhere\n        var cnt=0;\n        var colwhere = \"\";\n        for (kk=index;kk<Math.min(clen,index+step);kk++) {\n\t    if (colwhere !== \"\") {colwhere=colwhere + \" or \";}\n\t    colwhere=colwhere + state.Database.getWhereDetail(colkey,colvalues[kk]);\n\t    cnt=cnt+1;\n        };               \n\t// make onclick and title\n\tvar onclick=() => state.Layout.selectItem(colkey,rowkey,colvalues[index],rowval,colwhere,rowwhere,cnt,1);\n\treturn (<DataCell classes={classes} state={state} key={`col-${index}`} index={index} onClick={onclick} title={title} \n\t\tcolkey={colkey} rowkey={rowkey} colval={val} rowval={rowval} colwhere={colwhere} rowwhere={rowwhere} \n\t\telements={elements} mode={mode} step={step} range={range}/>);\n    } else {\n\treturn null;\n    }\n}\nfunction dataRow(classes,state,colkey,rowkey,colvalues,mode,step,rowval,rowindex) {\n    var rowwhere=state.Database.getWhereDetail(rowkey,rowval);\n    var onclick=() => state.Layout.selectKey(rowkey,rowval,rowwhere,1);\n    var mapFunction= (val,index)=>renderDataCell(classes,state,colkey,rowkey,rowval,rowindex,rowwhere,mode,step,val,index);\n    return (<TableRow key={rowindex.toString()}>\n\t    <FirstDataCell key={'0'} rowkey={rowkey} onClick={onclick} title={rowwhere}/>\n\t    {colvalues.map(mapFunction)}\n\t    </TableRow>);\n};\nfunction renderZeroRow(classes,state,colkey,colvalues,step) {\n    return (<TableRow key={'1'}>\n\t    <TableCell  key={`0`} classes={classes} state={state} index={'0'}>No data</TableCell>\n\t    </TableRow>);\n};\nfunction DataRows(props) {\n    const { classes, state, step, colkey,colvalues, rowkey, rowvalues, mode } = props;\n    console.log(\"Making data rows.\",rowkey,JSON.stringify(rowvalues));\n    var mapFunction= (val,index)=>dataRow(classes,state,colkey,rowkey,colvalues,mode,step,val,index);\n    if (rowvalues.length===0) {\n\treturn renderZeroRow(classes,state,colkey,colvalues,step);\n    } else {\n\treturn (rowvalues.map(mapFunction));\n    }\n}\n// ---------------- HDR\nfunction FirstHdrCell (props) {\n    const { colkey, rowkey } = props;\n    var label=rowkey + \"\\\\\" + colkey;\n    console.log(\"Making first header cell.\",label);\n    return (<TableCell>{label}</TableCell>);\n}\nfunction renderHdrCell(classes,state,colkey,colvalues,rowkey,step,val,index) {\n    if ((index-1)%step === 0) {\n\tconsole.log(\"HdrCell:\",index,step);\n        var colwhere = \"\";\n        var cnt=0\n\tvar clen=colvalues.length;\n        for (var kk=index;kk<Math.min(clen,index+step);kk++) {\n            if (colwhere !== \"\") {colwhere=colwhere + \" or \";}\n            colwhere=colwhere + state.Database.getWhereDetail(colkey,colvalues[kk]);\n            cnt=cnt+1;\n        };               \n\tvar onclick=() => state.Layout.selectKey(colkey,colvalues[index],colwhere,cnt);\n\tvar title=colwhere;\n\treturn (<TableCell key={`col-${index}`} index={index} onClick={onclick} title={title}/>);\n    } else {\n\treturn null;\n    }\n}\nfunction HdrRow(props) {\n    const { classes, state, step, colkey, colvalues, rowkey } = props; //, rowvalues\n    console.log(\"Making header row.\",colkey,JSON.stringify(colvalues));\n    var mapFunction= (val,index)=>renderHdrCell(classes,state,colkey,colvalues,rowkey,step,val,index);\n    return (<TableRow key={0}>\n\t      <FirstHdrCell colkey={colkey} rowkey={rowkey}/>\n\t      {colvalues.map(mapFunction)}\n\t     </TableRow>);\n}\n// ---------------- Details\nfunction Details(props) {\n    const { classes, state } = props; // classes, \n    var colkey = state.Path.getColKey(state)||\"\";\n    var rowkey = state.Path.getRowKey(state)||\"\";\n    var colvalues = state.Path.filterKeys(state,state.Matrix.values[colkey]||[\"\"]);\n    var rowvalues = state.Path.filterKeys(state,state.Matrix.values[rowkey]||[\"\"]);\n    var cellMode  = state.Show.getCellMode();\n    var step=getStep(state,colvalues,cellMode);\n    return (<div  style={{width: '100%', height: '100%'}}>\n        <Table>\n\t    <TableHead>\n\t      <HdrRow classes={classes} state={state} step={step} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues}/>\n\t    </TableHead>\n\t    <TableBody>\n\t      <DataRows state={state} step={step} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues} mode={cellMode}/>\n\t    </TableBody>\n        </Table>\n           </div>);\n }\n\nfunction onCellClick(event) {\n    var rowid=event.target.getAttribute(\"rowid\");\n    event.target.innerHTML = rowid;\n}\nclass Table2D extends Component {\n    constructor(props) {\n\tsuper(props);\n\tthis.state=props.state;\n    }\n    componentDidMount() {} \n    render() {\n\tconst { classes, state } = this.props;\n\tconsole.log(\"##### Rendering Table2D.\");\n\treturn (<div className={classes.root}  style={{width: '100%', height: '100%'}}>\n\t\t   <Grid container spacing={24}>\n\t\t      <Grid item xs={12} > \n                         { <Paper className={classes.table}>\n\t\t              <Details state={state} classes={classes}/>\n                           </Paper>}\n                      </Grid>\n                   </Grid>\n\t        </div>);\n    }\n}\n\nTable2D.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Table2D);\n"]},"metadata":{},"sourceType":"module"}