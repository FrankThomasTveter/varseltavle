{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/DatasetComponent.js\";\nimport React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport Path from \"./PathComponent\";\nimport Map from \"./MapComponent\";\nimport Table0D from \"./Table0DComponent\";\nimport Table1D from \"./Table1DComponent\";\nimport Table2D from \"./Table2DComponent\";\nimport Progress from './Progress'; //console.log(\"Inside Dataset.\")\n\nvar styles = function styles(theme) {\n  return {\n    body: {\n      margin: theme.spacing.getMaxWidth.margin,\n      width: '90%',\n      height: '90%'\n    },\n    table: {\n      textAlign: 'left',\n      padding: theme.spacing.unit * 0,\n      height: '100%',\n      width: '100%',\n      borderStyle: 'solid'\n    },\n    row: {\n      alignItems: \"stretch\"\n    },\n    cell: {\n      cursor: \"pointer\"\n    }\n  };\n}; //        maxWidth: theme.spacing.getMaxWidth.maxWidth,\n\n\nfunction Switcher(props) {\n  var state = props.state,\n      progress = props.progress; //var skeys=state.Matrix.sortedKeys(state,state.Matrix.keyCnt);\n\n  var dim = state.Show.getDim(state);\n  var mode = state.Show.getLayoutMode(props.state); //console.log(\">>>>>> Switcher Dim:\",dim,\" mode:\",mode);\n\n  if (progress) {\n    // processing\n    return React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        margin: '0 auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Progress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  } else if (mode === state.Show.code.layout.Map) {\n    return React.createElement(Map, {\n      state: state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n  } else if (dim === 2) {\n    return React.createElement(Table2D, {\n      state: state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n  } else if (dim === 1) {\n    return React.createElement(Table1D, {\n      state: state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n  } else if (dim === 0) {\n    return React.createElement(Table0D, {\n      state: state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    });\n  }\n}\n\n;\n\nvar Dataset =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dataset, _Component);\n\n  function Dataset(props) {\n    var _this;\n\n    _classCallCheck(this, Dataset);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dataset).call(this, props));\n    var state = props.state;\n    state.React.Dataset = _assertThisInitialized(_assertThisInitialized(_this));\n    _this.state = {\n      progress: false\n    };\n    return _this;\n  }\n\n  _createClass(Dataset, [{\n    key: \"showMatrix\",\n    value: function showMatrix(state, matrix) {\n      state.React.matrix = matrix; //console.log(\"Datacomponent matrix:\",JSON.stringify(state.React.matrix));\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"setProgress\",\n    value: function setProgress(state, active) {\n      this.setState({\n        progress: active\n      }); //this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state;\n      return React.createElement(\"div\", {\n        className: classes.body,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Path, {\n        state: state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Switcher, {\n        state: state,\n        progress: this.state.progress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Dataset;\n}(Component);\n\nDataset.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Dataset);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/DatasetComponent.js"],"names":["React","Component","withStyles","PropTypes","Path","Map","Table0D","Table1D","Table2D","Progress","styles","theme","body","margin","spacing","getMaxWidth","width","height","table","textAlign","padding","unit","borderStyle","row","alignItems","cell","cursor","Switcher","props","state","progress","dim","Show","getDim","mode","getLayoutMode","code","layout","Dataset","matrix","forceUpdate","active","setState","classes","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {withStyles} from \"@material-ui/core\";\nimport PropTypes from  \"prop-types\";\nimport Path      from  \"./PathComponent\";\nimport Map       from  \"./MapComponent\";\nimport Table0D   from  \"./Table0DComponent\";\nimport Table1D   from  \"./Table1DComponent\";\nimport Table2D   from  \"./Table2DComponent\";\nimport Progress  from './Progress';\n\n//console.log(\"Inside Dataset.\")\n\nconst styles = theme => ({\n    body: {\n        margin: theme.spacing.getMaxWidth.margin,\n\twidth: '90%',\n\theight: '90%',\n    },\n    table: {\n        textAlign: 'left',\n        padding: theme.spacing.unit * 0,\n\theight: '100%',\n\twidth: '100%',\n\tborderStyle: 'solid',\n    },\n    row  :{alignItems: \"stretch\"},\n    cell : {cursor: \"pointer\"},\n});\n//        maxWidth: theme.spacing.getMaxWidth.maxWidth,\n\nfunction Switcher(props) {\n    const { state, progress } = props;\n    //var skeys=state.Matrix.sortedKeys(state,state.Matrix.keyCnt);\n    var dim        = state.Show.getDim(state)\n    var mode       = state.Show.getLayoutMode(props.state);\n    //console.log(\">>>>>> Switcher Dim:\",dim,\" mode:\",mode);\n    if (progress) { // processing\n\treturn (<div style={{width:'100%',margin:'0 auto'}}>\n\t          <Progress/>\n\t       </div>);\n    } else if (mode === state.Show.code.layout.Map) {\n\treturn (<Map state={state}/>);\n    } else if (dim===2) {\n\treturn (<Table2D state={state}/>);\n    } else if (dim===1) {\n\treturn (<Table1D state={state}/>);\n    } else if (dim===0) {\n\treturn (<Table0D state={state}/>);\n    }\n};\n\nclass Dataset extends Component {\n    constructor(props) {\n        super(props);\n        const {state} = props;\n        state.React.Dataset=this;\n\tthis.state={progress:false};\n    };\n    showMatrix(state,matrix) {\n\tstate.React.matrix=matrix;\n\t//console.log(\"Datacomponent matrix:\",JSON.stringify(state.React.matrix));\n\tthis.forceUpdate();\n    };\n    setProgress(state,active) {\n\tthis.setState({progress:active});\n\t//this.forceUpdate();\n    };\n    render() {\n        const { classes, state } = this.props;\n        return (\n            <div className={classes.body}>\n                <Path     state={state}/>\n\t\t<Switcher state={state} progress={this.state.progress}/>\n            </div>\n        );\n    }\n\n}\n\nDataset.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Dataset);\n"]},"metadata":{},"sourceType":"module"}