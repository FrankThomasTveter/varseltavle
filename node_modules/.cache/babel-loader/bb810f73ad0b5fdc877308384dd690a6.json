{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/Table0DComponent.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport SummaryCell from './SummaryCell';\nimport SeriesCell from './SeriesCell';\nimport CanvasText from './CanvasTextComponent';\nimport Text from './TextComponent'; //\toverflow: 'hidden',\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      height: '100%'\n    },\n    paper: {\n      tableLayout: 'fixed',\n      padding: 0,\n      margin: 0\n    },\n    divTable: {\n      display: 'table',\n      width: '100%'\n    },\n    divTableRow: {\n      display: 'table-row'\n    },\n    divTableCell: {\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '3px 3px'\n    },\n    divTableCellCursor: {\n      cursor: \"pointer\",\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    },\n    divTableHead: {\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    },\n    divTableHeading: {\n      display: 'table-header-group'\n    },\n    divTableHeadingCenter: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    divTableFoot: {\n      backgroundColor: '#DDD',\n      display: 'table-footer-group',\n      fontWeight: 'bold'\n    },\n    divTableBody: {\n      display: 'table-row-group'\n    }\n  };\n}; // ---------------- DATA\n\n\nfunction DataCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      elements = props.elements,\n      mode = props.mode,\n      plan = props.plan,\n      rowindex = props.rowindex,\n      other = _objectWithoutProperties(props, [\"classes\", \"state\", \"elements\", \"mode\", \"plan\", \"rowindex\"]);\n\n  if (elements === undefined) {\n    if (rowindex % 2 === 1) {\n      return React.createElement(\"div\", {\n        className: classes.divTableCell,\n        style: {\n          backgroundColor: '#EEE'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: classes.divTableCell,\n        style: {\n          backgroundColor: '#FFF'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      });\n    }\n  } else if (mode === state.Show.code.cell.Sum) {\n    return React.createElement(SummaryCell, Object.assign({}, other, {\n      state: state,\n      elements: elements,\n      plan: plan,\n      rowindex: rowindex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })); //return null;\n  } else {\n    return React.createElement(SeriesCell, Object.assign({}, other, {\n      state: state,\n      elements: elements,\n      plan: plan,\n      rowindex: rowindex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })); //return null;\n  }\n}\n\n;\n\nfunction renderDataSeries(classes, state, rowkey, rowvalues, range, plan, val, index) {\n  var title = state.Database.getWhereDetail(rowkey, rowvalues[index]); //console.log(\"Making data cell:\",rowval,val,index,plan,JSON.stringify(rowvalues));\n\n  if (index % plan.step === 0) {\n    // get elements and range\n    //console.log(\"Processing:\",val,rowvalues[index],plan.step);\n    var elements = state.Matrix.getMatrixRowElements(\"\", rowvalues, state.React.matrix, index, plan.step); // get count and rowwhere\n\n    var cnt = Math.min(rowvalues.length, index + plan.step) - index;\n    var rowwhere = state.Database.getColWhere(rowkey, rowvalues, index, plan.step); // make onclick and title\n\n    var onclick = function onclick() {\n      return state.Navigate.selectKey(state, rowkey, val, rowwhere, 1);\n    };\n\n    return React.createElement(DataCell, {\n      classes: classes,\n      state: state,\n      key: val,\n      index: index,\n      onclick: onclick,\n      title: title,\n      rowkey: \"\",\n      rowvalues: [\"\"],\n      rowval: \"\",\n      rowwhere: rowwhere,\n      colkey: rowkey,\n      colvalues: rowvalues,\n      colval: val,\n      elements: elements,\n      plan: plan,\n      range: range,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    });\n  } else {\n    return null;\n  }\n}\n\n;\n\nfunction renderDataSum(classes, state, rowkey, rowindex, doc, plan, skey, bgcolor, index) {\n  if (doc === undefined) {\n    if (rowindex % 2 === 1) {\n      return React.createElement(\"div\", {\n        className: classes.divTableCell,\n        style: {\n          backgroundColor: '#EEE'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: classes.divTableCell,\n        style: {\n          backgroundColor: '#FFF'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      });\n    }\n  } else {\n    var val = doc[skey] || \"\";\n    console.log(\"Key:\", skey, \" Val:\", JSON.stringify(val), JSON.stringify(doc[skey]));\n    return React.createElement(\"div\", {\n      className: classes.divTableCell,\n      style: {\n        backgroundColor: bgcolor\n      },\n      key: skey,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, val);\n  }\n}\n\n;\n\nfunction renderDoc(classes, state, rowkey, rowval, rowindex, skeys, plan, doc, lev, index) {\n  var rowwhere = state.Database.getWhereDetail(rowkey, rowval);\n\n  var onclick = function onclick() {\n    return state.Navigate.selectKey(state, rowkey, rowval, rowwhere, 1);\n  }; //console.log(\"Making data cols.\",rowval,colkey,JSON.stringify(colvalues));\n  //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n\n\n  var bgcolor = state.Colors.getLevelColor(lev);\n\n  var mapFunction = function mapFunction(skey, index) {\n    return renderDataSum(classes, state, rowkey, rowindex, doc, plan, skey, bgcolor, index);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.divTableRow,\n    key: rowindex.toString() + '-' + index.toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, skeys.map(mapFunction));\n}\n\n;\n\nfunction dataRowSum(classes, state, rowkey, rowvalues, skeys, plans, rowval, rowindex) {\n  var rowwhere = state.Database.getWhereDetail(rowkey, rowval);\n\n  var onclick = function onclick() {\n    return state.Navigate.selectKey(state, rowkey, rowval, rowwhere, 1);\n  }; //console.log(\"Making data cols.\",rowval,colkey,JSON.stringify(colvalues));\n  //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n\n\n  var element = state.Matrix.getMatrixElement(\"\", rowval, state.React.matrix);\n\n  if (element === undefined) {\n    return React.createElement(\"div\", {\n      className: classes.divTableRow,\n      key: rowindex.toString(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    });\n  } else if (element.docs.length < 100) {\n    var lev = element.maxlev;\n\n    var mapFunction = function mapFunction(doc, index) {\n      return renderDoc(classes, state, rowkey, rowval, rowindex, skeys, plans.cell, doc, lev, index);\n    };\n\n    return element.docs.map(mapFunction);\n  } else {\n    return React.createElement(\"div\", {\n      className: classes.divTableRow,\n      key: 'row-' + rowindex.toString(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"...\");\n  }\n\n  ;\n}\n\n;\n\nfunction dataRowSeries(classes, state, rowkey, rowvalues, plans) {\n  //console.log(\"Making data cols.\",rowval,colkey,JSON.stringify(colvalues));\n  //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n  var range = [undefined, undefined];\n\n  if (state.React.matrix !== undefined) {\n    range = state.Matrix.getRange(state, state.React.matrix, [\"\"], rowvalues); //console.log(\"Range:\",JSON.stringify(range));\n  }\n\n  ;\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderDataSeries(classes, state, rowkey, rowvalues, range, plans, val, index);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.divTableRow,\n    key: rowkey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, rowvalues.map(mapFunction));\n}\n\n;\n\nfunction renderZeroRow(classes, state, plans) {\n  return React.createElement(\"div\", {\n    className: classes.divTableRow,\n    key: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.divTableCell,\n    width: plans.cell.width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"No data available\"));\n}\n\n;\n\nfunction DataRows(props) {\n  var classes = props.classes,\n      state = props.state,\n      plans = props.plans,\n      rowkey = props.rowkey,\n      rowvalues = props.rowvalues,\n      cellMode = props.cellMode,\n      skeys = props.skeys;\n\n  if (rowvalues.length === 0) {\n    return renderZeroRow(classes, state, plans);\n  } else if (cellMode === state.Show.code.cell.Sum) {\n    var mapFunction = function mapFunction(val, index) {\n      return dataRowSum(classes, state, rowkey, rowvalues, skeys, plans, val, index);\n    };\n\n    var arr = rowvalues.map(mapFunction);\n    return arr;\n  } else {\n    return dataRowSeries(classes, state, rowkey, rowvalues, plans);\n  }\n} // ---------------- HDR\n\n\nfunction FirstHdrCell(props) {\n  var classes = props.classes,\n      label = props.label,\n      plan = props.plan;\n  var width = plan.width;\n  var height = plan.height; //console.log(\"Making first header cell.\",label,width,height);\n\n  if (label !== \"\") {\n    return React.createElement(\"div\", {\n      className: classes.divTableHeadingCenter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, label);\n  } else {\n    return null;\n  }\n\n  ;\n}\n\nfunction renderHdrSum(classes, state, rowkey, plan, val, index) {\n  //console.log(\"HdrCell:\",val);\n  var cursor = classes.divTableCell;\n  return React.createElement(\"div\", {\n    className: cursor,\n    style: {\n      backgroundColor: '#DDD'\n    },\n    key: \"col-\".concat(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, val);\n}\n\nfunction renderHdrSeries(classes, state, rowkey, rowvalues, plan, val, index) {\n  if (index % plan.step === 0) {\n    //console.log(\"HdrCell:\",index,plan.step);\n    var cnt = Math.min(rowvalues.length, index + plan.step) - index;\n    var rowwhere = state.Database.getColWhere(rowkey, rowvalues, index, plan.step);\n\n    var onclick = function onclick() {\n      return state.Navigate.selectKey(state, rowkey, val, rowwhere, cnt);\n    };\n\n    var title = rowwhere;\n    var cursor = classes.divTableCell;\n\n    if (onclick !== undefined) {\n      cursor = classes.divTableCellCursor;\n    }\n\n    return React.createElement(\"div\", {\n      className: cursor,\n      onClick: onclick,\n      style: {\n        backgroundColor: '#DDD'\n      },\n      title: title,\n      key: \"col-\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(CanvasText, {\n      state: state,\n      index: index,\n      plan: plan.col,\n      label: val,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }));\n  } else {\n    return null;\n  }\n}\n\nfunction HdrRow(props) {\n  var classes = props.classes,\n      state = props.state,\n      plans = props.plans,\n      rowkey = props.rowkey,\n      rowvalues = props.rowvalues,\n      label = props.label,\n      skeys = props.skeys,\n      cellMode = props.cellMode; //, rowvalues\n\n  if (cellMode === state.Show.code.cell.Sum) {\n    var mapFunction = function mapFunction(val, index) {\n      return renderHdrSum(classes, state, rowkey, plans.col, val, index);\n    }; //console.log(\"Making header Sum row.\",label,rowkey,JSON.stringify(skeys));\n\n\n    return React.createElement(\"div\", {\n      className: classes.divTableRow,\n      key: 'hdr',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(FirstHdrCell, {\n      classes: classes,\n      label: label,\n      plan: plans.hdr,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), skeys.map(mapFunction));\n  } else {\n    var mapFunction = function mapFunction(val, index) {\n      return renderHdrSeries(classes, state, rowkey, rowvalues, plans.col, val, index);\n    }; //console.log(\"Making header Series row.\",label,rowkey,JSON.stringify(rowvalues));\n\n\n    return null; //\treturn (<div className={classes.divTableRow} key={0}>\n    //\t\t   {rowvalues.map(mapFunction)}\n    //\t\t</div>);\n  }\n} // ---------------- Details\n\n\nfunction Details(props) {\n  var classes = props.classes,\n      state = props.state,\n      element = props.element; // classes, \n\n  var cellMode = state.Show.getCellMode(state);\n  var colkey = state.Path.getColKey(state) || \"\";\n  var rowkey = state.Path.getRowKey(state) || \"\";\n\n  if (state.React.matrix === undefined) {\n    return React.createElement(\"div\", {\n      className: classes.divTable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.divTableBody,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.devTableCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"No Matrix defined\")));\n  } else {\n    var colvalues = state.Path.filterKeys(state, state.Matrix.values[colkey] || [\"\"]);\n    var rowvalues = state.Path.filterKeys(state, state.Matrix.values[rowkey] || [\"\"]);\n    var skeys = state.Matrix.sortedKeys(state, state.Matrix.keyCnt); //DOM.style.font\n\n    var border = 2;\n    var label = rowkey;\n    var width = 0.8 * window.innerWidth;\n    var height = 0.8 * (window.innerHeight - 200);\n    var plans = state.Layout.makePlans(state, label, rowvalues, width, height, border, cellMode); //console.log(\"Plan:\",JSON.stringify(plan));\n    //console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(colvalues));\n    //console.log(\"Rowkey:\",rowkey,\" rowval:\",JSON.stringify(rowvalues));\n    //console.log(\"skeys: \",JSON.stringify(skeys));\n\n    return React.createElement(\"div\", {\n      className: classes.divTable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.divTableBody,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(HdrRow, {\n      classes: classes,\n      state: state,\n      key: \"hdr\",\n      plans: plans,\n      rowkey: rowkey,\n      rowvalues: rowvalues,\n      label: label,\n      cellMode: cellMode,\n      skeys: skeys,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }), React.createElement(DataRows, {\n      classes: classes,\n      state: state,\n      key: \"data\",\n      plans: plans,\n      rowkey: rowkey,\n      rowvalues: rowvalues,\n      cellMode: cellMode,\n      skeys: skeys,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    })));\n  }\n}\n\n;\n\nvar Table0D =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Table0D, _Component);\n\n  function Table0D(props) {\n    var _this;\n\n    _classCallCheck(this, Table0D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table0D).call(this, props)); //this.state=props.state;\n\n    _this.updateWindowDimensions = function () {\n      _this.width = window.innerWidth;\n      _this.height = window.innerHeight;\n      _this.bbx = _this.el.getBoundingClientRect(); //console.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n\n    return _this;\n  }\n\n  _createClass(Table0D, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n  }, {\n    key: \"element\",\n    value: function element(el) {\n      if (el !== undefined && el !== null) {\n        this.el = el;\n        this.bbx = this.el.getBoundingClientRect(); //console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n      }\n\n      ;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state; //console.log(\"##### Rendering Table0D.\");\n\n      return React.createElement(\"div\", {\n        ref: function ref(el) {\n          _this2.element(el);\n        },\n        className: classes.root,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(Details, {\n        state: state,\n        classes: classes,\n        element: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Table0D;\n}(Component);\n\nTable0D.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Table0D);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/Table0DComponent.js"],"names":["React","Component","PropTypes","withStyles","Paper","Grid","SummaryCell","SeriesCell","CanvasText","Text","styles","theme","root","height","paper","tableLayout","padding","margin","divTable","display","width","divTableRow","divTableCell","border","divTableCellCursor","cursor","divTableHead","divTableHeading","divTableHeadingCenter","justifyContent","divTableFoot","backgroundColor","fontWeight","divTableBody","DataCell","props","classes","state","elements","mode","plan","rowindex","other","undefined","Show","code","cell","Sum","renderDataSeries","rowkey","rowvalues","range","val","index","title","Database","getWhereDetail","step","Matrix","getMatrixRowElements","matrix","cnt","Math","min","length","rowwhere","getColWhere","onclick","Navigate","selectKey","renderDataSum","doc","skey","bgcolor","console","log","JSON","stringify","renderDoc","rowval","skeys","lev","Colors","getLevelColor","mapFunction","toString","map","dataRowSum","plans","element","getMatrixElement","docs","maxlev","dataRowSeries","getRange","renderZeroRow","DataRows","cellMode","arr","FirstHdrCell","label","renderHdrSum","renderHdrSeries","col","HdrRow","hdr","Details","getCellMode","colkey","Path","getColKey","getRowKey","devTableCell","colvalues","filterKeys","values","sortedKeys","keyCnt","window","innerWidth","innerHeight","Layout","makePlans","Table0D","updateWindowDimensions","bbx","el","getBoundingClientRect","addEventListener","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport SummaryCell from './SummaryCell';\nimport SeriesCell  from './SeriesCell';\nimport CanvasText  from './CanvasTextComponent';\nimport Text        from './TextComponent';\n\n//\toverflow: 'hidden',\n\nconst styles = theme => ({\n    root: {\n\theight: '100%',\n    },\n    paper: {\n\ttableLayout: 'fixed',\n\tpadding:0,\n\tmargin:0,\n    },\n    divTable :{\n\tdisplay: 'table',\n\twidth: '100%',\n    },\n    divTableRow:  {\n\tdisplay: 'table-row',\n    },\n    divTableCell:{\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '3px 3px',\n    },\n    divTableCellCursor:{\n\tcursor: \"pointer\",\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableHead : {\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableHeading : {\n\tdisplay: 'table-header-group',\n    },\n    divTableHeadingCenter : {\n\tdisplay: 'flex',\n\tjustifyContent: 'center',\n    },\n    divTableFoot : {\n\tbackgroundColor: '#DDD',\n\tdisplay: 'table-footer-group',\n\tfontWeight: 'bold',\n    },\n    divTableBody : {\n\tdisplay: 'table-row-group',\n    }\n});\n// ---------------- DATA\nfunction DataCell(props) {\n    const {classes,state,elements,mode,plan,rowindex,...other}=props;\n    if (elements===undefined) {\n\tif (rowindex%2===1) {\n\t    return <div className={classes.divTableCell} style={{backgroundColor:'#EEE'}}/>\n\t} else {\n\t    return <div className={classes.divTableCell} style={{backgroundColor:'#FFF'}}/>\n\t}\n    } else if (mode===state.Show.code.cell.Sum) {\n\treturn <SummaryCell {...other} state={state} elements={elements} plan={plan} rowindex={rowindex}/>\n\t//return null;\n    } else {\n\treturn <SeriesCell {...other} state={state} elements={elements} plan={plan} rowindex={rowindex}/>\n\t//return null;\n    }\n};\nfunction renderDataSeries(classes,state,rowkey,rowvalues,range,plan,val,index) {\n    var title=state.Database.getWhereDetail(rowkey,rowvalues[index]);\n    //console.log(\"Making data cell:\",rowval,val,index,plan,JSON.stringify(rowvalues));\n    if (index%plan.step === 0) {\n\t// get elements and range\n\t//console.log(\"Processing:\",val,rowvalues[index],plan.step);\n\tvar elements=state.Matrix.getMatrixRowElements(\"\",rowvalues,state.React.matrix,index,plan.step);\n\t// get count and rowwhere\n        var cnt = Math.min(rowvalues.length,index+plan.step)-index;\n        var rowwhere = state.Database.getColWhere(rowkey,rowvalues,index,plan.step);\n\t// make onclick and title\n\tvar onclick=() => state.Navigate.selectKey(state,rowkey,val,rowwhere,1);\n\treturn (<DataCell classes={classes} state={state} key={val} index={index} onclick={onclick} title={title} \n\t\trowkey={\"\"} rowvalues={[\"\"]} rowval={\"\"} rowwhere={rowwhere}\n\t\tcolkey={rowkey} colvalues={rowvalues} colval={val} \n\t\telements={elements} plan={plan} range={range}/>);\n    } else {\n\treturn null;\n    }\n};\nfunction renderDataSum(classes,state,rowkey,rowindex,doc,plan,skey,bgcolor,index){\n    if (doc===undefined) {\n\tif (rowindex%2===1) {\n\t    return <div className={classes.divTableCell} style={{backgroundColor:'#EEE'}}/>\n\t} else {\n\t    return <div className={classes.divTableCell} style={{backgroundColor:'#FFF'}}/>\n\t}\n    } else {    \n\tvar val=doc[skey]||\"\";\n\tconsole.log(\"Key:\",skey,\" Val:\",JSON.stringify(val),JSON.stringify(doc[skey]));\n\treturn (\n            <div className={classes.divTableCell} style={{backgroundColor:bgcolor}} key={skey}>\n\t\t{val}\n\t    </div>\n\t);\n    }\n};\nfunction renderDoc(classes,state,rowkey,rowval,rowindex,skeys,plan,doc,lev,index) {\n    var rowwhere=state.Database.getWhereDetail(rowkey,rowval);\n    var onclick=() => state.Navigate.selectKey(state,rowkey,rowval,rowwhere,1);\n    //console.log(\"Making data cols.\",rowval,colkey,JSON.stringify(colvalues));\n    //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n    var bgcolor=state.Colors.getLevelColor(lev);\n    var mapFunction= (skey,index)=>renderDataSum(classes,state,rowkey,rowindex,doc,plan,skey,bgcolor,index);\n    return (<div className={classes.divTableRow} key={rowindex.toString()+'-'+index.toString()}>\n\t    {skeys.map(mapFunction)}\n\t    </div>);\n};\nfunction dataRowSum(classes,state,rowkey,rowvalues,skeys,plans,rowval,rowindex) {\n    var rowwhere=state.Database.getWhereDetail(rowkey,rowval);\n    var onclick=() => state.Navigate.selectKey(state,rowkey,rowval,rowwhere,1);\n    //console.log(\"Making data cols.\",rowval,colkey,JSON.stringify(colvalues));\n    //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n    var element=state.Matrix.getMatrixElement(\"\",rowval,state.React.matrix);\n    if (element === undefined) {\n\treturn (<div className={classes.divTableRow} key={rowindex.toString()}>\n\t\t</div>);\n    } else if (element.docs.length < 100) {\n        var lev=element.maxlev;\n\tvar mapFunction= (doc,index)=>renderDoc(classes,state,rowkey,rowval,rowindex,skeys,plans.cell,doc,lev,index);\n\treturn element.docs.map(mapFunction);\n    } else {\n\treturn (<div className={classes.divTableRow} key={'row-'+rowindex.toString()}>\n\t\t{\"...\"}\n\t\t</div>);\n    };\n};\nfunction dataRowSeries(classes,state,rowkey,rowvalues,plans) {\n    //console.log(\"Making data cols.\",rowval,colkey,JSON.stringify(colvalues));\n    //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n    var range=[undefined,undefined];\n    if (state.React.matrix!==undefined) {\n\trange=state.Matrix.getRange(state,state.React.matrix,[\"\"],rowvalues);\n\t//console.log(\"Range:\",JSON.stringify(range));\n    };\n    var mapFunction= (val,index)=>renderDataSeries(classes,state,rowkey,rowvalues,range,plans,val,index);\n    return (<div className={classes.divTableRow} key={rowkey}>\n\t    {rowvalues.map(mapFunction)}\n\t    </div>);\n};\nfunction renderZeroRow(classes,state,plans) {\n    return (<div className={classes.divTableRow} key={1}>\n\t       <div className={classes.divTableCell} width={plans.cell.width}>No data available</div>\n\t    </div>);\n};\nfunction DataRows(props) {\n    const { classes, state, plans, rowkey, rowvalues, cellMode, skeys } = props;\n    if (rowvalues.length===0) {\n\treturn renderZeroRow(classes,state,plans);\n    } else if (cellMode === state.Show.code.cell.Sum) {\n\tvar mapFunction= (val,index)=>dataRowSum(classes,state,rowkey,rowvalues,skeys,plans,val,index);\n\tvar arr=rowvalues.map(mapFunction);\n\treturn arr;\n    } else {\n\treturn dataRowSeries(classes,state,rowkey,rowvalues,plans);\n    }\n}\n// ---------------- HDR\nfunction FirstHdrCell (props) {\n    const { classes, label, plan } = props;\n    var width=plan.width;\n    var height=plan.height;\n    //console.log(\"Making first header cell.\",label,width,height);\n    if (label !== \"\") {\n\treturn (<div className={classes.divTableHeadingCenter} >\n\t\t{label}\n\t\t</div>);\n    } else {\n\treturn null;\n    };\n}\nfunction renderHdrSum(classes,state,rowkey,plan,val,index) {\n    //console.log(\"HdrCell:\",val);\n    var cursor=classes.divTableCell;\n    return (<div className={cursor} style={{backgroundColor:'#DDD'}} key={`col-${index}`} >\n\t    {val}\n \t    </div> );\n}\nfunction renderHdrSeries(classes,state,rowkey,rowvalues,plan,val,index) {\n    if (index%plan.step === 0) {\n\t//console.log(\"HdrCell:\",index,plan.step);\n        var cnt = Math.min(rowvalues.length,index+plan.step)-index;\n        var rowwhere = state.Database.getColWhere(rowkey,rowvalues,index,plan.step);\n\tvar onclick=() => state.Navigate.selectKey(state,rowkey,val,rowwhere,cnt);\n\tvar title=rowwhere;\n\tvar cursor=classes.divTableCell;\n\tif (onclick !== undefined) {\n\t    cursor=classes.divTableCellCursor;\n\t}\n\treturn (<div className={cursor} onClick={onclick} style={{backgroundColor:'#DDD'}} title={title} key={`col-${index}`} >\n\t\t   <CanvasText state={state} index={index} plan={plan.col} label={val}></CanvasText>\n \t        </div> );\n     } else {\n\treturn null;\n    }\n}\nfunction HdrRow(props) {\n    const { classes, state, plans, rowkey, rowvalues, label, skeys, cellMode } = props; //, rowvalues\n    if (cellMode === state.Show.code.cell.Sum) {\n\tvar mapFunction= (val,index)=>renderHdrSum(classes,state,rowkey,plans.col,val,index);\n\t//console.log(\"Making header Sum row.\",label,rowkey,JSON.stringify(skeys));\n\treturn (<div className={classes.divTableRow} key={'hdr'}>\n\t\t   <FirstHdrCell classes={classes} label={label} plan={plans.hdr}/>\n\t\t   {skeys.map(mapFunction)}\n\t\t</div>);\n    } else {\n\tvar mapFunction= (val,index)=>renderHdrSeries(classes,state,rowkey,rowvalues,plans.col,val,index);\n\t//console.log(\"Making header Series row.\",label,rowkey,JSON.stringify(rowvalues));\n\treturn null;\n//\treturn (<div className={classes.divTableRow} key={0}>\n//\t\t   {rowvalues.map(mapFunction)}\n//\t\t</div>);\n    }\n}\n// ---------------- Details\nfunction Details(props) {\n    const { classes, state, element } = props; // classes, \n    var cellMode  = state.Show.getCellMode(state);\n    var colkey = state.Path.getColKey(state)||\"\";\n    var rowkey = state.Path.getRowKey(state)||\"\";\n    if (state.React.matrix === undefined) {\n\treturn (<div className={classes.divTable}>\n\t\t   <div className={classes.divTableBody}>\n\t\t      <div className={classes.devTableCell}>\n\t\t         {\"No Matrix defined\"}\n\t\t      </div>\n\t\t   </div>\n\t\t</div>\n\t       );\n    } else {\n\tvar colvalues = state.Path.filterKeys(state,state.Matrix.values[colkey]||[\"\"]);\n\tvar rowvalues = state.Path.filterKeys(state,state.Matrix.values[rowkey]||[\"\"]);\n\tvar skeys = state.Matrix.sortedKeys(state,state.Matrix.keyCnt);\n\t//DOM.style.font\n\tvar border=2;\n\tvar label=rowkey;\n\tvar width=0.8*window.innerWidth;\n\tvar height=0.8*(window.innerHeight-200);\n\tvar plans=state.Layout.makePlans(state,label,rowvalues,width,height,border,cellMode);\n\t//console.log(\"Plan:\",JSON.stringify(plan));\n\t//console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(colvalues));\n\t//console.log(\"Rowkey:\",rowkey,\" rowval:\",JSON.stringify(rowvalues));\n\t//console.log(\"skeys: \",JSON.stringify(skeys));\n\treturn (<div className={classes.divTable}>\n\t\t   <div className={classes.divTableBody}>\n\t\t      <HdrRow classes={classes} state={state} key={\"hdr\"} plans={plans} rowkey={rowkey} rowvalues={rowvalues} label={label} cellMode={cellMode} skeys={skeys}/>\n\t\t      <DataRows classes={classes} state={state} key={\"data\"} plans={plans} rowkey={rowkey} rowvalues={rowvalues} cellMode={cellMode} skeys={skeys}/>\n\t\t   </div>\n\t\t</div>\n\t       );\n    }\n};\n\nclass Table0D extends Component {\n    constructor(props) {\n\tsuper(props);\n\t//this.state=props.state;\n    }\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    } \n    updateWindowDimensions = () => {\n        this.width= window.innerWidth;\n\tthis.height=window.innerHeight;\n\tthis.bbx=this.el.getBoundingClientRect();\n\t//console.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n    element(el) {\n\tif (el !== undefined && el !== null) {\n\t    this.el=el;\n\t    this.bbx=this.el.getBoundingClientRect();\n\t    //console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n\t};\n    };\n    render() {\n\tconst { classes, state } = this.props;\n\t//console.log(\"##### Rendering Table0D.\");\n\treturn (<div ref={el=>{this.element(el)}} className={classes.root}  style={{width: '100%', height: '100%'}}>\n\t\t <Grid container spacing={24}>\n\t\t  <Grid item xs={12} > \n                   { <Paper className={classes.paper}>\n\t\t       <Details state={state} classes={classes} element={this}/>\n                     </Paper>}\n                  </Grid>\n                 </Grid>\n\t        </div>);\n\t}\n}\n\nTable0D.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Table0D);\n"]},"metadata":{},"sourceType":"module"}