{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/Status.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from \"prop-types\";\nimport Test from '../lib/Test';\n\nvar styles = function styles(theme) {\n  return {\n    content: {\n      flex: '1 0 auto',\n      paddingTop: '5rem'\n    }\n  };\n};\n\nfunction Details(props) {\n  var state = props.state;\n  return state.cnt;\n}\n/**\n * The entire app get generated from this container.\n * We set the material UI theme by choosing a primary and secondary color from the metMuiThemes file\n * and creating a color palette with the createTheme method.\n * For information about using the different palettes see material UI documentation\n * \n * This app contains the database, path and matrix states...\n */\n\n\nvar Status =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Status, _Component);\n\n  function Status(props) {\n    var _this;\n\n    _classCallCheck(this, Status);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Status).call(this, props));\n    _this.state = props.state;\n    _this.state.React.Status = _assertThisInitialized(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Status, [{\n    key: \"setAge\",\n    // set dataset age\n    value: function setAge(state, age) {\n      console.log(\"Age...\", state.Database.mod, age);\n      this.forceUpdate();\n    }\n  }, {\n    key: \"setLog\",\n    value: function setLog(state, msg) {\n      console.log(\"Updated...\", msg);\n      this.forceUpdate();\n    }\n  }, {\n    key: \"progressInfo\",\n    value: function progressInfo(state, e) {\n      console.log(\"progress...\");\n      this.forceUpdate();\n    }\n  }, {\n    key: \"loadInfo\",\n    value: function loadInfo(state, e) {\n      console.log(\"load...\");\n      this.forceUpdate();\n    }\n  }, {\n    key: \"setInfo\",\n    value: function setInfo(state, msg) {\n      console.log(\"set...\", msg);\n      this.forceUpdate();\n    }\n  }, {\n    key: \"errorInfo\",\n    value: function errorInfo(state, e) {\n      console.log(\"error...\");\n      this.forceUpdate();\n    }\n  }, {\n    key: \"abortInfo\",\n    value: function abortInfo(state, e) {\n      console.log(\"abort...\");\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state;\n      return React.createElement(\"div\", {\n        className: classes.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Details, {\n        state: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Status;\n}(Component);\n\nStatus.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Status);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/Status.js"],"names":["React","Component","withStyles","PropTypes","Test","styles","theme","content","flex","paddingTop","Details","props","state","cnt","Status","age","console","log","Database","mod","forceUpdate","msg","e","classes","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,IAAI,EAAE,UADD;AAELC,MAAAA,UAAU,EAAE;AAFP;AADY,GAAL;AAAA,CAApB;;AAOA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,MACbC,KADa,GACJD,KADI,CACbC,KADa;AAEpB,SAAOA,KAAK,CAACC,GAAb;AACH;AAED;;;;;;;;;;IAQMC,M;;;;;AACF,kBAAYH,KAAZ,EAAmB;AAAA;;AAAA;;AACtB,gFAAMA,KAAN;AACA,UAAKC,KAAL,GAAWD,KAAK,CAACC,KAAjB;AACA,UAAKA,KAAL,CAAWZ,KAAX,CAAiBc,MAAjB;AAHsB;AAIlB;;;;AACD;2BACOF,K,EAAMG,G,EAAK;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBL,KAAK,CAACM,QAAN,CAAeC,GAApC,EAAwCJ,GAAxC;AACA,WAAKK,WAAL;AACI;;;2BACMR,K,EAAMS,G,EAAK;AACrBL,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBI,GAAzB;AACA,WAAKD,WAAL;AACI;;;iCACYR,K,EAAMU,C,EAAG;AACzBN,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,WAAKG,WAAL;AACI;;;6BACQR,K,EAAMU,C,EAAG;AACrBN,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,WAAKG,WAAL;AACI;;;4BACOR,K,EAAMS,G,EAAK;AACtBL,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBI,GAArB;AACA,WAAKD,WAAL;AACI;;;8BACSR,K,EAAMU,C,EAAG;AACtBN,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,WAAKG,WAAL;AACI;;;8BACSR,K,EAAMU,C,EAAG;AACtBN,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,WAAKG,WAAL;AACI;;;6BAEQ;AAAA,wBACsB,KAAKT,KAD3B;AAAA,UACGY,OADH,eACGA,OADH;AAAA,UACYX,KADZ,eACYA,KADZ;AAEL,aACQ;AAAK,QAAA,SAAS,EAAEW,OAAO,CAAChB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACX,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE,KAAKK,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADW,CADR;AAKH;;;;EA3CgBX,S;;AA8CrBa,MAAM,CAACU,SAAP,GAAmB;AACfD,EAAAA,OAAO,EAAEpB,SAAS,CAACsB,MAAV,CAAiBC;AADX,CAAnB;AAIA,eAAexB,UAAU,CAACG,MAAD,CAAV,CAAmBS,MAAnB,CAAf","sourcesContent":["import React, { Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from \"prop-types\";\nimport Test from '../lib/Test';\n\nconst styles = theme => ({\n    content: {\n        flex: '1 0 auto',\n        paddingTop: '5rem',\n    }\n});\n\nfunction Details(props) {\n    const {state} = props;\n    return state.cnt;\n}\n\n/**\n * The entire app get generated from this container.\n * We set the material UI theme by choosing a primary and secondary color from the metMuiThemes file\n * and creating a color palette with the createTheme method.\n * For information about using the different palettes see material UI documentation\n * \n * This app contains the database, path and matrix states...\n */\nclass Status extends Component {\n    constructor(props) {\n\tsuper(props);\n\tthis.state=props.state;\n\tthis.state.React.Status = this;\n    };\n    // set dataset age\n    setAge(state,age) {\n\tconsole.log(\"Age...\",state.Database.mod,age);\n\tthis.forceUpdate();\n    };\n    setLog(state,msg) {\n\tconsole.log(\"Updated...\",msg);\n\tthis.forceUpdate();\n    };\n    progressInfo(state,e) {\n\tconsole.log(\"progress...\");\n\tthis.forceUpdate();\n    };\n    loadInfo(state,e) {\n\tconsole.log(\"load...\");\n\tthis.forceUpdate();\n    };\n    setInfo(state,msg) {\n\tconsole.log(\"set...\",msg);\n\tthis.forceUpdate();\n    };\n    errorInfo(state,e) {\n\tconsole.log(\"error...\");\n\tthis.forceUpdate();\n    };\n    abortInfo(state,e) {\n\tconsole.log(\"abort...\");\n\tthis.forceUpdate();\n    };\n\n    render() {\n        const { classes, state } = this.props;\n        return (\n                <div className={classes.content}>\n\t\t   <Details state={this.state}/>\n                </div>\n        );\n    }\n}\n\nStatus.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Status);\n\n"]},"metadata":{},"sourceType":"module"}