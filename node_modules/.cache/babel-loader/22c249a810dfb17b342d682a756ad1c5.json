{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/ArchiveComponent.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport SelIcon from '@material-ui/icons/Done';\n\nvar styles = function styles(theme) {\n  return {\n    key: {\n      display: 'inline-block',\n      marginRight: 'auto'\n    },\n    selectchip: {\n      margin: theme.spacing.unit,\n      cursor: \"pointer\",\n      color: \"red\",\n      borderColor: \"green\"\n    },\n    restchip: {\n      margin: theme.spacing.unit,\n      cursor: \"pointer\",\n      color: \"gray\",\n      borderColor: \"gray\"\n    }\n  };\n};\n\nfunction getChipClass(classes, active) {\n  if (active) {\n    return classes.selectchip;\n  } else {\n    return classes.restchip;\n  }\n\n  ;\n}\n\n;\n\nfunction getChipIcon(active) {\n  if (active) {\n    return React.createElement(SelIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n  } else {\n    return null;\n  }\n\n  ;\n}\n\nvar Archive =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Archive, _Component);\n\n  function Archive() {\n    _classCallCheck(this, Archive);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Archive).apply(this, arguments));\n  }\n\n  _createClass(Archive, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state,\n          item = _this$props.item,\n          index = _this$props.index,\n          active = _this$props.active; //console.log(\"Rendering Archive...\",item,index,active);\n\n      var chip = getChipClass(classes, active);\n      var icon = getChipIcon(active);\n\n      var onclick = function onclick() {\n        //console.log(\"Chip:\",item,index,active);\n        state.Database.selectIndex(state, item, index);\n      };\n\n      console.log(\"Archive:\", JSON.stringify(item), JSON.stringify(index), active);\n      return React.createElement(\"div\", {\n        className: classes.archive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Chip, {\n        icon: icon,\n        label: item,\n        onClick: onclick,\n        className: chip,\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Archive;\n}(Component);\n\nArchive.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Archive);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/ArchiveComponent.js"],"names":["React","Component","PropTypes","withStyles","Chip","SelIcon","styles","theme","key","display","marginRight","selectchip","margin","spacing","unit","cursor","color","borderColor","restchip","getChipClass","classes","active","getChipIcon","Archive","props","state","item","index","chip","icon","onclick","Database","selectIndex","console","log","JSON","stringify","archive","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,GAAG,EAAE;AACRC,MAAAA,OAAO,EAAE,cADD;AAEDC,MAAAA,WAAW,EAAE;AAFZ,KADgB;AAKrBC,IAAAA,UAAU,EAAE;AACRC,MAAAA,MAAM,EAAEL,KAAK,CAACM,OAAN,CAAcC,IADd;AAEfC,MAAAA,MAAM,EAAE,SAFO;AAGRC,MAAAA,KAAK,EAAC,KAHE;AAIRC,MAAAA,WAAW,EAAC;AAJJ,KALS;AAWrBC,IAAAA,QAAQ,EAAE;AACNN,MAAAA,MAAM,EAAEL,KAAK,CAACM,OAAN,CAAcC,IADhB;AAEbC,MAAAA,MAAM,EAAE,SAFK;AAGNC,MAAAA,KAAK,EAAC,MAHA;AAINC,MAAAA,WAAW,EAAC;AAJN;AAXW,GAAL;AAAA,CAApB;;AAkBA,SAASE,YAAT,CAAsBC,OAAtB,EAA8BC,MAA9B,EAAsC;AAClC,MAAIA,MAAJ,EAAY;AACf,WAAOD,OAAO,CAACT,UAAf;AACI,GAFD,MAEO;AACV,WAAOS,OAAO,CAACF,QAAf;AACI;;AAAA;AACJ;;AAAA;;AACD,SAASI,WAAT,CAAqBD,MAArB,EAA6B;AACzB,MAAIA,MAAJ,EAAY;AACf,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACI,GAFD,MAEQ;AACX,WAAO,IAAP;AACI;;AAAA;AACJ;;IAEKE,O;;;;;;;;;;;;;6BACO;AAAA,wBAC2C,KAAKC,KADhD;AAAA,UACGJ,OADH,eACGA,OADH;AAAA,UACYK,KADZ,eACYA,KADZ;AAAA,UACmBC,IADnB,eACmBA,IADnB;AAAA,UACyBC,KADzB,eACyBA,KADzB;AAAA,UACgCN,MADhC,eACgCA,MADhC,EAEZ;;AACA,UAAIO,IAAI,GAACT,YAAY,CAACC,OAAD,EAASC,MAAT,CAArB;AACA,UAAIQ,IAAI,GAACP,WAAW,CAACD,MAAD,CAApB;;AACA,UAAIS,OAAO,GAAC,SAARA,OAAQ,GAAM;AACd;AACAL,QAAAA,KAAK,CAACM,QAAN,CAAeC,WAAf,CAA2BP,KAA3B,EAAiCC,IAAjC,EAAsCC,KAAtC;AACH,OAHD;;AAIAM,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBC,IAAI,CAACC,SAAL,CAAeV,IAAf,CAAvB,EAA4CS,IAAI,CAACC,SAAL,CAAeT,KAAf,CAA5C,EAAkEN,MAAlE;AACA,aACC;AAAK,QAAA,SAAS,EAAED,OAAO,CAACiB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,IAAD;AACE,QAAA,IAAI,EAAER,IADR;AAEE,QAAA,KAAK,EAAEH,IAFT;AAGE,QAAA,OAAO,EAAEI,OAHX;AAIE,QAAA,SAAS,EAAEF,IAJb;AAKE,QAAA,OAAO,EAAC,UALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD;AAWI;;;;EAtBiB3B,S;;AAyBtBsB,OAAO,CAACe,SAAR,GAAoB;AAChBlB,EAAAA,OAAO,EAAElB,SAAS,CAACqC,MAAV,CAAiBC;AADV,CAApB;AAIA,eAAerC,UAAU,CAACG,MAAD,CAAV,CAAmBiB,OAAnB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport SelIcon from '@material-ui/icons/Done';\n\nconst styles = theme => ({\n    key: {\n\tdisplay: 'inline-block',\n        marginRight: 'auto',\n    },\n    selectchip: {\n        margin: theme.spacing.unit,\n\tcursor: \"pointer\",\n        color:\"red\",\n        borderColor:\"green\",\n    },\n    restchip: {\n        margin: theme.spacing.unit,\n\tcursor: \"pointer\",\n        color:\"gray\",\n        borderColor:\"gray\",\n    },\n});\nfunction getChipClass(classes,active) {\n    if (active) {\n\treturn classes.selectchip;\n    } else {\n\treturn classes.restchip\n    };\n};\nfunction getChipIcon(active) {\n    if (active) {\n\treturn <SelIcon/>;\n    } else  {\n\treturn null;\n    };\n}\n\nclass Archive extends Component {\n    render() {\n        const { classes, state, item, index, active } = this.props;\n\t//console.log(\"Rendering Archive...\",item,index,active);\n\tvar chip=getChipClass(classes,active);\n\tvar icon=getChipIcon(active);\n\tvar onclick=() => {\n\t    //console.log(\"Chip:\",item,index,active);\n\t    state.Database.selectIndex(state,item,index);\n\t};\n\tconsole.log(\"Archive:\",JSON.stringify(item),JSON.stringify(index),active);\n\treturn (\n\t\t<div className={classes.archive}>\n\t \t<Chip\n\t    icon={icon}\n\t    label={item}\n\t    onClick={onclick}\n\t    className={chip}\n\t    variant=\"outlined\"\n\t\t/>\n\t\t</div>\n\t);\n    }\n}\n\nArchive.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Archive);\n"]},"metadata":{},"sourceType":"module"}