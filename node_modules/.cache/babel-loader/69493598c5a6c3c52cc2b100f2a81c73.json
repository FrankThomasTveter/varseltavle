{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/Status.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from \"prop-types\"; // npm install notistack\n\nvar styles = function styles(theme) {\n  return {\n    content: {\n      flex: '1 0 auto',\n      paddingTop: '0rem'\n    }\n  };\n};\n\nfunction Details(props) {\n  var msg = props.msg; //state,\n\n  return msg;\n}\n/**\n * The entire app get generated from this container.\n * We set the material UI theme by choosing a primary and secondary color from the metMuiThemes file\n * and creating a color palette with the createTheme method.\n * For information about using the different palettes see material UI documentation\n * \n * This app contains the database, path and matrix states...\n */\n\n\nvar Status =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Status, _Component);\n\n  function Status(props) {\n    var _this;\n\n    _classCallCheck(this, Status);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Status).call(this, props));\n    props.state.React.Status = _assertThisInitialized(_assertThisInitialized(_this));\n    _this.state = {\n      msg: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Status, [{\n    key: \"setAge\",\n    // set dataset age\n    value: function setAge(state, age) {\n      //console.log(\"Age...\",state.Database.mod,age);\n      this.setState({\n        msg: age\n      });\n    }\n  }, {\n    key: \"setFootnote\",\n    value: function setFootnote(state, msg) {\n      console.log(\"Setlog...\", this.state.msg, \" -> \", msg);\n      this.setState({\n        msg: msg\n      }); //this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state;\n      return React.createElement(\"div\", {\n        className: classes.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Details, {\n        state: state,\n        msg: this.state.msg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Status;\n}(Component);\n\nStatus.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Status);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/Status.js"],"names":["React","Component","withStyles","PropTypes","styles","theme","content","flex","paddingTop","Details","props","msg","Status","state","age","setState","console","log","classes","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,IAAI,EAAE,UADD;AAELC,MAAAA,UAAU,EAAE;AAFP;AADY,GAAL;AAAA,CAApB;;AAOA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,MACbC,GADa,GACND,KADM,CACbC,GADa,EACC;;AACrB,SAAOA,GAAP;AACH;AAED;;;;;;;;;;IAQMC,M;;;;;AACF,kBAAYF,KAAZ,EAAmB;AAAA;;AAAA;;AACtB,gFAAMA,KAAN;AACAA,IAAAA,KAAK,CAACG,KAAN,CAAYb,KAAZ,CAAkBY,MAAlB;AACA,UAAKC,KAAL,GAAW;AAACF,MAAAA,GAAG,EAAC;AAAL,KAAX;AAHsB;AAIlB;;;;AACD;2BACOE,K,EAAMC,G,EAAK;AACrB;AACA,WAAKC,QAAL,CAAc;AAACJ,QAAAA,GAAG,EAACG;AAAL,OAAd;AACI;;;gCACWD,K,EAAMF,G,EAAK;AAC1BK,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwB,KAAKJ,KAAL,CAAWF,GAAnC,EAAuC,MAAvC,EAA8CA,GAA9C;AACA,WAAKI,QAAL,CAAc;AAACJ,QAAAA,GAAG,EAACA;AAAL,OAAd,EAF0B,CAG1B;AACI;;;6BACQ;AAAA,wBACsB,KAAKD,KAD3B;AAAA,UACGQ,OADH,eACGA,OADH;AAAA,UACYL,KADZ,eACYA,KADZ;AAEL,aACQ;AAAK,QAAA,SAAS,EAAEK,OAAO,CAACZ,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACX,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEO,KAAhB;AAAuB,QAAA,GAAG,EAAE,KAAKA,KAAL,CAAWF,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADW,CADR;AAKH;;;;EAvBgBV,S;;AAyBrBW,MAAM,CAACO,SAAP,GAAmB;AACfD,EAAAA,OAAO,EAAEf,SAAS,CAACiB,MAAV,CAAiBC;AADX,CAAnB;AAIA,eAAenB,UAAU,CAACE,MAAD,CAAV,CAAmBQ,MAAnB,CAAf","sourcesContent":["import React, { Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from \"prop-types\";\n// npm install notistack\nconst styles = theme => ({\n    content: {\n        flex: '1 0 auto',\n        paddingTop: '0rem',\n    }\n});\n\nfunction Details(props) {\n    const {msg} = props; //state,\n    return msg;\n}\n\n/**\n * The entire app get generated from this container.\n * We set the material UI theme by choosing a primary and secondary color from the metMuiThemes file\n * and creating a color palette with the createTheme method.\n * For information about using the different palettes see material UI documentation\n * \n * This app contains the database, path and matrix states...\n */\nclass Status extends Component {\n    constructor(props) {\n\tsuper(props);\n\tprops.state.React.Status = this;\n\tthis.state={msg:\"\"};\n    };\n    // set dataset age\n    setAge(state,age) {\n\t//console.log(\"Age...\",state.Database.mod,age);\n\tthis.setState({msg:age});\n    };\n    setFootnote(state,msg) {\n\tconsole.log(\"Setlog...\",this.state.msg,\" -> \",msg);\n\tthis.setState({msg:msg});\n\t//this.forceUpdate();\n    };\n    render() {\n        const { classes, state } = this.props;\n        return (\n                <div className={classes.content}>\n\t\t   <Details state={state} msg={this.state.msg}/>\n                </div>\n        );\n    }\n}\nStatus.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Status);\n\n"]},"metadata":{},"sourceType":"module"}