{"ast":null,"code":"import _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/CanvasTextComponent.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nvar styles = function styles(theme) {\n  return {\n    pointer: {\n      cursor: \"pointer\",\n      padding: theme.spacing.unit * 0\n    },\n    nopointer: {\n      padding: theme.spacing.unit * 0\n    }\n  };\n};\n\nfunction updateCanvas(item) {\n  var _item$props = item.props,\n      label = _item$props.label,\n      plan = _item$props.plan;\n  var cnv = item.refs.text;\n  var ctx = cnv.getContext('2d'); //var cnvheight = cnv.height;\n\n  ctx.save(); //ctx.translate(newx, newy);\n  //ctx.font = \"40px Courier\"\n\n  ctx.clearRect(0, 0, cnv.width, cnv.height);\n  ctx.textAlign = \"left\"; //left right center\n  //ctx.rect(0,0,100,100);\n  //ctx.stroke();\n\n  if (plan.rotate !== undefined && plan.rotate) {\n    ctx.translate(item.width - plan.border - plan.shift, item.height - plan.border);\n    ctx.rotate(-Math.PI / 2); //console.log(\">>>> Plan:\",JSON.stringify(plan),item.width,item.height);\n\n    ctx.fillText(label, 0, 0); // labelXposition\n  } else {\n    ctx.fillText(label, plan.border + plan.shift, item.height - plan.border); // labelXposition\n  }\n\n  ;\n  ctx.restore(); //ctx.rect(0,0,item.width,item.height);\n  //ctx.stroke();\n  //console.log(\"Label:\",label,item.width,item.height);\n  //console.log(\"CanvasText:\",cnv.width,cnv.height);\n}\n\nvar CanvasTextComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CanvasTextComponent, _Component);\n\n  function CanvasTextComponent() {\n    _classCallCheck(this, CanvasTextComponent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CanvasTextComponent).apply(this, arguments));\n  }\n\n  _createClass(CanvasTextComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      updateCanvas(this);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      updateCanvas(this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          onclick = _this$props.onclick,\n          title = _this$props.title,\n          rotate = _this$props.rotate,\n          height = _this$props.height,\n          width = _this$props.width,\n          border = _this$props.border,\n          dx = _this$props.dx,\n          plan = _this$props.plan,\n          other = _objectWithoutProperties(_this$props, [\"classes\", \"onclick\", \"title\", \"rotate\", \"height\", \"width\", \"border\", \"dx\", \"plan\"]);\n\n      var cursor = classes.nopointer;\n\n      if (onclick !== undefined) {\n        cursor = classes.pointer;\n      }\n\n      var p = plan !== undefined ? plan : {\n        rotate: rotate,\n        width: width,\n        height: height,\n        border: border,\n        shift: dx\n      };\n      this.width = p.width;\n      this.height = p.height;\n      return React.createElement(\"canvas\", Object.assign({}, other, {\n        className: cursor,\n        classes: classes,\n        onClick: onclick,\n        title: title,\n        plan: p,\n        ref: \"text\",\n        width: this.width,\n        height: this.height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CanvasTextComponent;\n}(Component);\n\nCanvasTextComponent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CanvasTextComponent); // function getTextWidth(txt, fontname, fontsize){\n//     if(getTextWidth.c === undefined){\n//         getTextWidth.c=document.createElement('canvas');\n//         getTextWidth.ctx=getTextWidth.c.getContext('2d');\n//     }\n//     if (fontname !== undefined) {\n// \tgetTextWidth.ctx.font = fontsize + ' ' + fontname;\n//     }\n//     return getTextWidth.ctx.measureText(txt).width;\n// };\n// function getTextHeight(fontname, fontsize){\n//     if(getTextHeight.c === undefined){\n//         getTextHeight.c=document.createElement('canvas');\n//         getTextHeight.ctx=getTextHeight.c.getContext('2d');\n//     }\n//     if (fontname !== undefined) {\n// \tgetTextHeight.ctx.font = fontsize + ' ' + fontname;\n//     }\n//     return getTextHeight.ctx.measureText('M').width;\n// }","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/CanvasTextComponent.js"],"names":["React","Component","PropTypes","withStyles","styles","theme","pointer","cursor","padding","spacing","unit","nopointer","updateCanvas","item","props","label","plan","cnv","refs","text","ctx","getContext","save","clearRect","width","height","textAlign","rotate","undefined","translate","border","shift","Math","PI","fillText","restore","CanvasTextComponent","classes","onclick","title","dx","other","p","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    pointer: {\n\tcursor:\"pointer\",\n\tpadding: theme.spacing.unit*0,\n    },\n    nopointer: {\n\tpadding: theme.spacing.unit*0,\n    },\n});\nfunction updateCanvas(item) {\n    const {label,plan} = item.props;\n    const cnv=item.refs.text;\n    const ctx = cnv.getContext('2d');\n    //var cnvheight = cnv.height;\n    ctx.save();\n    //ctx.translate(newx, newy);\n    //ctx.font = \"40px Courier\"\n    ctx.clearRect(0, 0, cnv.width, cnv.height);\n    ctx.textAlign = \"left\"; //left right center\n    //ctx.rect(0,0,100,100);\n    //ctx.stroke();\n    if (plan.rotate !== undefined && plan.rotate) {\n\tctx.translate(item.width-plan.border-plan.shift,item.height-plan.border);\n\tctx.rotate(-Math.PI/2);\n\t//console.log(\">>>> Plan:\",JSON.stringify(plan),item.width,item.height);\n\tctx.fillText(label, 0, 0); // labelXposition\n    } else {\n\tctx.fillText(label, plan.border+plan.shift, item.height-plan.border); // labelXposition\n    };\n    ctx.restore();\n    //ctx.rect(0,0,item.width,item.height);\n    //ctx.stroke();\n    //console.log(\"Label:\",label,item.width,item.height);\n    //console.log(\"CanvasText:\",cnv.width,cnv.height);\n}\n    \n\nclass CanvasTextComponent extends Component {\n    componentDidMount() {\n        updateCanvas(this);\n    }\n    componentDidUpdate() {\n        updateCanvas(this);\n    }\n    render() {\n        const { classes, onclick, title, rotate, height, width, border, dx, plan, ...other } = this.props;\n\tvar cursor=classes.nopointer;\n\tif (onclick !== undefined) {\n\t    cursor=classes.pointer;\n\t}\n\tvar p=(plan!==undefined?plan:{rotate:rotate,width:width,height:height,border:border,shift:dx,});\n\tthis.width=p.width;\n\tthis.height=p.height;\n        return (\n\t\t<canvas {...other} className={cursor} classes={classes} onClick={onclick} title={title} plan={p} ref=\"text\" width={this.width} height={this.height}/>\n        );\n    }\n}\n\nCanvasTextComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CanvasTextComponent);\n// function getTextWidth(txt, fontname, fontsize){\n//     if(getTextWidth.c === undefined){\n//         getTextWidth.c=document.createElement('canvas');\n//         getTextWidth.ctx=getTextWidth.c.getContext('2d');\n//     }\n//     if (fontname !== undefined) {\n// \tgetTextWidth.ctx.font = fontsize + ' ' + fontname;\n//     }\n//     return getTextWidth.ctx.measureText(txt).width;\n// };\n// function getTextHeight(fontname, fontsize){\n//     if(getTextHeight.c === undefined){\n//         getTextHeight.c=document.createElement('canvas');\n//         getTextHeight.ctx=getTextHeight.c.getContext('2d');\n//     }\n//     if (fontname !== undefined) {\n// \tgetTextHeight.ctx.font = fontsize + ' ' + fontname;\n//     }\n//     return getTextHeight.ctx.measureText('M').width;\n// }\n"]},"metadata":{},"sourceType":"module"}