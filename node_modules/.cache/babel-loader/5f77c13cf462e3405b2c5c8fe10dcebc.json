{"ast":null,"code":"//console.log(\"Loading PathLib.js\");\nfunction Path() {\n  this.keys = {\n    path: [],\n    // selected keys\n    other: [] // keys available for selection\n\n  };\n  this.other = {\n    table: [],\n    // table keys\n    rest: [] // keys available for table\n\n  };\n  this.trash = []; // remaining valid keys\n\n  this.select = {\n    val: {}\n  }; // current selection criteria\n\n  this.where = {}; // current cache for where expressions\n\n  this.filter = {\n    val: {}\n  }; // initial filter for data...\n\n  this.ignore = [\"max\", \"min\", \"minlat\", \"minlon\", \"maxlat\", \"maxlon\"]; // only visible in 1D and 0D tables\n\n  this.type = {\n    path: {\n      ityp: -1,\n      ptyp: \"path\"\n    },\n    eye: {\n      ityp: 0,\n      ptyp: \"eye\"\n    },\n    table: {\n      ityp: 1,\n      ptyp: \"table\"\n    },\n    rest: {\n      ityp: 2,\n      ptyp: \"rest\"\n    },\n    trash: {\n      ityp: 3,\n      ptyp: \"trash\"\n    },\n    trashRest: {\n      ityp: 4,\n      ptyp: \"trashRest\"\n    },\n    row: {\n      ityp: 5,\n      ptyp: \"row\"\n    },\n    col: {\n      ityp: 6,\n      ptyp: \"col\"\n    },\n    item: {\n      ityp: 7,\n      ptyp: \"item\"\n    }\n  };\n  this.order = undefined; // how to order data\t    \n\n  this.init = function (state) {\n    var par = \"Path\";\n    state.Utils.init(par, this);\n  };\n\n  this.cleanSelect = function (state) {\n    var pkeys = state.Path.keys.path;\n    var keys = Object.keys(state.Path.select.val);\n    var lenk = keys.length;\n\n    for (var ii = 0; ii < lenk; ii++) {\n      var key = keys[ii];\n\n      if (pkeys.indexOf(key) === -1) {\n        state.Path.select.val[key] = undefined;\n      }\n    }\n  };\n\n  this.setFilter = function (state) {\n    state.Path.cleanSelect(state);\n    this.filter.val = state.Utils.cp(state.Path.select.val);\n    state.Utils.pushUrl(state);\n    console.log(\"Setting filter.\");\n  };\n\n  this.getSnapshot = function (state) {\n    // store state\n    return {\n      keys: state.Utils.cp(state.Path.keys),\n      other: state.Utils.cp(state.Path.other),\n      select: state.Utils.cp(state.Path.select),\n      order: state.Utils.cp(state.Path.order)\n    };\n  };\n\n  this.setSnapshot = function (state, snapshot) {\n    // store state\n    state.Utils.restore(state.Path, snapshot);\n  };\n\n  this.toggleSelect = function (state, key, val) {\n    var vals = state.Path.select.val[key];\n    console.log(\"toggleSelect:\", key, val, JSON.stringify(vals));\n\n    if (vals !== undefined) {\n      var vid = vals.indexOf(val);\n\n      if (vid !== -1) {\n        // remove item\n        var src = vals.splice(vid, 1);\n\n        if (vals.length == 0) {\n          // can never be totally empty...\n          vals.push(\"MAX(\" + key + \")\");\n        }\n\n        state.Path.select.val[key] = vals;\n      } else {\n        state.Path.select.val[key].push(val); // add item\n      }\n\n      this.setWhere(state, key);\n      state.Show.showConfig(state);\n      console.log(\"Finally Vals:\", key, JSON.stringify(state.Path.select.val[key]));\n    }\n  };\n\n  this.setWhere = function (state, key) {\n    var where = this.parseWhere(state, key);\n    state.Path.where[key] = where;\n  };\n\n  this.parseWhere = function (state, key) {\n    var where = \"\";\n    var vals = state.Path.select.val[key];\n\n    if (vals === undefined) {\n      vals = [];\n    }\n\n    ;\n    var lenv = vals.length;\n\n    for (var ii = 0; ii < lenv; ii++) {\n      var val = vals[ii];\n\n      if (where !== \"\") {\n        where = where + \" OR \";\n      }\n\n      ;\n\n      if (val === \"null\") {\n        where = where + key + \" is NULL\";\n      } else if (val === \"MAX(\" + key + \")\") {\n        // this is a function\n        var parse = state.Utils.getMax(state.Database.values[key]); //console.log(\"parseWhere:\",key,parse,JSON.stringify(state.Database.values[key]));\n\n        if (parse === undefined) {\n          where = where + key + \" is NULL\";\n        } else {\n          where = where + key + \"='\" + parse + \"'\";\n        }\n\n        ;\n      } else if (val === \"MIN(\" + key + \")\") {\n        // this is a function\n        var parse = state.Utils.getMin(state.Database.values[key]);\n\n        if (parse === undefined) {\n          where = where + key + \" is NULL\";\n        } else {\n          where = where + key + \"='\" + parse + \"'\";\n        }\n\n        ;\n      } else {\n        where = where + key + \"='\" + val + \"'\";\n      }\n    }\n\n    ;\n    return where;\n  };\n\n  this.makeCnt = function (state, key) {\n    return state.Path.select.val[key].length;\n  };\n\n  this.getOrderValues = function (state, skey) {\n    if (state.Path.order === undefined) {\n      state.Path.order = {};\n    }\n\n    ;\n\n    if (state.Path.order[skey] === undefined) {\n      //console.log(\"Copying:\",JSON.stringify(Matrix.values[skey]));\n      state.Path.order[skey] = state.Utils.cp(state.Matrix.values[skey]);\n    } else {\n      var vals = state.Matrix.values[skey];\n      var plen = vals;\n\n      for (var ii = 0; ii < plen; ii++) {\n        var val = vals[ii];\n\n        if (state.Path.order[skey].indexOf(val) === -1) {\n          state.Path.order[skey].push(val);\n        }\n      }\n\n      ;\n    }\n\n    ;\n    return state.Path.order[skey];\n  };\n\n  this.bumpOrder = function (state, skey, value) {\n    console.log(\"Bump order:\", skey, value);\n    var vid = state.Path.order[skey].indexOf(value);\n\n    if (vid !== -1 && vid > 0) {\n      var src = state.Path.order[skey].splice(vid, 1); // remove from array   \n\n      state.Utils.spliceArray(state.Path.order[skey], vid - 1, 0, src);\n    }\n\n    ;\n    state.Show.showConfig(state);\n  };\n\n  this.makePath = function (state) {\n    // note that not all keys are present in the data!\n    //console.log(\"Entering makepath.\",JSON.stringify(this.keys));\n    var ii, key;\n    var pathSet = [];\n\n    if (this.keys.path === undefined) {\n      this.keys.path = [];\n    }\n\n    ;\n\n    if (this.keys.other === undefined) {\n      this.keys.other = [];\n    }\n\n    ;\n\n    if (this.trash === undefined) {\n      this.trash = [];\n    }\n\n    ;\n\n    if (this.keys.path.length > 0 || this.keys.other.length > 0 || this.trash.length > 0) {\n      // remove duplicates\n      //console.log(\"Filtering.\");\n      var olen;\n      this.keys.path = this.keys.path.filter(this.Unique);\n      this.keys.other = this.keys.other.filter(this.Unique);\n      this.trash = this.trash.filter(this.Unique); //console.log(\"setup:\",JSON.stringify(setup));\n      //console.log(\"Remove invalid keys from path.\");\n      // remove invalid keys from path\n\n      var plen = this.keys.path.length;\n\n      for (ii = 0; ii < plen; ii++) {\n        key = this.keys.path[ii];\n\n        if (state.Database.keyCnt[key] === undefined) {\n          this.keys.path.splice(ii, 1);\n          ii = ii - 1;\n          plen = plen - 1;\n        }\n      } //console.log(\"Remove invalid keys from other.\");\n      // remove invalid keys from other\n\n\n      olen = this.keys.other.length;\n\n      for (ii = 0; ii < olen; ii++) {\n        key = this.keys.other[ii];\n\n        if (state.Database.keyCnt[key] === undefined) {\n          this.other.rest.splice(ii, 1);\n          ii = ii - 1;\n          olen = olen - 1;\n        }\n      } //console.log(\"Remove invalid keys from trash.\");\n      // remove invalid keys from trash\n\n\n      olen = this.trash.length;\n\n      for (ii = 0; ii < olen; ii++) {\n        key = this.trash[ii];\n\n        if (state.Database.keyCnt[key] === undefined) {\n          this.trash.splice(ii, 1);\n          ii = ii - 1;\n          olen = olen - 1;\n        }\n      } //console.log(\"Update trash with keys.\");\n      // we already have a path, update trash with new keys\n\n\n      for (key in state.Database.keyCnt) {\n        if (this.keys.path.indexOf(key) === -1 && this.keys.other.indexOf(key) === -1 && this.trash.indexOf(key) === -1) {\n          pathSet[key] = \"trash\";\n          this.select.val[key] = \"\";\n          this.where[key] = \"\";\n          this.trash.push(key);\n        }\n      }\n    } else {\n      // new path...\n      console.log(\"New path\"); // ...define this.select.val for all keys in input data\n\n      for (key in state.Database.keyCnt) {\n        pathSet[key] = \"data\";\n      }\n\n      ;\n      this.keys.path = [];\n      this.other.table = [];\n      this.other.rest = [];\n      this.select.val = {}; // no values are set so far\n\n      this.where = {};\n      console.log(\"Copy default trash keys.\", JSON.stringify(state.Default.trash)); // copy default trash keys (that are used) to trash...\n\n      if (state.Default.trash !== undefined) {\n        var tlen = state.Default.trash.length;\n\n        for (ii = 0; ii < tlen; ii++) {\n          key = state.Default.trash[ii];\n\n          if (pathSet[key] !== undefined) {\n            if (state.Utils.missing(this.trash, key)) {\n              this.trash.push(key);\n            }\n\n            ;\n            pathSet[key] = undefined; // ignore key from now on...\n          }\n        } //console.log(\"Pathset:\",JSON.stringify(pathSet),JSON.stringify(state.Default.trash));\n\n      }\n\n      ; //console.log(\"Copy default other keys.\");\n\n      console.log(\"makePath A:\", JSON.stringify(state.Path.keys), JSON.stringify(state.Path.other), JSON.stringify(state.Path.trash)); // console.log(\"Added trash:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n      // copy default other keys (that are used) to other...\n\n      if (state.Default.other !== undefined) {\n        var klen = state.Default.other.length;\n\n        for (ii = 0; ii < klen; ii++) {\n          key = state.Default.other[ii];\n\n          if (pathSet[key] !== undefined) {\n            // key not present in input data\n            if (state.Utils.missing(this.keys.other, key)) {\n              this.keys.other.push(key);\n            }\n\n            ;\n            pathSet[key] = \"found\";\n          }\n        }\n      }\n\n      console.log(\"makePath B:\", JSON.stringify(state.Path.keys), JSON.stringify(state.Path.other), JSON.stringify(state.Path.trash)); //console.log(\"Add missing keys.\");\n      // add missing keys to path\n\n      for (key in state.Database.keyCnt) {\n        if (state.Utils.missing(this.ignore, key)) {\n          if (pathSet[key] === \"data\") {\n            if (state.Utils.missing(this.keys.other, key)) {\n              this.keys.other.push(key);\n            }\n\n            ; //console.log(\"Added key:\",key);\n\n            pathSet[key] = \"added\";\n          }\n        }\n\n        ;\n      }\n\n      ; // add undefined values in values\n      // for (key in state.Database.keyCnt) {\n      //     if (state.Database.keyCnt[key].cnt<state.Database.cnt) {\n      // \tstate.Database.values[key].push(undefined);\n      //     }\n      // }\n      // // sort sub-path according to count...\n      // this.keys.other=this.keys.other.sort(function(state,a, b) {\n      //     if (state.Database.values[a]  === undefined) {\n      // \treturn -1;\n      //     } else if (state.Database.values[b]  === undefined) {\n      // \treturn 1;\n      //     } else {\n      // \treturn state.Database.values[a].length - state.Database.values[b].length\n      //     }\n      // });\n\n      console.log(\"makePath C:\", JSON.stringify(state.Path.keys), JSON.stringify(state.Path.other), JSON.stringify(state.Path.trash)); //console.log(\"Push other keys to table and rest.\");\n\n      var glen = this.keys.other.length;\n\n      for (ii = 0; ii < glen; ii++) {\n        key = this.keys.other[ii];\n\n        if (ii < 2) {\n          this.other.table.push(key);\n        } else {\n          this.other.rest.push(key);\n        }\n      }\n    }\n\n    console.log(\"makePath D:\", JSON.stringify(state.Path.keys), JSON.stringify(state.Path.other), JSON.stringify(state.Path.trash));\n    state.Navigate.reset(state); //console.log(\"keys:\",JSON.stringify(state.Database.values));\n    //console.log(\"Completed makepath.\");\n  };\n\n  this.getIndex = function (state, trg) {\n    return this.keys.path.indexOf(trg);\n  };\n\n  this.exportAllKeys = function (state) {\n    // export keys from \"all\" to \"rest\"\n    this.other.table = [];\n    this.other.rest = [];\n    var jj = 0;\n    var key, ii;\n\n    if (this.keys.other !== undefined) {\n      var olen = this.keys.other.length;\n\n      for (ii = 0; ii < olen; ii++) {\n        key = this.keys.other[ii];\n\n        if (state.Matrix.keyCnt[key] !== undefined && state.Matrix.keyCnt[key] > 0) {\n          if (jj < 2) {\n            this.other.table.push(key);\n            jj = jj + 1;\n          } else {\n            this.other.rest.push(key);\n          }\n        }\n      }\n\n      ;\n    } //this.sortTableKeys(state);\n    //console.log(\"Exported:\",JSON.stringify(this.other));\n\n  };\n\n  this.checkTableKeys = function (state) {\n    var ret = [];\n    var where = state.Database.getWhere(state);\n    state.Matrix.initKeyCnt(state);\n    state.Matrix.mapKeyCnt(state, where, 0, state.Path.keys.other); // possible table keys (no undefined)\n\n    state.Path.exportAllKeys(state); //console.log(\"this.checkTableKeys Entering.\",JSON.stringify(setup));\n\n    var keys = state.Path.other.table;\n    var bdone = !keys.length < 2;\n    var iinew = -1;\n    var jjnew = -1;\n    var order = state.Utils.cp(state.Path.keys.other);\n\n    do {\n      //console.log(\"this.checkTableKeys Looping.\");\n      if (keys.length < 2) {\n        bdone = true;\n      } else {\n        // check for number of column values\n        var docs = state.Database.getCntDocs(state, where, state.Path.other.table); // current table keys\n\n        var slen = state.Path.other.table.length;\n        var hits = {};\n        var maxh = {};\n        var kval = {};\n        var ii, jj, key, val; // loop over docs\n\n        var dlen = docs.length;\n\n        for (ii = 0; ii < dlen; ii++) {\n          var doc = docs[ii]; //console.log(\"Trash doc=\",ii,JSON.stringify(doc));\n\n          for (jj = 0; jj < slen; jj++) {\n            key = state.Path.other.table[jj];\n\n            if (doc[key] !== undefined) {\n              val = doc[key];\n              kval[key] = val;\n\n              if (hits[key] === undefined) {\n                hits[key] = {};\n              }\n\n              hits[key][val] = 1 + (hits[key][val] || 0); //console.log(\"Found:\",key,val,hits[key][val]);\n\n              if (hits[key][val] > (maxh[key] || 0)) {\n                maxh[key] = hits[key][val];\n              }\n            }\n          }\n        } //console.log(\"this.checkTableKeys Checking.\",dlen);\n\n\n        var rm = {};\n        bdone = true; //console.log(\"Max:\",JSON.stringify(maxh));\n\n        for (jj = 0; jj < slen; jj++) {\n          key = state.Path.other.table[jj];\n          rm[key] = \"\"; //console.log(\"Checking:\",key,JSON.stringify(maxh));\n\n          if (maxh[key] !== undefined) {\n            if (maxh[key] === 1) {\n              rm[key] = \"other\";\n            } else if (maxh[key] === dlen) {\n              // remove key from table\n              rm[key] = \"self\";\n            }\n          }\n        }\n\n        var rmthis = {};\n\n        for (jj = 0; jj < slen; jj++) {\n          key = state.Path.other.table[jj];\n\n          if (rm[key] === \"other\") {\n            for (var kk = 0; kk < slen; kk++) {\n              var rkey = state.Path.other.table[kk];\n\n              if (kk !== jj) {\n                rmthis[rkey] = \"trash\";\n                iinew = kk;\n              }\n            }\n          } else if (rm[key] === \"self\") {\n            rmthis[key] = \"path\";\n            jjnew = jj;\n          }\n        }\n\n        if (iinew !== -1 && jjnew !== -1) {\n          iinew = -1;\n          jjnew = -1;\n        } //console.log(\"Rm:\",JSON.stringify(rmthis),JSON.stringify(rm));\n\n\n        for (jj = 0; jj < slen; jj++) {\n          key = state.Path.other.table[jj];\n\n          if (rmthis[key] !== undefined) {\n            bdone = false;\n            var sin = state.Path.keys.other.indexOf(key);\n\n            if (sin !== -1) {\n              if (jj === 0) {// flipTable\n                //console.log(\"Flipped table.\",JSON.stringify(state.Path.keys),this.getFlipString(state));\n              } else {//console.log(\"Not Flipping table.\",JSON.stringify(state.Path.keys),this.getFlipString(state));\n                }\n\n              ;\n              var src = state.Path.keys.other.splice(sin, 1); // remove from path\n\n              if (rmthis[key] === \"trash\") {\n                // trash key\n                //console.log(\"### Trashing:\",key);\n                state.Path.trash = state.Path.trash.concat(src); // last path position\n\n                ret = ret.concat(src);\n              } else if (rmthis[key] === \"path\") {\n                // add to path\n                // add to path...\n                val = kval[key]; //console.log(\"### Pathing:\",key,val);\n\n                state.Path.keys.path = state.Path.keys.path.concat(src); // last path position\n\n                state.Path.select.val[key] = [val];\n                state.Path.where[key] = key + '=\"' + val + '\"';\n                this.order[key] = order; //this.last.flip[key]=this.getFlip(state);\n              }\n\n              ;\n            }\n          }\n        }\n\n        if (!bdone) {\n          state.Path.exportAllKeys(state);\n        }\n      }\n\n      ;\n    } while (!bdone); //console.log(\"this.checkTableKeys Done.\",JSON.stringify(state.Path.other.table));\n\n\n    return ret;\n  }; // get X-priority, {colx,coly1,coly2...)\n\n\n  this.sortTableKeys = function (state) {\n    // make priority index\n    var arr = state.Utils.cp(this.other.table);\n    var pri = state.Layout.getPriorityIndex(state, arr); // sort the array according to priority\n\n    this.other.table = arr.sort(function (a, b) {\n      if (a === \"\") {\n        return 1;\n      } else if (b === \"\") {\n        return -1;\n      } else if (pri[a] < pri[b]) {\n        return 1;\n      } else if (pri[a] > pri[b]) {\n        return -1;\n      } else {\n        return 0;\n      }\n    }); //console.log(\"TableKeys:\",JSON.stringify(this.other.table),\n    //\t\" Pri:\",JSON.stringify(state.Layout.priority),\n    //\t\" P:\",JSON.stringify(pri));\n\n    return;\n  };\n\n  this.keyVal = function (state, key) {\n    if (this.select.val[key] !== undefined && this.select.val[key] !== null && this.select.val[key] !== \"\") {\n      return this.select.val[key];\n    } else {\n      return;\n    }\n  };\n\n  this.keyValOk = function (state, val) {\n    var ok = true;\n    return ok;\n  };\n\n  this.makeOrder = function (state, typ, order) {\n    // rearrange setup according to order...\n    if (order !== undefined) {\n      var buff = [];\n\n      for (var kk = 0; kk < order.length; kk++) {\n        if (order[kk] !== \"\") {\n          var sin = this.keys[typ].indexOf(order[kk]);\n\n          if (sin !== -1) {\n            var src = this.keys[typ].splice(sin, 1); // remove from path\n\n            buff = buff.concat(src);\n          }\n        }\n      }\n\n      state.Utils.spliceArray(this.keys[typ], 0, 0, buff);\n    }\n  };\n\n  this.moveKey = function (state, styp, skey, ttyp, tid) {\n    var sid = this.keys[styp].indexOf(skey);\n\n    if (sid !== -1) {\n      var src = this.keys[styp].splice(sid, 1); // remove from path\n\n      if (tid === undefined || tid === -1) {\n        this.keys[ttyp] = this.keys[ttyp].concat(src); // last position\n      } else {\n        state.Utils.spliceArray(this.keys[ttyp], tid, 0, src);\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveKeys = function (state, styp, skeys, ttyp, tid) {\n    var len = skeys.length;\n\n    for (var ss = 0; ss < len; ss++) {\n      var skey = skeys[ss];\n      var sid = this.keys[styp].indexOf(skey);\n\n      if (sid !== -1) {\n        var src = this.keys[styp].splice(sid, 1); // remove from path\n\n        if (tid === undefined || tid === -1) {\n          this.keys[ttyp] = this.keys[ttyp].concat(src); // last position\n        } else {\n          state.Utils.spliceArray(this.keys[ttyp], tid, 0, src);\n        }\n      }\n    }\n  };\n\n  this.swapTableKey = function (state, skey, tkey) {\n    var sid = this.other.table.indexOf(skey);\n    var tid = this.other.table.indexOf(tkey);\n\n    if (tid !== sid && this.other.table.length > 1) {\n      var tin2 = this.keys.other.indexOf(this.other.table[1]);\n      var tkey2 = this.keys.other.splice(tin2, 1); // remove from array\n\n      state.Utils.spliceArray(this.keys.other, 0, 0, tkey2); //console.log(\"Swapped:\",tkey2,tkey,JSON.stringify(this.keys.other));\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.delTableKey = function (state, key) {\n    var secondkey;\n    var secondind;\n    var sid = this.keys.other.indexOf(key);\n\n    if (sid !== -1) {\n      var sin = this.other.table.indexOf(key);\n      var save = sin === 0;\n\n      if (save) {\n        secondkey = this.other.table[1];\n        secondind = this.pullKey(state, \"other\", secondkey);\n      }\n\n      this.pullKey(state, \"other\", key);\n\n      if (save && secondind !== undefined && secondind !== -1) {\n        this.pushKey(state, \"other\", secondkey, secondind);\n      }\n\n      return sin;\n    }\n  };\n\n  this.moveTableKey = function (state, skey, ttyp, tid) {\n    var sid = this.keys.other.indexOf(skey);\n\n    if (sid !== -1) {\n      //var sin=\n      this.delTableKey(state, skey);\n\n      if (tid === undefined || tid === -1) {\n        this.keys[ttyp] = this.keys[ttyp].concat(skey); // last position\n      } else {\n        state.Utils.spliceArray(this.keys[ttyp], tid, 0, skey);\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveKey2Table = function (state, styp, skey, tkey) {\n    //console.log(\"MoveKey2Table:\",JSON.stringify(this.keys));\n    var tid = this.keys.other.indexOf(tkey);\n    var sid = this.keys[styp].indexOf(skey);\n\n    if (tid !== -1 && sid !== -1 && skey !== tkey) {\n      // exists and is not the same\n      this.keys[styp][sid] = tkey;\n      this.keys.other[tid] = skey;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveTrash2Table = function (state, tkey) {\n    var secondkey;\n    var secondind;\n    var tid = this.other.table.indexOf(tkey);\n\n    if (tid !== -1) {\n      var save = tid === 0;\n\n      if (save) {\n        secondkey = this.other.table[1];\n        secondind = this.pullKey(state, \"other\", secondkey);\n      }\n\n      ;\n      var tin = this.keys.other.indexOf(tkey);\n      this.moveTrash(state, \"other\", tin + 1);\n\n      if (save && secondind !== undefined && secondind !== -1) {\n        this.pushKey(state, \"other\", secondkey, secondind);\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveTrash = function (state, ttyp, tin) {\n    state.Utils.spliceArray(this.keys[ttyp], tin, 0, this.trash);\n    this.trash = [];\n  };\n\n  this.moveAllKey = function (state, styp, skey, ttyp, tid) {\n    var lenp = this.keys[styp].length;\n    var sid = this.keys[styp].indexOf(skey);\n\n    if (sid !== -1) {\n      var src = this.keys[styp].splice(sid, lenp - sid);\n      state.Utils.spliceArray(this.keys[ttyp], tid, 0, src);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveAllFirst = function (state, ttyp, tin) {\n    var tlen = this.keys[ttyp].length;\n    var src = this.keys[ttyp].splice(tin, tlen - tin);\n    state.Utils.spliceArray(this.keys[ttyp], 0, 0, src);\n  };\n\n  this.filterKeys = function (state, arr) {\n    var out = [];\n    var alen = arr.length;\n\n    for (var ii = 0; ii < alen; ii++) {\n      var val = arr[ii];\n\n      if (this.keyValOk(state, val)) {\n        out.push(val);\n      }\n    } //console.log(\"CheckOk \",JSON.stringify(arr),\"->\",JSON.stringify(out));\n\n\n    return out;\n  };\n\n  this.pullArrayKey = function (state, array, key) {\n    var sin = array.indexOf(key);\n\n    if (sin !== -1) {\n      //var src=\n      array.splice(sin, 1); // remove from path\n    }\n\n    ;\n    return sin;\n  }; //////////////////////////////// COL/ROW FUNCTIONS ///////////////////////\n\n\n  this.getColKey = function (state) {\n    var arr = state.Utils.cp(this.other.table);\n    var pri = state.Layout.getPriorityIndex(state, arr);\n\n    if (state.Show.getLayoutMode(state) === state.Show.code.layout.Map) {\n      return \"_lon\";\n    } else if (pri[this.other.table[0]] >= pri[this.other.table[1]]) {\n      return this.other.table[0];\n    } else {\n      return this.other.table[1];\n    }\n  };\n\n  this.getRowKey = function (state) {\n    var arr = state.Utils.cp(this.other.table);\n    var pri = state.Layout.getPriorityIndex(state, arr);\n\n    if (state.Show.getLayoutMode(state) === state.Show.code.layout.Map) {\n      return \"_lat\";\n    } else if (pri[this.other.table[0]] >= pri[this.other.table[1]]) {\n      return this.other.table[1];\n    } else {\n      return this.other.table[0];\n    }\n  };\n\n  this.pushKey = function (state, typ, key, ind) {\n    if (key !== undefined && key !== \"\") {\n      state.Utils.spliceArray(this.keys[typ], ind, 0, key);\n    }\n  };\n\n  this.pullKey = function (state, typ, key) {\n    var sin = this.keys[typ].indexOf(key);\n\n    if (sin !== -1) {\n      var src = this.keys[typ].splice(sin, 1); // remove from path\n\n      if (src !== key) {\n        console.log(\"System error:\", src, key);\n      }\n\n      return sin;\n    }\n\n    ;\n  };\n\n  this.pushColKey = function (state, key) {\n    if (key !== undefined && key !== \"\") {\n      state.Utils.spliceArray(this.keys.other, 0, 0, key);\n    }\n  };\n\n  this.pushRowKey = function (state, key) {\n    if (key !== undefined && key !== \"\") {\n      state.Utils.spliceArray(this.keys.other, 1, 0, key);\n    }\n  };\n\n  this.checkNewPath = function (state, styp, skey) {\n    // check if values are defined for path\n    var ok, ii;\n    var sid = this.keys.path.indexOf(skey);\n\n    if (styp === this.type.table.ptyp) {\n      ok = true;\n      var lent = this.other.table.length - 1;\n\n      if (sid !== undefined) {\n        lent = sid + 1;\n      }\n\n      ;\n\n      for (ii = 0; ii <= lent; ii++) {\n        var key = this.other.table[ii];\n\n        if (this.keyVal(state, key) === undefined) {\n          ok = false;\n        }\n      }\n    } else if (styp === this.type.rest.ptyp) {\n      ok = this.checkNewPath(state, this.type.table.ptyp);\n\n      if (ok) {\n        var lenr = this.other.rest.length - 1;\n\n        if (sid !== undefined) {\n          lenr = sid + 1;\n        }\n\n        ;\n\n        for (ii = 0; ii <= lenr; ii++) {\n          key = this.other.rest[ii];\n\n          if (this.keyVal(state, key) === undefined) {\n            ok = false;\n          }\n        }\n      }\n    }\n\n    return ok;\n  }; //values[key]=values[key].filter(this.Unique);\n\n\n  this.Unique = function (value, index, self) {\n    return self.indexOf(value) === index;\n  };\n}\n\n;\nexport default Path;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/PathLib.js"],"names":["Path","keys","path","other","table","rest","trash","select","val","where","filter","ignore","type","ityp","ptyp","eye","trashRest","row","col","item","order","undefined","init","state","par","Utils","cleanSelect","pkeys","Object","lenk","length","ii","key","indexOf","setFilter","cp","pushUrl","console","log","getSnapshot","setSnapshot","snapshot","restore","toggleSelect","vals","JSON","stringify","vid","src","splice","push","setWhere","Show","showConfig","parseWhere","lenv","parse","getMax","Database","values","getMin","makeCnt","getOrderValues","skey","Matrix","plen","bumpOrder","value","spliceArray","makePath","pathSet","olen","Unique","keyCnt","Default","tlen","missing","klen","glen","Navigate","reset","getIndex","trg","exportAllKeys","jj","checkTableKeys","ret","getWhere","initKeyCnt","mapKeyCnt","bdone","iinew","jjnew","docs","getCntDocs","slen","hits","maxh","kval","dlen","doc","rm","rmthis","kk","rkey","sin","concat","sortTableKeys","arr","pri","Layout","getPriorityIndex","sort","a","b","keyVal","keyValOk","ok","makeOrder","typ","buff","moveKey","styp","ttyp","tid","sid","moveKeys","skeys","len","ss","swapTableKey","tkey","tin2","tkey2","delTableKey","secondkey","secondind","save","pullKey","pushKey","moveTableKey","moveKey2Table","moveTrash2Table","tin","moveTrash","moveAllKey","lenp","moveAllFirst","filterKeys","out","alen","pullArrayKey","array","getColKey","getLayoutMode","code","layout","Map","getRowKey","ind","pushColKey","pushRowKey","checkNewPath","lent","lenr","index","self"],"mappings":"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","sourcesContent":["//console.log(\"Loading PathLib.js\");\n\nfunction Path() {\n    this.keys={path:[], // selected keys\n\t       other:[] // keys available for selection\n\t      };\n    this.other={table:[], // table keys\n\t\trest:[]   // keys available for table\n\t       };\n    this.trash=[];         // remaining valid keys\n    this.select={val:{}};  // current selection criteria\n    this.where={};         // current cache for where expressions\n    this.filter={val:{}};  // initial filter for data...\n    this.ignore=[\"max\",\"min\",\"minlat\",\"minlon\",\"maxlat\",\"maxlon\"]; // only visible in 1D and 0D tables\n    this.type = {\n\tpath :      {ityp:-1,ptyp:\"path\"},\n\teye :       {ityp:0, ptyp:\"eye\"},\n\ttable :     {ityp:1, ptyp:\"table\"},\n\trest :      {ityp:2, ptyp:\"rest\"},\n\ttrash :     {ityp:3, ptyp:\"trash\"},\n\ttrashRest : {ityp:4, ptyp:\"trashRest\"},\n\trow :       {ityp:5, ptyp:\"row\"},\n\tcol :       {ityp:6, ptyp:\"col\"},\n\titem :      {ityp:7, ptyp:\"item\"}\n    };\n    this.order=undefined; // how to order data\t    \n    this.init=function(state){\n\tvar par=\"Path\";\n\tstate.Utils.init(par,this);\n    };\n    this.cleanSelect=function(state) {\n\tvar pkeys=state.Path.keys.path;\n\tvar keys=Object.keys(state.Path.select.val);\n\tvar lenk=keys.length;\n\tfor (var ii=0;ii<lenk;ii++) {\n\t    var key=keys[ii];\n\t    if (pkeys.indexOf(key) === -1) {\n\t\tstate.Path.select.val[key]=undefined;\n\t    }\n\t}\n    };\n    this.setFilter=function(state) {\n\tstate.Path.cleanSelect(state);\n\tthis.filter.val=state.Utils.cp(state.Path.select.val);\n\tstate.Utils.pushUrl(state);\n\tconsole.log(\"Setting filter.\");\n    };\n    this.getSnapshot=function(state) { // store state\n\treturn {keys:state.Utils.cp(state.Path.keys),\n\t\tother:state.Utils.cp(state.Path.other),\n\t\tselect:state.Utils.cp(state.Path.select),\n\t\torder:state.Utils.cp(state.Path.order)};\n    };\n    this.setSnapshot=function(state,snapshot) { // store state\n\tstate.Utils.restore(state.Path,snapshot);\n    };\n    this.toggleSelect=function(state,key,val) {\n\tvar vals=state.Path.select.val[key];\n\tconsole.log(\"toggleSelect:\",key,val,JSON.stringify(vals));\n\tif (vals !== undefined) {\n\t    var vid=vals.indexOf(val)\n\t    if (vid !== -1) {  // remove item\n\t\tvar src=vals.splice(vid,1);\n\t\tif (vals.length==0) { // can never be totally empty...\n\t\t    vals.push(\"MAX(\"+key+\")\");\n\t\t}\n\t\tstate.Path.select.val[key]=vals;\n\t    } else {\n\t\tstate.Path.select.val[key].push(val); // add item\n\t    }\n\t    this.setWhere(state,key);\n\t    state.Show.showConfig(state);\n\t    console.log(\"Finally Vals:\",key,JSON.stringify(state.Path.select.val[key]));\n\t}\n    };\n    this.setWhere=function(state,key) {\n\tvar where=this.parseWhere(state,key);\n\tstate.Path.where[key]=where;\n    };\n    this.parseWhere=function(state,key) {\n\tvar where=\"\";\n\tvar vals=state.Path.select.val[key];\n\tif (vals === undefined) {vals=[];};\n\tvar lenv=vals.length\n\tfor (var ii=0;ii<lenv;ii++) {\n\t    var val=vals[ii]\n\t    if (where !== \"\") { where=where + \" OR \";};\n\t    if (val === \"null\") {\n\t\twhere = where + key + \" is NULL\";\n\t    } else if (val===\"MAX(\"+key+\")\") { // this is a function\n\t\tvar parse=state.Utils.getMax(state.Database.values[key]);\n\t\t//console.log(\"parseWhere:\",key,parse,JSON.stringify(state.Database.values[key]));\n\t\tif (parse === undefined) {\n\t\t    where = where + key + \" is NULL\";\n\t\t} else {\n\t\t    where = where + key + \"='\"+parse+\"'\";\n\t\t};\n\t    } else if (val===\"MIN(\"+key+\")\") { // this is a function\n\t\tvar parse=state.Utils.getMin(state.Database.values[key]);\n\t\tif (parse === undefined) {\n\t\t    where = where + key + \" is NULL\";\n\t\t} else {\n\t\t    where = where + key + \"='\"+parse+\"'\";\n\t\t};\n\t    } else {\n\t\twhere = where + key + \"='\"+val+\"'\";\n\t    }\n\t};\n\treturn where;\n    };\n    this.makeCnt=function(state,key) {\n\treturn state.Path.select.val[key].length;\n    };\n    this.getOrderValues=function(state,skey){\n        if (state.Path.order === undefined) {state.Path.order={};};\n        if (state.Path.order[skey] === undefined) {\n            //console.log(\"Copying:\",JSON.stringify(Matrix.values[skey]));\n            state.Path.order[skey]=state.Utils.cp(state.Matrix.values[skey]);\n        } else {\n\t    var vals = state.Matrix.values[skey];\n\t    var plen = vals;\n\t    for (var ii = 0; ii < plen; ii++) {\n\t\tvar val=vals[ii];\n\t\tif (state.Path.order[skey].indexOf(val)===-1) {\n\t\t    state.Path.order[skey].push(val);\n\t\t}\n\t    };\n\t};\n\treturn state.Path.order[skey];\n    };\n    this.bumpOrder=function(state,skey,value) {\n\tconsole.log(\"Bump order:\",skey,value);\n\tvar vid=state.Path.order[skey].indexOf(value);\n\tif (vid !== -1 && vid > 0) {\n\t    var src=state.Path.order[skey].splice(vid, 1); // remove from array   \n\t    state.Utils.spliceArray(state.Path.order[skey],vid-1,0,src);\n\t};\n\tstate.Show.showConfig(state);\n    };\n    this.makePath=function(state) { // note that not all keys are present in the data!\n\t//console.log(\"Entering makepath.\",JSON.stringify(this.keys));\n\tvar ii,key;\n\tvar pathSet=[];\n\tif (this.keys.path === undefined) {this.keys.path=[];};\n\tif (this.keys.other === undefined) {this.keys.other=[];};\n\tif (this.trash === undefined) {this.trash=[];};\n\tif (this.keys.path.length > 0 ||\n\t    this.keys.other.length > 0 ||\n\t    this.trash.length > 0) {\n\t    // remove duplicates\n\t    //console.log(\"Filtering.\");\n\t    var olen;\n\t    this.keys.path=this.keys.path.filter(this.Unique);\n\t    this.keys.other=this.keys.other.filter(this.Unique);\n\t    this.trash=this.trash.filter(this.Unique);\n\t    //console.log(\"setup:\",JSON.stringify(setup));\n\t    //console.log(\"Remove invalid keys from path.\");\n\t    // remove invalid keys from path\n\t    var plen = this.keys.path.length;\n\t    for (ii = 0; ii < plen; ii++) {\n\t\tkey=this.keys.path[ii];\n\t\tif (state.Database.keyCnt[key]  === undefined) {\n\t\t    this.keys.path.splice(ii, 1);\n\t\t    ii=ii-1;\n\t\t    plen=plen-1;\n\t\t}\n\t    }\n\t    //console.log(\"Remove invalid keys from other.\");\n\t    // remove invalid keys from other\n\t    olen = this.keys.other.length;\n\t    for (ii = 0; ii < olen; ii++) {\n\t\tkey=this.keys.other[ii];\n\t\tif (state.Database.keyCnt[key]  === undefined) {\n\t\t    this.other.rest.splice(ii, 1);\n\t\t    ii=ii-1;\n\t\t    olen=olen-1;\n\t\t}\n\t    }\n\t    //console.log(\"Remove invalid keys from trash.\");\n\t    // remove invalid keys from trash\n\t    olen = this.trash.length;\n\t    for (ii = 0; ii < olen; ii++) {\n\t\tkey=this.trash[ii];\n\t\tif (state.Database.keyCnt[key]  === undefined) {\n\t\t    this.trash.splice(ii, 1);\n\t\t    ii=ii-1;\n\t\t    olen=olen-1;\n\t\t}\n\t    }\n\t    //console.log(\"Update trash with keys.\");\n\t    // we already have a path, update trash with new keys\n\t    for (key in state.Database.keyCnt) {\n\t\tif (this.keys.path.indexOf(key)  === -1 && \n\t\t    this.keys.other.indexOf(key)  === -1 && \n\t\t    this.trash.indexOf(key)  === -1) {\n\t\t    pathSet[key]=\"trash\";\n\t\t    this.select.val[key]=\"\";\n\t\t    this.where[key]=\"\";\n\t\t    this.trash.push(key);\n\t\t}\n\t    }\n\t} else {\n\t    // new path...\n\t    console.log(\"New path\");\n\t    // ...define this.select.val for all keys in input data\n\t    for (key in state.Database.keyCnt) {\n\t\tpathSet[key]=\"data\";\n\t    };\n\t    this.keys.path=[];\n\t    this.other.table=[]\n\t    this.other.rest=[]\n\t    this.select.val={}; // no values are set so far\n\t    this.where={}\n\t    console.log(\"Copy default trash keys.\",JSON.stringify(state.Default.trash));\n\t    // copy default trash keys (that are used) to trash...\n\t    if (state.Default.trash !== undefined) {\n\t\tvar tlen = state.Default.trash.length;\n\t\tfor (ii = 0; ii < tlen; ii++) {\n\t\t    key=state.Default.trash[ii];\n\t\t    if (pathSet[key] !== undefined) {\n\t\t\tif (state.Utils.missing(this.trash,key)) { \n\t\t\t    this.trash.push(key);\n\t\t\t};\n\t\t\tpathSet[key]=undefined; // ignore key from now on...\n\t\t    }\n\t\t}\n\t\t//console.log(\"Pathset:\",JSON.stringify(pathSet),JSON.stringify(state.Default.trash));\n\t    };\n\t    //console.log(\"Copy default other keys.\");\n\t    console.log(\"makePath A:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n\t    // console.log(\"Added trash:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n\t    // copy default other keys (that are used) to other...\n\t    if (state.Default.other !== undefined) {\n\t\tvar klen = state.Default.other.length;\n\t\tfor (ii = 0; ii < klen; ii++) {\n\t\t    key=state.Default.other[ii];\n\t\t    if (pathSet[key] !== undefined) { // key not present in input data\n\t\t\tif (state.Utils.missing(this.keys.other,key)) {\n\t\t\t    this.keys.other.push(key);\n\t\t\t};\n\t\t\tpathSet[key]=\"found\";\n\t\t    }\n\t\t}\n\t    }\n\t    console.log(\"makePath B:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n\t    //console.log(\"Add missing keys.\");\n\t    // add missing keys to path\n\t    for (key in state.Database.keyCnt) {\n\t\tif (state.Utils.missing(this.ignore,key)) {\n\t\t    if (pathSet[key] === \"data\") {\n\t\t\tif (state.Utils.missing(this.keys.other,key)) {\n\t\t\t    this.keys.other.push(key);\n\t\t\t};\n\t\t\t//console.log(\"Added key:\",key);\n\t\t\tpathSet[key] = \"added\";\n\t\t    }\n\t\t};\n\t    };\n\t    // add undefined values in values\n\t    // for (key in state.Database.keyCnt) {\n\t    //     if (state.Database.keyCnt[key].cnt<state.Database.cnt) {\n\t    // \tstate.Database.values[key].push(undefined);\n\t    //     }\n\t    // }\n\t    // // sort sub-path according to count...\n\t    // this.keys.other=this.keys.other.sort(function(state,a, b) {\n\t    //     if (state.Database.values[a]  === undefined) {\n\t    // \treturn -1;\n\t    //     } else if (state.Database.values[b]  === undefined) {\n\t    // \treturn 1;\n\t    //     } else {\n\t    // \treturn state.Database.values[a].length - state.Database.values[b].length\n\t    //     }\n\t    // });\n\t    console.log(\"makePath C:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n\t    //console.log(\"Push other keys to table and rest.\");\n\t    var glen = this.keys.other.length;\n\t    for (ii = 0; ii < glen; ii++) {\n\t\tkey=this.keys.other[ii];\n\t\tif (ii<2) {\n\t\t    this.other.table.push(key);\n\t\t} else {\n\t\t    this.other.rest.push(key);\n\t\t}\n\t    }\n\t}\n\tconsole.log(\"makePath D:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n\tstate.Navigate.reset(state);\n\t//console.log(\"keys:\",JSON.stringify(state.Database.values));\n\t//console.log(\"Completed makepath.\");\n    };\n    this.getIndex=function(state,trg) {\n\treturn this.keys.path.indexOf(trg);\n    };\n    this.exportAllKeys=function(state) { // export keys from \"all\" to \"rest\"\n\tthis.other.table=[];\n\tthis.other.rest=[];\n\tvar jj=0;\n\tvar key,ii;\n\tif (this.keys.other !== undefined) {\n\t    var olen=this.keys.other.length;\n\t    for (ii=0;ii<olen;ii++) {\n\t\tkey=this.keys.other[ii];\n\t\tif (state.Matrix.keyCnt[key] !== undefined &&\n\t\t    state.Matrix.keyCnt[key] > 0) {\n\t\t    if (jj < 2) {\n\t\t\tthis.other.table.push(key);\n\t\t\tjj=jj+1;\n\t\t    } else {\n\t\t\tthis.other.rest.push(key);\n\t\t    }\n\t\t}\n\t    };\n\t}\n\t//this.sortTableKeys(state);\n\t//console.log(\"Exported:\",JSON.stringify(this.other));\n    }\n    this.checkTableKeys=function(state) {\n\tvar ret=[];\n\tvar where = state.Database.getWhere(state);\n\tstate.Matrix.initKeyCnt(state);\n\tstate.Matrix.mapKeyCnt(state,where,0,state.Path.keys.other); // possible table keys (no undefined)\n\tstate.Path.exportAllKeys(state);\n\t//console.log(\"this.checkTableKeys Entering.\",JSON.stringify(setup));\n\tvar keys=state.Path.other.table;\n\tvar bdone= ! keys.length < 2;\n\tvar iinew=-1;\n\tvar jjnew=-1;\n\tvar order=state.Utils.cp(state.Path.keys.other);\n\tdo {\n\t    //console.log(\"this.checkTableKeys Looping.\");\n\t    if (keys.length < 2) {\n\t\tbdone=true;\n\t    } else {\n\t\t// check for number of column values\n\t\tvar docs=state.Database.getCntDocs(state,where,state.Path.other.table); // current table keys\n\t\tvar slen=state.Path.other.table.length;\n\t\tvar hits={};\n\t\tvar maxh={};\n\t\tvar kval={};\n\t\tvar ii,jj,key,val;\n\t\t// loop over docs\n\t\tvar dlen = docs.length;\n\t\tfor (ii = 0; ii < dlen; ii++) {\n    \t\t    var doc=docs[ii];\n\t\t    //console.log(\"Trash doc=\",ii,JSON.stringify(doc));\n\t\t    for (jj=0;jj<slen;jj++) {\n\t\t\tkey=state.Path.other.table[jj];\n\t\t\tif (doc[key] !== undefined) {\n\t\t\t    val=doc[key];\n\t\t\t    kval[key]=val;\n\t\t\t    if (hits[key]  === undefined) {hits[key]={};}\n\t\t\t    hits[key][val] = 1+ (hits[key][val]||0);\n\t\t\t    //console.log(\"Found:\",key,val,hits[key][val]);\n\t\t\t    if (hits[key][val] > (maxh[key]||0)) {\n\t\t\t\tmaxh[key]=hits[key][val];\n\t\t\t    }\n\t\t\t}\n\t\t    }\n\t\t}\n\t\t//console.log(\"this.checkTableKeys Checking.\",dlen);\n\t\tvar rm={};\n\t\tbdone=true;\n\t\t//console.log(\"Max:\",JSON.stringify(maxh));\n\t\tfor (jj=0;jj<slen;jj++) {\n\t\t    key=state.Path.other.table[jj];\n\t\t    rm[key]=\"\";\n\t\t    //console.log(\"Checking:\",key,JSON.stringify(maxh));\n\t\t    if (maxh[key] !== undefined) {\n\t\t\tif (maxh[key]  === 1) {\n\t\t\t    rm[key]=\"other\";\n\t\t\t} else if (maxh[key]  === dlen) { // remove key from table\n\t\t\t    rm[key]=\"self\";\n\t\t\t}\n\t\t    }\n\t\t}\n\t\tvar rmthis={};\n\t\tfor (jj=0;jj<slen;jj++) {\n\t\t    key=state.Path.other.table[jj];\n\t\t    if (rm[key]  === \"other\") {\n\t\t\tfor (var kk=0;kk<slen;kk++) {\n\t\t\t    var rkey=state.Path.other.table[kk];\n\t\t\t    if (kk !== jj) {\n\t\t\t\trmthis[rkey]=\"trash\";\n\t\t\t\tiinew=kk;\n\t\t\t    }\n\t\t\t}\n\t\t    } else if (rm[key]  === \"self\") {\n\t\t\trmthis[key]=\"path\";\n\t\t\tjjnew=jj;\n\t\t    }\n\t\t}\n\t\tif (iinew !== -1 && jjnew !== -1) {\n\t\t    iinew=-1;\n\t\t    jjnew=-1;\n\t\t}\n\t\t//console.log(\"Rm:\",JSON.stringify(rmthis),JSON.stringify(rm));\n\t\tfor (jj=0;jj<slen;jj++) {\n\t\t    key=state.Path.other.table[jj];\n\t\t    if (rmthis[key] !== undefined) {\n\t\t\tbdone=false;\n\t\t\tvar sin=state.Path.keys.other.indexOf(key);\n\t\t\tif (sin !== -1) {\n\t\t\t    if (jj  === 0) {\n\t\t\t\t// flipTable\n\t\t\t\t//console.log(\"Flipped table.\",JSON.stringify(state.Path.keys),this.getFlipString(state));\n\t\t\t    } else {\n\t\t\t\t//console.log(\"Not Flipping table.\",JSON.stringify(state.Path.keys),this.getFlipString(state));\n\t\t\t    };\n\t\t\t    var src=state.Path.keys.other.splice(sin, 1); // remove from path\n\t\t\t    if (rmthis[key]  === \"trash\") {// trash key\n\t\t\t\t//console.log(\"### Trashing:\",key);\n\t\t\t\tstate.Path.trash=state.Path.trash.concat(src); // last path position\n\t\t\t\tret=ret.concat(src);\n\t\t\t    } else if (rmthis[key]  === \"path\") {// add to path\n\t\t\t\t// add to path...\n\t\t\t\tval=kval[key];\n\t\t\t\t//console.log(\"### Pathing:\",key,val);\n\t\t\t\tstate.Path.keys.path=state.Path.keys.path.concat(src); // last path position\n\t\t\t\tstate.Path.select.val[key]=[val];\n\t\t\t\tstate.Path.where[key]=key+'=\"'+val+'\"'\n\t\t\t\tthis.order[key]=order;\n\t\t\t\t//this.last.flip[key]=this.getFlip(state);\n\t\t\t    };\n\t\t\t}\n\t\t    }\n\t\t}\n\t\tif (! bdone) {state.Path.exportAllKeys(state);}\n\t    };\n\t} while (! bdone);\n\t//console.log(\"this.checkTableKeys Done.\",JSON.stringify(state.Path.other.table));\n\treturn ret;\n    };\n    // get X-priority, {colx,coly1,coly2...)\n    this.sortTableKeys=function(state){\n\t// make priority index\n\tvar arr=state.Utils.cp(this.other.table);\n\tvar pri=state.Layout.getPriorityIndex(state,arr);\n\t// sort the array according to priority\n\tthis.other.table=arr.sort(function(a,b){\n\t    if (a  === \"\") { \n\t\treturn 1;\n\t    } else if (b  === \"\") {\n\t\treturn -1;\n\t    } else if (pri[a]<pri[b]) { \n\t\treturn 1;\n\t    } else if (pri[a]>pri[b]) {\n\t\treturn -1;\n\t    } else {\n\t\treturn 0;\n\t    }\n\t});\n\t//console.log(\"TableKeys:\",JSON.stringify(this.other.table),\n\t//\t\" Pri:\",JSON.stringify(state.Layout.priority),\n\t//\t\" P:\",JSON.stringify(pri));\n\treturn\n    };\n    this.keyVal=function(state,key) {\n\tif (this.select.val[key] !== undefined &&\n\t    this.select.val[key] !== null &&\n\t    this.select.val[key] !== \"\") {\n\t    return this.select.val[key];\n\t} else {\n\t    return;\n\t}\n    }    \n    \n    this.keyValOk=function(state,val) {\n\tvar ok=true;\n\treturn ok;\n    };\n    this.makeOrder=function(state,typ,order) { // rearrange setup according to order...\n\tif (order !== undefined) {\n\t    var buff=[];\n\t    for (var kk=0; kk < order.length ;kk++){\n\t\tif (order[kk] !== \"\") {\n\t\t    var sin=this.keys[typ].indexOf(order[kk]);\n\t\t    if (sin !== -1) {\n\t\t\tvar src=this.keys[typ].splice(sin, 1); // remove from path\n\t\t\tbuff=buff.concat(src);\n\t\t    }\n\t\t}\n\t    }\n\t    state.Utils.spliceArray(this.keys[typ],0,0,buff);\n\t}\n    };\n    this.moveKey=function(state,styp,skey,ttyp,tid) {\n\tvar sid=this.keys[styp].indexOf(skey);\n\tif (sid !== -1) {\n\t    var src=this.keys[styp].splice(sid, 1);    // remove from path\n\t    if (tid  === undefined || tid  === -1) {\n\t\tthis.keys[ttyp]=this.keys[ttyp].concat(src);         // last position\n\t    } else {\n\t\tstate.Utils.spliceArray(this.keys[ttyp],tid, 0, src);\n\t    }\n\t    return true;\n\t}else {\n\t    return false;\n\t}\n    };\n    this.moveKeys=function(state,styp,skeys,ttyp,tid) {\n\tvar len=skeys.length\n\tfor (var ss=0;ss<len;ss++) {\n\t    var skey=skeys[ss];\n\t    var sid=this.keys[styp].indexOf(skey);\n\t    if (sid !== -1) {\n\t\tvar src=this.keys[styp].splice(sid, 1);    // remove from path\n\t\tif (tid  === undefined || tid  === -1) {\n\t\t    this.keys[ttyp]=this.keys[ttyp].concat(src);         // last position\n\t\t} else {\n\t\t    state.Utils.spliceArray(this.keys[ttyp],tid, 0, src);\n\t\t}\n\t    }\n\t}\n    };\n    this.swapTableKey=function(state,skey,tkey) {\n\tvar sid=this.other.table.indexOf(skey);\n\tvar tid=this.other.table.indexOf(tkey);\n\tif (tid !== sid && this.other.table.length > 1) {\n\t    var tin2=this.keys.other.indexOf(this.other.table[1]);\n\t    var tkey2=this.keys.other.splice(tin2, 1);    // remove from array\n\t    state.Utils.spliceArray(this.keys.other,0, 0, tkey2);\n\t    //console.log(\"Swapped:\",tkey2,tkey,JSON.stringify(this.keys.other));\n\t    return true;\n\t} else {\n\t    return false;\n\t}\n    };\n    this.delTableKey=function(state,key) {\n\tvar secondkey;\n\tvar secondind;\n\tvar sid=this.keys.other.indexOf(key);\n\tif (sid !== -1) {\n\t    var sin=this.other.table.indexOf(key);\n\t    var save=(sin  === 0);\n\t    if (save) {\n\t\tsecondkey=this.other.table[1];\n\t\tsecondind=this.pullKey(state,\"other\",secondkey);\n\t    }\n\t    this.pullKey(state,\"other\",key);\n\t    if (save && secondind !== undefined && secondind !== -1) {\n\t\tthis.pushKey(state,\"other\",secondkey,secondind);\n\t    }\n\t    return sin;\n\t}\n    };\n    this.moveTableKey=function(state,skey,ttyp,tid) {\n\tvar sid=this.keys.other.indexOf(skey);\n\tif (sid !== -1) {\n\t    //var sin=\n\t    this.delTableKey(state,skey);\n\t    if (tid  === undefined || tid  === -1) {\n\t\tthis.keys[ttyp]=this.keys[ttyp].concat(skey);         // last position\n\t    } else {\n\t\tstate.Utils.spliceArray(this.keys[ttyp],tid, 0, skey);\n\t    }\n\t    return true;\n\t}else {\n\t    return false;\n\t}\n    };\n    this.moveKey2Table=function(state,styp,skey,tkey) {\n\t//console.log(\"MoveKey2Table:\",JSON.stringify(this.keys));\n\tvar tid=this.keys.other.indexOf(tkey);\n\tvar sid=this.keys[styp].indexOf(skey)\n\tif (tid !== -1 && sid !== -1 && skey !== tkey) { // exists and is not the same\n\t    this.keys[styp][sid]=tkey\n\t    this.keys.other[tid]=skey\n\t    return true;\n\t} else {\n\t    return false;\n\t}\n    };\n    this.moveTrash2Table=function(state,tkey) {\n\tvar secondkey;\n\tvar secondind;\n\tvar tid=this.other.table.indexOf(tkey);\n\tif (tid !== -1) {\n\t    var save=(tid  === 0);\n\t    if (save) {\n\t\tsecondkey=this.other.table[1];\n\t\tsecondind=this.pullKey(state,\"other\",secondkey);\n\t    };\n\t    var tin=this.keys.other.indexOf(tkey);\n\t    this.moveTrash(state,\"other\",tin+1);\n\t    if (save && secondind !== undefined && secondind !== -1) {\n\t\tthis.pushKey(state,\"other\",secondkey,secondind);\n\t    }\n\t    return true;\n\t} else {\n\t    return false;\n\t}\n    };\n    this.moveTrash=function(state,ttyp,tin) {\n\tstate.Utils.spliceArray(this.keys[ttyp],tin, 0, this.trash);\n\tthis.trash=[];\n    };\n    this.moveAllKey=function(state,styp,skey,ttyp,tid) {\n\tvar lenp=this.keys[styp].length;\n\tvar sid=this.keys[styp].indexOf(skey);\n\tif (sid !== -1) {\n\t    var src=this.keys[styp].splice(sid,lenp-sid);\n\t    state.Utils.spliceArray(this.keys[ttyp],tid,0,src);\n\t    return true;\n\t} else {\n\t    return false;\n\t}\n    };\n    this.moveAllFirst=function(state,ttyp,tin) {\n\tvar tlen=this.keys[ttyp].length;\n\tvar src=this.keys[ttyp].splice(tin,tlen-tin);\n\tstate.Utils.spliceArray(this.keys[ttyp],0, 0,src);\n    };\n    this.filterKeys=function(state,arr) {\n\tvar out=[];\n\tvar alen=arr.length;\n\tfor(var ii=0; ii<alen; ii++) {\n\t    var val=arr[ii];\n\t    if (this.keyValOk(state,val)) {\n\t\tout.push(val);\n\t    }\n\t}\n\t//console.log(\"CheckOk \",JSON.stringify(arr),\"->\",JSON.stringify(out));\n\treturn out;\n    };\n    this.pullArrayKey=function(state,array,key) {\n\tvar sin=array.indexOf(key);\n\tif (sin !== -1) {\n\t    //var src=\n\t    array.splice(sin, 1);    // remove from path\n\t};\n\treturn sin;\n    };\n    //////////////////////////////// COL/ROW FUNCTIONS ///////////////////////\n    this.getColKey=function(state) {\n\tvar arr=state.Utils.cp(this.other.table);\n\tvar pri=state.Layout.getPriorityIndex(state,arr);\n\tif (state.Show.getLayoutMode(state) === state.Show.code.layout.Map) {\n\t    return \"_lon\";\n\t} else if (pri[this.other.table[0]] >= pri[this.other.table[1]]) {\n\t    return this.other.table[0];\n\t} else {\n\t    return this.other.table[1];\n\t}\n    };\n    this.getRowKey=function(state) {\n\tvar arr=state.Utils.cp(this.other.table);\n\tvar pri=state.Layout.getPriorityIndex(state,arr);\n\tif (state.Show.getLayoutMode(state) === state.Show.code.layout.Map) {\n\t    return \"_lat\";\n\t} else if (pri[this.other.table[0]] >= pri[this.other.table[1]]) {\n\t    return this.other.table[1];\n\t} else {\n\t    return this.other.table[0];\n\t}\n    };\n    this.pushKey=function(state,typ,key,ind) {\n\tif (key !== undefined && key !== \"\") {\n\t    state.Utils.spliceArray(this.keys[typ], ind, 0, key);\n\t}\n    };\n    this.pullKey=function(state,typ,key) {\n\tvar sin=this.keys[typ].indexOf(key);\n\tif (sin !== -1) {\n\t    var src=this.keys[typ].splice(sin, 1);    // remove from path\n\t    if (src !== key) {console.log(\"System error:\",src,key);}\n\t    return sin;\n\t};\n    };\n    this.pushColKey=function(state,key) {\n\tif (key !== undefined && key !== \"\") {\n\t    state.Utils.spliceArray(this.keys.other,0, 0, key);\n\t}\n    };\n    this.pushRowKey=function(state,key) {\n\tif (key !== undefined && key !== \"\") {\n\t    state.Utils.spliceArray(this.keys.other,1, 0, key);\n\t}\n    };\n    this.checkNewPath=function(state,styp,skey) { // check if values are defined for path\n\tvar ok,ii;\n\tvar sid=this.keys.path.indexOf(skey);\n\tif (styp  === this.type.table.ptyp) {\n\t    ok=true;\n\t    var lent=this.other.table.length-1;\n\t    if (sid !== undefined) {lent=sid+1;};\n\t    for (ii = 0; ii <= lent; ii++) {\n\t\tvar key=this.other.table[ii];\n\t\tif (this.keyVal(state,key)  === undefined) {\n\t\t    ok=false;\n\t\t}\n\t    }\n\t} else if (styp  === this.type.rest.ptyp) {\n\t    ok=this.checkNewPath(state,this.type.table.ptyp);\n\t    if (ok) {\n\t\tvar lenr=this.other.rest.length-1;\n\t\tif (sid !== undefined) {lenr=sid+1;};\n\t\tfor (ii = 0; ii <= lenr; ii++) {\n\t\t    key=this.other.rest[ii];\n\t\t    if (this.keyVal(state,key)  === undefined) {\n\t\t\tok=false;\n\t\t    }\n\t\t}\n\t    }\n\t}\n\treturn ok;\n    };\n    //values[key]=values[key].filter(this.Unique);\n    this.Unique=function(value, index, self) { \n\treturn self.indexOf(value)  === index;\n    }\n};\nexport default Path;\n"]},"metadata":{},"sourceType":"module"}