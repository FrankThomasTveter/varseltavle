{"ast":null,"code":"import _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/CanvasGraphComponent.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nvar styles = function styles(theme) {\n  return {\n    canvas: {\n      width: \"100%\",\n      height: \"100%\",\n      overflow: \"hidden\"\n    },\n    pointer: {\n      cursor: \"pointer\"\n    },\n    nopointer: {},\n    div: {}\n  };\n};\n\nfunction drawThresholds(state, elements, colkey, colvalues, index, range, plan, level, ctx, height, dw, tot) {\n  //console.log(\"Canvas:\",cnv.width,cnv.height);\n  var step = plan.step;\n  var clen = 0;\n\n  if (colvalues !== undefined) {\n    clen = colvalues.length;\n  }\n\n  ; // number of columns\n\n  var elen = elements.length;\n  var blev = -1;\n  var ee;\n  var cnt = 0;\n\n  for (ee = 0; ee < elen; ee++) {\n    // loop over elements\n    var el = elements[ee];\n    var elevel = el.lev;\n    var color = state.Colors.getLevelColor(elevel);\n    blev = Math.max(blev, elevel);\n    var docs = el.docs;\n    var dlen = docs.length; //console.log(\"   El:\",colkey,ee,elevel,blev); // JSON.stringify(lev),JSON.stringify(d),\n    //console.log(\"Element:\",elevel,color,tot,cnt);\n\n    if (dlen > 0 && range !== undefined) {\n      for (var jj = 0; jj < dlen; jj++) {\n        // loop over segments in each element\n        cnt = cnt + 1;\n        var d = docs[jj]; //console.log(\"   Doc:\",colkey,jj,d.level,col,JSON.stringify(lev),JSON.stringify(d)); // \n\n        for (var ii = index; ii < Math.min(index + step, clen); ii++) {\n          //console.log(\"   Checking Val:\",colkey,rowkey,ii,colvalues[ii],d[colkey]);\n          //console.log(\"Position:\",ii,jj,dlen,step,colkey,rowkey,colvalues[ii],d[colkey])\n          if (colvalues[ii] === \"\" || d[colkey] === colvalues[ii]) {\n            var thr = d.thr; //console.log(\"Making canvas:\",ii,colvalues[ii],color,JSON.stringify(d),\n            //\t    \" Thr=\",JSON.stringify(t),width,height,JSON.stringify(range));\n            //console.log(\"CanvasGraph:\",ii,jj,d.dtg,color,elevel,JSON.stringify(t));\n\n            var min = range[0];\n            var max = range[1];\n            var mm = ii - index;\n\n            if (step < tot) {\n              mm = cnt - 1;\n            } //console.log(\" canvas position:\",mm,ii,cnt,step,tot)\n\n\n            var xmin = mm * dw; // width/10;\n\n            var xmax = (mm + 1) * dw; //width-xmin;\n\n            if (color !== undefined) {\n              var vals;\n\n              if (thr.min !== undefined && thr.val !== undefined) {\n                vals = thr.min;\n              }\n\n              if (thr.max !== undefined && thr.val !== undefined) {\n                vals = thr.max;\n              }\n\n              var vlen = vals.length;\n\n              for (var ll = 0; ll < vlen; ll++) {\n                var tyval = vals[ll];\n                var tzval = state.Show.scale(tyval, min, max, height, 0);\n                var scolor = undefined;\n\n                if (ll === level) {\n                  scolor = 'black';\n                } else {\n                  scolor = state.Colors.getLevelColor(ll);\n                }\n\n                ;\n                ctx.beginPath();\n                ctx.lineWidth = 1;\n\n                if (scolor !== undefined) {\n                  ctx.strokeStyle = scolor;\n                }\n\n                ctx.moveTo(xmin, tzval);\n                ctx.lineTo(xmax, tzval);\n                ctx.stroke(); //console.log(\"Stroke color:\",scolor,ll,tzval,cnv.width);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  ;\n  return blev;\n}\n\n;\n\nfunction drawData(state, elements, colkey, colvalues, index, range, plan, level, ctx, height, dw, tot) {\n  //console.log(\"Canvas:\",cnv.width,cnv.height);\n  var step = plan.step;\n  var clen = 0;\n\n  if (colvalues !== undefined) {\n    clen = colvalues.length;\n  }\n\n  ; // number of columns\n\n  var elen = elements.length;\n  var blev = -1;\n  var ee;\n  var cnt = 0;\n\n  for (ee = 0; ee < elen; ee++) {\n    // loop over elements\n    var el = elements[ee];\n    var elevel = el.lev;\n    var color = state.Colors.getLevelColor(elevel);\n    blev = Math.max(blev, elevel);\n    var docs = el.docs;\n    var dlen = docs.length; //console.log(\"   El:\",colkey,ee,elevel,blev); // JSON.stringify(lev),JSON.stringify(d),\n    //console.log(\"Element:\",elevel,color,tot,cnt,dlen);\n\n    if (dlen > 0 && range !== undefined) {\n      for (var jj = 0; jj < dlen; jj++) {\n        // loop over segments in each element\n        cnt = cnt + 1;\n        var d = docs[jj];\n        var lev = state.Threshold.getLevel(state, d);\n        var col = state.Colors.getLevelColor(lev); //console.log(\"   Doc:\",colkey,jj,d.level,col,JSON.stringify(lev),JSON.stringify(d)); // \n        //console.log(\"   Doc:\",JSON.stringify(colkey),JSON.stringify(colvalues),clen,index); // \n\n        for (var ii = index; ii < Math.min(index + step, clen); ii++) {\n          //console.log(\"   Checking Val:\",colkey,rowkey,ii,colvalues[ii],d[colkey]);\n          //console.log(\"Position:\",ii,jj,dlen,step,colkey,rowkey,colvalues[ii],d[colkey])\n          if (colvalues[ii] === \"\" || d[colkey] === colvalues[ii]) {\n            var thr = d.thr;\n            var vals; //console.log(\"Making canvas:\",ii,colvalues[ii],color,JSON.stringify(d),\n            //\t    \" Thr=\",JSON.stringify(t),width,height,JSON.stringify(range));\n            //console.log(\"CanvasGraph:\",ii,jj,d.dtg,color,elevel,JSON.stringify(t));\n\n            var min = range[0];\n            var max = range[1];\n            var ymin = min;\n\n            if (thr.min !== undefined && thr.val !== undefined) {\n              ymin = thr.val;\n              vals = thr.min;\n            }\n\n            var ymax = max;\n\n            if (thr.max !== undefined && thr.val !== undefined) {\n              ymax = thr.val;\n              vals = thr.max;\n            }\n\n            var mm = ii - index;\n\n            if (step < tot) {\n              mm = cnt - 1;\n            } //console.log(\" canvas position:\",mm,ii,cnt,step,tot)\n\n\n            var xmin = mm * dw; // width/10;\n\n            var xmax = (mm + 1) * dw; // width-2*xmin;\n\n            var zmin = state.Show.scale(ymin, min, max, height, 0);\n            var zmax = state.Show.scale(ymax, min, max, height, 0); //console.log(\"Fill:\",xmin,xmax,zmin,zmax,ymin,ymax,min,max,height);\n            //console.log(\"Fill:\",xmin,xmax,zmin,(zmax-zmin),height,color);\n            //ctx.fillStyle=\"cornflowerblue\";\n\n            color = col;\n\n            if (color !== undefined) {\n              var dx = Math.max(1, xmax - xmin);\n              var dz = zmax - zmin; //if (Math.abs(dz)/height < 0.5) {\n              //ctx.fillStyle=\"black\";\n              //ctx.fillRect(xmin,zmin,dx,dz);\n              //} else {\n\n              ctx.strokeStyle = 'black';\n              ctx.strokeRect(xmin, zmin, dx, dz); //}\n              //\n              //console.log(\"rect:\",lev,xmin,xmax,zmin,zmax);\n              //\n            }\n\n            ;\n          }\n        }\n      }\n    }\n  }\n\n  ;\n  return blev;\n}\n\n;\n\nfunction drawMarker(state, plan, level, ctx, height, dw, tot) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(dw * tot, height);\n  ctx.moveTo(dw * tot, 0);\n  ctx.lineTo(0, height);\n  ctx.strokeRect(0, 0, dw * tot, height);\n  ctx.stroke();\n}\n\n;\n\nfunction updateCanvas(item) {\n  var _item$props = item.props,\n      state = _item$props.state,\n      elements = _item$props.elements,\n      colkey = _item$props.colkey,\n      colvalues = _item$props.colvalues,\n      index = _item$props.index,\n      range = _item$props.range,\n      plan = _item$props.plan,\n      level = _item$props.level;\n  var cnv = item.refs.canvas; // canvas\n\n  var ctx = cnv.getContext('2d'); // context\n  //console.log(\"Canvas:\",cnv.width,cnv.height);\n\n  var step = plan.step;\n  var height = cnv.height;\n  var elen = elements.length;\n  var tot = 0;\n\n  for (var ee = 0; ee < elen; ee++) {\n    tot = tot + elements[ee].docs.length;\n  }\n\n  ; // total number of segments\n\n  var dw = cnv.width / Math.max(step, tot); // width of graph segment\n\n  ctx.clearRect(0, 0, cnv.width, cnv.height);\n  drawThresholds(state, elements, colkey, colvalues, index, range, plan, level, ctx, height, dw, tot);\n  var lev = drawData(state, elements, colkey, colvalues, index, range, plan, level, ctx, height, dw, tot);\n\n  if (!lev >= 0) {\n    drawMarker(state, plan, level, ctx, height, dw, tot);\n  }\n}\n\n;\n\nvar CanvasGraphComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CanvasGraphComponent, _React$Component);\n\n  function CanvasGraphComponent() {\n    _classCallCheck(this, CanvasGraphComponent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CanvasGraphComponent).apply(this, arguments));\n  }\n\n  _createClass(CanvasGraphComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      updateCanvas(this);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      updateCanvas(this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          onclick = _this$props.onclick,\n          title = _this$props.title,\n          plan = _this$props.plan,\n          other = _objectWithoutProperties(_this$props, [\"classes\", \"onclick\", \"title\", \"plan\"]);\n\n      return React.createElement(\"canvas\", Object.assign({}, other, {\n        className: classes.canvas,\n        classes: classes,\n        onClick: onclick,\n        title: title,\n        plan: plan,\n        width: plan.width,\n        height: plan.height,\n        ref: \"canvas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CanvasGraphComponent;\n}(React.Component); // width={plan.width} height={plan.height}\n\n\nCanvasGraphComponent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CanvasGraphComponent);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/CanvasGraphComponent.js"],"names":["React","PropTypes","withStyles","styles","theme","canvas","width","height","overflow","pointer","cursor","nopointer","div","drawThresholds","state","elements","colkey","colvalues","index","range","plan","level","ctx","dw","tot","step","clen","undefined","length","elen","blev","ee","cnt","el","elevel","lev","color","Colors","getLevelColor","Math","max","docs","dlen","jj","d","ii","min","thr","mm","xmin","xmax","vals","val","vlen","ll","tyval","tzval","Show","scale","scolor","beginPath","lineWidth","strokeStyle","moveTo","lineTo","stroke","drawData","Threshold","getLevel","col","ymin","ymax","zmin","zmax","dx","dz","strokeRect","drawMarker","updateCanvas","item","props","cnv","refs","getContext","clearRect","CanvasGraphComponent","classes","onclick","title","other","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    canvas: {\n\twidth:\"100%\",\n\theight:\"100%\",\n\toverflow:\"hidden\",\n    },\n    pointer: {\n\tcursor:\"pointer\"\n    },\n    nopointer: {\n    },\n    div :{},\n});\nfunction drawThresholds(state,elements,colkey,colvalues,index,range,plan,level,ctx,height,dw,tot) {\n    //console.log(\"Canvas:\",cnv.width,cnv.height);\n    const step=plan.step;\n    var clen=0; if (colvalues !== undefined) {clen=colvalues.length;}; // number of columns\n    var elen=elements.length;\n    var blev=-1;\n    var ee;\n    var cnt=0;\n    for (ee=0;ee<elen;ee++) {   // loop over elements\n\tvar el=elements[ee];\n\tvar elevel=el.lev;\n\tvar color=state.Colors.getLevelColor(elevel);\n\tblev=Math.max(blev,elevel);\n\tvar docs=el.docs;\n\tvar dlen=docs.length;\n\t//console.log(\"   El:\",colkey,ee,elevel,blev); // JSON.stringify(lev),JSON.stringify(d),\n\t//console.log(\"Element:\",elevel,color,tot,cnt);\n\tif (dlen>0 && range !== undefined) {\n\t    for (var jj=0;jj<dlen;jj++) {   // loop over segments in each element\n\t\tcnt=cnt+1;\n\t\tvar d=docs[jj];\n\t\t//console.log(\"   Doc:\",colkey,jj,d.level,col,JSON.stringify(lev),JSON.stringify(d)); // \n\t\tfor (var ii=index;ii<Math.min(index+step,clen);ii++) {\n\t\t    //console.log(\"   Checking Val:\",colkey,rowkey,ii,colvalues[ii],d[colkey]);\n\t\t    //console.log(\"Position:\",ii,jj,dlen,step,colkey,rowkey,colvalues[ii],d[colkey])\n\t\t    if (colvalues[ii]===\"\" || d[colkey]  === colvalues[ii]) {\n\t\t\tvar thr=d.thr;\n\t\t\t//console.log(\"Making canvas:\",ii,colvalues[ii],color,JSON.stringify(d),\n\t\t\t//\t    \" Thr=\",JSON.stringify(t),width,height,JSON.stringify(range));\n\t\t\t//console.log(\"CanvasGraph:\",ii,jj,d.dtg,color,elevel,JSON.stringify(t));\n\t\t\tvar min=range[0]\n\t\t\tvar max=range[1];\n\t\t\tvar mm=ii-index\n\t\t\tif (step<tot) {mm=cnt-1;}\n\t\t\t//console.log(\" canvas position:\",mm,ii,cnt,step,tot)\n\t\t\tvar xmin=mm*dw;       // width/10;\n\t\t\tvar xmax=(mm+1)*dw;   //width-xmin;\n\t\t\tif (color !== undefined) {\n\t\t\t    var vals;\n\t\t\t    if (thr.min !== undefined && thr.val !== undefined) {\n\t\t\t\tvals=thr.min;\n\t\t\t    }\n\t\t\t    if (thr.max !== undefined && thr.val !== undefined) {\n\t\t\t\tvals=thr.max;\n\t\t\t    }\n\t\t\t    var vlen=vals.length;\n\t\t\t    for (var ll=0;ll<vlen;ll++) {\n\t\t\t\tvar tyval=vals[ll];\n\t\t\t\tvar tzval=state.Show.scale(tyval,min,max,height,0);\n\t\t\t\tvar scolor=undefined;\n\t\t\t\tif (ll === level) {\n\t\t\t\t    scolor='black';\n\t\t\t\t} else {\n\t\t\t\t    scolor=state.Colors.getLevelColor(ll);\n\t\t\t\t};\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.lineWidth=1;\n\t\t\t\tif (scolor !== undefined) {ctx.strokeStyle=scolor;}\n\t\t\t\tctx.moveTo(xmin,tzval);\n\t\t\t\tctx.lineTo(xmax,tzval);\n\t\t\t\tctx.stroke();\n\t\t\t\t//console.log(\"Stroke color:\",scolor,ll,tzval,cnv.width);\n\t\t\t    }\n\t\t\t}\n\t\t    }\n\t\t}\n\t    }\n\t}\n    };\n    return blev;\n};\nfunction drawData(state,elements,colkey,colvalues,index,range,plan,level,ctx,height,dw,tot) {\n    //console.log(\"Canvas:\",cnv.width,cnv.height);\n    const step=plan.step;\n    var clen=0; if (colvalues !== undefined) {clen=colvalues.length;}; // number of columns\n    var elen=elements.length;\n    var blev=-1;\n    var ee;\n    var cnt=0;\n    for (ee=0;ee<elen;ee++) {   // loop over elements\n\tvar el=elements[ee];\n\tvar elevel=el.lev;\n\tvar color=state.Colors.getLevelColor(elevel);\n\tblev=Math.max(blev,elevel);\n\tvar docs=el.docs;\n\tvar dlen=docs.length;\n\t//console.log(\"   El:\",colkey,ee,elevel,blev); // JSON.stringify(lev),JSON.stringify(d),\n\t//console.log(\"Element:\",elevel,color,tot,cnt,dlen);\n\tif (dlen>0 && range !== undefined) {\n\t    for (var jj=0;jj<dlen;jj++) {   // loop over segments in each element\n\t\tcnt=cnt+1;\n\t\tvar d=docs[jj];\n\t\tvar lev=state.Threshold.getLevel(state,d);\n\t\tvar col=state.Colors.getLevelColor(lev);\n\t\t//console.log(\"   Doc:\",colkey,jj,d.level,col,JSON.stringify(lev),JSON.stringify(d)); // \n\t\t//console.log(\"   Doc:\",JSON.stringify(colkey),JSON.stringify(colvalues),clen,index); // \n\t\tfor (var ii=index;ii<Math.min(index+step,clen);ii++) {\n\t\t    //console.log(\"   Checking Val:\",colkey,rowkey,ii,colvalues[ii],d[colkey]);\n\t\t    //console.log(\"Position:\",ii,jj,dlen,step,colkey,rowkey,colvalues[ii],d[colkey])\n\t\t    if (colvalues[ii]===\"\" || d[colkey]  === colvalues[ii]) {\n\t\t\tvar thr=d.thr;\n\t\t\tvar vals;\n\t\t\t//console.log(\"Making canvas:\",ii,colvalues[ii],color,JSON.stringify(d),\n\t\t\t//\t    \" Thr=\",JSON.stringify(t),width,height,JSON.stringify(range));\n\t\t\t//console.log(\"CanvasGraph:\",ii,jj,d.dtg,color,elevel,JSON.stringify(t));\n\t\t\tvar min=range[0]\n\t\t\tvar max=range[1];\n\t\t\tvar ymin=min;\n\t\t\tif (thr.min !== undefined && thr.val !== undefined) {\n\t\t\t    ymin=thr.val\n\t\t\t    vals=thr.min;\n\t\t\t}\n\t\t\tvar ymax=max;\n\t\t\tif (thr.max !== undefined && thr.val !== undefined) {\n\t\t\t    ymax=thr.val;\n\t\t\t    vals=thr.max;\n\t\t\t}\n\t\t\tvar mm=ii-index\n\t\t\tif (step<tot) {mm=cnt-1;}\n\t\t\t//console.log(\" canvas position:\",mm,ii,cnt,step,tot)\n\t\t\tvar xmin=mm*dw;       // width/10;\n\t\t\tvar xmax=(mm+1)*dw;   // width-2*xmin;\n\t\t\tvar zmin=state.Show.scale(ymin,min,max,height,0);\n\t\t\tvar zmax=state.Show.scale(ymax,min,max,height,0);\n\t\t\t//console.log(\"Fill:\",xmin,xmax,zmin,zmax,ymin,ymax,min,max,height);\n\t\t\t//console.log(\"Fill:\",xmin,xmax,zmin,(zmax-zmin),height,color);\n\t\t\t//ctx.fillStyle=\"cornflowerblue\";\n\t\t\tcolor=col;\n\t\t\tif (color !== undefined) {\n\t\t\t    var dx=Math.max(1,xmax-xmin);\n\t\t\t    var dz=zmax-zmin;\n\t\t\t    //if (Math.abs(dz)/height < 0.5) {\n\t\t\t    //ctx.fillStyle=\"black\";\n\t\t\t    //ctx.fillRect(xmin,zmin,dx,dz);\n\t\t\t    //} else {\n\t\t\t    ctx.strokeStyle='black';\n\t\t\t    ctx.strokeRect(xmin,zmin,dx,dz);\n\t\t\t    //}\n\t\t\t    //\n\t\t\t    //console.log(\"rect:\",lev,xmin,xmax,zmin,zmax);\n\t\t\t    //\n\t\t\t};\n\t\t    }\n\t\t}\n\t    }\n\t}\n    };\n    return blev;\n};\nfunction drawMarker(state,plan,level,ctx,height,dw,tot) {\n    ctx.beginPath();\n    ctx.moveTo(0,0);\n    ctx.lineTo(dw*tot,height);\n    ctx.moveTo(dw*tot,0);\n    ctx.lineTo(0,height);\n    ctx.strokeRect(0,0,dw*tot,height);\n    ctx.stroke();\n};\nfunction updateCanvas(item) {\n    const {state,elements,colkey,colvalues,index,range,plan,level} = item.props;\n    const cnv=item.refs.canvas;        // canvas\n    const ctx = cnv.getContext('2d');  // context\n    //console.log(\"Canvas:\",cnv.width,cnv.height);\n    const step=plan.step;\n    var height = cnv.height;\n    var elen=elements.length;\n    var tot=0; for (var ee=0;ee<elen;ee++) {tot=tot+elements[ee].docs.length;}; // total number of segments\n    var dw= cnv.width/Math.max(step,tot); // width of graph segment\n    ctx.clearRect(0, 0, cnv.width, cnv.height);\n    drawThresholds(state,elements,colkey,colvalues,index,range,plan,level,ctx,height,dw,tot);\n    var lev=drawData(state,elements,colkey,colvalues,index,range,plan,level,ctx,height,dw,tot);\n    if (! lev >= 0) {\n\tdrawMarker(state,plan,level,ctx,height,dw,tot);\n    }\n};\nclass CanvasGraphComponent extends React.Component {\n    componentDidMount() {\n        updateCanvas(this);\n    }\n    componentDidUpdate() {\n        updateCanvas(this);\n    }\n    render() {\n        const { classes, onclick, title, plan, ...other } = this.props;\n        return (\n\t\t<canvas {...other} className={classes.canvas} classes={classes} onClick={onclick} title={title} \n\t            plan={plan} width={plan.width} height={plan.height} ref=\"canvas\"/>\n        );\n    }\n}\n\n// width={plan.width} height={plan.height}\n\nCanvasGraphComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CanvasGraphComponent);\n"]},"metadata":{},"sourceType":"module"}