{"ast":null,"code":"import _classCallCheck from\"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/franktt/react/varseltavle/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{withStyles}from'@material-ui/core/styles';import Button from'@material-ui/core/Button';import ViewIcon from'@material-ui/icons/Explore';import NoViewIcon from'@material-ui/icons/ExploreOff';//import ViewIcon from '@material-ui/icons/Visibility';\n//import NoViewIcon from '@material-ui/icons/VisibilityOff';\nvar styles=function styles(theme){return{view:{marginLeft:'auto'},button:{color:'white'}};};function ViewIconMode(props){var state=props.state;var mode=state.Layout.state.viewMode;if(mode===state.Layout.modes.view.path){return React.createElement(ViewIcon,null);}else{return React.createElement(NoViewIcon,null);}};var View=/*#__PURE__*/function(_Component){_inherits(View,_Component);function View(){_classCallCheck(this,View);return _possibleConstructorReturn(this,_getPrototypeOf(View).apply(this,arguments));}_createClass(View,[{key:\"render\",value:function render(){var _this$props=this.props,classes=_this$props.classes,state=_this$props.state;var onclick=function onclick(event){return state.Layout.toggleView(state);};return React.createElement(Button,{className:classes.button,onClick:onclick,title:\"Show path\"},React.createElement(ViewIconMode,{state:state}));}}]);return View;}(Component);export default withStyles(styles)(View);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/ViewComponent.js"],"names":["React","Component","withStyles","Button","ViewIcon","NoViewIcon","styles","theme","view","marginLeft","button","color","ViewIconMode","props","state","mode","Layout","viewMode","modes","path","View","classes","onclick","event","toggleView"],"mappings":"wkBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CAEA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CAEA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,+BAAvB,CACA;AACA;AAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACrBC,IAAI,CAAE,CACFC,UAAU,CAAE,MADV,CADe,CAIrBC,MAAM,CAAC,CACVC,KAAK,CAAC,OADI,CAJc,CAAL,EAApB,CAQA,QAASC,CAAAA,YAAT,CAAuBC,KAAvB,CAA8B,IACnBC,CAAAA,KADmB,CACVD,KADU,CACnBC,KADmB,CAE1B,GAAIC,CAAAA,IAAI,CAACD,KAAK,CAACE,MAAN,CAAaF,KAAb,CAAmBG,QAA5B,CACA,GAAIF,IAAI,GAAKD,KAAK,CAACE,MAAN,CAAaE,KAAb,CAAmBV,IAAnB,CAAwBW,IAArC,CAA2C,CAC9C,MAAQ,qBAAC,QAAD,MAAR,CACI,CAFD,IAEO,CACV,MAAQ,qBAAC,UAAD,MAAR,CACI,CACJ,E,GACKC,CAAAA,I,sPACO,iBACW,KAAKP,KADhB,CACLQ,OADK,aACLA,OADK,CACIP,KADJ,aACIA,KADJ,CAEZ,GAAIQ,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,QAAWT,CAAAA,KAAK,CAACE,MAAN,CAAaQ,UAAb,CAAwBV,KAAxB,CAAX,EAAd,CACA,MACC,qBAAC,MAAD,EACU,SAAS,CAAEO,OAAO,CAACX,MAD7B,CAEiB,OAAO,CAAEY,OAF1B,CAGU,KAAK,CAAE,WAHjB,EAKO,oBAAC,YAAD,EAAc,KAAK,CAAER,KAArB,EALP,CADD,CASI,C,kBAbcb,S,EAoBnB,cAAeC,CAAAA,UAAU,CAACI,MAAD,CAAV,CAAmBc,IAAnB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport ViewIcon from '@material-ui/icons/Explore';\nimport NoViewIcon from '@material-ui/icons/ExploreOff';\n//import ViewIcon from '@material-ui/icons/Visibility';\n//import NoViewIcon from '@material-ui/icons/VisibilityOff';\n\nconst styles = theme => ({\n    view: {\n        marginLeft: 'auto',\n    },\n    button:{\n\tcolor:'white'\n    },\n});\nfunction ViewIconMode (props) {\n    const {state} = props;\n    var mode=state.Layout.state.viewMode;\n    if (mode === state.Layout.modes.view.path) {\n\treturn (<ViewIcon/>);\n    } else {\n\treturn (<NoViewIcon/>);\n    }\n};\nclass View extends Component {\n    render() {\n\tconst {classes, state}=this.props;\n\tvar onclick = (event) => state.Layout.toggleView(state);\n\treturn (\n\t\t<Button\n\t           className={classes.button}\n                   onClick={onclick}\n\t           title={\"Show path\"}\n\t\t >\n\t  \t    {<ViewIconMode state={state}/>}\n                 </Button>\n\t);\n    }\n}\n\nView.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(View);\n"]},"metadata":{},"sourceType":"module"}