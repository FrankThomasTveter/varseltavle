{"ast":null,"code":"import _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/CanvasTextComponent.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nvar styles = function styles(theme) {\n  return {\n    pointer: {\n      cursor: \"pointer\",\n      padding: theme.spacing.unit * 0.1\n    },\n    nopointer: {\n      padding: theme.spacing.unit * 0.1\n    }\n  };\n};\n\nfunction getTextWidth(txt, fontname, fontsize) {\n  if (getTextWidth.c === undefined) {\n    getTextWidth.c = document.createElement('canvas');\n    getTextWidth.ctx = getTextWidth.c.getContext('2d');\n  }\n\n  if (fontname !== undefined) {\n    getTextWidth.ctx.font = fontsize + ' ' + fontname;\n  }\n\n  return getTextWidth.ctx.measureText(txt).width;\n}\n\n;\n\nfunction getTextHeight(fontname, fontsize) {\n  if (getTextHeight.c === undefined) {\n    getTextHeight.c = document.createElement('canvas');\n    getTextHeight.ctx = getTextHeight.c.getContext('2d');\n  }\n\n  if (fontname !== undefined) {\n    getTextHeight.ctx.font = fontsize + ' ' + fontname;\n  }\n\n  return getTextHeight.ctx.measureText('M').width;\n}\n\nfunction updateCanvas(item) {\n  var _item$props = item.props,\n      state = _item$props.state,\n      label = _item$props.label,\n      plan = _item$props.plan;\n  var cnv = item.refs.text;\n  var ctx = cnv.getContext('2d'); //var cnvheight = cnv.height;\n\n  ctx.save(); //ctx.translate(newx, newy);\n  //ctx.font = \"40px Courier\"\n\n  ctx.textAlign = \"left\"; //left right center\n  //ctx.rect(0,0,100,100);\n  //ctx.stroke();\n\n  if (plan.rotate !== undefined && plan.rotate) {\n    ctx.translate(item.width - plan.border - plan.shift, item.height - plan.border);\n    ctx.rotate(-Math.PI / 2);\n    console.log(\">>>> Plan:\", JSON.stringify(plan), item.width, item.height);\n    ctx.fillText(label, 0, 0); // labelXposition\n  } else {\n    ctx.fillText(label, plan.border + plan.shift, item.height - plan.border); // labelXposition\n  }\n\n  ;\n  ctx.restore();\n  ctx.rect(0, 0, item.width, item.height);\n  ctx.stroke(); //console.log(\"Label:\",label,item.width,item.height);\n  //console.log(\"CanvasText:\",cnv.width,cnv.height);\n}\n\nvar CanvasTextComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CanvasTextComponent, _React$Component);\n\n  function CanvasTextComponent(props) {\n    var _this;\n\n    _classCallCheck(this, CanvasTextComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CanvasTextComponent).call(this, props));\n    var state = props.state;\n    return _this;\n  }\n\n  _createClass(CanvasTextComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      updateCanvas(this);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      updateCanvas(this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          onclick = _this$props.onclick,\n          title = _this$props.title,\n          plan = _this$props.plan,\n          other = _objectWithoutProperties(_this$props, [\"classes\", \"onclick\", \"title\", \"plan\"]);\n\n      var cursor = classes.nopointer;\n\n      if (onclick !== undefined) {\n        cursor = classes.pointer;\n      }\n\n      this.width = plan.width;\n      this.height = plan.height;\n      return React.createElement(\"canvas\", Object.assign({}, other, {\n        className: cursor,\n        classes: classes,\n        onClick: onclick,\n        title: title,\n        plan: plan,\n        ref: \"text\",\n        width: this.width,\n        height: this.height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CanvasTextComponent;\n}(React.Component);\n\nCanvasTextComponent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CanvasTextComponent);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/CanvasTextComponent.js"],"names":["React","Component","PropTypes","withStyles","styles","theme","pointer","cursor","padding","spacing","unit","nopointer","getTextWidth","txt","fontname","fontsize","c","undefined","document","createElement","ctx","getContext","font","measureText","width","getTextHeight","updateCanvas","item","props","state","label","plan","cnv","refs","text","save","textAlign","rotate","translate","border","shift","height","Math","PI","console","log","JSON","stringify","fillText","restore","rect","stroke","CanvasTextComponent","classes","onclick","title","other","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    pointer: {\n\tcursor:\"pointer\",\n\tpadding: theme.spacing.unit*0.1,\n    },\n    nopointer: {\n\tpadding: theme.spacing.unit*0.1,\n    },\n});\n\nfunction getTextWidth(txt, fontname, fontsize){\n    if(getTextWidth.c === undefined){\n        getTextWidth.c=document.createElement('canvas');\n        getTextWidth.ctx=getTextWidth.c.getContext('2d');\n    }\n    if (fontname !== undefined) {\n\tgetTextWidth.ctx.font = fontsize + ' ' + fontname;\n    }\n    return getTextWidth.ctx.measureText(txt).width;\n};\nfunction getTextHeight(fontname, fontsize){\n    if(getTextHeight.c === undefined){\n        getTextHeight.c=document.createElement('canvas');\n        getTextHeight.ctx=getTextHeight.c.getContext('2d');\n    }\n    if (fontname !== undefined) {\n\tgetTextHeight.ctx.font = fontsize + ' ' + fontname;\n    }\n    return getTextHeight.ctx.measureText('M').width;\n}\nfunction updateCanvas(item) {\n    const {state,label,plan} = item.props;\n    const cnv=item.refs.text;\n    const ctx = cnv.getContext('2d');\n    //var cnvheight = cnv.height;\n    ctx.save();\n    //ctx.translate(newx, newy);\n    //ctx.font = \"40px Courier\"\n    ctx.textAlign = \"left\"; //left right center\n    //ctx.rect(0,0,100,100);\n    //ctx.stroke();\n    if (plan.rotate !== undefined && plan.rotate) {\n\tctx.translate(item.width-plan.border-plan.shift,item.height-plan.border);\n\tctx.rotate(-Math.PI/2);\n\tconsole.log(\">>>> Plan:\",JSON.stringify(plan),item.width,item.height);\n\tctx.fillText(label, 0, 0); // labelXposition\n    } else {\n\tctx.fillText(label, plan.border+plan.shift, item.height-plan.border); // labelXposition\n    };\n    ctx.restore();\n    ctx.rect(0,0,item.width,item.height);\n    ctx.stroke();\n    //console.log(\"Label:\",label,item.width,item.height);\n    //console.log(\"CanvasText:\",cnv.width,cnv.height);\n}\n    \n\nclass CanvasTextComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        const {state} = props;\n    };\n    componentDidMount() {\n        updateCanvas(this);\n    }\n    componentDidUpdate() {\n        updateCanvas(this);\n    }\n    render() {\n        const { classes, onclick, title, plan, ...other } = this.props;\n\tvar cursor=classes.nopointer;\n\tif (onclick !== undefined) {\n\t    cursor=classes.pointer;\n\t}\n\tthis.width=plan.width;\n\tthis.height=plan.height;\n        return (\n\t\t<canvas {...other} className={cursor} classes={classes} onClick={onclick} title={title} plan={plan} ref=\"text\" width={this.width} height={this.height}/>\n        );\n    }\n}\n\nCanvasTextComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CanvasTextComponent);\n"]},"metadata":{},"sourceType":"module"}