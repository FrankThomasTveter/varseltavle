{"ast":null,"code":"var _jsxFileName = \"/home/franktt/react/varseltavle/src/react/SummaryCell.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nvar styles = function styles(theme) {\n  return {\n    pointer: {\n      cursor: \"pointer\",\n      border: \"0px\",\n      overflow: 'hidden',\n      padding: theme.spacing.unit * 0,\n      textAlign: \"center\"\n    },\n    nopointer: {\n      border: \"0px\",\n      padding: theme.spacing.unit * 0,\n      textAlign: \"center\"\n    },\n    divTableCell: {\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    },\n    divTableCellCursor: {\n      cursor: \"pointer\",\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    }\n  };\n}; //\tborderCollapse: 'collapse',\n\n\nfunction SummaryCell(props) {\n  var state = props.state,\n      classes = props.classes,\n      onclick = props.onclick,\n      colwhere = props.colwhere,\n      rowwhere = props.rowwhere,\n      label = props.label,\n      elements = props.elements,\n      rowindex = props.rowindex;\n\n  if (elements === undefined) {\n    if (rowindex % 2 === 1) {\n      return React.createElement(\"div\", {\n        className: classes.divTableCell,\n        style: {\n          backgroundColor: '#EEE'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: classes.divTableCell,\n        style: {\n          backgroundColor: '#FFF'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    }\n  }\n\n  var cnt = 0;\n  var lev = -1;\n  var elen = elements.length;\n\n  for (var ee = 0; ee < elen; ee++) {\n    cnt = cnt + elements[ee].cnt;\n    lev = Math.max(lev, elements[ee].lev);\n  }\n\n  ;\n  var lab = \"\";\n\n  if (label === undefined) {\n    if (cnt > 1) {\n      lab = \"*\";\n    }\n\n    ;\n  } else {\n    lab = \"\";\n  }\n\n  ;\n  var bgcolor = state.Colors.getLevelColor(lev);\n  var cursor = classes.divTableCell;\n\n  if (onclick !== undefined) {\n    cursor = classes.divTableCellCursor;\n  }\n\n  var title = \"\";\n\n  if (colwhere !== \"\" && rowwhere !== \"\") {\n    title = \"(\" + colwhere + \") AND (\" + rowwhere + \")\";\n  } else if (colwhere !== \"\") {\n    title = colwhere;\n  } else if (rowwhere !== \"\") {\n    title = rowwhere;\n  } //{bgcolor}\n\n\n  console.log(\"SummaryCell:\", lab, \" lev=\", lev, elements.length, bgcolor, lab);\n  return React.createElement(\"div\", {\n    className: cursor,\n    style: {\n      backgroundColor: bgcolor\n    },\n    onClick: onclick,\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, lab);\n}\n\nSummaryCell.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SummaryCell);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/SummaryCell.js"],"names":["React","PropTypes","withStyles","styles","theme","pointer","cursor","border","overflow","padding","spacing","unit","textAlign","nopointer","divTableCell","display","divTableCellCursor","SummaryCell","props","state","classes","onclick","colwhere","rowwhere","label","elements","rowindex","undefined","backgroundColor","cnt","lev","elen","length","ee","Math","max","lab","bgcolor","Colors","getLevelColor","title","console","log","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst styles = theme => ({\n    pointer: {\n\tcursor:\"pointer\",\n\tborder:\"0px\",\n\toverflow: 'hidden',\n\tpadding: theme.spacing.unit*0,\n\ttextAlign:\"center\",\n    },\n    nopointer: {\n\tborder:\"0px\",\n\tpadding: theme.spacing.unit*0,\n\ttextAlign:\"center\",\n    },\n    divTableCell:{\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableCellCursor:{\n\tcursor: \"pointer\",\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n});\n\n//\tborderCollapse: 'collapse',\n\nfunction SummaryCell(props) {\n    const { state,classes,onclick,\n\t    colwhere,rowwhere,label,\n\t    elements, rowindex } = props;\n    if (elements===undefined) {\n\tif (rowindex%2===1) {\n\t    return <div className={classes.divTableCell} style={{backgroundColor:'#EEE'}}/>\n\t} else {\n\t    return <div className={classes.divTableCell} style={{backgroundColor:'#FFF'}}/>\n\t}\n    } \n    var cnt=0;\n    var lev=-1;\n    var elen=elements.length;\n    for (var ee=0;ee<elen;ee++) {\n        cnt=cnt+elements[ee].cnt;\n        lev=Math.max(lev,elements[ee].lev);\n    }; \n    var lab=\"\";\n    if (label === undefined) {\n\tif (cnt > 1) {lab=\"*\";};\n    } else {\n\tlab=\"\";\n    };\n    var bgcolor=state.Colors.getLevelColor(lev);\n    var cursor=classes.divTableCell;\n    if (onclick !== undefined) {\n\tcursor=classes.divTableCellCursor;\n    }\n    var title=\"\";\n    if (colwhere !== \"\" && rowwhere !== \"\") {\n\ttitle=\"(\"+colwhere+\") AND (\"+rowwhere+\")\";\n    } else if (colwhere !== \"\") {\n\ttitle=colwhere;\n    } else if (rowwhere !== \"\") {\n\ttitle=rowwhere;\n    }\n    //{bgcolor}\n    console.log(\"SummaryCell:\",lab,\" lev=\",lev,elements.length,bgcolor,lab);\n    return (\n            <div className={cursor} style={{backgroundColor:bgcolor}} onClick={onclick} title={title}>\n\t     {lab}\n\t    </div>\n           );\n}\n\nSummaryCell.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SummaryCell);\n"]},"metadata":{},"sourceType":"module"}