{"ast":null,"code":"var _jsxFileName = \"/home/franktt/react/varseltavle/src/react/SummaryCell.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\n\nvar styles = function styles(theme) {\n  return {\n    pointer: {\n      cursor: \"pointer\",\n      border: \"1px\"\n    },\n    nopointer: {\n      border: \"1px\"\n    }\n  };\n};\n\nfunction SummaryCell(props) {\n  var state = props.state,\n      key = props.key,\n      onclick = props.onclick,\n      colwhere = props.colwhere,\n      rowwhere = props.rowwhere,\n      elements = props.elements,\n      range = props.range;\n  var cnt = 0;\n  var lev = -1;\n  var elen = elements.length;\n\n  for (var ee = 0; ee < elen; ee++) {\n    cnt = cnt + elements[ee].cnt;\n    lev = Math.max(lev, elements[ee].lev);\n  }\n\n  ;\n  var label = \"\";\n\n  if (cnt > 1) {\n    label = cnt;\n  }\n\n  ;\n  var bgcolor = state.Colors.getLevelColor(lev);\n  var classname = \"nopointer\";\n\n  if (onclick !== undefined) {\n    classname = \"pointer\";\n  }\n\n  var title = \"\";\n\n  if (colwhere !== \"\" && rowwhere !== \"\") {\n    title = \"(\" + colwhere + \") AND (\" + rowwhere + \")\";\n  } else if (colwhere !== \"\") {\n    title = colwhere;\n  } else if (rowwhere !== \"\") {\n    title = rowwhere;\n  }\n\n  console.log(\"SummaryCell:\", label, \" lev=\", lev, elements.length, bgcolor, JSON.stringify(range));\n  return React.createElement(TableCell, {\n    className: classname,\n    bgcolor: bgcolor,\n    onClick: onclick,\n    title: title,\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, label);\n}\n\nSummaryCell.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SummaryCell);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/SummaryCell.js"],"names":["React","PropTypes","withStyles","TableCell","styles","theme","pointer","cursor","border","nopointer","SummaryCell","props","state","key","onclick","colwhere","rowwhere","elements","range","cnt","lev","elen","length","ee","Math","max","label","bgcolor","Colors","getLevelColor","classname","undefined","title","console","log","JSON","stringify","propTypes","classes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\n\n\nconst styles = theme => ({\n    pointer: {\n\tcursor:\"pointer\",\n\tborder:\"1px\",\n    },\n    nopointer: {\n\tborder:\"1px\",\n    },\n});\nfunction SummaryCell(props) {\n    const { state,key,onclick,\n\t    colwhere,rowwhere,\n\t    elements,range } = props;\n    var cnt=0;\n    var lev=-1;\n    var elen=elements.length;\n    for (var ee=0;ee<elen;ee++) {\n        cnt=cnt+elements[ee].cnt;\n        lev=Math.max(lev,elements[ee].lev);\n    }; \n    var label=\"\";\n    if (cnt > 1) {label=cnt;};\n    var bgcolor=state.Colors.getLevelColor(lev);\n    var classname=\"nopointer\";\n    if (onclick !== undefined) {\n\tclassname=\"pointer\";\n    }\n    var title=\"\";\n    if (colwhere !== \"\" && rowwhere !== \"\") {\n\ttitle=\"(\"+colwhere+\") AND (\"+rowwhere+\")\";\n    } else if (colwhere !== \"\") {\n\ttitle=colwhere;\n    } else if (rowwhere !== \"\") {\n\ttitle=rowwhere;\n    }\n    console.log(\"SummaryCell:\",label,\" lev=\",lev,elements.length,bgcolor,JSON.stringify(range));\n    return (\n         <TableCell className={classname} bgcolor={bgcolor} onClick={onclick} title={title} key={key}>{label}</TableCell>\n    );\n}\n\nSummaryCell.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SummaryCell);\n"]},"metadata":{},"sourceType":"module"}