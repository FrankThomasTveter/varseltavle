{"ast":null,"code":"import _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/CanvasGraphComponent.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nvar styles = function styles(theme) {\n  return {\n    canvas: {\n      width: \"100%\",\n      height: \"100%\",\n      overflow: \"hidden\"\n    },\n    pointer: {\n      cursor: \"pointer\"\n    },\n    nopointer: {},\n    div: {}\n  };\n};\n\nfunction drawThresholds(state, elements, colkey, colvalue, range, plan, level, ctx, height, offset, dwidth) {\n  //console.log(\"Canvas:\",xmin,dx);\n  var elen = elements.length;\n  var maxlev = -1;\n  var minlev = 0;\n  var min = range[0];\n  var max = range[1];\n  var ee; // determine cnt, number of elements for this colvalue\n\n  var cnt = 0;\n\n  for (ee = 0; ee < elen; ee++) {\n    // loop over elements\n    var el = elements[ee];\n    var docs = el.docs;\n    var dlen = docs.length;\n\n    for (var jj = 0; jj < dlen; jj++) {\n      // loop over segments in each element\n      var d = docs[jj];\n      var thr = d._thr;\n\n      if (colvalue === \"\" || d[colkey] === colvalue) {\n        var vals; // array of thresholds\n\n        if (thr.min !== undefined && thr.val !== undefined) {\n          vals = thr.min;\n        }\n\n        if (thr.max !== undefined && thr.val !== undefined) {\n          vals = thr.max;\n        }\n\n        if (vals !== undefined) {\n          var vlen = vals.length;\n\n          for (var ll = 0; ll < vlen; ll++) {\n            var tyval = vals[ll];\n            var tzval = state.Show.scale(tyval, min, max, height, 0);\n            var scolor = undefined;\n\n            if (ll === level) {\n              scolor = 'black';\n            } else {\n              scolor = state.Colors.getLevelColor(ll);\n            }\n\n            ;\n            var xmin = offset + cnt * dwidth;\n            var xmax = offset + (cnt + 1) * dwidth;\n            ctx.beginPath();\n            ctx.lineWidth = 1;\n\n            if (scolor !== undefined) {\n              ctx.strokeStyle = scolor;\n            }\n\n            ctx.moveTo(xmin, tzval);\n            ctx.lineTo(xmax, tzval);\n            ctx.stroke(); //console.log(\"Stroke color:\",scolor,ll,tzval,cnv.width);\n          }\n        }\n\n        cnt = cnt + 1;\n      }\n\n      ;\n    }\n\n    ;\n  }\n\n  ;\n}\n\n;\n\nfunction drawData(state, elements, colkey, colvalue, range, plan, level, ctx, height, offset, dwidth) {\n  //console.log(\"Canvas:\",xmin,dx);\n  var elen = elements.length;\n  var maxlev = -1;\n  var minlev = 0;\n  var min = range[0];\n  var max = range[1];\n  var ee; // determine cnt, number of elements for this colvalue\n\n  var cnt = 0;\n\n  for (ee = 0; ee < elen; ee++) {\n    // loop over elements\n    var el = elements[ee];\n    var docs = el.docs;\n    var dlen = docs.length;\n\n    for (var jj = 0; jj < dlen; jj++) {\n      // loop over segments in each element\n      var d = docs[jj];\n      var thr = d._thr;\n\n      if (colvalue === \"\" || d[colkey] === colvalue) {\n        var vals; //console.log(\"Making canvas:\",ii,colvalues[ii],color,JSON.stringify(d),\n        //\t    \" Thr=\",JSON.stringify(t),width,height,JSON.stringify(range));\n        //console.log(\"CanvasGraph:\",ii,jj,d.dtg,color,el.maxlev,JSON.stringify(t));\n\n        var min = range[0];\n        var max = range[1];\n        var ymin = min;\n\n        if (thr.min !== undefined && thr.val !== undefined) {\n          ymin = thr.val;\n        }\n\n        var ymax = max;\n\n        if (thr.max !== undefined && thr.val !== undefined) {\n          ymax = thr.val;\n        }\n\n        var xmin = offset + cnt * dwidth;\n        var xmax = offset + (cnt + 1) * dwidth;\n        var zmin = state.Show.scale(ymin, min, max, height, 0);\n        var zmax = state.Show.scale(ymax, min, max, height, 0); //console.log(\"Fill:\",xmin,xmax,zmin,zmax,ymin,ymax,min,max,height);\n        //console.log(\"Fill:\",xmin,xmax,zmin,(zmax-zmin),height,color);\n        //ctx.fillStyle=\"cornflowerblue\";\n\n        var lev = state.Threshold.getLevel(state, d);\n        var col = state.Colors.getLevelColor(lev);\n\n        if (col !== undefined) {\n          if (d.maxlev === undefined || d.maxlev === undefined) {\n            minlev = Math.min(minlev, -2);\n          } else {\n            maxlev = Math.max(maxlev, d.maxlev);\n            minlev = Math.min(minlev, d.minlev);\n          }\n\n          ;\n          var dx = Math.max(1, xmax - xmin);\n          var dz = zmax - zmin;\n          ctx.strokeStyle = 'black';\n          ctx.strokeRect(xmin, zmin, dx, dz);\n        }\n\n        cnt = cnt + 1;\n      }\n    }\n  }\n\n  ;\n\n  if (minlev < 0) {\n    return minlev;\n  } else {\n    return maxlev;\n  }\n}\n\n;\n\nfunction drawMarker(state, plan, level, ctx, height, xmin, xmax) {\n  ctx.strokeStyle = 'blue';\n  ctx.beginPath();\n  ctx.moveTo(xmin, 0);\n  ctx.lineTo(xmax, height);\n  ctx.moveTo(xmax, 0);\n  ctx.lineTo(xmin, height);\n  ctx.strokeRect(xmin, 0, xmax, height);\n  ctx.stroke();\n}\n\n;\n\nfunction updateCanvas(item) {\n  var _item$props = item.props,\n      state = _item$props.state,\n      elements = _item$props.elements,\n      colkey = _item$props.colkey,\n      colvalues = _item$props.colvalues,\n      index = _item$props.index,\n      range = _item$props.range,\n      plan = _item$props.plan,\n      level = _item$props.level;\n  var cnv = item.refs.canvas; // canvas\n\n  var ctx = cnv.getContext('2d'); // context\n  //console.log(\"Canvas:\",cnv.width,cnv.height);\n\n  ctx.clearRect(0, 0, cnv.width, cnv.height);\n  var elen = elements.length;\n  var clen = 1;\n\n  if (colvalues !== undefined) {\n    clen = colvalues.length;\n  }\n\n  ; // number of columns\n\n  var step = plan.step;\n  var height = cnv.height;\n  var width = cnv.width / Math.max(1, step); // width of graph segment\n\n  if (range !== undefined) {\n    // loop over column segments...\n    for (var ii = index; ii < Math.min(index + step, clen); ii++) {\n      // loop over segments\n      console.log(\"Looping over segment:\", ii, clen);\n      var tot = state.Utils.cntDocs(elements, colkey, colvalues[ii]);\n      console.log(\"Canvas:\", ii, index, \" val=\", colvalues[ii], \" tot=\", tot, \" key=\", colkey, JSON.stringify(elements));\n      var offset = (ii - index) * width; // width/10;\n\n      var dwidth = width / Math.max(1, tot);\n      drawThresholds(state, elements, colkey, colvalues[ii], range, plan, level, ctx, height, offset, dwidth);\n      var lev = drawData(state, elements, colkey, colvalues[ii], range, plan, level, ctx, height, offset, dwidth);\n\n      if (lev >= 0) {// data is ok\n      } else {\n        // invalid data\n        drawMarker(state, plan, level, ctx, height, width);\n      }\n    }\n  } else {\n    drawMarker(state, plan, level, ctx, height, 0, width);\n  }\n}\n\n;\n\nvar CanvasGraphComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CanvasGraphComponent, _React$Component);\n\n  function CanvasGraphComponent() {\n    _classCallCheck(this, CanvasGraphComponent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CanvasGraphComponent).apply(this, arguments));\n  }\n\n  _createClass(CanvasGraphComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      updateCanvas(this);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      updateCanvas(this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          onclick = _this$props.onclick,\n          title = _this$props.title,\n          plan = _this$props.plan,\n          other = _objectWithoutProperties(_this$props, [\"classes\", \"onclick\", \"title\", \"plan\"]);\n\n      return React.createElement(\"canvas\", Object.assign({}, other, {\n        className: classes.canvas,\n        classes: classes,\n        onClick: onclick,\n        title: title,\n        plan: plan,\n        width: plan.width,\n        height: plan.height,\n        ref: \"canvas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CanvasGraphComponent;\n}(React.Component); // width={plan.width} height={plan.height}\n\n\nCanvasGraphComponent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CanvasGraphComponent);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/CanvasGraphComponent.js"],"names":["React","PropTypes","withStyles","styles","theme","canvas","width","height","overflow","pointer","cursor","nopointer","div","drawThresholds","state","elements","colkey","colvalue","range","plan","level","ctx","offset","dwidth","elen","length","maxlev","minlev","min","max","ee","cnt","el","docs","dlen","jj","d","thr","_thr","vals","undefined","val","vlen","ll","tyval","tzval","Show","scale","scolor","Colors","getLevelColor","xmin","xmax","beginPath","lineWidth","strokeStyle","moveTo","lineTo","stroke","drawData","ymin","ymax","zmin","zmax","lev","Threshold","getLevel","col","Math","dx","dz","strokeRect","drawMarker","updateCanvas","item","props","colvalues","index","cnv","refs","getContext","clearRect","clen","step","ii","console","log","tot","Utils","cntDocs","JSON","stringify","CanvasGraphComponent","classes","onclick","title","other","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    canvas: {\n\twidth:\"100%\",\n\theight:\"100%\",\n\toverflow:\"hidden\",\n    },\n    pointer: {\n\tcursor:\"pointer\"\n    },\n    nopointer: {\n    },\n    div :{},\n});\nfunction drawThresholds(state,elements,colkey,colvalue,range,plan,level,ctx,height,offset,dwidth) {\n    //console.log(\"Canvas:\",xmin,dx);\n    var elen=elements.length;\n    var maxlev=-1;\n    var minlev=0;\n    var min=range[0]\n    var max=range[1];\n    var ee;\n    // determine cnt, number of elements for this colvalue\n    var cnt=0;\n    for (ee=0;ee<elen;ee++) {   // loop over elements\n\tvar el=elements[ee];\n\tvar docs=el.docs;\n\tvar dlen=docs.length;\n\tfor (var jj=0;jj<dlen;jj++) {   // loop over segments in each element\n\t    var d=docs[jj];\n\t    var thr=d._thr;\n\t    if (colvalue===\"\" || d[colkey]  === colvalue) {\n\t\tvar vals; // array of thresholds\n\t\tif (thr.min !== undefined && thr.val !== undefined) {\n\t\t    vals=thr.min;\n\t\t}\n\t\tif (thr.max !== undefined && thr.val !== undefined) {\n\t\t    vals=thr.max;\n\t\t}\n\t\tif (vals !== undefined) {\n\t\t    var vlen=vals.length;\n\t\t    for (var ll=0;ll<vlen;ll++) {\n\t\t\tvar tyval=vals[ll];\n\t\t\tvar tzval=state.Show.scale(tyval,min,max,height,0);\n\t\t\tvar scolor=undefined;\n\t\t\tif (ll === level) {\n\t\t\t    scolor='black';\n\t\t\t} else {\n\t\t\t    scolor=state.Colors.getLevelColor(ll);\n\t\t\t};\n\t\t\tvar xmin=offset+cnt*dwidth;\n\t\t\tvar xmax=offset+(cnt+1)*dwidth;\n\t\t\tctx.beginPath();\n\t\t\tctx.lineWidth=1;\n\t\t\tif (scolor !== undefined) {ctx.strokeStyle=scolor;}\n\t\t\tctx.moveTo(xmin,tzval);\n\t\t\tctx.lineTo(xmax,tzval);\n\t\t\tctx.stroke();\n\t\t\t//console.log(\"Stroke color:\",scolor,ll,tzval,cnv.width);\n\t\t    }\n\t\t}\n\t\tcnt=cnt+1;\n\t    };\n\t};\n    };\n};\nfunction drawData(state,elements,colkey,colvalue,range,plan,level,ctx,height,offset,dwidth) {\n    //console.log(\"Canvas:\",xmin,dx);\n    var elen=elements.length;\n    var maxlev=-1;\n    var minlev=0;\n    var min=range[0]\n    var max=range[1];\n    var ee;\n    // determine cnt, number of elements for this colvalue\n    var cnt=0;\n    for (ee=0;ee<elen;ee++) {   // loop over elements\n\tvar el=elements[ee];\n\tvar docs=el.docs;\n\tvar dlen=docs.length;\n\tfor (var jj=0;jj<dlen;jj++) {   // loop over segments in each element\n\t    var d=docs[jj];\n\t    var thr=d._thr;\n\t    if (colvalue===\"\" || d[colkey]  === colvalue) {\n\t\tvar vals;\n\t\t//console.log(\"Making canvas:\",ii,colvalues[ii],color,JSON.stringify(d),\n\t\t//\t    \" Thr=\",JSON.stringify(t),width,height,JSON.stringify(range));\n\t\t//console.log(\"CanvasGraph:\",ii,jj,d.dtg,color,el.maxlev,JSON.stringify(t));\n\t\tvar min=range[0]\n\t\tvar max=range[1];\n\t\tvar ymin=min;\n\t\tif (thr.min !== undefined && thr.val !== undefined) {\n\t\t    ymin=thr.val\n\t\t}\n\t\tvar ymax=max;\n\t\tif (thr.max !== undefined && thr.val !== undefined) {\n\t\t    ymax=thr.val;\n\t\t}\n\t\tvar xmin=offset+cnt*dwidth;\n\t\tvar xmax=offset+(cnt+1)*dwidth;\n\t\tvar zmin=state.Show.scale(ymin,min,max,height,0);\n\t\tvar zmax=state.Show.scale(ymax,min,max,height,0);\n\t\t//console.log(\"Fill:\",xmin,xmax,zmin,zmax,ymin,ymax,min,max,height);\n\t\t//console.log(\"Fill:\",xmin,xmax,zmin,(zmax-zmin),height,color);\n\t\t//ctx.fillStyle=\"cornflowerblue\";\n                var lev=state.Threshold.getLevel(state,d);\n                var col=state.Colors.getLevelColor(lev);\n\t\tif (col !== undefined) {\n\t\t    if (d.maxlev === undefined ||d.maxlev === undefined) {\n\t\t\tminlev=Math.min(minlev,-2);\n\t\t    } else {\n\t\t\tmaxlev=Math.max(maxlev,d.maxlev);\n\t\t\tminlev=Math.min(minlev,d.minlev);\n\t\t    };\n\t\t    var dx=Math.max(1,xmax-xmin);\n\t\t    var dz=zmax-zmin;\n\t\t    ctx.strokeStyle='black';\n\t\t    ctx.strokeRect(xmin,zmin,dx,dz);\n\t\t}\n\t\tcnt=cnt+1;\n\t    }\n\t}\n    };\n    if (minlev < 0) {\n\treturn minlev;\n    } else {\n\treturn maxlev;\n    }\n};\nfunction drawMarker(state,plan,level,ctx,height,xmin,xmax) {\n    ctx.strokeStyle='blue';\n    ctx.beginPath();\n    ctx.moveTo(xmin,0);\n    ctx.lineTo(xmax,height);\n    ctx.moveTo(xmax,0);\n    ctx.lineTo(xmin,height);\n    ctx.strokeRect(xmin,0,xmax,height);\n    ctx.stroke();\n};\nfunction updateCanvas(item) {\n    const {state,elements,colkey,colvalues,index,range,plan,level} = item.props;\n    const cnv=item.refs.canvas;        // canvas\n    const ctx = cnv.getContext('2d');  // context\n    //console.log(\"Canvas:\",cnv.width,cnv.height);\n    ctx.clearRect(0, 0, cnv.width, cnv.height);\n    var elen=elements.length;\n    var clen=1; if (colvalues !== undefined) {clen=colvalues.length;}; // number of columns\n    const step=plan.step;\n    var height = cnv.height;\n    var width = cnv.width/Math.max(1,step); // width of graph segment\n    if (range !== undefined) {\n\t// loop over column segments...\n\tfor (var ii=index;ii<Math.min(index+step,clen);ii++) { // loop over segments\n\t    console.log(\"Looping over segment:\",ii,clen);\n\t    var tot=state.Utils.cntDocs(elements,colkey,colvalues[ii]);\n\t    console.log(\"Canvas:\",ii,index,\" val=\",colvalues[ii],\" tot=\",tot,\" key=\",colkey,JSON.stringify(elements));\n\t    var offset=(ii-index)*width;       // width/10;\n\t    var dwidth=width/Math.max(1,tot);\n\t    drawThresholds(state,elements,colkey,colvalues[ii],range,plan,level,ctx,height,offset,dwidth);\n\t    var lev=drawData(state,elements,colkey,colvalues[ii],range,plan,level,ctx,height,offset,dwidth);\n\t    if (lev>=0) {\n\t\t// data is ok\n\t    } else { // invalid data\n\t\tdrawMarker(state,plan,level,ctx,height,width);\n\t    }\n\t}\n    } else {\n\tdrawMarker(state,plan,level,ctx,height,0,width);\n    }\n};\nclass CanvasGraphComponent extends React.Component {\n    componentDidMount() {\n        updateCanvas(this);\n    }\n    componentDidUpdate() {\n        updateCanvas(this);\n    }\n    render() {\n        const { classes, onclick, title, plan, ...other } = this.props;\n        return (\n\t\t<canvas {...other} className={classes.canvas} classes={classes} onClick={onclick} title={title} \n\t            plan={plan} width={plan.width} height={plan.height} ref=\"canvas\"/>\n        );\n    }\n}\n\n// width={plan.width} height={plan.height}\n\nCanvasGraphComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CanvasGraphComponent);\n"]},"metadata":{},"sourceType":"module"}