{"ast":null,"code":"//console.log(\"Loading NavigateLib.js\");\nfunction Navigate() {\n  this.dropCheck = function (state, ev) {\n    var check;\n    var styp = ev.dataTransfer.getData(state, \"styp\");\n    var skey = ev.dataTransfer.getData(state, \"skey\"); //var sval = ev.dataTransfer.getData(state,\"sval\");\n    //var srel = ev.dataTransfer.getData(state,\"srel\");\n\n    var ttyp = ev.target.getAttribute(state, \"ptyp\");\n    var tkey = ev.target.getAttribute(state, \"pkey\"); //var tval = ev.target.getAttribute(state,\"pval\");\n    //var trel = ev.target.getAttribute(state,\"prel\");\n\n    if (ttyp === state.Path.type.eye.ptyp) {\n      // ******************** E Y E **************\n      if (styp === state.Path.type.path.ptyp) {\n        check = true;\n      } else if (styp === state.Path.type.table.ptyp || styp === state.Path.type.rest.ptyp) {\n        //console.log(\"Value:\",skey,state.Path.keyVal(state,skey));\n        if (state.Path.keyVal(state, skey) !== undefined) {\n          check = true;\n        } else {\n          check = false;\n        }\n      } else if (styp === state.Path.type.trashRest.ptyp) {\n        if (state.Path.keyVal(state, skey) !== undefined) {\n          check = true;\n        } else {\n          check = false;\n        }\n      } else if (styp === state.Path.type.row.ptyp || styp === state.Path.type.col.ptyp || styp === state.Path.type.item.ptyp || styp === state.Path.type.rotate.ptyp) {\n        check = true;\n      } else {\n        check = false;\n      }\n    } else if (ttyp === state.Path.type.trash.ptyp || ttyp === state.Path.type.trashRest.ptyp) {\n      // ******************** T R A S H **************\n      if (styp === state.Path.type.path.ptyp || styp === state.Path.type.eye.ptyp || styp === state.Path.type.table.ptyp || styp === state.Path.type.rest.ptyp || styp === state.Path.type.trash.ptyp || styp === state.Path.type.trashRest.ptyp || styp === state.Path.type.col.ptyp || styp === state.Path.type.row.ptyp || styp === state.Path.type.item.ptyp || styp === state.Path.type.rotate.ptyp) {\n        check = true;\n      } else {\n        check = false;\n      }\n    } else if (ttyp === state.Path.type.path.ptyp) {\n      // ******************** P A T H **************\n      if (styp === state.Path.type.path.ptyp || styp === state.Path.type.eye.ptyp) {\n        check = true;\n      } else if (styp === state.Path.type.table.ptyp || styp === state.Path.type.rest.ptyp) {\n        //console.log(\"Value:\",skey,state.Path.keyVal(state,skey));\n        if (state.Path.keyVal(state, skey) !== undefined) {\n          check = true;\n        } else {\n          check = false;\n        }\n      } else if (styp === state.Path.type.trash.ptyp) {\n        check = true;\n      } else if (styp === state.Path.type.trashRest.ptyp) {\n        if (state.Path.keyVal(state, skey) !== undefined) {\n          check = true;\n        } else {\n          check = false;\n        }\n      } else {\n        check = false;\n      }\n    } else if (ttyp === state.Path.type.table.ptyp || ttyp === state.Path.type.rest.ptyp) {\n      // ******************** T A B L E / R E S T **************\n      if (styp === state.Path.type.path.ptyp || styp === state.Path.type.rest.ptyp || styp === state.Path.type.table.ptyp || styp === state.Path.type.trash.ptyp) {\n        check = true;\n      } else if (styp === state.Path.type.eye.ptyp) {\n        check = state.Path.checkNewPath(state, ttyp, tkey);\n      } else if (styp === state.Path.type.trash.ptyp) {\n        check = true;\n      } else if (styp === state.Path.type.trashRest.ptyp) {\n        check = true;\n      } else {\n        check = false;\n      }\n    } else if (ttyp === state.Path.type.row.ptyp || ttyp === state.Path.type.col.ptyp || ttyp === state.Path.type.item.ptyp) {\n      // ******************** T A B L E **************\n      if (styp === state.Path.type.eye.ptyp || styp === state.Path.type.trash.ptyp) {\n        check = true;\n      } else if (styp === state.Path.type.trash.ptyp) {\n        check = true;\n      } else if (styp === state.Path.type.rotate.ptyp) {\n        check = true;\n      } else if (styp === ttyp) {\n        check = true;\n      } else if (styp === state.Path.type.row.ptyp && ttyp === state.Path.type.col.ptyp) {\n        check = true;\n      } else if (ttyp === state.Path.type.row.ptyp && styp === state.Path.type.col.ptyp) {\n        check = true;\n      } else {\n        check = false;\n      }\n    } else if (ttyp === state.Path.type.rotate.ptyp) {\n      // ******************** R O T A T E **************\n      if (styp === state.Path.type.col.ptyp) {\n        check = true;\n      } else {\n        check = false;\n      }\n    } else {\n      check = false;\n    } //console.log(\"Checking  styp=\",styp,\"  ttyp=\",ttyp,\" check=\",check);\n\n\n    if (check) {\n      ev.preventDefault(); // this.drop check\n    }\n  };\n\n  this.drop = function (state, ev) {\n    ev.preventDefault();\n    state.Html.setLog(state, \"Processing\");\n    var styp = ev.dataTransfer.getData(state, \"styp\");\n    var skey = ev.dataTransfer.getData(state, \"skey\");\n    var sval = ev.dataTransfer.getData(state, \"sval\");\n    var srel = ev.dataTransfer.getData(state, \"srel\");\n    var ttyp = ev.target.getAttribute(state, \"ptyp\");\n    var tkey = ev.target.getAttribute(state, \"pkey\");\n    var tval = ev.target.getAttribute(state, \"pval\");\n    var trel = ev.target.getAttribute(state, \"prel\");\n    var reload = false; // matrix changed?\n\n    if (ttyp === state.Path.type.eye.ptyp) {\n      // ************ -> E Y E **************\n      if (styp === state.Path.type.path.ptyp) {\n        state.Path.moveKey(state, \"path\", skey, \"other\");\n      } else if (styp === state.Path.type.table.ptyp) {\n        reload = state.Path.moveKey(state, \"other\", skey, \"path\");\n      } else if (styp === state.Path.type.rest.ptyp) {\n        reload = state.Path.moveKey(state, \"other\", skey, \"path\");\n      } else if (styp === state.Path.type.trashRest.ptyp) {\n        state.Path.moveKey(state, \"trash\", skey, \"trash\", 0);\n      } else if (styp === state.Path.type.row.ptyp || styp === state.Path.type.col.ptyp) {} else if (styp === state.Path.type.item.ptyp) {} else if (styp === state.Path.type.rotate.ptyp) {}\n    } else if (ttyp === state.Path.type.trash.ptyp) {\n      // ************ -> T R A S H **************\n      var tin = 0; // insert position\n\n      if (styp === state.Path.type.path.ptyp) {\n        reload = state.Path.moveKey(state, \"path\", skey, \"trash\", tin);\n      } else if (styp === state.Path.type.eye.ptyp) {} else if (styp === state.Path.type.table.ptyp) {\n        reload = state.Path.moveKey(state, \"other\", skey, \"trash\", tin);\n      } else if (styp === state.Path.type.rest.ptyp) {\n        state.Path.moveKey(state, \"other\", skey, \"trash\", tin);\n      } else if (styp === state.Path.type.trashRest.ptyp) {\n        if (state.Path.keyVal(state, skey) !== undefined) {\n          state.Path.select.val[skey] = \"\";\n          state.Path.select.where[skey] = \"\";\n          state.Path.select.cnt[skey] = 0;\n        } else {\n          reload = state.Path.moveKey(state, \"trash\", skey, \"trash\", tin);\n        }\n      } else if (styp === state.Path.type.col.ptyp || styp === state.Path.type.row.ptyp) {\n        // col/row -> trash\n        if (state.Path.trash.values[skey] === undefined) {\n          state.Path.trash.values[skey] = [];\n        }\n\n        ;\n        state.Path.trash.values[skey].push(sval); //console.log(\"Trashed:\",skey,sval)\n\n        reload = true;\n      } else if (styp === state.Path.type.item.ptyp) {\n        // trash -> item\n        state.Path.trash.level = sval; //console.log(\"Trashlevel:\",state.Path.trash.level);\n\n        reload = true;\n      } else if (styp === state.Path.type.rotate.ptyp) {\n        state.Layout.rotate = {};\n        reload = true;\n      }\n    } else if (ttyp === state.Path.type.trashRest.ptyp) {\n      // ************ -> T R A S H R E S T **************\n      var tin = state.Path.keys.trash.indexOf(tkey);\n\n      if (styp === state.Path.type.path.ptyp) {\n        reload = state.Path.moveKey(state, \"path\", skey, \"trash\", tin + 1);\n      } else if (styp === state.Path.type.eye.ptyp) {} else if (styp === state.Path.type.table.ptyp) {\n        reload = state.Path.moveTableKey(state, skey, \"trash\", tin + 1);\n      } else if (styp === state.Path.type.rest.ptyp) {\n        state.Path.moveKey(state, \"other\", skey, \"trash\", tin + 1);\n      } else if (styp === state.Path.type.trash.ptyp) {\n        state.Path.moveAllFirst(state, \"trash\", tin + 1);\n      } else if (styp === state.Path.type.trashRest.ptyp) {\n        state.Path.moveKey(state, \"trash\", skey, \"trash\", tin);\n      } else if (styp === state.Path.type.col.ptyp || styp === state.Path.type.row.ptyp) {\n        // col/row -> trash\n        if (state.Path.trash.values[skey] === undefined) {\n          state.Path.trash.values[skey] = [];\n        }\n\n        ;\n        state.Path.trash.values[skey] = state.Path.trash.values[skey].concat(state, sval); //console.log(\"Trashed:\",skey,sval)\n\n        reload = true;\n      } else if (styp === state.Path.type.item.ptyp) {\n        // trash -> item\n        state.Path.trash.level = sval; //console.log(\"Trashlevel:\",state.Path.trash.level);\n\n        reload = true;\n      } else if (styp === state.Path.type.rotate.ptyp) {}\n    } else if (ttyp === state.Path.type.path.ptyp) {\n      // ************ -> P A T H **************\n      var tid = state.Path.keys.path.indexOf(tkey);\n\n      if (styp === state.Path.type.path.ptyp) {\n        state.Path.moveKey(state, \"path\", skey, \"path\", tid);\n      } else if (styp === state.Path.type.eye.ptyp) {\n        reload = state.Path.moveAllKey(state, \"path\", skey, \"other\", 0);\n      } else if (styp === state.Path.type.table.ptyp) {\n        if (state.Path.keyVal(state, skey) !== undefined) {\n          // check if value is set\n          reload = state.Path.moveKey(state, \"other\", skey, \"path\", tid);\n        }\n      } else if (styp === state.Path.type.rest.ptyp) {\n        if (state.Path.keyVal(state, skey) !== undefined) {\n          // check if value is set\n          reload = state.Path.moveKey(state, \"other\", skey, \"path\", tid);\n        }\n      } else if (styp === state.Path.type.trash.ptyp) {\n        if (state.Path.keyVal(state, skey) !== undefined) {\n          // check if value is set\n          reload = state.Path.moveKey(state, \"trash\", skey, \"path\", tid);\n        }\n      }\n    } else if (ttyp === state.Path.type.table.ptyp) {\n      // ************ -> T A B L E **************\n      if (styp === state.Path.type.table.ptyp) {\n        // swap positions\n        reload = state.Path.swapTableKey(state, skey, tkey);\n      } else {\n        if (styp === state.Path.type.path.ptyp) {\n          reload = state.Path.moveKey2Table(state, \"path\", skey, tkey);\n        } else if (styp === state.Path.type.eye.ptyp) {\n          if (state.Path.checkNewPath(state, ttyp, tkey)) {//state.path.makeNewPath(state,typ,tid+1);\n            //reload=true;  // matrix has changed...\n          }\n        } else if (styp === state.Path.type.rest.ptyp) {\n          reload = state.Path.moveKey2Table(state, \"other\", skey, tkey);\n        } else if (styp === state.Path.type.trash.ptyp) {\n          reload = state.Path.moveTrash2Table(state, tkey);\n        } else if (styp === state.Path.type.trashRest.ptyp) {\n          reload = state.Path.moveKey2Table(state, \"trash\", skey, tkey);\n        } else if (styp === state.Path.type.trash.ptyp) {\n          state.Path.moveTrash(state, \"other\", tin + 1);\n        } else if (styp === state.Path.type.trashRest.ptyp) {\n          reload = state.Path.moveKey(state, \"trash\", skey, \"other\", tin + 1);\n        }\n      }\n    } else if (ttyp === state.Path.type.rest.ptyp) {\n      // ************ -> R E S T **************\t\n      var tid = state.Path.other.rest.indexOf(tkey);\n      var tin = state.Path.keys.other.indexOf(tkey);\n\n      if (styp === state.Path.type.path.ptyp) {\n        reload = state.Path.moveKey(state, \"path\", skey, \"other\", tin);\n      } else if (styp === state.Path.type.eye.ptyp) {\n        if (state.Path.checkNewPath(state, ttyp, tkey)) {//state.path.makeNewPath(state,typ,tid+1);\n          //reload=true;  // matrix has changed...\n        }\n      } else if (styp === state.Path.type.table.ptyp) {\n        reload = state.Path.moveTableKey(state, skey, \"other\", tin - 1); // shifts when table-key is removed...\n      } else if (styp === state.Path.type.rest.ptyp) {\n        state.Path.moveKey(state, \"other\", skey, \"other\", tin);\n      }\n    } else if (ttyp === state.Path.type.row.ptyp || // ************ -> R O W / C O L **************\n    ttyp === state.Path.type.col.ptyp) {\n      if (styp === state.Path.type.eye.ptyp) {\n        // eye -> col/row\n        delete state.Path.order[tkey];\n        reload = true;\n      } else if (styp === state.Path.type.trash.ptyp) {\n        // trash -> col/row\n        //delete state.Path.order[tkey];\n        state.Path.trash.values[tkey] = [];\n        reload = true;\n      } else if (styp === ttyp) {\n        // col/row -> col/row\n        if (state.Path.order === undefined) {\n          state.Path.order = {};\n        }\n\n        ;\n\n        if (state.Path.order[skey] === undefined) {\n          //console.log(\"Copying:\",JSON.stringify(state.Matrix.values[skey]));\n          state.Path.order[skey] = state.Utils.cp(this.values[skey]);\n        }\n\n        ;\n\n        if ((state, srel === \"first\" && trel === \"last\") || srel === \"last\" && trel === \"first\") {\n          state.Utils.invertArray(state.Path.order[skey]);\n\n          if (state.Path.order[skey][0] < state.Path.order[skey][Math.min(state.Path.order[skey].length, 1)]) {\n            if (state.Database.keyCnt[skey].num === \"num\") {\n              state.Database.keyCnt[skey].order = state.Database.nasc;\n            } else {\n              state.Database.keyCnt[skey].order = state.Database.casc;\n            }\n          } else {\n            if (state.Database.keyCnt[skey].num === \"num\") {\n              state.Database.keyCnt[skey].order = state.Database.ndes;\n            } else {\n              state.Database.keyCnt[skey].order = state.Database.cdes;\n            }\n          } //console.log(\"Sorting\",skey,\":\",state.Database.keyCnt[skey].order);\n\n        } else {\n          state.Utils.moveTo(state.Path.order[skey], sval, tval); //console.log(\"Order:\",JSON.stringify(state.Path.order[skey]),skey,sval,tval);\n        }\n\n        reload = true;\n      } else if (styp === state.Path.type.rotate.ptyp) {\n        console.log(\"Rotating \", tkey);\n\n        if (state.Layout.rotate === undefined) {\n          state.Layout.rotate = {};\n        }\n\n        ;\n\n        if (state.Layout.rotate || [tkey] === undefined || state.Layout.rotate || [tkey] === \"\") {\n          state.Layout.rotate[tkey] = 'rotate';\n        } else {\n          state.Layout.rotate[tkey] = \"\";\n        }\n\n        reload = true;\n      } else if (styp === state.Path.type.row.ptyp && ttyp === state.Path.type.col.ptyp) {\n        reload = state.Layout.changePriority(state, skey, tkey);\n      } else if (ttyp === state.Path.type.row.ptyp && styp === state.Path.type.col.ptyp) {\n        reload = state.Layout.changePriority(state, skey, tkey);\n      }\n    } else if (ttyp === state.Path.type.item.ptyp) {\n      // ************ -> I T E M **************\n      if (styp === state.Path.type.trash.ptyp) {\n        // trash -> item\n        state.Path.trash.level = undefined;\n        console.log(\"Trashlevel:\", state.Path.trash.level);\n      }\n    } else if (ttyp === state.Path.type.rotate.ptyp) {\n      // ************ -> R O T **************\n      if (styp === state.Path.type.col.ptyp) {\n        // col/row -> trash\n        if (state.Layout.rotate === undefined) {\n          state.Layout.rotate = {};\n        }\n\n        ;\n\n        if (state.Layout.rotate[skey] === undefined || state.Layout.rotate[skey] === \"\") {\n          state.Layout.rotate[skey] = 'rotate';\n        } else {\n          state.Layout.rotate[skey] = \"\";\n        }\n\n        reload = true;\n      }\n    } else {\n      console.log(\"Unknown type:\", ttyp, styp);\n    }\n\n    state.Show.showAll(state, reload);\n    state.Html.setLog(state);\n  };\n\n  this.dragStart = function (state, ev) {\n    var styp = ev.target.getAttribute(state, \"ptyp\");\n    var skey = ev.target.getAttribute(state, \"pkey\");\n    var sval = ev.target.getAttribute(state, \"pval\");\n    var srel = ev.target.getAttribute(state, \"prel\"); // // mark all possible destinations...\n    //if (styp  === state.Path.type.path.ptyp) {\n    //state.Colors.setPathBorderColor(state,state.Colors.colors.bo);\n    //};\n\n    ev.dataTransfer.setData(state, \"styp\", styp);\n    ev.dataTransfer.setData(state, \"skey\", skey);\n    ev.dataTransfer.setData(state, \"sval\", sval);\n    ev.dataTransfer.setData(state, \"srel\", srel);\n  };\n\n  this.dragEnd = function (state, ev) {\n    var styp = ev.dataTransfer.getData(state, \"styp\");\n    var sey = ev.dataTransfer.getData(state, \"sey\"); //console.log(\"this.Dropped.\");\n    // // reset destination marks to default...\n    //if (styp  === \"path\" || styp  === \"trash\"){\n    //state.Colors.setPathBorderColor(state,state.Colors.colors.bg);\n    //}\n  };\n\n  this.onClickPath = function (state, ttyp, tid) {\n    var reload = false; // matrix changed?\n\n    if (ttyp === \"path\") {\n      // path-> other\n      var len = state.Path.keys.path.length;\n\n      for (var ii = len - 1; ii >= tid; ii--) {\n        var tkey = state.Path.keys.path.splice(ii, 1); // remove from path\n\n        console.log(\"ClickPath:\", JSON.stringify(tkey[0]), JSON.stringify(tkey[0].substring(state, 0, 1)));\n\n        if (tkey[0].substring(state, 0, 1) === \"_\") {\n          console.log(\"Omitting internal variable:\", tkey);\n        } else {\n          if (state.Utils.missing(state.Path.keys.other, tkey)) {\n            state.Path.keys.other = state.Path.keys.other.concat(state, tkey); // last position\n          }\n\n          ;\n\n          if (state.Layout.trash[tkey] === undefined) {\n            state.Layout.trash[tkey] = [];\n          }\n\n          ;\n          var trash = state.Layout.trash[tkey];\n          state.Path.moveKeys(state, \"trash\", trash, \"other\");\n\n          if (state.Layout.order[tkey] === undefined) {\n            state.Layout.order[tkey] = [];\n          }\n\n          ;\n          var order = state.Layout.order[tkey]; //console.log(\"*** Order:\",JSON.stringify(order));\n        }\n\n        state.Path.makeOrder(state, \"other\", order);\n      } //console.log(\"###Result:\",JSON.stringify(state.Path.keys.other));\n\n\n      reload = true; //console.log(\"Onclick other-all:\",JSON.stringify(setup));\n    } else {\n      // other -> path\n      if (ttyp === \"table\") {\n        // table -> path\n        var tkey = state.Path.other.table[tid];\n        var tin = state.Path.keys.other.indexOf(tkey); //console.log(\"Table-click:\",tid,tkey,tin,JSON.stringify(state.Path.keys.other));\n\n        if (tid === state.Path.other.table.length - 1 || // last element\n        state.Path.other.rest.length === 0) {\n          // no remaining elements\n          var src = state.Path.keys.other.splice(tin, 1); // remove from other\n\n          if (state.Utils.missing(state.Path.keys.path, src) && state.Path.keyVal(state, tkey) !== undefined) {\n            // check if value is set\n            state.Path.keys.path = state.Path.keys.path.concat(state, src); // last position\n          } else if (state.Utils.missing(state.Path.keys.trash, src)) {\n            state.Utils.spliceArray(state.Path.keys.trash, 0, 0, src); // last position\n          }\n        } else {\n          // move first element\n          var tkey2 = state.Path.other.table[1]; // get last element\n\n          var src = state.Path.keys.other.splice(tin, 1); // remove first element from path\n\n          if (state.Utils.missing(state.Path.keys.path, src) && state.Path.keyVal(state, tkey) !== undefined) {\n            // check if value is set\n            state.Path.keys.path = state.Path.keys.path.concat(state, src); // last position\n          } else if (state.Utils.missing(state.Path.keys.trash, src)) {\n            state.Utils.spliceArray(state.Path.keys.trash, 0, 0, src); // last position\n          }\n\n          ; // keep second element\n\n          var tin2 = state.Path.keys.other.indexOf(tkey2);\n          var src2 = state.Path.keys.other.splice(tin2, 1); // remove from path\n\n          if (state.Utils.missing(state.Path.keys.other, src2)) {\n            state.Utils.spliceArray(state.Path.keys.other, 1, 0, src2);\n          } //console.log(\"Kept:\",tin,tkey,JSON.stringify(state.Path.keys.other));\n\n        }\n\n        reload = true;\n      } else if (ttyp === \"rest\") {\n        // rest -> path\n        var tkey = state.Path.other.rest[tid];\n        var tin = state.Path.keys.other.indexOf(tkey);\n\n        if (state.Path.keyVal(state, tkey) !== undefined) {\n          // check if value is set\n          var src = state.Path.keys.other.splice(tin, 1); // remove from path\n\n          if (state.Utils.missing(state.Path.keys.path, src)) {\n            state.Path.keys.path = state.Path.keys.path.concat(state, src); // last position\n          } else if (state.Utils.missing(state.Path.keys.trash, src)) {\n            state.Utils.spliceArray(state.Path.keys.trash, 0, 0, src); // last position\n          }\n\n          reload = true;\n        } else {\n          var src = state.Path.keys.other.splice(tin, 1); // remove from path\n\n          if (state.Utils.missing(state.Path.keys.trash, src)) {\n            state.Utils.spliceArray(state.Path.keys.trash, 0, 0, src); // last position\n          }\n        }\n      } else if (ttyp === \"trash\") {\n        // trash -> path\n        var tkey = state.Path.trash.rest[tid];\n\n        if (state.Path.keyVal(state, tkey) === undefined || !state.Utils.missing(state.Path.keys.path, tkey)) {\n          // no value is set\n          var tin = state.Path.keys.trash.indexOf(tkey);\n          var src = state.Path.keys.trash.splice(tin, 1); // remove from path\n\n          if (state.Utils.missing(state.Path.keys.other, src)) {\n            state.Path.keys.other = state.Path.keys.other.concat(state, src); // last position\n          } //console.log(\"Restored:\",JSON.stringify(state.Path.keys.other));\n\n\n          reload = state.Path.other.table.length < 2;\n        } else {\n          var tin = state.Path.keys.trash.indexOf(tkey);\n          var src = state.Path.keys.trash.splice(tin, 1); // remove from path\n\n          if (state.Utils.missing(state.Path.keys.path, src)) {\n            state.Path.keys.path = state.Path.keys.path.concat(state, src); // last position\n          }\n\n          ;\n          reload = true;\n        }\n      }\n    }\n\n    state.Show.showAll(state, reload);\n  };\n}\n\n;\nexport default Navigate;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/system/NavigateLib.js"],"names":["Navigate","dropCheck","state","ev","check","styp","dataTransfer","getData","skey","ttyp","target","getAttribute","tkey","Path","type","eye","ptyp","path","table","rest","keyVal","undefined","trashRest","row","col","item","rotate","trash","checkNewPath","preventDefault","drop","Html","setLog","sval","srel","tval","trel","reload","moveKey","tin","select","val","where","cnt","values","push","level","Layout","keys","indexOf","moveTableKey","moveAllFirst","concat","tid","moveAllKey","swapTableKey","moveKey2Table","moveTrash2Table","moveTrash","other","order","Utils","cp","invertArray","Math","min","length","Database","keyCnt","num","nasc","casc","ndes","cdes","moveTo","console","log","changePriority","Show","showAll","dragStart","setData","dragEnd","sey","onClickPath","len","ii","splice","JSON","stringify","substring","missing","moveKeys","makeOrder","src","spliceArray","tkey2","tin2","src2"],"mappings":"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","sourcesContent":["//console.log(\"Loading NavigateLib.js\");\n    \nfunction Navigate() {\n    this.dropCheck=function(state,ev) {\n\tvar check;\n\tvar styp = ev.dataTransfer.getData(state,\"styp\");\n\tvar skey = ev.dataTransfer.getData(state,\"skey\");\n\t//var sval = ev.dataTransfer.getData(state,\"sval\");\n\t//var srel = ev.dataTransfer.getData(state,\"srel\");\n\tvar ttyp = ev.target.getAttribute(state,\"ptyp\");\n\tvar tkey = ev.target.getAttribute(state,\"pkey\");\n\t//var tval = ev.target.getAttribute(state,\"pval\");\n\t//var trel = ev.target.getAttribute(state,\"prel\");\n\tif (ttyp  === state.Path.type.eye.ptyp) { // ******************** E Y E **************\n\t    if (styp  === state.Path.type.path.ptyp) {\n\t\tcheck=true;\n\t    } else if (styp  === state.Path.type.table.ptyp ||\n\t\t       styp  === state.Path.type.rest.ptyp) {\n\t\t//console.log(\"Value:\",skey,state.Path.keyVal(state,skey));\n\t\tif (state.Path.keyVal(state,skey) !== undefined) {\n\t\t    check=true;\n\t\t} else {\n\t\t    check=false;\n\t\t}\n\t    } else if (styp  === state.Path.type.trashRest.ptyp ) {\n\t\tif (state.Path.keyVal(state,skey) !== undefined) {\n\t\t    check=true;\n\t\t} else {\n\t\t    check=false;\n\t\t}\n\t    } else if (styp  === state.Path.type.row.ptyp ||\n\t\t       styp  === state.Path.type.col.ptyp ||\n\t\t       styp  === state.Path.type.item.ptyp ||\n\t\t       styp  === state.Path.type.rotate.ptyp) {\n\t\tcheck=true;\n\t    } else {\n\t\tcheck=false;\n\t    }\n\t} else if (ttyp  === state.Path.type.trash.ptyp ||\n\t\t   ttyp  === state.Path.type.trashRest.ptyp) {  // ******************** T R A S H **************\n\t\tif (styp  === state.Path.type.path.ptyp  ||\n\t\t    styp  === state.Path.type.eye.ptyp   ||\n\t\t    styp  === state.Path.type.table.ptyp ||\n\t\t    styp  === state.Path.type.rest.ptyp ||\n\t\t    styp  === state.Path.type.trash.ptyp ||\n\t\t    styp  === state.Path.type.trashRest.ptyp ||\n\t\t    styp  === state.Path.type.col.ptyp ||\n\t\t    styp  === state.Path.type.row.ptyp ||\n\t\t    styp  === state.Path.type.item.ptyp ||\n\t\t    styp  === state.Path.type.rotate.ptyp) {\n\t\t    check=true;\n\t\t} else {\n\t\t    check=false;\n\t\t}\n\t} else if (ttyp  === state.Path.type.path.ptyp) {  // ******************** P A T H **************\n\t    if (styp  === state.Path.type.path.ptyp||\n\t\tstyp  === state.Path.type.eye.ptyp) {\n\t\tcheck=true;\n\t    } else if (styp  === state.Path.type.table.ptyp ||\n\t\t       styp  === state.Path.type.rest.ptyp) {\n\t\t//console.log(\"Value:\",skey,state.Path.keyVal(state,skey));\n\t\tif (state.Path.keyVal(state,skey) !== undefined) {\n\t\t    check=true;\n\t\t} else {\n\t\t    check=false;\n\t\t}\n\t    } else if (styp  === state.Path.type.trash.ptyp ) {\n\t\tcheck=true;\n\t    } else if (styp  === state.Path.type.trashRest.ptyp ) {\n\t\tif (state.Path.keyVal(state,skey) !== undefined) {\n\t\t    check=true;\n\t\t} else {\n\t\t    check=false;\n\t\t}\n\t    } else {\n\t\tcheck=false;\n\t    }\n\t} else if (ttyp  === state.Path.type.table.ptyp ||\n\t\t   ttyp  === state.Path.type.rest.ptyp) {  // ******************** T A B L E / R E S T **************\n\t\tif (styp  === state.Path.type.path.ptyp||\n\t\t    styp  === state.Path.type.rest.ptyp||\n\t\t    styp  === state.Path.type.table.ptyp||\n\t\t    styp  === state.Path.type.trash.ptyp) {\n\t\t    check=true;\n\t\t} else if (styp  === state.Path.type.eye.ptyp) {\n\t\t    check=state.Path.checkNewPath(state,ttyp,tkey);\n\t\t} else if (styp  === state.Path.type.trash.ptyp ) {\n\t\t    check=true;\n\t\t} else if (styp  === state.Path.type.trashRest.ptyp ) {\n\t\t    check=true;\n\t\t} else {\n\t\t    check=false;\n\t\t}\n\t} else if (ttyp  === state.Path.type.row.ptyp||\n\t\t   ttyp  === state.Path.type.col.ptyp||\n\t\t   ttyp  === state.Path.type.item.ptyp) {  // ******************** T A B L E **************\n\t\tif (styp  === state.Path.type.eye.ptyp ||\n\t\t    styp  === state.Path.type.trash.ptyp) {\n\t\t    check=true;\n\t\t} else if (styp  === state.Path.type.trash.ptyp ) {\n\t\t    check=true;\n\t\t} else if (styp  === state.Path.type.rotate.ptyp ) {\n\t\t    check=true;\n\t\t} else if (styp  === ttyp) {\n\t\t    check=true;\n\t\t} else if (styp  ===  state.Path.type.row.ptyp && ttyp  ===  state.Path.type.col.ptyp) {\n\t\t    check=true;\n\t\t} else if (ttyp  ===  state.Path.type.row.ptyp && styp  ===  state.Path.type.col.ptyp) {\n\t\t    check=true;\n\t\t} else {\n\t\t    check=false;\n\t\t}\n\t} else if (ttyp  === state.Path.type.rotate.ptyp) {  // ******************** R O T A T E **************\n\t    if (styp  === state.Path.type.col.ptyp) {\n\t\tcheck=true;\n\t    } else {\n\t\tcheck=false;\n\t    }\n\t} else {\n\t    check=false;\n\t}\n\t//console.log(\"Checking  styp=\",styp,\"  ttyp=\",ttyp,\" check=\",check);\n\tif (check) {\n\t    ev.preventDefault(); // this.drop check\n\t}\n    };\n    this.drop=function(state,ev) {\n\tev.preventDefault();\n\tstate.Html.setLog(state,\"Processing\");\n\tvar styp = ev.dataTransfer.getData(state,\"styp\");\n\tvar skey = ev.dataTransfer.getData(state,\"skey\");\n\tvar sval = ev.dataTransfer.getData(state,\"sval\");\n\tvar srel = ev.dataTransfer.getData(state,\"srel\");\n\tvar ttyp = ev.target.getAttribute(state,\"ptyp\");\n\tvar tkey = ev.target.getAttribute(state,\"pkey\");\n\tvar tval = ev.target.getAttribute(state,\"pval\");\n\tvar trel = ev.target.getAttribute(state,\"prel\");\n\tvar reload=false; // matrix changed?\n\tif (ttyp  === state.Path.type.eye.ptyp) { // ************ -> E Y E **************\n\t    if (styp  === state.Path.type.path.ptyp) { \n\t\tstate.Path.moveKey(state,\"path\",skey,\"other\");\n\t    } else if (styp  === state.Path.type.table.ptyp) {\n\t\treload=state.Path.moveKey(state,\"other\",skey,\"path\");\n\t    } else if (styp  === state.Path.type.rest.ptyp) { \n\t\treload=state.Path.moveKey(state,\"other\",skey,\"path\");\n\t    } else if (styp  === state.Path.type.trashRest.ptyp ) {\n\t\tstate.Path.moveKey(state,\"trash\",skey,\"trash\",0);\n\t    } else if (styp  === state.Path.type.row.ptyp ||\n\t\t       styp  === state.Path.type.col.ptyp) {\n\t    } else if (styp  === state.Path.type.item.ptyp) {\n\t    } else if (styp  === state.Path.type.rotate.ptyp) {\n\t    }\n\t} else if (ttyp  === state.Path.type.trash.ptyp) {  // ************ -> T R A S H **************\n\t    var tin=0; // insert position\n\t    if (styp  === state.Path.type.path.ptyp) {\n\t\treload=state.Path.moveKey(state,\"path\",skey,\"trash\",tin);\n\t    } else if (styp  === state.Path.type.eye.ptyp) {\n\t    } else if (styp  === state.Path.type.table.ptyp) {\n\t\treload=state.Path.moveKey(state,\"other\",skey,\"trash\",tin);\n\t    } else if (styp  === state.Path.type.rest.ptyp) {\n\t\tstate.Path.moveKey(state,\"other\",skey,\"trash\",tin);\n\t    } else if (styp  === state.Path.type.trashRest.ptyp) {\n\t\tif (state.Path.keyVal(state,skey) !== undefined) {\n\t\t    state.Path.select.val[skey]=\"\";\n\t\t    state.Path.select.where[skey]=\"\";\n\t\t    state.Path.select.cnt[skey]=0;\n\t\t} else {\n\t\t    reload=state.Path.moveKey(state,\"trash\",skey,\"trash\",tin);\n\t\t}\n\t    } else if (styp  === state.Path.type.col.ptyp ||\n\t\t       styp  === state.Path.type.row.ptyp) { // col/row -> trash\n\t\t    if (state.Path.trash.values[skey]  === undefined) {\n\t\t\tstate.Path.trash.values[skey]=[];\n\t\t    };\n\t\tstate.Path.trash.values[skey].push(sval);\n\t\t//console.log(\"Trashed:\",skey,sval)\n\t\treload=true;\n\t    } else if (styp  === state.Path.type.item.ptyp) { // trash -> item\n\t\tstate.Path.trash.level=sval;\n\t\t//console.log(\"Trashlevel:\",state.Path.trash.level);\n\t\treload=true;\n\t    } else if (styp  === state.Path.type.rotate.ptyp) {\n\t\tstate.Layout.rotate={};\n\t\treload=true;\n\t    }\n\t} else if (ttyp  === state.Path.type.trashRest.ptyp) {// ************ -> T R A S H R E S T **************\n\t    var tin=state.Path.keys.trash.indexOf(tkey);\n\t    if (styp  === state.Path.type.path.ptyp) {\n\t\treload=state.Path.moveKey(state,\"path\",skey,\"trash\",tin+1);\n\t    } else if (styp  === state.Path.type.eye.ptyp) {\n\t    } else if (styp  === state.Path.type.table.ptyp) {\n\t\treload=state.Path.moveTableKey(state,skey,\"trash\",tin+1);\n\t    } else if (styp  === state.Path.type.rest.ptyp) {\n\t\tstate.Path.moveKey(state,\"other\",skey,\"trash\",tin+1);\n\t    } else if (styp  === state.Path.type.trash.ptyp) {\n\t\tstate.Path.moveAllFirst(state,\"trash\",tin+1);\n\t    } else if (styp  === state.Path.type.trashRest.ptyp) {\n\t\tstate.Path.moveKey(state,\"trash\",skey,\"trash\",tin);\n\t    } else if (styp  === state.Path.type.col.ptyp ||\n\t\t       styp  === state.Path.type.row.ptyp) { // col/row -> trash\n\t\t    if (state.Path.trash.values[skey]  === undefined) {state.Path.trash.values[skey]=[];};\n\t\tstate.Path.trash.values[skey]=state.Path.trash.values[skey].concat(state,sval);\n\t\t//console.log(\"Trashed:\",skey,sval)\n\t\treload=true;\n\t    } else if (styp  === state.Path.type.item.ptyp) { // trash -> item\n\t\tstate.Path.trash.level=sval;\n\t\t//console.log(\"Trashlevel:\",state.Path.trash.level);\n\t\treload=true;\n\t    } else if (styp  === state.Path.type.rotate.ptyp) {\n\t    }\n\t} else if (ttyp  === state.Path.type.path.ptyp) {    // ************ -> P A T H **************\n\t    var tid=state.Path.keys.path.indexOf(tkey);\n\t    if (styp  === state.Path.type.path.ptyp) {\n\t\tstate.Path.moveKey(state,\"path\",skey,\"path\",tid);\n\t    } else if (styp  === state.Path.type.eye.ptyp) {\n\t\treload=state.Path.moveAllKey(state,\"path\",skey,\"other\",0);\n\t    } else if (styp  === state.Path.type.table.ptyp) {\n\t\tif (state.Path.keyVal(state,skey) !== undefined) { // check if value is set\n\t\t    reload=state.Path.moveKey(state,\"other\",skey,\"path\",tid);\n\t\t}\n\t    } else if (styp  === state.Path.type.rest.ptyp) {\n\t\tif (state.Path.keyVal(state,skey) !== undefined) { // check if value is set\n\t\t    reload=state.Path.moveKey(state,\"other\",skey,\"path\",tid);\n\t\t}\n\t    } else if (styp  === state.Path.type.trash.ptyp ) {\t\n\t\tif (state.Path.keyVal(state,skey) !== undefined) { // check if value is set\n\t\t    reload=state.Path.moveKey(state,\"trash\",skey,\"path\",tid);\n\t\t}\n\t    }\n\t} else if (ttyp  === state.Path.type.table.ptyp) {// ************ -> T A B L E **************\n\t    if (styp  === state.Path.type.table.ptyp) { // swap positions\n\t\treload=state.Path.swapTableKey(state,skey,tkey);\n\t    } else {\n\t\tif (styp  === state.Path.type.path.ptyp) {\n\t\t    reload=state.Path.moveKey2Table(state,\"path\",skey,tkey);\n\t\t} else if (styp  === state.Path.type.eye.ptyp) {\n\t\t    if (state.Path.checkNewPath(state,ttyp,tkey)) {\n\t\t\t//state.path.makeNewPath(state,typ,tid+1);\n\t\t\t//reload=true;  // matrix has changed...\n\t\t    }\n\t\t} else if (styp  === state.Path.type.rest.ptyp) {\n\t\t    reload=state.Path.moveKey2Table(state,\"other\",skey,tkey);\t\t\n\t\t} else if (styp  === state.Path.type.trash.ptyp) {\n\t\t    reload=state.Path.moveTrash2Table(state,tkey);\t\t\n\t\t} else if (styp  === state.Path.type.trashRest.ptyp) {\n\t\t    reload=state.Path.moveKey2Table(state,\"trash\",skey,tkey);\t\t\n\t\t} else if (styp  === state.Path.type.trash.ptyp) {\n\t\t    state.Path.moveTrash(state,\"other\",tin+1);\n\t\t} else if (styp  === state.Path.type.trashRest.ptyp) {\n\t\t    reload=state.Path.moveKey(state,\"trash\",skey,\"other\",tin+1);\n\t\t}\n\t    }\n\t} else if (ttyp  === state.Path.type.rest.ptyp) { // ************ -> R E S T **************\t\n\t    var tid=state.Path.other.rest.indexOf(tkey);\n\t    var tin=state.Path.keys.other.indexOf(tkey);\n\t    if (styp  === state.Path.type.path.ptyp) {\n\t\treload=state.Path.moveKey(state,\"path\",skey,\"other\",tin);\n\t    } else if (styp  === state.Path.type.eye.ptyp) {\n\t\tif (state.Path.checkNewPath(state,ttyp,tkey)) {\n\t\t    //state.path.makeNewPath(state,typ,tid+1);\n\t\t    //reload=true;  // matrix has changed...\n\t\t}\n\t    } else if (styp  === state.Path.type.table.ptyp) {\n\t\treload=state.Path.moveTableKey(state,skey,\"other\",tin-1); // shifts when table-key is removed...\n\t    } else if (styp  === state.Path.type.rest.ptyp) {\n\t\tstate.Path.moveKey(state,\"other\",skey,\"other\",tin);\n\t    }\n\t} else if (ttyp  === state.Path.type.row.ptyp|| // ************ -> R O W / C O L **************\n\t\t   ttyp  === state.Path.type.col.ptyp) {\n\t    if (styp  === state.Path.type.eye.ptyp) { // eye -> col/row\n\t\tdelete state.Path.order[tkey];\n\t\treload=true;\n\t    } else if (styp  === state.Path.type.trash.ptyp) { // trash -> col/row\n\t\t//delete state.Path.order[tkey];\n\t\tstate.Path.trash.values[tkey]=[];\n\t\treload=true;\n\t    } else if (styp  === ttyp) { // col/row -> col/row\n\t\tif (state.Path.order  === undefined) {state.Path.order={};};\n\t\tif (state.Path.order[skey]  === undefined) {\n\t\t    //console.log(\"Copying:\",JSON.stringify(state.Matrix.values[skey]));\n\t\t    state.Path.order[skey]=state.Utils.cp(this.values[skey]);\n\t\t};\n\t\tif ((state,srel  === \"first\" && trel  === \"last\" ) || \n\t\t    (srel  === \"last\" && trel  === \"first\" )) {\n\t\t    state.Utils.invertArray(state.Path.order[skey]);\n\t\t    if (state.Path.order[skey][0] < state.Path.order[skey][Math.min(state.Path.order[skey].length,1)]) {\n\t\t\tif (state.Database.keyCnt[skey].num === \"num\") {\n\t\t\t    state.Database.keyCnt[skey].order=state.Database.nasc;\n\t\t\t} else {\n\t\t\t    state.Database.keyCnt[skey].order=state.Database.casc;\n\t\t\t}\n\t\t    } else {\n\t\t\tif (state.Database.keyCnt[skey].num === \"num\") {\n\t\t\t    state.Database.keyCnt[skey].order=state.Database.ndes;\n\t\t\t} else {\n\t\t\t    state.Database.keyCnt[skey].order=state.Database.cdes;\n\t\t\t}\n\t\t    }\n\t\t    //console.log(\"Sorting\",skey,\":\",state.Database.keyCnt[skey].order);\n\t\t} else {\n\t\t    state.Utils.moveTo(state.Path.order[skey],sval,tval);\n\t\t    //console.log(\"Order:\",JSON.stringify(state.Path.order[skey]),skey,sval,tval);\n\t\t}\n\t\treload=true;\n\t    } else if (styp  === state.Path.type.rotate.ptyp) {\n\t\tconsole.log(\"Rotating \",tkey);\n\t\tif (state.Layout.rotate  === undefined) {state.Layout.rotate ={};};\n\t\tif (state.Layout.rotate||[tkey]  === undefined || state.Layout.rotate||[tkey]  === \"\") {\n\t\t    state.Layout.rotate[tkey]='rotate';\n\t\t} else {\n\t\t    state.Layout.rotate[tkey]=\"\";\n\t\t}\n\t\treload=true;\n\t    } else if (styp  ===  state.Path.type.row.ptyp && ttyp  ===  state.Path.type.col.ptyp) {\n\t\treload=state.Layout.changePriority(state,skey,tkey);\n\t    } else if (ttyp  ===  state.Path.type.row.ptyp && styp  ===  state.Path.type.col.ptyp) {\n\t\treload=state.Layout.changePriority(state,skey,tkey);\n\t    }\n\t} else if (ttyp  === state.Path.type.item.ptyp) { // ************ -> I T E M **************\n\t    if (styp  === state.Path.type.trash.ptyp) { // trash -> item\n\t\tstate.Path.trash.level=undefined;\n\t\tconsole.log(\"Trashlevel:\",state.Path.trash.level);\n\n\t    }\n\t} else if (ttyp  === state.Path.type.rotate.ptyp) { // ************ -> R O T **************\n\t    if (styp  === state.Path.type.col.ptyp) { // col/row -> trash\n\t\tif (state.Layout.rotate  === undefined) {state.Layout.rotate ={};};\n\t\tif (state.Layout.rotate[skey]  === undefined || state.Layout.rotate[skey]  === \"\") {\n\t\t    state.Layout.rotate[skey]='rotate';\n\t\t} else {\n\t\t    state.Layout.rotate[skey]=\"\";\n\t\t}\n\t\treload=true;\n\t    }\n\t} else {\n\t    console.log(\"Unknown type:\",ttyp,styp);\n\t}\n\tstate.Show.showAll(state,reload);\n\tstate.Html.setLog(state);\n    };\n    this.dragStart=function(state,ev) {\n\tvar styp=ev.target.getAttribute(state,\"ptyp\");\n\tvar skey=ev.target.getAttribute(state,\"pkey\");\n\tvar sval=ev.target.getAttribute(state,\"pval\");\n\tvar srel=ev.target.getAttribute(state,\"prel\");\n\t// // mark all possible destinations...\n\t//if (styp  === state.Path.type.path.ptyp) {\n\t//state.Colors.setPathBorderColor(state,state.Colors.colors.bo);\n\t//};\n\tev.dataTransfer.setData(state,\"styp\",styp);\n\tev.dataTransfer.setData(state,\"skey\",skey);\n\tev.dataTransfer.setData(state,\"sval\",sval);\n\tev.dataTransfer.setData(state,\"srel\",srel);\n    };\n    this.dragEnd=function(state,ev) {\n\tvar styp = ev.dataTransfer.getData(state,\"styp\");\n\tvar sey = ev.dataTransfer.getData(state,\"sey\");\n\t//console.log(\"this.Dropped.\");\n\t// // reset destination marks to default...\n\t//if (styp  === \"path\" || styp  === \"trash\"){\n\t//state.Colors.setPathBorderColor(state,state.Colors.colors.bg);\n\t//}\n    };\n    this.onClickPath=function(state,ttyp,tid) {\n\tvar reload=false; // matrix changed?\n\tif (ttyp  === \"path\") { // path-> other\n\t    var len=state.Path.keys.path.length\n\t    for (var ii = len-1;ii>=tid;ii--) {\n\t\tvar tkey=state.Path.keys.path.splice(ii, 1);    // remove from path\n\t\tconsole.log(\"ClickPath:\",JSON.stringify(tkey[0]),JSON.stringify(tkey[0].substring(state,0,1)));\n\t\tif (tkey[0].substring(state,0,1) === \"_\") {\n\t\t    console.log(\"Omitting internal variable:\",tkey);\n\t\t} else {\n\t\t    if (state.Utils.missing(state.Path.keys.other,tkey)) {\n\t\t\tstate.Path.keys.other=state.Path.keys.other.concat(state,tkey);         // last position\n\t\t    };\n\t\t    if (state.Layout.trash[tkey]  === undefined) {state.Layout.trash[tkey]=[];};\n\t\t    var trash=state.Layout.trash[tkey];\n\t\t    state.Path.moveKeys(state,\"trash\",trash,\"other\");\n\t\t    if (state.Layout.order[tkey]  === undefined) {state.Layout.order[tkey]=[];};\n\t\t    var order=state.Layout.order[tkey];\n\t\t    //console.log(\"*** Order:\",JSON.stringify(order));\n\t\t}\n\t\tstate.Path.makeOrder(state,\"other\",order);\n\t    }\n\t    //console.log(\"###Result:\",JSON.stringify(state.Path.keys.other));\n\t    reload=true;\n\t    //console.log(\"Onclick other-all:\",JSON.stringify(setup));\n\t} else {              // other -> path\n\t    if (ttyp  === \"table\") { // table -> path\n\t\tvar tkey=state.Path.other.table[tid];\n\t\tvar tin=state.Path.keys.other.indexOf(tkey);\n\t\t//console.log(\"Table-click:\",tid,tkey,tin,JSON.stringify(state.Path.keys.other));\n\t\tif (tid  === state.Path.other.table.length-1 || // last element\n\t\t    state.Path.other.rest.length  === 0 ){       // no remaining elements\n\t\t    var src=state.Path.keys.other.splice(tin, 1);    // remove from other\n\t\t    if (state.Utils.missing(state.Path.keys.path,src)&& state.Path.keyVal(state,tkey) !== undefined) { // check if value is set\n\t\t\tstate.Path.keys.path=state.Path.keys.path.concat(state,src);         // last position\n\t\t    } else if (state.Utils.missing(state.Path.keys.trash,src)) {\n\t\t\tstate.Utils.spliceArray(state.Path.keys.trash,0,0,src);         // last position\n\t\t    }\n\t\t} else { // move first element\n\t\t    var tkey2=state.Path.other.table[1];           // get last element\n\t\t    var src=state.Path.keys.other.splice(tin, 1);   // remove first element from path\n\t\t    if (state.Utils.missing(state.Path.keys.path,src) && state.Path.keyVal(state,tkey) !== undefined) { // check if value is set\n\t\t\tstate.Path.keys.path=state.Path.keys.path.concat(state,src);         // last position\n\t\t    } else if (state.Utils.missing(state.Path.keys.trash,src)) {\n\t\t\tstate.Utils.spliceArray(state.Path.keys.trash,0,0,src);         // last position\n\t\t    };\n\t\t    // keep second element\n\t\t    var tin2=state.Path.keys.other.indexOf(tkey2);\n\t\t    var src2=state.Path.keys.other.splice(tin2, 1);    // remove from path\n\t\t    if (state.Utils.missing(state.Path.keys.other,src2)) {\n\t\t\tstate.Utils.spliceArray(state.Path.keys.other,1,0,src2);\n\t\t    }\n\t\t    //console.log(\"Kept:\",tin,tkey,JSON.stringify(state.Path.keys.other));\n\t\t}\n\t\treload=true;\n\t    } else if (ttyp  === \"rest\") {  // rest -> path\n\t\tvar tkey=state.Path.other.rest[tid];\n\t\tvar tin=state.Path.keys.other.indexOf(tkey);\n\t\tif (state.Path.keyVal(state,tkey) !== undefined) { // check if value is set\n\t\t    var src=state.Path.keys.other.splice(tin, 1);    // remove from path\n\t\t    if (state.Utils.missing(state.Path.keys.path,src)) {\n\t\t\tstate.Path.keys.path=state.Path.keys.path.concat(state,src);         // last position\n\t\t    } else if (state.Utils.missing(state.Path.keys.trash,src)) {\n\t\t\tstate.Utils.spliceArray(state.Path.keys.trash,0,0,src);         // last position\n\t\t    }\n\t\t    reload=true;\n\t\t} else {\n\t\t    var src=state.Path.keys.other.splice(tin, 1);    // remove from path\n\t\t    if (state.Utils.missing(state.Path.keys.trash,src)) {\n\t\t\tstate.Utils.spliceArray(state.Path.keys.trash,0,0,src);         // last position\n\t\t    }\n\t\t}\n\t    } else if (ttyp  === \"trash\") { // trash -> path\n\t\tvar tkey=state.Path.trash.rest[tid];\n\t\tif (state.Path.keyVal(state,tkey)  === undefined || !state.Utils.missing(state.Path.keys.path,tkey)) { // no value is set\n\t\t    var tin=state.Path.keys.trash.indexOf(tkey);\n\t\t    var src=state.Path.keys.trash.splice(tin, 1);    // remove from path\n\t\t    if (state.Utils.missing(state.Path.keys.other,src)) {\n\t\t\tstate.Path.keys.other=state.Path.keys.other.concat(state,src);         // last position\n\t\t    }\n\t\t    //console.log(\"Restored:\",JSON.stringify(state.Path.keys.other));\n\t\t    reload=(state.Path.other.table.length<2);\n\t\t} else {\n\t\t    var tin=state.Path.keys.trash.indexOf(tkey);\n\t\t    var src=state.Path.keys.trash.splice(tin, 1);    // remove from path\n\t\t    if (state.Utils.missing(state.Path.keys.path,src)) {\n\t\t\tstate.Path.keys.path=state.Path.keys.path.concat(state,src);         // last position\n\t\t    };\n\t\t    reload=true;\n\t\t}\n\t    }\n\t}\n\tstate.Show.showAll(state,reload);\n    }\n};\nexport default Navigate;\n"]},"metadata":{},"sourceType":"module"}