{"ast":null,"code":"import _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/SeriesCell.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport CanvasGraph from './CanvasGraphComponent'; //\ttextAlign: \"center\",\n\nvar styles = function styles(theme) {\n  return {\n    pointer: {\n      textAlign: \"center\",\n      cursor: \"pointer\",\n      padding: 0,\n      overflow: 'hidden',\n      tableLayout: 'fixed'\n    },\n    nopointer: {\n      textAlign: \"center\",\n      padding: 0,\n      overflow: 'hidden',\n      tableLayout: 'fixed'\n    },\n    div: {\n      overflow: 'hidden',\n      tableLayout: 'fixed'\n    }\n  };\n}; //\tpadding: \"0px\";\n//\ttextAlign: \"center\",\n\n\nfunction SeriesCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      onclick = props.onclick,\n      colwhere = props.colwhere,\n      rowwhere = props.rowwhere,\n      elements = props.elements,\n      plan = props.plan,\n      key = props.key,\n      other = _objectWithoutProperties(props, [\"classes\", \"state\", \"onclick\", \"colwhere\", \"rowwhere\", \"elements\", \"plan\", \"key\"]);\n\n  var cnt = 0;\n  var lev = -1;\n  var elen = elements.length;\n\n  for (var ee = 0; ee < elen; ee++) {\n    cnt = cnt + elements[ee].cnt;\n    lev = Math.max(lev, elements[ee].lev);\n  }\n\n  ;\n  var label = \"\";\n\n  if (cnt > 1) {\n    label = cnt;\n  }\n\n  ;\n  var bgcolor = state.Colors.getLevelColor(lev);\n  var cursor = classes.nopointer;\n\n  if (onclick !== undefined) {\n    cursor = classes.pointer;\n  }\n\n  var title = \"\";\n\n  if (colwhere !== \"\" && rowwhere !== \"\") {\n    title = \"(\" + colwhere + \") AND (\" + rowwhere + \")\";\n  } else if (colwhere !== \"\") {\n    title = colwhere;\n  } else if (rowwhere !== \"\") {\n    title = rowwhere;\n  } // var bgcolor=state.Colors.getLevelColor(lev);\n  // bgcolor={bgcolor} \n  // height={plan.cell}\n  // width={plan.width}\n\n\n  return React.createElement(TableCell, {\n    className: cursor,\n    bgcolor: bgcolor,\n    onClick: onclick,\n    title: title,\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.div,\n    height: plan.cell,\n    width: plan.width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(CanvasGraph, Object.assign({}, other, {\n    className: cursor,\n    cursor: cursor,\n    classes: classes,\n    state: state,\n    onclick: onclick,\n    title: title,\n    elements: elements,\n    level: lev,\n    plan: plan,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))));\n}\n\nSeriesCell.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SeriesCell);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/SeriesCell.js"],"names":["React","PropTypes","withStyles","TableCell","CanvasGraph","styles","theme","pointer","textAlign","cursor","padding","overflow","tableLayout","nopointer","div","SeriesCell","props","classes","state","onclick","colwhere","rowwhere","elements","plan","key","other","cnt","lev","elen","length","ee","Math","max","label","bgcolor","Colors","getLevelColor","undefined","title","cell","width","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell   from '@material-ui/core/TableCell';\nimport CanvasGraph from './CanvasGraphComponent';\n\n//\ttextAlign: \"center\",\nconst styles = theme => ({\n    pointer: {\n\ttextAlign: \"center\",\n\tcursor:\"pointer\",\n\tpadding: 0,\n\toverflow: 'hidden',\n\ttableLayout: 'fixed',\n    },\n    nopointer: {\n\ttextAlign: \"center\",\n\tpadding: 0,\n\toverflow: 'hidden',\n\ttableLayout: 'fixed',\n    },\n    div: {\n\toverflow: 'hidden',\n\ttableLayout: 'fixed',\n    },\n});\n//\tpadding: \"0px\";\n//\ttextAlign: \"center\",\nfunction SeriesCell(props) {\n    const { classes,state,onclick,\n\t    colwhere,rowwhere,\n\t    elements,plan,key,...other } = props;\n    var cnt=0;\n    var lev=-1;\n    var elen=elements.length;\n    for (var ee=0;ee<elen;ee++) {\n        cnt=cnt+elements[ee].cnt;\n        lev=Math.max(lev,elements[ee].lev);\n    }; \n    var label=\"\";\n    if (cnt > 1) {label=cnt;};\n    var bgcolor=state.Colors.getLevelColor(lev);\n    var cursor=classes.nopointer;\n    if (onclick !== undefined) {\n\tcursor=classes.pointer;\n    }\n    var title=\"\";\n    if (colwhere !== \"\" && rowwhere !== \"\") {\n\ttitle=\"(\"+colwhere+\") AND (\"+rowwhere+\")\";\n    } else if (colwhere !== \"\") {\n\ttitle=colwhere;\n    } else if (rowwhere !== \"\") {\n\ttitle=rowwhere;\n    }\n    // var bgcolor=state.Colors.getLevelColor(lev);\n    // bgcolor={bgcolor} \n    // height={plan.cell}\n    // width={plan.width}\n    return(\n\t    <TableCell className={cursor} bgcolor={bgcolor} onClick={onclick} title={title} key={key}>\n\t     <div className={classes.div} height={plan.cell} width={plan.width}>\n  \t       <CanvasGraph {...other} className={cursor} cursor={cursor} classes={classes} state={state} \n\t          onclick={onclick} title={title} elements={elements} level={lev} plan={plan}/>  \n\t     </div>\n\t    </TableCell>\n    );\n}\n\n\n\nSeriesCell.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SeriesCell);\n"]},"metadata":{},"sourceType":"module"}