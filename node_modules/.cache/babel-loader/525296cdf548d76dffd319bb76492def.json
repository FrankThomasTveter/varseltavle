{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/Table1DComponent.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport SumCell from './SumCell';\nimport SummaryCell from './SummaryCell';\nimport SeriesCell from './SeriesCell';\nimport CanvasText from './CanvasTextComponent';\nimport Text from './TextComponent'; //\toverflow: 'hidden',\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      height: '100%'\n    },\n    paper: {\n      tableLayout: 'fixed',\n      padding: 0,\n      margin: 0\n    },\n    divTable: {\n      display: 'table',\n      width: '100%'\n    },\n    divTableRow: {\n      display: 'table-row'\n    },\n    divTableCell: {\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    },\n    divTableCellCursor: {\n      cursor: \"pointer\",\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    },\n    divTableHead: {\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    },\n    divTableHeading: {\n      display: 'table-header-group'\n    },\n    divTableHeadingCenter: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    divTableFoot: {\n      backgroundColor: '#DDD',\n      display: 'table-footer-group',\n      fontWeight: 'bold'\n    },\n    divTableBody: {\n      display: 'table-row-group'\n    }\n  };\n};\n\nfunction getTextWidth(txt, fontname, fontsize) {\n  if (getTextWidth.c === undefined) {\n    getTextWidth.c = document.createElement('canvas');\n    getTextWidth.ctx = getTextWidth.c.getContext('2d');\n  }\n\n  if (fontname !== undefined) {\n    getTextWidth.ctx.font = fontsize + ' ' + fontname;\n  }\n\n  return getTextWidth.ctx.measureText(txt).width;\n}\n\n;\n\nfunction getTextHeight(fontname, fontsize) {\n  if (getTextHeight.c === undefined) {\n    getTextHeight.c = document.createElement('canvas');\n    getTextHeight.ctx = getTextHeight.c.getContext('2d');\n  }\n\n  if (fontname !== undefined) {\n    getTextHeight.ctx.font = fontsize + ' ' + fontname;\n  }\n\n  return getTextHeight.ctx.measureText('M').width;\n}\n\nfunction maxWidth(values, border) {\n  var swidth = 0;\n  var mwidth = 0;\n  var lenv = values.length;\n\n  for (var ii = 0; ii < lenv; ii++) {\n    var cwidth = getTextWidth(values[ii]) + 2 * border;\n\n    if (cwidth > mwidth) {\n      mwidth = cwidth;\n    }\n\n    swidth = swidth + cwidth;\n  }\n\n  return {\n    max: mwidth,\n    sum: swidth\n  };\n}\n\nfunction makePlan(state, label, values, iwidth, iheight, border, cellMode) {\n  var plan = {\n    rotate: false,\n    step: 1,\n    head: 10,\n    cell: 10,\n    width: 10,\n    height: 10,\n    border: border,\n    shift: 0\n  };\n\n  if (iwidth <= 0 || cellMode === state.Show.code.cell.Sum) {\n    return plan;\n  } // text boundaries\n\n\n  var ww = maxWidth(values, border);\n  var zwidth = getTextWidth(label) + 2 * border; //props.theme.spacing.unit;\n\n  var zheight = getTextHeight(label) + 2 * border; //props.theme.spacing.unit;\n  // table boundaries\n\n  var mheight = getTextHeight() + 2 * border; //props.theme.spacing.unit;\n\n  var hwidth = zwidth + mheight;\n  var width = iwidth - hwidth; // calculate cell width...\n\n  var mwidth = ww.max;\n  var swidth = ww.sum;\n  var lenc = values.length;\n\n  if (mwidth * lenc < width) {\n    // horisontal\n    plan.rotate = false;\n    plan.step = 1;\n    plan.width = width / lenc;\n    plan.height = mheight;\n    plan.shift = (plan.width - mwidth) / 2; //console.log(\"Plan (normal):\",JSON.stringify(plan));\n  } else if (mheight * lenc < width) {\n    // rotate\n    plan.rotate = true;\n    plan.step = 1;\n    plan.width = width / lenc;\n    plan.height = mwidth;\n    plan.shift = (plan.width - mheight) / 2; //console.log(\"Plan (rot):\",JSON.stringify(plan),lenc,plan.width*lenc);\n  } else {\n    // rotate and use steps\n    plan.rotate = true;\n    plan.step = Math.ceil(lenc * mheight / width);\n    plan.width = plan.step * width / lenc;\n    plan.height = mwidth;\n    plan.shift = (plan.width - mheight) / 2; //console.log(\"Plan (rot+step):\",JSON.stringify(plan),lenc,height,width);\n  } // calculate cell height\n\n\n  var height = iheight - plan.height;\n  plan.cell = Math.min(mheight * 10, height);\n  plan.head = hwidth; //console.log(\"Plan (finally):\",JSON.stringify(plan),mheight,mwidth,height,width);\n\n  return plan;\n} // ---------------- DATA\n\n\nfunction FirstDataCell(props) {\n  var classes = props.classes,\n      rowval = props.rowval,\n      onclick = props.onclick,\n      title = props.title,\n      width = props.width,\n      height = props.height,\n      rowindex = props.rowindex;\n  var cursor = classes.divTableCell;\n\n  if (onclick !== undefined) {\n    cursor = classes.divTableCellCursor;\n  }\n\n  if (rowindex % 2 === 1) {\n    return React.createElement(\"div\", {\n      className: cursor,\n      onClick: onclick,\n      style: {\n        backgroundColor: '#DDD'\n      },\n      title: title,\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, rowval);\n  } else {\n    return React.createElement(\"div\", {\n      className: cursor,\n      onClick: onclick,\n      style: {\n        backgroundColor: '#EEE'\n      },\n      title: title,\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, rowval);\n  }\n}\n\nfunction DataCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      elements = props.elements,\n      mode = props.mode,\n      plan = props.plan,\n      rowindex = props.rowindex,\n      other = _objectWithoutProperties(props, [\"classes\", \"state\", \"elements\", \"mode\", \"plan\", \"rowindex\"]);\n\n  if (elements === undefined) {\n    if (rowindex % 2 === 1) {\n      return React.createElement(\"div\", {\n        className: classes.divTableCell,\n        style: {\n          backgroundColor: '#EEE'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: classes.divTableCell,\n        style: {\n          backgroundColor: '#FFF'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      });\n    }\n  } else if (mode === state.Show.code.cell.Sum) {\n    return React.createElement(SummaryCell, Object.assign({}, other, {\n      state: state,\n      elements: elements,\n      plan: plan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })); //return null;\n  } else {\n    return React.createElement(SeriesCell, Object.assign({}, other, {\n      state: state,\n      elements: elements,\n      plan: plan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })); //return null;\n  }\n}\n\nfunction renderDataSeries(classes, state, rowkey, rowvalues, range, plan, val, index) {\n  var title = state.Database.getWhereDetail(rowkey, rowvalues[index]); //console.log(\"Making data cell:\",rowval,val,index,plan,JSON.stringify(rowvalues));\n\n  if ((index - 1) % plan.step === 0) {\n    // get elements and range\n    //console.log(\"Processing:\",val,rowvalues[index],plan.step);\n    var elements = state.Matrix.getMatrixElements(rowvalues, \"\", state.React.matrix, index, plan.step); // get count and rowwhere\n\n    var cnt = Math.min(rowvalues.length, index + plan.step) - index;\n    var rowwhere = state.Database.getColWhere(rowkey, rowvalues, index, plan.step); // make onclick and title\n\n    var onclick = function onclick() {\n      return state.Navigate.selectKey(state, rowkey, val, rowwhere, 1);\n    };\n\n    return React.createElement(DataCell, {\n      classes: classes,\n      state: state,\n      key: val,\n      index: index,\n      onclick: onclick,\n      title: title,\n      rowkey: rowkey,\n      rowvalues: rowvalues,\n      rowval: val,\n      rowwhere: rowwhere,\n      elements: elements,\n      plan: plan,\n      range: range,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    });\n  } else {\n    return null;\n  }\n}\n\n;\n\nfunction dataRowSum(classes, state, rowkey, rowvalues, skeys, plan, rowval, rowindex) {\n  var rowwhere = state.Database.getWhereDetail(rowkey, rowval);\n\n  var onclick = function onclick() {\n    return state.Navigate.selectKey(state, rowkey, rowval, rowwhere, 1);\n  }; //console.log(\"Making data cols.\",rowval,colkey,JSON.stringify(colvalues));\n  //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n\n\n  var elements = state.Matrix.getMatrixElements(rowvalues, \"\", state.React.matrix, rowindex, 1);\n  return React.createElement(\"div\", {\n    className: classes.divTableRow,\n    key: rowindex.toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(FirstDataCell, {\n    classes: classes,\n    rowval: rowval,\n    onclick: onclick,\n    title: rowwhere,\n    width: plan.head,\n    height: plan.height,\n    rowindex: rowindex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }), React.createElement(SummaryCell, {\n    classes: classes,\n    state: state,\n    key: val,\n    index: index,\n    onclick: onclick,\n    title: title,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    rowval: val,\n    rowwhere: rowwhere,\n    elements: elements,\n    plan: plan,\n    range: range,\n    mode: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }));\n}\n\n;\n\nfunction dataRowSeries(classes, state, rowkey, rowvalues, plan) {\n  //console.log(\"Making data cols.\",rowval,colkey,JSON.stringify(colvalues));\n  //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n  var range = [undefined, undefined];\n\n  if (state.React.matrix !== undefined) {\n    range = state.Matrix.getRange(state, state.React.matrix, [\"\"], rowvalues);\n  }\n\n  ;\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderDataSeries(classes, state, rowkey, rowvalues, range, plan, val, index);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.divTableRow,\n    key: rowkey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, rowvalues.map(mapFunction));\n}\n\n;\n\nfunction renderZeroRow(classes, state, plan) {\n  return React.createElement(\"div\", {\n    className: classes.divTableRow,\n    key: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.divTableCell,\n    width: plan.width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, \"No data available\"));\n}\n\n;\n\nfunction DataRows(props) {\n  var classes = props.classes,\n      state = props.state,\n      plan = props.plan,\n      rowkey = props.rowkey,\n      rowvalues = props.rowvalues,\n      cellMode = props.cellMode,\n      skeys = props.skeys;\n\n  if (rowvalues.length === 0) {\n    return renderZeroRow(classes, state, plan);\n  } else if (cellMode === state.Show.code.cell.Sum) {\n    var mapFunction = function mapFunction(val, index) {\n      return dataRowSum(classes, state, rowkey, rowvalues, skeys, plan, val, index);\n    };\n\n    return rowvalues.map(mapFunction);\n  } else {\n    return dataRowSeries(classes, state, rowkey, rowvalues, plan);\n  }\n} // ---------------- HDR\n\n\nfunction FirstHdrCell(props) {\n  var classes = props.classes,\n      label = props.label,\n      plan = props.plan;\n  var width = plan.head;\n  var height = plan.height; //console.log(\"Making first header cell.\",label,width,height);\n\n  if (label !== \"\") {\n    return React.createElement(\"div\", {\n      className: classes.divTableHeadingCenter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, label);\n  } else {\n    return null;\n  }\n\n  ;\n}\n\nfunction renderHdrSum(classes, state, rowkey, plan, val, index) {\n  console.log(\"HdrCell:\", val);\n  var cursor = classes.divTableCell;\n  return React.createElement(\"div\", {\n    className: cursor,\n    style: {\n      backgroundColor: '#DDD'\n    },\n    key: \"col-\".concat(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, val);\n}\n\nfunction renderHdrSeries(classes, state, rowkey, rowvalues, plan, val, index) {\n  if ((index - 1) % plan.step === 0) {\n    //console.log(\"HdrCell:\",index,plan.step);\n    var cnt = Math.min(rowvalues.length, index + plan.step) - index;\n    var rowwhere = state.Database.getColWhere(rowkey, rowvalues, index, plan.step);\n\n    var onclick = function onclick() {\n      return state.Navigate.selectKey(state, rowkey, val, rowwhere, cnt);\n    };\n\n    var title = rowwhere;\n    var cursor = classes.divTableCell;\n\n    if (onclick !== undefined) {\n      cursor = classes.divTableCellCursor;\n    }\n\n    return React.createElement(\"div\", {\n      className: cursor,\n      onClick: onclick,\n      style: {\n        backgroundColor: '#DDD'\n      },\n      title: title,\n      key: \"col-\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(CanvasText, {\n      state: state,\n      index: index,\n      plan: plan,\n      label: val,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }));\n  } else {\n    return null;\n  }\n}\n\nfunction HdrRow(props) {\n  var classes = props.classes,\n      state = props.state,\n      plan = props.plan,\n      rowkey = props.rowkey,\n      rowvalues = props.rowvalues,\n      label = props.label,\n      skeys = props.skeys,\n      cellMode = props.cellMode; //, rowvalues\n\n  if (cellMode === state.Show.code.cell.Sum) {\n    console.log(\"Making header Sum row.\", label, rowkey, JSON.stringify(skeys));\n    return React.createElement(\"div\", {\n      className: classes.divTableRow,\n      key: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(FirstHdrCell, {\n      classes: classes,\n      label: label,\n      plan: plan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }), renderHdrSum(classes, state, rowkey, plan, \"Summary\", 1));\n  } else {\n    var mapFunction = function mapFunction(val, index) {\n      return renderHdrSeries(classes, state, rowkey, rowvalues, plan, val, index);\n    };\n\n    console.log(\"Making header Series row.\", label, rowkey, JSON.stringify(rowvalues));\n    return React.createElement(\"div\", {\n      className: classes.divTableRow,\n      key: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(FirstHdrCell, {\n      classes: classes,\n      label: label,\n      plan: plan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }), rowvalues.map(mapFunction));\n  }\n} // ---------------- Details\n\n\nfunction Details(props) {\n  var classes = props.classes,\n      state = props.state,\n      element = props.element; // classes, \n\n  var cellMode = state.Show.getCellMode(state);\n  var colkey = state.Path.getColKey(state) || \"\";\n  var rowkey = state.Path.getRowKey(state) || \"\";\n  var colvalues = state.Path.filterKeys(state, state.Matrix.values[colkey] || [\"\"]);\n  var rowvalues = state.Path.filterKeys(state, state.Matrix.values[rowkey] || [\"\"]);\n  var skeys = state.Matrix.sortedKeys(state, state.Matrix.keyCnt); //DOM.style.font\n\n  var border = 2;\n  var label = rowkey;\n  var width = 0.8 * window.innerWidth;\n  var height = 0.8 * (window.innerHeight - 200);\n  var plan = makePlan(state, label, rowvalues, width, height, border, cellMode);\n  console.log(\"Plan:\", JSON.stringify(plan)); //console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(colvalues));\n  //console.log(\"Rowkey:\",rowkey,\" rowval:\",JSON.stringify(rowvalues));\n  //console.log(\"skeys: \",JSON.stringify(skeys));\n\n  return React.createElement(\"div\", {\n    className: classes.divTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.divTableBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }, React.createElement(HdrRow, {\n    classes: classes,\n    state: state,\n    key: \"hdr\",\n    plan: plan,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    label: label,\n    cellMode: cellMode,\n    skeys: skeys,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }), React.createElement(DataRows, {\n    classes: classes,\n    state: state,\n    key: \"data\",\n    plan: plan,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    cellMode: cellMode,\n    skeys: skeys,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  })));\n}\n\nvar Table1D =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Table1D, _Component);\n\n  function Table1D(props) {\n    var _this;\n\n    _classCallCheck(this, Table1D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table1D).call(this, props)); //this.state=props.state;\n\n    _this.updateWindowDimensions = function () {\n      _this.width = window.innerWidth;\n      _this.height = window.innerHeight;\n      _this.bbx = _this.el.getBoundingClientRect(); //console.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n\n    return _this;\n  }\n\n  _createClass(Table1D, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n  }, {\n    key: \"element\",\n    value: function element(el) {\n      if (el !== undefined && el !== null) {\n        this.el = el;\n        this.bbx = this.el.getBoundingClientRect(); //console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n      }\n\n      ;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state;\n      console.log(\"##### Rendering Table1D.\");\n      return React.createElement(\"div\", {\n        ref: function ref(el) {\n          _this2.element(el);\n        },\n        className: classes.root,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(Details, {\n        state: state,\n        classes: classes,\n        element: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Table1D;\n}(Component);\n\nTable1D.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Table1D);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/Table1DComponent.js"],"names":["React","Component","PropTypes","withStyles","Paper","Grid","SumCell","SummaryCell","SeriesCell","CanvasText","Text","styles","theme","root","height","paper","tableLayout","padding","margin","divTable","display","width","divTableRow","divTableCell","border","divTableCellCursor","cursor","divTableHead","divTableHeading","divTableHeadingCenter","justifyContent","divTableFoot","backgroundColor","fontWeight","divTableBody","getTextWidth","txt","fontname","fontsize","c","undefined","document","createElement","ctx","getContext","font","measureText","getTextHeight","maxWidth","values","swidth","mwidth","lenv","length","ii","cwidth","max","sum","makePlan","state","label","iwidth","iheight","cellMode","plan","rotate","step","head","cell","shift","Show","code","Sum","ww","zwidth","zheight","mheight","hwidth","lenc","Math","ceil","min","FirstDataCell","props","classes","rowval","onclick","title","rowindex","DataCell","elements","mode","other","renderDataSeries","rowkey","rowvalues","range","val","index","Database","getWhereDetail","Matrix","getMatrixElements","matrix","cnt","rowwhere","getColWhere","Navigate","selectKey","dataRowSum","skeys","toString","dataRowSeries","getRange","mapFunction","map","renderZeroRow","DataRows","FirstHdrCell","renderHdrSum","console","log","renderHdrSeries","HdrRow","JSON","stringify","Details","element","getCellMode","colkey","Path","getColKey","getRowKey","colvalues","filterKeys","sortedKeys","keyCnt","window","innerWidth","innerHeight","Table1D","updateWindowDimensions","bbx","el","getBoundingClientRect","addEventListener","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport SumCell     from './SumCell';\nimport SummaryCell from './SummaryCell';\nimport SeriesCell  from './SeriesCell';\nimport CanvasText  from './CanvasTextComponent';\nimport Text        from './TextComponent';\n\n//\toverflow: 'hidden',\n\nconst styles = theme => ({\n    root: {\n\theight: '100%',\n    },\n    paper: {\n\ttableLayout: 'fixed',\n\tpadding:0,\n\tmargin:0,\n    },\n    divTable :{\n\tdisplay: 'table',\n\twidth: '100%',\n    },\n    divTableRow:  {\n\tdisplay: 'table-row',\n    },\n    divTableCell:{\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableCellCursor:{\n\tcursor: \"pointer\",\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableHead : {\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableHeading : {\n\tdisplay: 'table-header-group',\n    },\n    divTableHeadingCenter : {\n\tdisplay: 'flex',\n\tjustifyContent: 'center',\n    },\n    divTableFoot : {\n\tbackgroundColor: '#DDD',\n\tdisplay: 'table-footer-group',\n\tfontWeight: 'bold',\n    },\n    divTableBody : {\n\tdisplay: 'table-row-group',\n    }\n});\n\nfunction getTextWidth(txt, fontname, fontsize){\n    if(getTextWidth.c === undefined){\n        getTextWidth.c=document.createElement('canvas');\n        getTextWidth.ctx=getTextWidth.c.getContext('2d');\n    }\n    if (fontname !== undefined) {\n\tgetTextWidth.ctx.font = fontsize + ' ' + fontname;\n    }\n    return getTextWidth.ctx.measureText(txt).width;\n};\nfunction getTextHeight(fontname, fontsize){\n    if(getTextHeight.c === undefined){\n        getTextHeight.c=document.createElement('canvas');\n        getTextHeight.ctx=getTextHeight.c.getContext('2d');\n    }\n    if (fontname !== undefined) {\n\tgetTextHeight.ctx.font = fontsize + ' ' + fontname;\n    }\n    return getTextHeight.ctx.measureText('M').width;\n}\nfunction maxWidth(values,border) {\n    var swidth=0;\n    var mwidth=0;\n    var lenv=values.length;\n    for (var ii=0;ii<lenv;ii++) {\n\tvar cwidth = getTextWidth(values[ii])+2*border;\n\tif (cwidth > mwidth) {\n\t    mwidth=cwidth;\n\t}\n\tswidth=swidth+cwidth;\n    }\n    return {max:mwidth,sum:swidth};\n}\nfunction makePlan(state,label,values,iwidth,iheight,border,cellMode) {\n    var plan={rotate:false, step:1, head:10, cell:10, width:10, height:10, border:border, shift:0};\n    if (iwidth <= 0 || cellMode === state.Show.code.cell.Sum) {return plan;}\n    // text boundaries\n    var ww=maxWidth(values,border);\n    var zwidth =getTextWidth(label) + 2 * border;   //props.theme.spacing.unit;\n    var zheight=getTextHeight(label) + 2 * border;  //props.theme.spacing.unit;\n    // table boundaries\n    var mheight=getTextHeight() + 2 * border;       //props.theme.spacing.unit;\n    var hwidth=zwidth + mheight;\n    var width=iwidth-hwidth;\n    // calculate cell width...\n    var mwidth=ww.max;\n    var swidth=ww.sum;\n    var lenc=values.length;\n    if (mwidth*lenc < width) { // horisontal\n\tplan.rotate=false;\n\tplan.step=1;\n\tplan.width=width/lenc;\n\tplan.height=mheight;\n\tplan.shift=(plan.width-mwidth)/2;\n\t//console.log(\"Plan (normal):\",JSON.stringify(plan));\n    } else if (mheight*lenc < width) { // rotate\n\tplan.rotate=true;\n\tplan.step=1;\n\tplan.width=width/lenc;\n\tplan.height=mwidth;\n\tplan.shift=(plan.width-mheight)/2;\n\t//console.log(\"Plan (rot):\",JSON.stringify(plan),lenc,plan.width*lenc);\n    } else { // rotate and use steps\n\tplan.rotate=true;\n\tplan.step=Math.ceil(lenc*mheight/width);\n\tplan.width=plan.step*width/lenc;\n\tplan.height=mwidth;\n\tplan.shift=(plan.width-mheight)/2;\n\t//console.log(\"Plan (rot+step):\",JSON.stringify(plan),lenc,height,width);\n    }\n    // calculate cell height\n    var height=iheight-plan.height;\n    plan.cell=Math.min(mheight*10,height);\n    plan.head=hwidth;    \n    //console.log(\"Plan (finally):\",JSON.stringify(plan),mheight,mwidth,height,width);\n    return plan;\n}\n// ---------------- DATA\nfunction FirstDataCell (props) {\n    const { classes, rowval, onclick, title, width, height, rowindex } = props;\n    var cursor=classes.divTableCell;\n    if (onclick !== undefined) {\n\tcursor=classes.divTableCellCursor;\n    }\n    if (rowindex%2 === 1) {\n\treturn (<div className={cursor} onClick={onclick} style={{backgroundColor:'#DDD'}}\n\t\ttitle={title} width={width} height={height}>{rowval}</div>);\n    } else {\n\treturn (<div className={cursor} onClick={onclick} style={{backgroundColor:'#EEE'}}\n\t\ttitle={title} width={width} height={height}>{rowval}</div>);\n    }\n}\nfunction DataCell(props) {\n    const {classes,state,elements,mode,plan,rowindex,...other}=props;\n    if (elements===undefined) {\n\tif (rowindex%2===1) {\n\t    return <div className={classes.divTableCell} style={{backgroundColor:'#EEE'}}/>\n\t} else {\n\t    return <div className={classes.divTableCell} style={{backgroundColor:'#FFF'}}/>\n\t}\n    } else if (mode===state.Show.code.cell.Sum) {\n\treturn <SummaryCell {...other} state={state} elements={elements} plan={plan}/>\n\t//return null;\n    } else {\n\treturn <SeriesCell {...other} state={state} elements={elements} plan={plan}/>\n\t//return null;\n    }\n}\nfunction renderDataSeries(classes,state,rowkey,rowvalues,range,plan,val,index) {\n    var title=state.Database.getWhereDetail(rowkey,rowvalues[index]);\n    //console.log(\"Making data cell:\",rowval,val,index,plan,JSON.stringify(rowvalues));\n    if ((index-1)%plan.step === 0) {\n\t// get elements and range\n\t//console.log(\"Processing:\",val,rowvalues[index],plan.step);\n\tvar elements=state.Matrix.getMatrixElements(rowvalues,\"\",state.React.matrix,index,plan.step);\n\t// get count and rowwhere\n        var cnt = Math.min(rowvalues.length,index+plan.step)-index;\n        var rowwhere = state.Database.getColWhere(rowkey,rowvalues,index,plan.step);\n\t// make onclick and title\n\tvar onclick=() => state.Navigate.selectKey(state,rowkey,val,rowwhere,1);\n\treturn (<DataCell classes={classes} state={state} key={val} index={index} onclick={onclick} title={title} \n\t\trowkey={rowkey} rowvalues={rowvalues} rowval={val} rowwhere={rowwhere}\n\t\telements={elements} plan={plan} range={range}/>);\n    } else {\n\treturn null;\n    }\n};\nfunction dataRowSum(classes,state,rowkey,rowvalues,skeys,plan,rowval,rowindex) {\n    var rowwhere=state.Database.getWhereDetail(rowkey,rowval);\n    var onclick=() => state.Navigate.selectKey(state,rowkey,rowval,rowwhere,1);\n    //console.log(\"Making data cols.\",rowval,colkey,JSON.stringify(colvalues));\n    //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n    var elements=state.Matrix.getMatrixElements(rowvalues,\"\",state.React.matrix,rowindex,1);\n    return (<div className={classes.divTableRow} key={rowindex.toString()}>\n\t       <FirstDataCell classes={classes} rowval={rowval} onclick={onclick} title={rowwhere} width={plan.head} height={plan.height} rowindex={rowindex}/>\n\t       <SummaryCell classes={classes} state={state} key={val} index={index} onclick={onclick} title={title} \n\t\trowkey={rowkey} rowvalues={rowvalues} rowval={val} rowwhere={rowwhere}\n\t\telements={elements} plan={plan} range={range} mode={1}/>\n\t    </div>);  \n};\nfunction dataRowSeries(classes,state,rowkey,rowvalues,plan) {\n    //console.log(\"Making data cols.\",rowval,colkey,JSON.stringify(colvalues));\n    //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n    var range=[undefined,undefined];\n    if (state.React.matrix!==undefined) {\n\trange=state.Matrix.getRange(state,state.React.matrix,[\"\"],rowvalues);\n    };\n    var mapFunction= (val,index)=>renderDataSeries(classes,state,rowkey,rowvalues,range,plan,val,index);\n    return (<div className={classes.divTableRow} key={rowkey}>\n\t    {rowvalues.map(mapFunction)}\n\t    </div>);\n};\nfunction renderZeroRow(classes,state,plan) {\n    return (<div className={classes.divTableRow} key={1}>\n\t       <div className={classes.divTableCell} width={plan.width}>No data available</div>\n\t    </div>);\n};\nfunction DataRows(props) {\n    const { classes, state, plan, rowkey, rowvalues, cellMode, skeys } = props;\n    if (rowvalues.length===0) {\n\treturn renderZeroRow(classes,state,plan);\n    } else if (cellMode === state.Show.code.cell.Sum) {\n\tvar mapFunction= (val,index)=>dataRowSum(classes,state,rowkey,rowvalues,skeys,plan,val,index);\n\treturn (rowvalues.map(mapFunction));\n    } else {\n\treturn dataRowSeries(classes,state,rowkey,rowvalues,plan);\n    }\n}\n// ---------------- HDR\nfunction FirstHdrCell (props) {\n    const { classes, label, plan } = props;\n    var width=plan.head;\n    var height=plan.height;\n    //console.log(\"Making first header cell.\",label,width,height);\n    if (label !== \"\") {\n\treturn (<div className={classes.divTableHeadingCenter} >\n\t\t{label}\n\t\t</div>);\n    } else {\n\treturn null;\n    };\n}\nfunction renderHdrSum(classes,state,rowkey,plan,val,index) {\n    console.log(\"HdrCell:\",val);\n    var cursor=classes.divTableCell;\n    return (<div className={cursor} style={{backgroundColor:'#DDD'}} key={`col-${index}`} >\n\t    {val}\n \t    </div> );\n}\nfunction renderHdrSeries(classes,state,rowkey,rowvalues,plan,val,index) {\n    if ((index-1)%plan.step === 0) {\n\t//console.log(\"HdrCell:\",index,plan.step);\n        var cnt = Math.min(rowvalues.length,index+plan.step)-index;\n        var rowwhere = state.Database.getColWhere(rowkey,rowvalues,index,plan.step);\n\tvar onclick=() => state.Navigate.selectKey(state,rowkey,val,rowwhere,cnt);\n\tvar title=rowwhere;\n\tvar cursor=classes.divTableCell;\n\tif (onclick !== undefined) {\n\t    cursor=classes.divTableCellCursor;\n\t}\n\treturn (<div className={cursor} onClick={onclick} style={{backgroundColor:'#DDD'}} title={title} key={`col-${index}`} >\n\t\t   <CanvasText state={state} index={index} plan={plan} label={val}></CanvasText>\n \t        </div> );\n     } else {\n\treturn null;\n    }\n}\nfunction HdrRow(props) {\n    const { classes, state, plan, rowkey, rowvalues, label, skeys, cellMode } = props; //, rowvalues\n    if (cellMode === state.Show.code.cell.Sum) {\n\tconsole.log(\"Making header Sum row.\",label,rowkey,JSON.stringify(skeys));\n\treturn (<div className={classes.divTableRow} key={0}>\n\t\t   <FirstHdrCell classes={classes} label={label} plan={plan}/>\n\t\t   {renderHdrSum(classes,state,rowkey,plan,\"Summary\",1)}\n\t\t</div>);\n    } else {\n\tvar mapFunction= (val,index)=>renderHdrSeries(classes,state,rowkey,rowvalues,plan,val,index);\n\tconsole.log(\"Making header Series row.\",label,rowkey,JSON.stringify(rowvalues));\n\treturn (<div className={classes.divTableRow} key={0}>\n\t\t   <FirstHdrCell classes={classes} label={label} plan={plan}/>\n\t\t   {rowvalues.map(mapFunction)}\n\t\t</div>);\n    }\n}\n// ---------------- Details\nfunction Details(props) {\n    const { classes, state, element } = props; // classes, \n    var cellMode  = state.Show.getCellMode(state);\n    var colkey = state.Path.getColKey(state)||\"\";\n    var rowkey = state.Path.getRowKey(state)||\"\";\n    var colvalues = state.Path.filterKeys(state,state.Matrix.values[colkey]||[\"\"]);\n    var rowvalues = state.Path.filterKeys(state,state.Matrix.values[rowkey]||[\"\"]);\n    var skeys = state.Matrix.sortedKeys(state,state.Matrix.keyCnt);\n    //DOM.style.font\n    var border=2;\n    var label=rowkey;\n    var width=0.8*window.innerWidth;\n    var height=0.8*(window.innerHeight-200);\n    var plan=makePlan(state,label,rowvalues,width,height,border,cellMode);\n    console.log(\"Plan:\",JSON.stringify(plan));\n    //console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(colvalues));\n    //console.log(\"Rowkey:\",rowkey,\" rowval:\",JSON.stringify(rowvalues));\n    //console.log(\"skeys: \",JSON.stringify(skeys));\n    return (<div className={classes.divTable}>\n\t     <div className={classes.divTableBody}>\n\t      <HdrRow classes={classes} state={state} key={\"hdr\"} plan={plan} rowkey={rowkey} rowvalues={rowvalues} label={label} cellMode={cellMode} skeys={skeys}/>\n\t      <DataRows classes={classes} state={state} key={\"data\"} plan={plan} rowkey={rowkey} rowvalues={rowvalues} cellMode={cellMode} skeys={skeys}/>\n\t     </div>\n\t    </div>\n\t   );\n}\n\nclass Table1D extends Component {\n    constructor(props) {\n\tsuper(props);\n\t//this.state=props.state;\n    }\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    } \n    updateWindowDimensions = () => {\n        this.width= window.innerWidth;\n\tthis.height=window.innerHeight;\n\tthis.bbx=this.el.getBoundingClientRect();\n\t//console.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n    element(el) {\n\tif (el !== undefined && el !== null) {\n\t    this.el=el;\n\t    this.bbx=this.el.getBoundingClientRect();\n\t    //console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n\t};\n    };\n    render() {\n\tconst { classes, state } = this.props;\n\tconsole.log(\"##### Rendering Table1D.\");\n\treturn (<div ref={el=>{this.element(el)}} className={classes.root}  style={{width: '100%', height: '100%'}}>\n\t\t <Grid container spacing={24}>\n\t\t  <Grid item xs={12} > \n                   { <Paper className={classes.paper}>\n\t\t       <Details state={state} classes={classes} element={this}/>\n                     </Paper>}\n                  </Grid>\n                 </Grid>\n\t        </div>);\n\t}\n}\n\nTable1D.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Table1D);\n"]},"metadata":{},"sourceType":"module"}