{"ast":null,"code":"import _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/SeriesCell.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport CanvasGraph from './CanvasGraphComponent';\n\nvar styles = function styles(theme) {\n  return {\n    pointer: {\n      cursor: \"pointer\",\n      width: \"100%\",\n      height: \"100%\",\n      padding: theme.spacing.unit * 0,\n      textAlign: \"center\"\n    },\n    nopointer: {\n      width: \"100%\",\n      height: \"100%\",\n      padding: theme.spacing.unit * 0,\n      textAlign: \"center\"\n    }\n  };\n};\n\nfunction SeriesCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      onclick = props.onclick,\n      colwhere = props.colwhere,\n      rowwhere = props.rowwhere,\n      elements = props.elements,\n      other = _objectWithoutProperties(props, [\"classes\", \"state\", \"onclick\", \"colwhere\", \"rowwhere\", \"elements\"]);\n\n  var cnt = 0;\n  var lev = -1;\n  var elen = elements.length;\n\n  for (var ee = 0; ee < elen; ee++) {\n    cnt = cnt + elements[ee].cnt;\n    lev = Math.max(lev, elements[ee].lev);\n  }\n\n  ;\n  var label = \"\";\n\n  if (cnt > 1) {\n    label = cnt;\n  }\n\n  ;\n  var bgcolor = state.Colors.getLevelColor(lev);\n  var cursor = classes.nopointer;\n\n  if (onclick !== undefined) {\n    cursor = classes.pointer;\n  }\n\n  var title = \"\";\n\n  if (colwhere !== \"\" && rowwhere !== \"\") {\n    title = \"(\" + colwhere + \") AND (\" + rowwhere + \")\";\n  } else if (colwhere !== \"\") {\n    title = colwhere;\n  } else if (rowwhere !== \"\") {\n    title = rowwhere;\n  } // var bgcolor=state.Colors.getLevelColor(lev);\n  // bgcolor={bgcolor} \n\n\n  return React.createElement(TableCell, {\n    className: cursor,\n    bgcolor: bgcolor,\n    onClick: onclick,\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(CanvasGraph, Object.assign({}, other, {\n    className: cursor,\n    cursor: cursor,\n    classes: classes,\n    state: state,\n    onclick: onclick,\n    title: title,\n    elements: elements,\n    level: lev,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })));\n}\n\nSeriesCell.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SeriesCell);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/SeriesCell.js"],"names":["React","PropTypes","withStyles","TableCell","CanvasGraph","styles","theme","pointer","cursor","width","height","padding","spacing","unit","textAlign","nopointer","SeriesCell","props","classes","state","onclick","colwhere","rowwhere","elements","other","cnt","lev","elen","length","ee","Math","max","label","bgcolor","Colors","getLevelColor","undefined","title","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell   from '@material-ui/core/TableCell';\nimport CanvasGraph from './CanvasGraphComponent';\n\nconst styles = theme => ({\n    pointer: {\n\tcursor:\"pointer\",\n\twidth:\"100%\",\n\theight:\"100%\",\n\tpadding: theme.spacing.unit*0,\n\ttextAlign: \"center\",\n    },\n    nopointer: {\n\twidth:\"100%\",\n\theight:\"100%\",\n\tpadding: theme.spacing.unit*0,\n\ttextAlign: \"center\",\n    },\n});\nfunction SeriesCell(props) {\n    const { classes,state,onclick,\n\t    colwhere,rowwhere,\n\t    elements,...other } = props;\n    var cnt=0;\n    var lev=-1;\n    var elen=elements.length;\n    for (var ee=0;ee<elen;ee++) {\n        cnt=cnt+elements[ee].cnt;\n        lev=Math.max(lev,elements[ee].lev);\n    }; \n    var label=\"\";\n    if (cnt > 1) {label=cnt;};\n    var bgcolor=state.Colors.getLevelColor(lev);\n    var cursor=classes.nopointer;\n    if (onclick !== undefined) {\n\tcursor=classes.pointer;\n    }\n    var title=\"\";\n    if (colwhere !== \"\" && rowwhere !== \"\") {\n\ttitle=\"(\"+colwhere+\") AND (\"+rowwhere+\")\";\n    } else if (colwhere !== \"\") {\n\ttitle=colwhere;\n    } else if (rowwhere !== \"\") {\n\ttitle=rowwhere;\n    }\n    // var bgcolor=state.Colors.getLevelColor(lev);\n    // bgcolor={bgcolor} \n    return(\n\t    <TableCell className={cursor} bgcolor={bgcolor} onClick={onclick} title={title}>\n  \t    <CanvasGraph {...other} className={cursor} cursor={cursor} classes={classes} state={state} \n\t                            onclick={onclick} title={title} elements={elements} level={lev}/>  \n\t    </TableCell>\n    );\n}\n\nSeriesCell.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SeriesCell);\n"]},"metadata":{},"sourceType":"module"}