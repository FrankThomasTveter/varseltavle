{"ast":null,"code":"//console.log(\"Loading ShowLib.js\");\nfunction Show() {\n  this.code = {\n    view: {\n      nopath: 0,\n      path: 1\n    },\n    cell: {\n      Sum: 0,\n      Series: 1\n    },\n    layout: {\n      Table: 0,\n      Map: 1\n    }\n  };\n  this.state = {\n    viewMode: 0,\n    // should we show trash contents?\n    cellMode: 0,\n    // sum, series, item\n    layoutMode: 0 // table, map\n\n  };\n\n  this.init = function (state) {\n    var par = \"Show\";\n    state.Utils.init(par, this);\n  };\n\n  this.toggleView = function (state) {\n    //console.log(\"Show.view before:\",this.state.viewMode,JSON.stringify(this.state),JSON.stringify(this.code));\n    if (this.state.viewMode === this.code.view.nopath) {\n      this.state.viewMode = this.code.view.path;\n    } else if (this.state.viewMode === this.code.view.path) {\n      this.state.viewMode = this.code.view.nopath;\n    }\n\n    ; //console.log(\"Show.view after:\",this.state.viewMode,JSON.stringify(this.state));\n\n    this.showPath(state);\n    this.showConfig(state);\n  };\n\n  this.toggleMode = function (state) {\n    //console.log(\"Show.view before:\",this.state.viewMode,JSON.stringify(this.state),JSON.stringify(this.code));\n    if (this.state.cellMode === this.code.cell.Series) {\n      this.state.cellMode = this.code.cell.Sum;\n    } else if (this.state.cellMode === this.code.cell.Sum) {\n      this.state.cellMode = this.code.cell.Series;\n    }\n\n    ; //console.log(\"Show.view after:\",this.state.viewMode,JSON.stringify(this.state));\n\n    this.showConfig(state);\n  };\n\n  this.getDim = function (state) {\n    var colkey = state.Path.getColKey(state) || \"\";\n    var rowkey = state.Path.getRowKey(state) || \"\";\n\n    if (colkey !== \"\" && rowkey !== \"\") {\n      return 2;\n    } else if (colkey !== \"\" || rowkey !== \"\") {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  this.setLayoutMode = function (state, mode) {\n    var om = this.state.layoutMode;\n    var o = this.getLayoutMode(state);\n    this.state.layoutMode = mode;\n    var n = this.getLayoutMode(state); //console.log(\"Setting layout mode:\",mode,\":\",o,\"->\",n);\n\n    if (o !== n) {\n      this.showAll(state);\n    } else if (om !== mode) {\n      this.showMode(state);\n    }\n  };\n\n  this.setCellMode = function (state, mode) {\n    var om = this.state.cellMode;\n    var o = this.getCellMode(state);\n    this.state.cellMode = mode;\n    var n = this.getCellMode(state); //console.log(\"Setting cell mode:\",mode,\":\",o,\"->\",n);\n\n    if (o !== n) {\n      this.showAll(state);\n    } else if (om !== mode) {\n      this.showMode(state);\n    }\n  };\n\n  this.getLayoutMode = function (state) {\n    //console.log(\"Getmode init:\",this.state.layoutMode,state.Matrix.cnt);\n    var mode = this.state.layoutMode;\n\n    if (mode === this.code.layout.Map && state.Matrix.cnt > state.Matrix.popSeries) {\n      mode = this.code.layout.Table;\n    }\n\n    return mode;\n  };\n\n  this.getCellMode = function (state) {\n    var mode = this.state.cellMode;\n\n    if (mode === this.code.cell.Single && state.Matrix.cnt > state.Matrix.popSingle) {\n      mode = this.code.cell.Series;\n    }\n\n    if (mode === this.code.cell.Series && state.Matrix.cnt > state.Matrix.popSeries) {\n      mode = this.code.cell.Sum;\n    }\n\n    return mode;\n  };\n\n  this.showMode = function (state) {\n    // show data on screen\n    if (state.React.Mode !== undefined) {\n      state.React.Mode.show(state);\n    }\n  };\n\n  this.show = function (state, reload, callbacks) {\n    setTimeout(function () {\n      this.showAll(state, reload);\n\n      if (callbacks !== undefined) {\n        var callback = callbacks.shift();\n\n        if (callback !== undefined) {\n          callback(state, callbacks);\n        }\n      }\n\n      ;\n    }.bind(this), 0.1);\n  };\n\n  this.showAll = function (state, reload) {\n    // show data on screen\n    //var documentLog = document.getElementById(\"log\");\n    //console.log(\"Showing data.\");\n    if (reload === undefined || reload) {\n      this.showPath(state);\n      state.Html.setFootnote(state, \"Extracting data.\");\n      state.Html.setProgress(state, true);\n      setTimeout(function () {\n        state.Database.dbextract(state, function (state, matrix) {\n          state.Html.setFootnote(state, \"Displaying data.\");\n          setTimeout(function () {\n            // callback\n            //console.log(\"Updating matrix.\");\n            state.Path.exportAllKeys(state); //console.log(\"Showing path\");\n\n            this.showPath(state); //console.log(\"Showing trash\");\n\n            this.showConfig(state); //console.log(\"Showing matrix\");\n\n            this.showMatrix(state, matrix); //console.log(\"Pushing URL\");\n\n            state.Utils.pushUrl(state);\n            state.Html.setFootnote(state);\n            state.Html.setProgress(state, false);\n          }.bind(this), 0.1);\n        }.bind(this));\n      }.bind(this), 0.1);\n    } else {\n      console.log(\"Not updating matrix.\");\n      state.Path.exportAllKeys(state);\n      this.showPath(state);\n      this.showConfig(state);\n      state.Html.setFootnote(state);\n      state.Html.setProgress(state, false);\n    }\n\n    this.showMode(state);\n  };\n\n  this.showPath = function (state) {\n    if (state.React.Path !== undefined) {\n      state.React.Path.showPath(state); // forceUpdate()\n    } else {\n      console.log(\"No react-path available.\");\n    }\n  };\n\n  this.showConfig = function (state) {\n    if (state.React.Config !== undefined) {\n      state.React.Config.show(state); // forceUpdate()\n    } else {\n      console.log(\"No react-config available.\");\n    }\n  };\n\n  this.showMatrix = function (state, matrix) {\n    if (state.React.Dataset !== undefined) {\n      state.React.Dataset.showMatrix(state, matrix);\n    }\n  };\n\n  this.useCanvas = function (state, matrix) {\n    // check if matrix elements have max 1 data\n    // loop over matrix\n    for (var ii in matrix) {\n      for (var jj in matrix[ii]) {\n        if (matrix[ii][jj].cnt > 1) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  this.scale = function (xval, xmin, xmax, ymin, ymax) {\n    if (ymin > ymax) {\n      return ymin + (xval - xmin) * (ymax - ymin) / (xmax - xmin);\n    } else {\n      return (xval - xmin) * (ymax - ymin) / (xmax - xmin);\n    }\n  };\n}\n\n;\nexport default Show;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/ShowLib.js"],"names":["Show","code","view","nopath","path","cell","Sum","Series","layout","Table","Map","state","viewMode","cellMode","layoutMode","init","par","Utils","toggleView","showPath","showConfig","toggleMode","getDim","colkey","Path","getColKey","rowkey","getRowKey","setLayoutMode","mode","om","o","getLayoutMode","n","showAll","showMode","setCellMode","getCellMode","Matrix","cnt","popSeries","Single","popSingle","React","Mode","undefined","show","reload","callbacks","setTimeout","callback","shift","bind","Html","setFootnote","setProgress","Database","dbextract","matrix","exportAllKeys","showMatrix","pushUrl","console","log","Config","Dataset","useCanvas","ii","jj","scale","xval","xmin","xmax","ymin","ymax"],"mappings":"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","sourcesContent":["//console.log(\"Loading ShowLib.js\");\n\nfunction Show() {\n    this.code={view:{nopath:0,\n\t\t     path:1,\n\t\t    },\n\t       cell:{Sum:0,\n\t\t     Series:1,\n\t\t    },\n\t       layout:{Table:0,\n\t\t       Map:1,\n\t\t      }\n\t      };\n    this.state={viewMode:0,       // should we show trash contents?\n\t\tcellMode:0,     // sum, series, item\n\t\tlayoutMode:0    // table, map\n\t       };\n    this.init=function(state){\n\tvar par=\"Show\";\n\tstate.Utils.init(par,this);\n    };\n    this.toggleView=function(state) {\n\t//console.log(\"Show.view before:\",this.state.viewMode,JSON.stringify(this.state),JSON.stringify(this.code));\n\tif (this.state.viewMode === this.code.view.nopath) {\n\t    this.state.viewMode=this.code.view.path;\n\t} else if (this.state.viewMode === this.code.view.path) {\n\t    this.state.viewMode=this.code.view.nopath;\n\t};\n\t//console.log(\"Show.view after:\",this.state.viewMode,JSON.stringify(this.state));\n\tthis.showPath(state);\n\tthis.showConfig(state);\n    };\n    this.toggleMode=function(state) {\n\t//console.log(\"Show.view before:\",this.state.viewMode,JSON.stringify(this.state),JSON.stringify(this.code));\n\tif (this.state.cellMode === this.code.cell.Series) {\n\t    this.state.cellMode=this.code.cell.Sum;\n\t} else if (this.state.cellMode === this.code.cell.Sum) {\n\t    this.state.cellMode=this.code.cell.Series;\n\t};\n\t//console.log(\"Show.view after:\",this.state.viewMode,JSON.stringify(this.state));\n\tthis.showConfig(state);\n    };\n    this.getDim=function(state) {\n\tvar colkey=state.Path.getColKey(state)||\"\";\n\tvar rowkey=state.Path.getRowKey(state)||\"\";\n\tif (colkey !== \"\" && rowkey !== \"\") {\n\t    return 2;\n\t} else if (colkey !== \"\" || rowkey !== \"\") {\n\t    return 1;\n\t} else  {\n\t    return 0;\n\t}  \n    };\n    this.setLayoutMode=function(state,mode) {\n\tvar om=this.state.layoutMode;\n\tvar o=this.getLayoutMode(state);\n\tthis.state.layoutMode=mode;\n\tvar n=this.getLayoutMode(state);\n\t//console.log(\"Setting layout mode:\",mode,\":\",o,\"->\",n);\n\tif (o !== n) {\n\t    this.showAll(state);\n\t} else if (om !== mode) {\n\t    this.showMode(state);\n\t}\n    };\n    this.setCellMode=function(state,mode) {\n\tvar om=this.state.cellMode;\n\tvar o=this.getCellMode(state);\n\tthis.state.cellMode=mode;\n\tvar n=this.getCellMode(state);\n\t//console.log(\"Setting cell mode:\",mode,\":\",o,\"->\",n);\n\tif (o !== n) {\n\t    this.showAll(state);\n\t} else if (om !== mode) {\n\t    this.showMode(state);\n\t}\n    };\n    this.getLayoutMode=function(state) {\n\t//console.log(\"Getmode init:\",this.state.layoutMode,state.Matrix.cnt);\n\tvar mode=this.state.layoutMode;\n\tif (mode  === this.code.layout.Map && state.Matrix.cnt > state.Matrix.popSeries) {\n\t    mode=this.code.layout.Table;\n\t}\n\treturn mode;\n    };\n    this.getCellMode=function(state) {\n\tvar mode=this.state.cellMode;\n\tif (mode  === this.code.cell.Single && state.Matrix.cnt > state.Matrix.popSingle) {\n\t    mode=this.code.cell.Series;\n\t}\n\tif (mode  === this.code.cell.Series && state.Matrix.cnt > state.Matrix.popSeries) {\n\t    mode=this.code.cell.Sum;\n\t}\n\treturn mode;\n    };\n    this.showMode=function(state) { // show data on screen\n\tif (state.React.Mode !== undefined) {\n\t    state.React.Mode.show(state);\n\t}\n    };\n    this.show=function(state,reload,callbacks) {\n        setTimeout(function() {\n\t    this.showAll(state,reload);\n\t    if (callbacks !== undefined) {\n\t\tvar callback=callbacks.shift();\n\t\tif (callback !== undefined) {\n\t\t    callback(state,callbacks)\n\t\t}\n\t    };\n\t}.bind(this),0.1);\n    };\n    this.showAll=function(state,reload) { // show data on screen\n\t//var documentLog = document.getElementById(\"log\");\n\t//console.log(\"Showing data.\");\n\tif (reload  === undefined || reload) {\n\t    this.showPath(state);\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    state.Html.setProgress(state, true);\n\t    setTimeout(function() {\n\t\tstate.Database.dbextract(state,function (state,matrix){\n\t\t    state.Html.setFootnote(state,\"Displaying data.\");\n\t\t    setTimeout(function (){  // callback\n\t\t\t//console.log(\"Updating matrix.\");\n\t\t\tstate.Path.exportAllKeys(state);\n\t\t\t//console.log(\"Showing path\");\n\t\t\tthis.showPath(state);\n\t\t\t//console.log(\"Showing trash\");\n\t\t\tthis.showConfig(state);\n\t\t\t//console.log(\"Showing matrix\");\n\t\t\tthis.showMatrix(state,matrix);\n\t\t\t//console.log(\"Pushing URL\");\n\t\t\tstate.Utils.pushUrl(state);\n\t\t\tstate.Html.setFootnote(state);\n\t\t\tstate.Html.setProgress(state, false);\n\t\t    }.bind(this),0.1);\n\t\t}.bind(this));\n\t    }.bind(this),0.1);\n\t} else {\n\t    console.log(\"Not updating matrix.\");\n\t    state.Path.exportAllKeys(state);\n\t    this.showPath(state);\n\t    this.showConfig(state);\n\t    state.Html.setFootnote(state);\n\t    state.Html.setProgress(state, false);\n\t}\n\tthis.showMode(state);\n    };\n    this.showPath=function(state) {\n\tif (state.React.Path !== undefined) {\n\t    state.React.Path.showPath(state); // forceUpdate()\n\t} else {\n\t    console.log(\"No react-path available.\");\n\t}\n    };\n    this.showConfig=function(state) {\n\tif (state.React.Config !== undefined) {\n\t    state.React.Config.show(state); // forceUpdate()\n\t} else {\n\t    console.log(\"No react-config available.\");\n\t}\n    };\n    this.showMatrix=function(state,matrix) {\n\tif (state.React.Dataset !== undefined) {\n\t    state.React.Dataset.showMatrix(state,matrix);\n\t}\n    };\n    this.useCanvas=function(state,matrix) {    // check if matrix elements have max 1 data\n\t// loop over matrix\n\tfor (var ii in matrix) {\n\t    for (var jj in matrix[ii]) {\n\t\tif (matrix[ii][jj].cnt > 1) {\n\t\t    return false;\n\t\t}\n\t    }\n\t}\n\treturn true;\n    };\n    this.scale=function(xval,xmin,xmax,ymin,ymax) {\n\tif (ymin>ymax) {\n\t    return ymin + (xval-xmin)*(ymax-ymin)/(xmax-xmin);\n\t} else {\n\t    return (xval-xmin)*(ymax-ymin)/(xmax-xmin);\n\t}\n    }\n};\nexport default Show;\n"]},"metadata":{},"sourceType":"module"}