{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _lodash = require('lodash.map');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _lodash3 = require('lodash.foreach');\n\nvar _lodash4 = _interopRequireDefault(_lodash3);\n\nvar _lodash5 = require('lodash.pluck');\n\nvar _lodash6 = _interopRequireDefault(_lodash5);\n\nvar _lodash7 = require('lodash.min');\n\nvar _lodash8 = _interopRequireDefault(_lodash7);\n\nvar _lodash9 = require('lodash.max');\n\nvar _lodash10 = _interopRequireDefault(_lodash9);\n\nvar _lodash11 = require('lodash.isnumber');\n\nvar _lodash12 = _interopRequireDefault(_lodash11);\n\nvar _lodash13 = require('lodash.filter');\n\nvar _lodash14 = _interopRequireDefault(_lodash13);\n\nvar _leaflet = require('leaflet');\n\nvar _leaflet2 = _interopRequireDefault(_leaflet);\n\nvar _reactLeaflet = require('react-leaflet');\n\nvar _function = require('react-pure-render/function');\n\nvar _function2 = _interopRequireDefault(_function);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction isInvalid(num) {\n  return !(0, _lodash12.default)(num) && !num;\n}\n\nfunction isValid(num) {\n  return !isInvalid(num);\n}\n\nfunction shouldIgnoreLocation(loc) {\n  return isInvalid(loc.lng) || isInvalid(loc.lat);\n}\n\nvar MarkerLayer = function (_MapLayer) {\n  _inherits(MarkerLayer, _MapLayer);\n\n  function MarkerLayer() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, MarkerLayer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _MapLayer.call.apply(_MapLayer, [this].concat(args))), _this), _this.shouldComponentUpdate = _function2.default, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  MarkerLayer.prototype.componentWillReceiveProps = function componentWillReceiveProps() {// no-op to override MapLayer behavior\n  };\n\n  MarkerLayer.prototype.componentDidMount = function componentDidMount() {\n    this.leafletElement = _reactDom2.default.findDOMNode(this.refs.container);\n    this.props.map.getPanes().overlayPane.appendChild(this.leafletElement);\n\n    if (this.props.fitBoundsOnLoad) {\n      this.fitBounds();\n    }\n\n    this.attachEvents();\n    this.updatePosition();\n  };\n\n  MarkerLayer.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.props.map.getPanes().overlayPane.removeChild(this.leafletElement);\n  };\n\n  MarkerLayer.prototype.fitBounds = function fitBounds() {\n    var markers = this.props.markers;\n    var lngs = (0, _lodash14.default)((0, _lodash2.default)(markers, this.props.longitudeExtractor), isValid);\n    var lats = (0, _lodash14.default)((0, _lodash2.default)(markers, this.props.latitudeExtractor), isValid);\n    var ne = {\n      lng: (0, _lodash10.default)(lngs),\n      lat: (0, _lodash10.default)(lats)\n    };\n    var sw = {\n      lng: (0, _lodash8.default)(lngs),\n      lat: (0, _lodash8.default)(lats)\n    };\n\n    if (shouldIgnoreLocation(ne) || shouldIgnoreLocation(sw)) {\n      return;\n    }\n\n    this.props.map.fitBounds(_leaflet2.default.latLngBounds(_leaflet2.default.latLng(sw), _leaflet2.default.latLng(ne)));\n  };\n\n  MarkerLayer.prototype.markersOrPositionExtractorsChanged = function markersOrPositionExtractorsChanged(props) {\n    return this.props.markers !== props.markers || this.props.longitudeExtractor !== props.longitudeExtractor || this.props.latitudeExtractor !== props.latitudeExtractor;\n  };\n\n  MarkerLayer.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    this.props.map.invalidateSize();\n\n    if (this.props.fitBoundsOnUpdate && this.markersOrPositionExtractorsChanged(prevProps)) {\n      this.fitBounds();\n    }\n\n    this.updatePosition();\n  };\n\n  MarkerLayer.prototype.attachEvents = function attachEvents() {\n    var _this2 = this;\n\n    var map = this.props.map;\n    map.on('viewreset', function () {\n      return _this2.updatePosition();\n    });\n  };\n\n  MarkerLayer.prototype.getLocationForMarker = function getLocationForMarker(marker) {\n    return {\n      lat: this.props.latitudeExtractor(marker),\n      lng: this.props.longitudeExtractor(marker)\n    };\n  };\n\n  MarkerLayer.prototype.updatePosition = function updatePosition() {\n    var _this3 = this;\n\n    (0, _lodash4.default)(this.props.markers, function (marker, i) {\n      var markerElement = _reactDom2.default.findDOMNode(_this3.refs[_this3.getMarkerRefName(i)]);\n\n      var location = _this3.getLocationForMarker(marker);\n\n      if (shouldIgnoreLocation(location)) {\n        return;\n      }\n\n      var point = _this3.props.map.latLngToLayerPoint(_leaflet2.default.latLng(location));\n\n      _leaflet2.default.DomUtil.setPosition(markerElement, point);\n    });\n  };\n\n  MarkerLayer.prototype.render = function render() {\n    return _react2.default.createElement('div', {\n      ref: 'container',\n      className: 'leaflet-objects-pane\\n           leaflet-marker-pane\\n           leaflet-zoom-hide\\n           react-leaflet-marker-layer'\n    }, this.renderMarkers());\n  };\n\n  MarkerLayer.prototype.renderMarkers = function renderMarkers() {\n    var _this4 = this;\n\n    var style = {\n      position: 'absolute'\n    };\n    var MarkerComponent = this.props.markerComponent;\n    return (0, _lodash2.default)(this.props.markers, function (marker, index) {\n      if (shouldIgnoreLocation(_this4.getLocationForMarker(marker))) {\n        return;\n      }\n\n      return _react2.default.createElement(MarkerComponent, _extends({}, _this4.props.propsForMarkers, {\n        key: index,\n        style: style,\n        map: _this4.props.map,\n        ref: _this4.getMarkerRefName(index),\n        marker: marker\n      }));\n    });\n  };\n\n  MarkerLayer.prototype.getMarkerRefName = function getMarkerRefName(index) {\n    return 'marker-' + index;\n  };\n\n  return MarkerLayer;\n}(_reactLeaflet.MapLayer);\n\nMarkerLayer.propTypes = {\n  markers: _react2.default.PropTypes.array,\n  longitudeExtractor: _react2.default.PropTypes.func.isRequired,\n  latitudeExtractor: _react2.default.PropTypes.func.isRequired,\n  markerComponent: _react2.default.PropTypes.func.isRequired,\n  propsForMarkers: _react2.default.PropTypes.object,\n  fitBoundsOnLoad: _react2.default.PropTypes.bool,\n  fitBoundsOnUpdate: _react2.default.PropTypes.bool\n};\nexports.default = MarkerLayer;","map":null,"metadata":{},"sourceType":"script"}