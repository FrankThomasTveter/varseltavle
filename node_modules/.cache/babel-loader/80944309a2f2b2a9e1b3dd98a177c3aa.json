{"ast":null,"code":"//console.log(\"Loading PathLib.js\");\nfunction Path() {\n  this.keys = {\n    path: [],\n    // selected keys\n    other: [] // keys available for selection\n\n  };\n  this.other = {\n    table: [],\n    // table keys\n    rest: [] // keys available for table\n\n  };\n  this.trash = []; // remaining valid keys\n\n  this.valid = []; // list of valid keys\n\n  this.ignore = [\"max\", \"min\", \"minlat\", \"minlon\", \"maxlat\", \"maxlon\", \"cnt\", \"level\"]; // only visible in 1D and 0D tables\n\n  this.select = {\n    val: {}\n  }; // current selection criteria\n\n  this.where = {}; // current cache for where expressions\n\n  this.home = {\n    path: [],\n    val: {}\n  }; // initial home for data...\n\n  this.tooltip = {\n    keys: [],\n    // keys that will be displayed (in addition to row/col-keys)\n    select: [],\n    // extra level of keys to distinguish reports\n    sort: [],\n    // which keys should be sorted?\n    click: []\n  }; // which keys should be clickable...\n\n  this.type = {\n    path: {\n      ityp: -1,\n      ptyp: \"path\"\n    },\n    eye: {\n      ityp: 0,\n      ptyp: \"eye\"\n    },\n    table: {\n      ityp: 1,\n      ptyp: \"table\"\n    },\n    rest: {\n      ityp: 2,\n      ptyp: \"rest\"\n    },\n    trash: {\n      ityp: 3,\n      ptyp: \"trash\"\n    },\n    trashRest: {\n      ityp: 4,\n      ptyp: \"trashRest\"\n    },\n    row: {\n      ityp: 5,\n      ptyp: \"row\"\n    },\n    col: {\n      ityp: 6,\n      ptyp: \"col\"\n    },\n    item: {\n      ityp: 7,\n      ptyp: \"item\"\n    }\n  };\n  this.order = {}; // how to order data\t    \n\n  this.init = function (state) {\n    state.Utils.init(\"Path\", this);\n  };\n\n  this.cleanSelect = function (state) {\n    var pkeys = state.Path.keys.path;\n    var keys = Object.keys(state.Path.select.val);\n    var lenk = keys.length;\n\n    for (var ii = 0; ii < lenk; ii++) {\n      var key = keys[ii];\n\n      if (pkeys.indexOf(key) === -1) {\n        state.Path.select.val[key] = undefined;\n      }\n    }\n  };\n\n  this.goHome = function (state) {\n    var buff = state.Utils.cp(state.Path.keys.path);\n    state.Utils.remArray(buff, state.Path.home.path);\n    state.Utils.remArray(state.Path.keys.other, buff);\n    state.Utils.remArray(state.Path.keys.other, state.Path.home.path);\n    state.Utils.prepArray(state.Path.keys.other, buff);\n    state.Path.select.val = state.Utils.cp(state.Path.home.val);\n    state.Path.keys.path = state.Utils.cp(state.Path.home.path); //console.log(\">>>>>> Path.goHome: \",JSON.stringify(state.Path.home),JSON.stringify(state.Path.keys.path));\n\n    state.Utils.pushUrl(state);\n    state.Navigate.store(state);\n    state.Navigate.refreshHistory(state);\n    state.Show.show(state);\n  };\n\n  this.setHome = function (state) {\n    state.Path.cleanSelect(state);\n    this.home.path = state.Utils.cp(state.Path.keys.path);\n    this.home.val = state.Utils.cp(state.Path.select.val);\n    state.Utils.pushUrl(state);\n    console.log(\"Setting home.\");\n  };\n\n  this.getSnapshot = function (state) {\n    // store state\n    return {\n      keys: state.Utils.cp(state.Path.keys),\n      other: state.Utils.cp(state.Path.other),\n      select: state.Utils.cp(state.Path.select),\n      order: state.Utils.cp(state.Path.order)\n    };\n  };\n\n  this.setSnapshot = function (state, snapshot) {\n    // store state\n    state.Utils.restore(state.Path, snapshot);\n  };\n\n  this.toggleSelect = function (state, key, val) {\n    var vals = state.Path.select.val[key]; //console.log(\"toggleSelect:\",key,JSON.stringify(vals),\"'\"+val+\"'\");\n\n    if (vals !== undefined) {\n      var vid = vals.indexOf(val);\n\n      if (vid !== -1) {\n        // remove item\n        vals.splice(vid, 1);\n\n        if (vals.length === 0) {\n          // can never be totally empty...\n          vals.push(state.Database.makeKeytrg(state, key, state.Database.keytrg.Max));\n        }\n\n        state.Path.select.val[key] = vals;\n      } else {\n        state.Path.select.val[key].push(val); // add item\n      }\n\n      state.Database.setWhere(state, key, state.Path.select.val);\n      state.Show.showPath(state); //console.log(\"Finally Vals:\",key,JSON.stringify(state.Path.select.val[key]));\n    }\n  };\n\n  this.getTitle = function (state) {\n    var title = \"\";\n    var keys = state.Path.keys.path;\n    keys.forEach(function (key, index) {\n      var vals = state.Path.select.val[key]; //console.log(\"   select:\",key,JSON.stringify(vals));\n\n      if (vals === undefined) {\n        vals = [];\n      }\n\n      ;\n      var lenv = vals.length;\n\n      for (var ii = 0; ii < lenv; ii++) {\n        var val = vals[ii];\n\n        if (title !== \"\") {\n          title = title + \" | \";\n        }\n\n        ;\n        title = title + state.Database.getTitleDynamic(state, key, val);\n      }\n    }); //console.log(\"Pathlib getTitle keys:\",JSON.stringify(keys),title);\n\n    return title;\n  };\n\n  this.makeCnt = function (state, key) {\n    return state.Path.select.val[key].length;\n  };\n\n  this.getOrderValues = function (state, skey) {\n    if (state.Path.order[skey] === undefined) {\n      //console.log(\"Copying:\",JSON.stringify(Matrix.values[skey]));\n      return state.Matrix.values[skey];\n    } else {\n      var vals = state.Matrix.values[skey];\n      var plen = vals;\n\n      for (var ii = 0; ii < plen; ii++) {\n        var val = vals[ii];\n\n        if (state.Path.order[skey].indexOf(val) === -1) {\n          state.Path.order[skey].push(val);\n        }\n      }\n\n      ;\n      return state.Path.order[skey];\n    }\n\n    ;\n  };\n\n  this.makeOrderValues = function (state, skey) {\n    if (state.Path.order === undefined) {\n      state.Path.order = {};\n    }\n\n    ;\n\n    if (state.Path.order[skey] === undefined) {\n      //console.log(\"Copying:\",JSON.stringify(Matrix.values[skey]));\n      state.Path.order[skey] = state.Utils.cp(state.Matrix.values[skey]);\n    } else {\n      var vals = state.Matrix.values[skey];\n      var plen = vals;\n\n      for (var ii = 0; ii < plen; ii++) {\n        var val = vals[ii];\n\n        if (state.Path.order[skey].indexOf(val) === -1) {\n          state.Path.order[skey].push(val);\n        }\n      }\n\n      ;\n    }\n\n    ;\n    return state.Path.order[skey];\n  };\n\n  this.bumpOrder = function (state, skey, value) {\n    //console.log(\"Bump order:\",skey,value,JSON.stringify(state.Path.order));\n    if (value === \"\") {\n      state.Path.order[skey] = undefined;\n    } else {\n      this.makeOrderValues(state, skey);\n      var vid = state.Path.order[skey].indexOf(value);\n\n      if (vid !== -1 && vid > 0) {\n        var src = state.Path.order[skey].splice(vid, 1); // remove from array   \n\n        state.Utils.spliceArray(state.Path.order[skey], vid - 1, 0, src);\n      }\n\n      ;\n    }\n\n    state.Show.showConfig(state);\n  };\n\n  this.makePath = function (state) {\n    // note that not all keys are present in the data!\n    console.log(\"Entering makepath.\", JSON.stringify(this.keys));\n    var ii, key;\n    var pathSet = [];\n\n    if (this.keys.path === undefined) {\n      this.keys.path = [];\n    }\n\n    ;\n\n    if (this.keys.other === undefined) {\n      this.keys.other = [];\n    }\n\n    ;\n\n    if (this.trash === undefined) {\n      this.trash = [];\n    }\n\n    ;\n\n    if (this.keys.path.length > 0 || this.keys.other.length > 0 || this.trash.length > 0) {\n      // remove duplicates\n      //console.log(\"Filtering.\");\n      var olen;\n      this.keys.path = this.keys.path.filter(this.Unique);\n      this.keys.other = this.keys.other.filter(this.Unique);\n      this.trash = this.trash.filter(this.Unique); //console.log(\"setup:\",JSON.stringify(setup));\n      //console.log(\"Remove invalid keys from path.\");\n      // remove invalid keys from path\n\n      var plen = this.keys.path.length;\n\n      for (ii = 0; ii < plen; ii++) {\n        key = this.keys.path[ii];\n\n        if (state.Database.keyCnt[key] === undefined) {\n          this.keys.path.splice(ii, 1);\n          ii = ii - 1;\n          plen = plen - 1;\n        }\n      }\n\n      console.log(\"Remove invalid keys from other.\"); // remove invalid keys from other\n\n      olen = this.keys.other.length;\n\n      for (ii = 0; ii < olen; ii++) {\n        key = this.keys.other[ii];\n\n        if (state.Database.keyCnt[key] === undefined) {\n          this.other.rest.splice(ii, 1);\n          ii = ii - 1;\n          olen = olen - 1;\n        }\n      }\n\n      console.log(\"Remove invalid keys from trash.\"); // remove invalid keys from trash\n\n      olen = this.trash.length;\n\n      for (ii = 0; ii < olen; ii++) {\n        key = this.trash[ii];\n\n        if (state.Database.keyCnt[key] === undefined) {\n          this.trash.splice(ii, 1);\n          ii = ii - 1;\n          olen = olen - 1;\n        }\n      } //console.log(\"Update trash with keys.\");\n      // we already have a path, update trash with new keys\n\n\n      for (key in state.Database.keyCnt) {\n        if (this.keys.path.indexOf(key) === -1 && this.keys.other.indexOf(key) === -1 && this.trash.indexOf(key) === -1 && state.Utils.missing(this.ignore, key)) {\n          pathSet[key] = \"trash\";\n          this.select.val[key] = undefined;\n          this.where[key] = \"\";\n          this.trash.push(key);\n        }\n      }\n    } else {\n      // new path...\n      //console.log(\"New path\");\n      // ...define this.select.val for all keys in input data\n      for (key in state.Database.keyCnt) {\n        pathSet[key] = \"data\";\n      }\n\n      ;\n      this.keys.path = [];\n      this.other.table = [];\n      this.other.rest = [];\n      this.select.val = {}; // no values are set so far\n\n      this.where = {};\n      console.log(\"Copy default trash keys.\", JSON.stringify(state.Default.current.trash)); // copy default trash keys (that are used) to trash...\n\n      if (state.Default.current.trash !== undefined) {\n        var tlen = state.Default.current.trash.length;\n\n        for (ii = 0; ii < tlen; ii++) {\n          key = state.Default.current.trash[ii];\n\n          if (pathSet[key] !== undefined) {\n            //\t\t\tif (state.Utils.missing(this.trash,key)) { \n            //\t\t\t    this.trash.push(key);\n            //\t\t\t};\n            pathSet[key] = undefined; // ignore key from now on...\n          }\n        } //console.log(\"Pathset:\",JSON.stringify(pathSet),JSON.stringify(state.Default.current.trash));\n\n      }\n\n      ; //console.log(\"Copy default other keys.\");\n      //console.log(\"makePath A:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n      // console.log(\"Added trash:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n      // copy default other keys (that are used) to other...\n\n      if (state.Default.current.other !== undefined) {\n        var klen = state.Default.current.other.length;\n\n        for (ii = 0; ii < klen; ii++) {\n          key = state.Default.current.other[ii];\n\n          if (pathSet[key] !== undefined) {\n            // key not present in input data\n            if (state.Utils.missing(this.keys.other, key)) {\n              this.keys.other.push(key);\n            }\n\n            ;\n            pathSet[key] = \"found\";\n          }\n        }\n      } //console.log(\"makePath B:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n      //console.log(\"Add missing keys.\");\n      // add missing keys to path\n\n\n      for (key in state.Database.keyCnt) {\n        if (state.Utils.missing(this.ignore, key)) {\n          if (pathSet[key] === \"data\") {\n            if (state.Utils.missing(this.keys.other, key)) {\n              this.keys.other.push(key);\n            }\n\n            ; //console.log(\"Added key:\",key);\n\n            pathSet[key] = \"added\";\n          }\n        }\n\n        ;\n      }\n\n      ; // add undefined values in values\n      // for (key in state.Database.keyCnt) {\n      //     if (state.Database.keyCnt[key].cnt<state.Database.cnt) {\n      // \tstate.Database.values[key].push(undefined);\n      //     }\n      // }\n      // // sort sub-path according to count...\n      // this.keys.other=this.keys.other.sort(function(state,a, b) {\n      //     if (state.Database.values[a]  === undefined) {\n      // \treturn -1;\n      //     } else if (state.Database.values[b]  === undefined) {\n      // \treturn 1;\n      //     } else {\n      // \treturn state.Database.values[a].length - state.Database.values[b].length\n      //     }\n      // });\n      //console.log(\"makePath C:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n      //console.log(\"Push other keys to table and rest.\");\n\n      var glen = this.keys.other.length;\n\n      for (ii = 0; ii < glen; ii++) {\n        key = this.keys.other[ii];\n\n        if (ii < 2) {\n          this.other.table.push(key);\n        } else {\n          this.other.rest.push(key);\n        }\n      }\n    }\n\n    console.log(\"makePath D:\", JSON.stringify(state.Path.keys), JSON.stringify(state.Path.other), JSON.stringify(state.Path.trash));\n    state.Navigate.reset(state);\n    console.log(\"keys:\", JSON.stringify(state.Database.values));\n    console.log(\"Before Valid:\", JSON.stringify(state.Path.valid), JSON.stringify(state.Path.keys));\n    state.Utils.cpArray(state.Path.valid, state.Path.keys.path);\n    state.Utils.cpArray(state.Path.valid, state.Path.keys.other);\n    state.Utils.cpArray(state.Path.valid, state.Path.trash);\n    console.log(\"After Valid:\", JSON.stringify(state.Path.valid), JSON.stringify(state.Path.keys)); //console.log(\"Completed makepath.\");\n  };\n\n  this.getIndex = function (state, trg) {\n    return this.keys.path.indexOf(trg);\n  };\n\n  this.exportAllKeys = function (state) {\n    // export keys from \"all\" to \"rest\"\n    this.other.table = [];\n    this.other.rest = [];\n    var jj = 0;\n    var key, ii;\n    var delay = false;\n\n    if (this.keys.other !== undefined) {\n      var olen = this.keys.other.length;\n\n      for (ii = 0; ii < olen; ii++) {\n        key = this.keys.other[ii];\n\n        if (key === \"\") {\n          if (jj === 0) {\n            delay = true;\n          } else if (jj < 2) {\n            jj = jj + 1;\n          }\n        } else if (state.Matrix.keyCnt[key] === undefined || state.Matrix.keyCnt[key] === 0) {// do nothing\n          //console.log(\"Ignoring key:\",key,JSON.stringify(state.Matrix.keyCnt[key]));\n        } else {\n          //console.log(\"Adding key:\",key,JSON.stringify(state.Matrix.keyCnt[key]));\n          if (jj < 2) {\n            this.other.table.push(key);\n            jj = jj + 1;\n\n            if (delay && jj < 2) {\n              jj = jj + 1;\n            }\n\n            ;\n          } else if (key !== \"\") {\n            this.other.rest.push(key);\n          }\n        }\n      }\n\n      ;\n    } // sanity check...\n\n\n    var vlen = this.valid.length;\n\n    for (ii = 0; ii < vlen; ii++) {\n      key = this.valid[ii];\n\n      if (this.keys.path.indexOf(key) === -1 && this.keys.other.indexOf(key) === -1 && this.trash.indexOf(key) === -1) {\n        //console.log(\"**** Path failed sanity check:\",\n        //JSON.stringify(this.keys),JSON.stringify(this.trash),key);\n        this.trash.push(key);\n      }\n    } //this.sortTableKeys(state);\n    //console.log(\"Exported:\",JSON.stringify(this.keys),JSON.stringify(this.other),JSON.stringify(this.trash));\n\n  }; // move key from table to path\n\n\n  this.tableKeyToPath = function (state, key, val, where, cnt) {\n    // keep abscissa\n    //console.log(\"this.Selecting:\",key,\"=\",val,\", where=\",where);\n    var sid = state.Path.keys.other.indexOf(key);\n\n    if (sid !== -1) {\n      // key is a table-key...\n      state.Path.select.val[key] = [val];\n      state.Path.where[key] = where;\n      var src = state.Path.keys.other.splice(sid, 1); // remove from path\n\n      if (state.Utils.missing(state.Path.keys.path, src)) {\n        //console.log(\"Adding to path:\",JSON.stringify(src));\n        state.Utils.pushKey(state.Path.keys.path, src); //state.Path.keys.path=state.Path.keys.path.concat(src); // last path position\n      }\n\n      ;\n\n      if (cnt > 1 && state.Utils.missing(state.Path.trash, src)) {\n        //console.log(\"Adding \",JSON.stringify(src),\" to trash.\");\n        state.Utils.pushKey(state.Path.trash, src); //state.Path.trash=state.Path.trash.concat(src)\n      }\n\n      ; //console.log(\"Selectkey:\",JSON.stringify(setup),JSON.stringify(src));\n\n      return true;\n    } else {\n      console.log(\"Missing \", key, \" in path:\", JSON.stringify(state.Path.keys));\n      return false;\n    }\n  }; // get X-priority, {colx,coly1,coly2...)\n\n\n  this.sortTableKeys = function (state) {\n    // make priority index\n    var arr = state.Utils.cp(this.other.table);\n    var pri = state.Layout.getPriorityIndex(state, arr); // sort the array according to priority\n\n    this.other.table = arr.sort(function (a, b) {\n      if (a === \"\") {\n        return 1;\n      } else if (b === \"\") {\n        return -1;\n      } else if (pri[a] < pri[b]) {\n        return 1;\n      } else if (pri[a] > pri[b]) {\n        return -1;\n      } else {\n        return 0;\n      }\n    }); //console.log(\"TableKeys:\",JSON.stringify(this.other.table),\n    //\t\" Pri:\",JSON.stringify(state.Layout.priority),\n    //\t\" P:\",JSON.stringify(pri));\n\n    return;\n  };\n\n  this.keyVal = function (state, key) {\n    if (this.select.val[key] !== undefined && this.select.val[key] !== null && this.select.val[key] !== \"\") {\n      return this.select.val[key];\n    } else {\n      return;\n    }\n  };\n\n  this.keyValOk = function (state, val) {\n    var ok = true;\n    return ok;\n  };\n\n  this.moveKey = function (state, styp, skey, ttyp, tid) {\n    var sid = this.keys[styp].indexOf(skey);\n\n    if (sid !== -1) {\n      var src = this.keys[styp].splice(sid, 1); // remove from path\n\n      if (tid === undefined || tid === -1) {\n        this.keys[ttyp] = this.keys[ttyp].concat(src); // last position\n      } else {\n        state.Utils.spliceArray(this.keys[ttyp], tid, 0, src);\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveKeys = function (state, styp, skeys, ttyp, tid) {\n    var len = skeys.length;\n\n    for (var ss = 0; ss < len; ss++) {\n      var skey = skeys[ss];\n      var sid = this.keys[styp].indexOf(skey);\n\n      if (sid !== -1) {\n        var src = this.keys[styp].splice(sid, 1); // remove from path\n\n        if (tid === undefined || tid === -1) {\n          this.keys[ttyp] = this.keys[ttyp].concat(src); // last position\n        } else {\n          state.Utils.spliceArray(this.keys[ttyp], tid, 0, src);\n        }\n      }\n    }\n  };\n\n  this.swapTableKey = function (state, skey, tkey) {\n    var sid = this.other.table.indexOf(skey);\n    var tid = this.other.table.indexOf(tkey);\n\n    if (tid !== sid && this.other.table.length > 1) {\n      var tin2 = this.keys.other.indexOf(this.other.table[1]);\n      var tkey2 = this.keys.other.splice(tin2, 1); // remove from array\n\n      state.Utils.spliceArray(this.keys.other, 0, 0, tkey2); //console.log(\"Swapped:\",tkey2,tkey,JSON.stringify(this.keys.other));\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.delTableKey = function (state, key) {\n    var secondkey;\n    var secondind;\n    var sid = this.keys.other.indexOf(key);\n\n    if (sid !== -1) {\n      var sin = this.other.table.indexOf(key);\n      var save = sin === 0;\n\n      if (save) {\n        secondkey = this.other.table[1];\n        secondind = this.pullKey(state, \"other\", secondkey);\n      }\n\n      this.pullKey(state, \"other\", key);\n\n      if (save && secondind !== undefined && secondind !== -1) {\n        this.pushKey(state, \"other\", secondkey, secondind);\n      }\n\n      return sin;\n    }\n  };\n\n  this.duplicateTableKey = function (state, key) {\n    //console.log(\"MoveKey2Table:\",JSON.stringify(this.keys));\n    var sid = this.keys.other.indexOf(key);\n\n    if (sid !== -1) {\n      // exists\n      state.Utils.spliceArray(this.keys.other, sid, 0, key); //console.log(\"Duplicated key:\",key,JSON.stringify(this.keys.other));\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveTableKey = function (state, skey, ttyp, tid) {\n    var sid = this.keys.other.indexOf(skey);\n\n    if (sid !== -1) {\n      //var sin=\n      this.delTableKey(state, skey);\n\n      if (tid === undefined || tid === -1) {\n        this.keys[ttyp] = this.keys[ttyp].concat(skey); // last position\n      } else {\n        state.Utils.spliceArray(this.keys[ttyp], tid, 0, skey);\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveKey2Table = function (state, styp, skey, tkey) {\n    //console.log(\"MoveKey2Table:\",JSON.stringify(this.keys));\n    var tid = this.keys.other.indexOf(tkey);\n    var sid = this.keys[styp].indexOf(skey);\n\n    if (tid !== -1 && sid !== -1 && skey !== tkey) {\n      // exists and is not the same\n      this.keys[styp][sid] = tkey;\n      this.keys.other[tid] = skey;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveOther2Table = function (state, key) {\n    //console.log(\"MoveKey2Table:\",JSON.stringify(this.keys));\n    var sid = this.keys.other.indexOf(key);\n\n    if (sid !== -1) {\n      // exists\n      var src = this.keys.other.splice(sid, 1); // remove from array\n\n      state.Utils.spliceArray(this.keys.other, 0, 0, src); //console.log(\"Moved key:\",key,JSON.stringify(this.keys.other));\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveTrash2Table = function (state, tkey) {\n    var secondkey;\n    var secondind;\n    var tid = this.other.table.indexOf(tkey);\n\n    if (tid !== -1) {\n      var save = tid === 0;\n\n      if (save) {\n        secondkey = this.other.table[1];\n        secondind = this.pullKey(state, \"other\", secondkey);\n      }\n\n      ;\n      var tin = this.keys.other.indexOf(tkey);\n      this.moveTrash(state, \"other\", tin + 1);\n\n      if (save && secondind !== undefined && secondind !== -1) {\n        this.pushKey(state, \"other\", secondkey, secondind);\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveTrash = function (state, ttyp, tin) {\n    state.Utils.spliceArray(this.keys[ttyp], tin, 0, this.trash);\n    this.trash = [];\n  };\n\n  this.moveAllKey = function (state, styp, skey, ttyp, tid) {\n    var lenp = this.keys[styp].length;\n    var sid = this.keys[styp].indexOf(skey);\n\n    if (sid !== -1) {\n      var src = this.keys[styp].splice(sid, lenp - sid);\n      state.Utils.spliceArray(this.keys[ttyp], tid, 0, src);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.moveAllFirst = function (state, ttyp, tin) {\n    var tlen = this.keys[ttyp].length;\n    var src = this.keys[ttyp].splice(tin, tlen - tin);\n    state.Utils.spliceArray(this.keys[ttyp], 0, 0, src);\n  };\n\n  this.filterKeys = function (state, arr) {\n    var out = [];\n    var alen = arr.length;\n\n    for (var ii = 0; ii < alen; ii++) {\n      var val = arr[ii];\n\n      if (this.keyValOk(state, val)) {\n        out.push(val);\n      }\n    } //console.log(\"CheckOk \",JSON.stringify(arr),\"->\",JSON.stringify(out));\n\n\n    return out;\n  };\n\n  this.pullArrayKey = function (state, array, key) {\n    var sin = array.indexOf(key);\n\n    if (sin !== -1) {\n      //var src=\n      array.splice(sin, 1); // remove from path\n    }\n\n    ;\n    return sin;\n  }; //////////////////////////////// COL/ROW FUNCTIONS ///////////////////////\n\n\n  this.getColKey = function (state) {\n    var arr = state.Utils.cp(this.other.table);\n    var pri = state.Layout.getPriorityIndex(state, arr);\n\n    if (state.Layout.getLayoutMode(state) === state.Layout.code.layout.Map) {\n      return \"_lon\";\n    } else if (pri[this.other.table[0]] < pri[this.other.table[1]]) {\n      return this.other.table[1];\n    } else {\n      return this.other.table[0];\n    }\n  };\n\n  this.getRowKey = function (state) {\n    var arr = state.Utils.cp(this.other.table);\n    var pri = state.Layout.getPriorityIndex(state, arr);\n\n    if (state.Layout.getLayoutMode(state) === state.Layout.code.layout.Map) {\n      return \"_lat\";\n    } else if (pri[this.other.table[0]] < pri[this.other.table[1]]) {\n      return this.other.table[0];\n    } else {\n      return this.other.table[1];\n    }\n  };\n\n  this.pushKey = function (state, typ, key, ind) {\n    if (key !== undefined && key !== \"\") {\n      state.Utils.spliceArray(this.keys[typ], ind, 0, key);\n    }\n\n    state.Utils.clean(this.keys[typ]);\n  };\n\n  this.pullKey = function (state, typ, key) {\n    var sin = this.keys[typ].indexOf(key);\n\n    if (sin !== -1) {\n      var src = this.keys[typ].splice(sin, 1); // remove from path\n\n      if (src !== key) {\n        console.log(\"System error:\", src, key);\n      }\n\n      return sin;\n    }\n\n    ;\n  };\n\n  this.pushColKey = function (state, key) {\n    if (key !== undefined && key !== \"\") {\n      state.Utils.spliceArray(this.keys.other, 0, 0, key);\n    }\n  };\n\n  this.pushRowKey = function (state, key) {\n    if (key !== undefined && key !== \"\") {\n      state.Utils.spliceArray(this.keys.other, 1, 0, key);\n    }\n  };\n\n  this.checkNewPath = function (state, styp, skey) {\n    // check if values are defined for path\n    var ok, ii;\n    var sid = this.keys.path.indexOf(skey);\n\n    if (styp === this.type.table.ptyp) {\n      ok = true;\n      var lent = this.other.table.length - 1;\n\n      if (sid !== undefined) {\n        lent = sid + 1;\n      }\n\n      ;\n\n      for (ii = 0; ii <= lent; ii++) {\n        var key = this.other.table[ii];\n\n        if (this.keyVal(state, key) === undefined) {\n          ok = false;\n        }\n      }\n    } else if (styp === this.type.rest.ptyp) {\n      ok = this.checkNewPath(state, this.type.table.ptyp);\n\n      if (ok) {\n        var lenr = this.other.rest.length - 1;\n\n        if (sid !== undefined) {\n          lenr = sid + 1;\n        }\n\n        ;\n\n        for (ii = 0; ii <= lenr; ii++) {\n          key = this.other.rest[ii];\n\n          if (this.keyVal(state, key) === undefined) {\n            ok = false;\n          }\n        }\n      }\n    }\n\n    return ok;\n  }; //values[key]=values[key].filter(this.Unique);\n\n\n  this.Unique = function (value, index, self) {\n    return self.indexOf(value) === index;\n  };\n}\n\n;\nexport default Path;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/PathLib.js"],"names":["Path","keys","path","other","table","rest","trash","valid","ignore","select","val","where","home","tooltip","sort","click","type","ityp","ptyp","eye","trashRest","row","col","item","order","init","state","Utils","cleanSelect","pkeys","Object","lenk","length","ii","key","indexOf","undefined","goHome","buff","cp","remArray","prepArray","pushUrl","Navigate","store","refreshHistory","Show","show","setHome","console","log","getSnapshot","setSnapshot","snapshot","restore","toggleSelect","vals","vid","splice","push","Database","makeKeytrg","keytrg","Max","setWhere","showPath","getTitle","title","forEach","index","lenv","getTitleDynamic","makeCnt","getOrderValues","skey","Matrix","values","plen","makeOrderValues","bumpOrder","value","src","spliceArray","showConfig","makePath","JSON","stringify","pathSet","olen","filter","Unique","keyCnt","missing","Default","current","tlen","klen","glen","reset","cpArray","getIndex","trg","exportAllKeys","jj","delay","vlen","tableKeyToPath","cnt","sid","pushKey","sortTableKeys","arr","pri","Layout","getPriorityIndex","a","b","keyVal","keyValOk","ok","moveKey","styp","ttyp","tid","concat","moveKeys","skeys","len","ss","swapTableKey","tkey","tin2","tkey2","delTableKey","secondkey","secondind","sin","save","pullKey","duplicateTableKey","moveTableKey","moveKey2Table","moveOther2Table","moveTrash2Table","tin","moveTrash","moveAllKey","lenp","moveAllFirst","filterKeys","out","alen","pullArrayKey","array","getColKey","getLayoutMode","code","layout","Map","getRowKey","typ","ind","clean","pushColKey","pushRowKey","checkNewPath","lent","lenr","self"],"mappings":"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","sourcesContent":["//console.log(\"Loading PathLib.js\");\n\nfunction Path() {\n    this.keys={path:[], // selected keys\n\t       other:[] // keys available for selection\n\t      };\n    this.other={table:[], // table keys\n\t\trest:[]   // keys available for table\n\t       };\n    this.trash=[];         // remaining valid keys\n    this.valid=[];         // list of valid keys\n    this.ignore=[\"max\",\"min\",\"minlat\",\"minlon\",\"maxlat\",\"maxlon\",\"cnt\",\"level\"]; // only visible in 1D and 0D tables\n    this.select={val:{}};  // current selection criteria\n    this.where={};         // current cache for where expressions\n    this.home={path:[],val:{}};  // initial home for data...\n    this.tooltip={keys:[],   // keys that will be displayed (in addition to row/col-keys)\n\t\t  select:[], // extra level of keys to distinguish reports\n\t\t  sort:[],   // which keys should be sorted?\n\t\t  click:[]}; // which keys should be clickable...\n    this.type = {\n\tpath :      {ityp:-1,ptyp:\"path\"},\n\teye :       {ityp:0, ptyp:\"eye\"},\n\ttable :     {ityp:1, ptyp:\"table\"},\n\trest :      {ityp:2, ptyp:\"rest\"},\n\ttrash :     {ityp:3, ptyp:\"trash\"},\n\ttrashRest : {ityp:4, ptyp:\"trashRest\"},\n\trow :       {ityp:5, ptyp:\"row\"},\n\tcol :       {ityp:6, ptyp:\"col\"},\n\titem :      {ityp:7, ptyp:\"item\"}\n    };\n    this.order={}; // how to order data\t    \n    this.init=function(state){\n\tstate.Utils.init(\"Path\",this);\n    };\n    this.cleanSelect=function(state) {\n\tvar pkeys=state.Path.keys.path;\n\tvar keys=Object.keys(state.Path.select.val);\n\tvar lenk=keys.length;\n\tfor (var ii=0;ii<lenk;ii++) {\n\t    var key=keys[ii];\n\t    if (pkeys.indexOf(key) === -1) {\n\t\tstate.Path.select.val[key]=undefined;\n\t    }\n\t}\n    };\n    this.goHome=function(state) {\n\tvar buff=state.Utils.cp(state.Path.keys.path);\n\tstate.Utils.remArray(buff,state.Path.home.path);\n\tstate.Utils.remArray(state.Path.keys.other,buff);\n\tstate.Utils.remArray(state.Path.keys.other,state.Path.home.path);\n\tstate.Utils.prepArray(state.Path.keys.other,buff);\n\tstate.Path.select.val=state.Utils.cp(state.Path.home.val);\n\tstate.Path.keys.path=state.Utils.cp(state.Path.home.path);\n\t//console.log(\">>>>>> Path.goHome: \",JSON.stringify(state.Path.home),JSON.stringify(state.Path.keys.path));\n\tstate.Utils.pushUrl(state);\n\tstate.Navigate.store(state);\n\tstate.Navigate.refreshHistory(state);\n\tstate.Show.show(state);\n    };\n    this.setHome=function(state) {\n\tstate.Path.cleanSelect(state);\n\tthis.home.path=state.Utils.cp(state.Path.keys.path);\n\tthis.home.val=state.Utils.cp(state.Path.select.val);\n\tstate.Utils.pushUrl(state);\n\tconsole.log(\"Setting home.\");\n    };\n    this.getSnapshot=function(state) { // store state\n\treturn {keys:state.Utils.cp(state.Path.keys),\n\t\tother:state.Utils.cp(state.Path.other),\n\t\tselect:state.Utils.cp(state.Path.select),\n\t\torder:state.Utils.cp(state.Path.order)};\n    };\n    this.setSnapshot=function(state,snapshot) { // store state\n\tstate.Utils.restore(state.Path,snapshot);\n    };\n    this.toggleSelect=function(state,key,val) {\n\tvar vals=state.Path.select.val[key];\n\t//console.log(\"toggleSelect:\",key,JSON.stringify(vals),\"'\"+val+\"'\");\n\tif (vals !== undefined) {\n\t    var vid=vals.indexOf(val)\n\t    if (vid !== -1) {  // remove item\n\t\tvals.splice(vid,1);\n\t\tif (vals.length===0) { // can never be totally empty...\n\t\t    vals.push(state.Database.makeKeytrg(state,key,state.Database.keytrg.Max));\n\t\t}\n\t\tstate.Path.select.val[key]=vals;\n\t    } else {\n\t\tstate.Path.select.val[key].push(val); // add item\n\t    }\n\t    state.Database.setWhere(state,key,state.Path.select.val);\n\t    state.Show.showPath(state);\n\t    //console.log(\"Finally Vals:\",key,JSON.stringify(state.Path.select.val[key]));\n\t}\n    };\n    this.getTitle=function(state) {\n\tvar title=\"\";\n\tvar keys=state.Path.keys.path;\n\tkeys.forEach(\n\t    function(key,index) {\n\t\tvar vals=state.Path.select.val[key];\n\t\t//console.log(\"   select:\",key,JSON.stringify(vals));\n\t\tif (vals === undefined) {vals=[];};\n\t\tvar lenv=vals.length\n\t\tfor (var ii=0;ii<lenv;ii++) {\n\t\t    var val=vals[ii]\n\t\t    if (title !== \"\") { title=title + \" | \";};\n\t\t    title=title+state.Database.getTitleDynamic(state,key,val);\n\t\t}\n\t    }\n\t);\n\t//console.log(\"Pathlib getTitle keys:\",JSON.stringify(keys),title);\n\treturn title;\n    };\n    this.makeCnt=function(state,key) {\n\treturn state.Path.select.val[key].length;\n    };\n    this.getOrderValues=function(state,skey){\n        if (state.Path.order[skey] === undefined) {\n            //console.log(\"Copying:\",JSON.stringify(Matrix.values[skey]));\n            return state.Matrix.values[skey];\n        } else {\n\t    var vals = state.Matrix.values[skey];\n\t    var plen = vals;\n\t    for (var ii = 0; ii < plen; ii++) {\n\t\tvar val=vals[ii];\n\t\tif (state.Path.order[skey].indexOf(val)===-1) {\n\t\t    state.Path.order[skey].push(val);\n\t\t}\n\t    };\n\t    return state.Path.order[skey];\n\t};\n    };\n    this.makeOrderValues=function(state,skey){\n        if (state.Path.order === undefined) {state.Path.order={};};\n        if (state.Path.order[skey] === undefined) {\n            //console.log(\"Copying:\",JSON.stringify(Matrix.values[skey]));\n            state.Path.order[skey]=state.Utils.cp(state.Matrix.values[skey]);\n        } else {\n\t    var vals = state.Matrix.values[skey];\n\t    var plen = vals;\n\t    for (var ii = 0; ii < plen; ii++) {\n\t\tvar val=vals[ii];\n\t\tif (state.Path.order[skey].indexOf(val)===-1) {\n\t\t    state.Path.order[skey].push(val);\n\t\t}\n\t    };\n\t};\n\treturn state.Path.order[skey];\n    };\n    this.bumpOrder=function(state,skey,value) {\n\t//console.log(\"Bump order:\",skey,value,JSON.stringify(state.Path.order));\n\tif (value===\"\") {\n\t    state.Path.order[skey]=undefined;\n\t} else {\n\t    this.makeOrderValues(state,skey);\n\t    var vid=state.Path.order[skey].indexOf(value);\n\t    if (vid !== -1 && vid > 0) {\n\t\tvar src=state.Path.order[skey].splice(vid, 1); // remove from array   \n\t\tstate.Utils.spliceArray(state.Path.order[skey],vid-1,0,src);\n\t    };\n\t}\n\tstate.Show.showConfig(state);\n    };\n    this.makePath=function(state) { // note that not all keys are present in the data!\n\tconsole.log(\"Entering makepath.\",JSON.stringify(this.keys));\n\tvar ii,key;\n\tvar pathSet=[];\n\tif (this.keys.path === undefined) {this.keys.path=[];};\n\tif (this.keys.other === undefined) {this.keys.other=[];};\n\tif (this.trash === undefined) {this.trash=[];};\n\tif (this.keys.path.length > 0 ||\n\t    this.keys.other.length > 0 ||\n\t    this.trash.length > 0) {\n\t    // remove duplicates\n\t    //console.log(\"Filtering.\");\n\t    var olen;\n\t    this.keys.path=this.keys.path.filter(this.Unique);\n\t    this.keys.other=this.keys.other.filter(this.Unique);\n\t    this.trash=this.trash.filter(this.Unique);\n\t    //console.log(\"setup:\",JSON.stringify(setup));\n\t    //console.log(\"Remove invalid keys from path.\");\n\t    // remove invalid keys from path\n\t    var plen = this.keys.path.length;\n\t    for (ii = 0; ii < plen; ii++) {\n\t\tkey=this.keys.path[ii];\n\t\tif (state.Database.keyCnt[key]  === undefined) {\n\t\t    this.keys.path.splice(ii, 1);\n\t\t    ii=ii-1;\n\t\t    plen=plen-1;\n\t\t}\n\t    }\n\t    console.log(\"Remove invalid keys from other.\");\n\t    // remove invalid keys from other\n\t    olen = this.keys.other.length;\n\t    for (ii = 0; ii < olen; ii++) {\n\t\tkey=this.keys.other[ii];\n\t\tif (state.Database.keyCnt[key]  === undefined) {\n\t\t    this.other.rest.splice(ii, 1);\n\t\t    ii=ii-1;\n\t\t    olen=olen-1;\n\t\t}\n\t    }\n\t    console.log(\"Remove invalid keys from trash.\");\n\t    // remove invalid keys from trash\n\t    olen = this.trash.length;\n\t    for (ii = 0; ii < olen; ii++) {\n\t\tkey=this.trash[ii];\n\t\tif (state.Database.keyCnt[key]  === undefined) {\n\t\t    this.trash.splice(ii, 1);\n\t\t    ii=ii-1;\n\t\t    olen=olen-1;\n\t\t}\n\t    }\n\t    //console.log(\"Update trash with keys.\");\n\t    // we already have a path, update trash with new keys\n\t    for (key in state.Database.keyCnt) {\n\t\tif (this.keys.path.indexOf(key)  === -1 && \n\t\t    this.keys.other.indexOf(key)  === -1 && \n\t\t    this.trash.indexOf(key)  === -1 &&\n\t\t    state.Utils.missing(this.ignore,key)) {\n\t\t    pathSet[key]=\"trash\";\n\t\t    this.select.val[key]=undefined;\n\t\t    this.where[key]=\"\";\n\t\t    this.trash.push(key);\n\t\t}\n\t    }\n\t} else {\n\t    // new path...\n\t    //console.log(\"New path\");\n\t    // ...define this.select.val for all keys in input data\n\t    for (key in state.Database.keyCnt) {\n\t\tpathSet[key]=\"data\";\n\t    };\n\t    this.keys.path=[];\n\t    this.other.table=[]\n\t    this.other.rest=[]\n\t    this.select.val={}; // no values are set so far\n\t    this.where={}\n\t    console.log(\"Copy default trash keys.\",JSON.stringify(state.Default.current.trash));\n\t    // copy default trash keys (that are used) to trash...\n\t    if (state.Default.current.trash !== undefined) {\n\t\tvar tlen = state.Default.current.trash.length;\n\t\tfor (ii = 0; ii < tlen; ii++) {\n\t\t    key=state.Default.current.trash[ii];\n\t\t    if (pathSet[key] !== undefined) {\n//\t\t\tif (state.Utils.missing(this.trash,key)) { \n//\t\t\t    this.trash.push(key);\n//\t\t\t};\n\t\t\tpathSet[key]=undefined; // ignore key from now on...\n\t\t    }\n\t\t}\n\t\t//console.log(\"Pathset:\",JSON.stringify(pathSet),JSON.stringify(state.Default.current.trash));\n\t    };\n\t    //console.log(\"Copy default other keys.\");\n\t    //console.log(\"makePath A:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n\t    // console.log(\"Added trash:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n\t    // copy default other keys (that are used) to other...\n\t    if (state.Default.current.other !== undefined) {\n\t\tvar klen = state.Default.current.other.length;\n\t\tfor (ii = 0; ii < klen; ii++) {\n\t\t    key=state.Default.current.other[ii];\n\t\t    if (pathSet[key] !== undefined) { // key not present in input data\n\t\t\tif (state.Utils.missing(this.keys.other,key)) {\n\t\t\t    this.keys.other.push(key);\n\t\t\t};\n\t\t\tpathSet[key]=\"found\";\n\t\t    }\n\t\t}\n\t    }\n\t    //console.log(\"makePath B:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n\t    //console.log(\"Add missing keys.\");\n\t    // add missing keys to path\n\t    for (key in state.Database.keyCnt) {\n\t\tif (state.Utils.missing(this.ignore,key)) {\n\t\t    if (pathSet[key] === \"data\") {\n\t\t\tif (state.Utils.missing(this.keys.other,key)) {\n\t\t\t    this.keys.other.push(key);\n\t\t\t};\n\t\t\t//console.log(\"Added key:\",key);\n\t\t\tpathSet[key] = \"added\";\n\t\t    }\n\t\t};\n\t    };\n\t    // add undefined values in values\n\t    // for (key in state.Database.keyCnt) {\n\t    //     if (state.Database.keyCnt[key].cnt<state.Database.cnt) {\n\t    // \tstate.Database.values[key].push(undefined);\n\t    //     }\n\t    // }\n\t    // // sort sub-path according to count...\n\t    // this.keys.other=this.keys.other.sort(function(state,a, b) {\n\t    //     if (state.Database.values[a]  === undefined) {\n\t    // \treturn -1;\n\t    //     } else if (state.Database.values[b]  === undefined) {\n\t    // \treturn 1;\n\t    //     } else {\n\t    // \treturn state.Database.values[a].length - state.Database.values[b].length\n\t    //     }\n\t    // });\n\t    //console.log(\"makePath C:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n\t    //console.log(\"Push other keys to table and rest.\");\n\t    var glen = this.keys.other.length;\n\t    for (ii = 0; ii < glen; ii++) {\n\t\tkey=this.keys.other[ii];\n\t\tif (ii<2) {\n\t\t    this.other.table.push(key);\n\t\t} else {\n\t\t    this.other.rest.push(key);\n\t\t}\n\t    }\n\t}\n\tconsole.log(\"makePath D:\",JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other),JSON.stringify(state.Path.trash));\n\tstate.Navigate.reset(state);\n\tconsole.log(\"keys:\",JSON.stringify(state.Database.values));\n\tconsole.log(\"Before Valid:\",JSON.stringify(state.Path.valid),JSON.stringify(state.Path.keys));\n\tstate.Utils.cpArray(state.Path.valid,state.Path.keys.path);\n\tstate.Utils.cpArray(state.Path.valid,state.Path.keys.other);\n\tstate.Utils.cpArray(state.Path.valid,state.Path.trash);\n\tconsole.log(\"After Valid:\",JSON.stringify(state.Path.valid),JSON.stringify(state.Path.keys));\n\t//console.log(\"Completed makepath.\");\n    };\n    this.getIndex=function(state,trg) {\n\treturn this.keys.path.indexOf(trg);\n    };\n    this.exportAllKeys=function(state) { // export keys from \"all\" to \"rest\"\n\tthis.other.table=[];\n\tthis.other.rest=[];\n\tvar jj=0;\n\tvar key,ii;\n\tvar delay=false;\n\tif (this.keys.other !== undefined) {\n\t    var olen=this.keys.other.length;\n\t    for (ii=0;ii<olen;ii++) {\n\t\tkey=this.keys.other[ii];\n\t\tif (key === \"\") {\n\t\t    if (jj === 0) {\n\t\t\tdelay=true;\n\t\t    } else if (jj < 2) {\n\t\t\tjj=jj+1\n\t\t    }\n\t\t} else if (state.Matrix.keyCnt[key] === undefined || state.Matrix.keyCnt[key] === 0) { // do nothing\n\t\t    //console.log(\"Ignoring key:\",key,JSON.stringify(state.Matrix.keyCnt[key]));\n\t\t} else {\n\t\t    //console.log(\"Adding key:\",key,JSON.stringify(state.Matrix.keyCnt[key]));\n\t\t    if (jj < 2) {\n\t\t\tthis.other.table.push(key);\n\t\t\tjj=jj+1;\n\t\t\tif (delay && jj<2) {jj=jj+1;};\n\t\t    } else if (key !== \"\") {\n\t\t\tthis.other.rest.push(key);\n\t\t    }\n\t\t}\n\t    };\n\t}\n\t// sanity check...\n\tvar vlen=this.valid.length;\n\tfor (ii=0;ii<vlen;ii++) {\n\t    key=this.valid[ii];\n\t    if (this.keys.path.indexOf(key)===-1 &&\n\t\tthis.keys.other.indexOf(key)===-1 &&\n\t\tthis.trash.indexOf(key)===-1) {\n\t\t//console.log(\"**** Path failed sanity check:\",\n\t\t//JSON.stringify(this.keys),JSON.stringify(this.trash),key);\n\t\tthis.trash.push(key);\n\t    }\n\t}\n\t//this.sortTableKeys(state);\n\t//console.log(\"Exported:\",JSON.stringify(this.keys),JSON.stringify(this.other),JSON.stringify(this.trash));\n    };\n    // move key from table to path\n    this.tableKeyToPath=function(state,key,val,where,cnt) { // keep abscissa\n\t//console.log(\"this.Selecting:\",key,\"=\",val,\", where=\",where);\n\tvar sid = state.Path.keys.other.indexOf(key);\n\tif (sid !== -1) { // key is a table-key...\n\t    state.Path.select.val[key]=[val];\n\t    state.Path.where[key]=where;\n\t    var src=state.Path.keys.other.splice(sid, 1); // remove from path\n\t    if ( state.Utils.missing(state.Path.keys.path,src)) {\n\t\t//console.log(\"Adding to path:\",JSON.stringify(src));\n\t\tstate.Utils.pushKey(state.Path.keys.path,src);\n\t\t//state.Path.keys.path=state.Path.keys.path.concat(src); // last path position\n\t    };\n\t    if (cnt>1 && state.Utils.missing(state.Path.trash,src)) {\n\t\t//console.log(\"Adding \",JSON.stringify(src),\" to trash.\");\n\t\tstate.Utils.pushKey(state.Path.trash,src);\n\t\t//state.Path.trash=state.Path.trash.concat(src)\n\t    };\n\t    //console.log(\"Selectkey:\",JSON.stringify(setup),JSON.stringify(src));\n\t    return true;\n\t} else {\n\t    console.log(\"Missing \",key,\" in path:\",JSON.stringify(state.Path.keys));\n\t    return false;\n\t}\n    };\n    // get X-priority, {colx,coly1,coly2...)\n    this.sortTableKeys=function(state){\n\t// make priority index\n\tvar arr=state.Utils.cp(this.other.table);\n\tvar pri=state.Layout.getPriorityIndex(state,arr);\n\t// sort the array according to priority\n\tthis.other.table=arr.sort(function(a,b){\n\t    if (a  === \"\") { \n\t\treturn 1;\n\t    } else if (b  === \"\") {\n\t\treturn -1;\n\t    } else if (pri[a]<pri[b]) { \n\t\treturn 1;\n\t    } else if (pri[a]>pri[b]) {\n\t\treturn -1;\n\t    } else {\n\t\treturn 0;\n\t    }\n\t});\n\t//console.log(\"TableKeys:\",JSON.stringify(this.other.table),\n\t//\t\" Pri:\",JSON.stringify(state.Layout.priority),\n\t//\t\" P:\",JSON.stringify(pri));\n\treturn\n    };\n    this.keyVal=function(state,key) {\n\tif (this.select.val[key] !== undefined &&\n\t    this.select.val[key] !== null &&\n\t    this.select.val[key] !== \"\") {\n\t    return this.select.val[key];\n\t} else {\n\t    return;\n\t}\n    };\n    this.keyValOk=function(state,val) {\n\tvar ok=true;\n\treturn ok;\n    };\n    this.moveKey=function(state,styp,skey,ttyp,tid) {\n\tvar sid=this.keys[styp].indexOf(skey);\n\tif (sid !== -1) {\n\t    var src=this.keys[styp].splice(sid, 1);    // remove from path\n\t    if (tid  === undefined || tid  === -1) {\n\t\tthis.keys[ttyp]=this.keys[ttyp].concat(src);         // last position\n\t    } else {\n\t\tstate.Utils.spliceArray(this.keys[ttyp],tid, 0, src);\n\t    }\n\t    return true;\n\t}else {\n\t    return false;\n\t}\n    };\n    this.moveKeys=function(state,styp,skeys,ttyp,tid) {\n\tvar len=skeys.length\n\tfor (var ss=0;ss<len;ss++) {\n\t    var skey=skeys[ss];\n\t    var sid=this.keys[styp].indexOf(skey);\n\t    if (sid !== -1) {\n\t\tvar src=this.keys[styp].splice(sid, 1);    // remove from path\n\t\tif (tid  === undefined || tid  === -1) {\n\t\t    this.keys[ttyp]=this.keys[ttyp].concat(src);         // last position\n\t\t} else {\n\t\t    state.Utils.spliceArray(this.keys[ttyp],tid, 0, src);\n\t\t}\n\t    }\n\t}\n    };\n    this.swapTableKey=function(state,skey,tkey) {\n\tvar sid=this.other.table.indexOf(skey);\n\tvar tid=this.other.table.indexOf(tkey);\n\tif (tid !== sid && this.other.table.length > 1) {\n\t    var tin2=this.keys.other.indexOf(this.other.table[1]);\n\t    var tkey2=this.keys.other.splice(tin2, 1);    // remove from array\n\t    state.Utils.spliceArray(this.keys.other,0, 0, tkey2);\n\t    //console.log(\"Swapped:\",tkey2,tkey,JSON.stringify(this.keys.other));\n\t    return true;\n\t} else {\n\t    return false;\n\t}\n    };\n    this.delTableKey=function(state,key) {\n\tvar secondkey;\n\tvar secondind;\n\tvar sid=this.keys.other.indexOf(key);\n\tif (sid !== -1) {\n\t    var sin=this.other.table.indexOf(key);\n\t    var save=(sin  === 0);\n\t    if (save) {\n\t\tsecondkey=this.other.table[1];\n\t\tsecondind=this.pullKey(state,\"other\",secondkey);\n\t    }\n\t    this.pullKey(state,\"other\",key);\n\t    if (save && secondind !== undefined && secondind !== -1) {\n\t\tthis.pushKey(state,\"other\",secondkey,secondind);\n\t    }\n\t    return sin;\n\t}\n    };\n    this.duplicateTableKey=function(state,key) {\n\t//console.log(\"MoveKey2Table:\",JSON.stringify(this.keys));\n\tvar sid=this.keys.other.indexOf(key)\n\tif (sid !== -1) { // exists\n\t    state.Utils.spliceArray(this.keys.other,sid, 0, key);\n\t    //console.log(\"Duplicated key:\",key,JSON.stringify(this.keys.other));\n\t    return true;\n\t} else {\n\t    return false;\n\t}\n    };\n    this.moveTableKey=function(state,skey,ttyp,tid) {\n\tvar sid=this.keys.other.indexOf(skey);\n\tif (sid !== -1) {\n\t    //var sin=\n\t    this.delTableKey(state,skey);\n\t    if (tid  === undefined || tid  === -1) {\n\t\tthis.keys[ttyp]=this.keys[ttyp].concat(skey);         // last position\n\t    } else {\n\t\tstate.Utils.spliceArray(this.keys[ttyp],tid, 0, skey);\n\t    }\n\t    return true;\n\t}else {\n\t    return false;\n\t}\n    };\n    this.moveKey2Table=function(state,styp,skey,tkey) {\n\t//console.log(\"MoveKey2Table:\",JSON.stringify(this.keys));\n\tvar tid=this.keys.other.indexOf(tkey);\n\tvar sid=this.keys[styp].indexOf(skey)\n\tif (tid !== -1 && sid !== -1 && skey !== tkey) { // exists and is not the same\n\t    this.keys[styp][sid]=tkey\n\t    this.keys.other[tid]=skey\n\t    return true;\n\t} else {\n\t    return false;\n\t}\n    };\n    this.moveOther2Table=function(state,key) {\n\t//console.log(\"MoveKey2Table:\",JSON.stringify(this.keys));\n\tvar sid=this.keys.other.indexOf(key)\n\tif (sid !== -1) { // exists\n\t    var src=this.keys.other.splice(sid, 1);    // remove from array\n\t    state.Utils.spliceArray(this.keys.other,0, 0, src);\n\t    //console.log(\"Moved key:\",key,JSON.stringify(this.keys.other));\n\t    return true;\n\t} else {\n\t    return false;\n\t}\n    };\n    this.moveTrash2Table=function(state,tkey) {\n\tvar secondkey;\n\tvar secondind;\n\tvar tid=this.other.table.indexOf(tkey);\n\tif (tid !== -1) {\n\t    var save=(tid  === 0);\n\t    if (save) {\n\t\tsecondkey=this.other.table[1];\n\t\tsecondind=this.pullKey(state,\"other\",secondkey);\n\t    };\n\t    var tin=this.keys.other.indexOf(tkey);\n\t    this.moveTrash(state,\"other\",tin+1);\n\t    if (save && secondind !== undefined && secondind !== -1) {\n\t\tthis.pushKey(state,\"other\",secondkey,secondind);\n\t    }\n\t    return true;\n\t} else {\n\t    return false;\n\t}\n    };\n    this.moveTrash=function(state,ttyp,tin) {\n\tstate.Utils.spliceArray(this.keys[ttyp],tin, 0, this.trash);\n\tthis.trash=[];\n    };\n    this.moveAllKey=function(state,styp,skey,ttyp,tid) {\n\tvar lenp=this.keys[styp].length;\n\tvar sid=this.keys[styp].indexOf(skey);\n\tif (sid !== -1) {\n\t    var src=this.keys[styp].splice(sid,lenp-sid);\n\t    state.Utils.spliceArray(this.keys[ttyp],tid,0,src);\n\t    return true;\n\t} else {\n\t    return false;\n\t}\n    };\n    this.moveAllFirst=function(state,ttyp,tin) {\n\tvar tlen=this.keys[ttyp].length;\n\tvar src=this.keys[ttyp].splice(tin,tlen-tin);\n\tstate.Utils.spliceArray(this.keys[ttyp],0, 0,src);\n    };\n    this.filterKeys=function(state,arr) {\n\tvar out=[];\n\tvar alen=arr.length;\n\tfor(var ii=0; ii<alen; ii++) {\n\t    var val=arr[ii];\n\t    if (this.keyValOk(state,val)) {\n\t\tout.push(val);\n\t    }\n\t}\n\t//console.log(\"CheckOk \",JSON.stringify(arr),\"->\",JSON.stringify(out));\n\treturn out;\n    };\n    this.pullArrayKey=function(state,array,key) {\n\tvar sin=array.indexOf(key);\n\tif (sin !== -1) {\n\t    //var src=\n\t    array.splice(sin, 1);    // remove from path\n\t};\n\treturn sin;\n    };\n    //////////////////////////////// COL/ROW FUNCTIONS ///////////////////////\n    this.getColKey=function(state) {\n\tvar arr=state.Utils.cp(this.other.table);\n\tvar pri=state.Layout.getPriorityIndex(state,arr);\n\tif (state.Layout.getLayoutMode(state) === state.Layout.code.layout.Map) {\n\t    return \"_lon\";\n\t} else if (pri[this.other.table[0]] < pri[this.other.table[1]]) {\n\t    return this.other.table[1];\n\t} else {\n\t    return this.other.table[0];\n\t}\n    };\n    this.getRowKey=function(state) {\n\tvar arr=state.Utils.cp(this.other.table);\n\tvar pri=state.Layout.getPriorityIndex(state,arr);\n\tif (state.Layout.getLayoutMode(state) === state.Layout.code.layout.Map) {\n\t    return \"_lat\";\n\t} else if (pri[this.other.table[0]] < pri[this.other.table[1]]) {\n\t    return this.other.table[0];\n\t} else {\n\t    return this.other.table[1];\n\t}\n    };\n    this.pushKey=function(state,typ,key,ind) {\n\tif (key !== undefined && key !== \"\") {\n\t    state.Utils.spliceArray(this.keys[typ], ind, 0, key);\n\t}\n\tstate.Utils.clean(this.keys[typ]);\n    };\n    this.pullKey=function(state,typ,key) {\n\tvar sin=this.keys[typ].indexOf(key);\n\tif (sin !== -1) {\n\t    var src=this.keys[typ].splice(sin, 1);    // remove from path\n\t    if (src !== key) {console.log(\"System error:\",src,key);}\n\t    return sin;\n\t};\n    };\n    this.pushColKey=function(state,key) {\n\tif (key !== undefined && key !== \"\") {\n\t    state.Utils.spliceArray(this.keys.other,0, 0, key);\n\t}\n    };\n    this.pushRowKey=function(state,key) {\n\tif (key !== undefined && key !== \"\") {\n\t    state.Utils.spliceArray(this.keys.other,1, 0, key);\n\t}\n    };\n    this.checkNewPath=function(state,styp,skey) { // check if values are defined for path\n\tvar ok,ii;\n\tvar sid=this.keys.path.indexOf(skey);\n\tif (styp  === this.type.table.ptyp) {\n\t    ok=true;\n\t    var lent=this.other.table.length-1;\n\t    if (sid !== undefined) {lent=sid+1;};\n\t    for (ii = 0; ii <= lent; ii++) {\n\t\tvar key=this.other.table[ii];\n\t\tif (this.keyVal(state,key)  === undefined) {\n\t\t    ok=false;\n\t\t}\n\t    }\n\t} else if (styp  === this.type.rest.ptyp) {\n\t    ok=this.checkNewPath(state,this.type.table.ptyp);\n\t    if (ok) {\n\t\tvar lenr=this.other.rest.length-1;\n\t\tif (sid !== undefined) {lenr=sid+1;};\n\t\tfor (ii = 0; ii <= lenr; ii++) {\n\t\t    key=this.other.rest[ii];\n\t\t    if (this.keyVal(state,key)  === undefined) {\n\t\t\tok=false;\n\t\t    }\n\t\t}\n\t    }\n\t}\n\treturn ok;\n    };\n    //values[key]=values[key].filter(this.Unique);\n    this.Unique=function(value, index, self) { \n\treturn self.indexOf(value)  === index;\n    }\n};\nexport default Path;\n"]},"metadata":{},"sourceType":"module"}