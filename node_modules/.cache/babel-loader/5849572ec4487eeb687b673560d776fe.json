{"ast":null,"code":"import _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/CanvasGraphComponent.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nvar styles = function styles(theme) {\n  return {\n    canvas: {},\n    pointer: {\n      cursor: \"pointer\"\n    },\n    nopointer: {}\n  };\n};\n\nfunction updateCanvas(item) {\n  var _item$props = item.props,\n      state = _item$props.state,\n      elements = _item$props.elements,\n      colkey = _item$props.colkey,\n      rowkey = _item$props.rowkey,\n      colvalues = _item$props.colvalues,\n      index = _item$props.index,\n      range = _item$props.range,\n      plan = _item$props.plan;\n  var cnv = item.refs.canvas; // canvas\n\n  var ctx = cnv.getContext('2d'); // context\n\n  var step = plan.step;\n  var height = cnv.height;\n  var elen = elements.length;\n  var blev = -1;\n  var ee;\n  var tot = 0;\n\n  for (ee = 0; ee < elen; ee++) {\n    tot = tot + elements[ee].docs.length;\n  }\n\n  ; // total number of segments\n\n  var cnt = 0;\n  var dw = cnv.width / Math.max(step, tot); // width of graph segment\n\n  var clen = 0;\n\n  if (colvalues !== undefined) {\n    clen = colvalues.length;\n  }\n\n  ; // number of columns\n  //console.log(\"******** Canvas elements:\",elen,tot,dw,width)\n\n  console.log(\"Range:\", JSON.stringify(range));\n  var first = true;\n\n  for (ee = 0; ee < elen; ee++) {\n    // loop over elements\n    var el = elements[ee];\n    var level = el.lev;\n    var color = state.Colors.getLevelColor(level);\n    blev = Math.max(blev, level);\n    var docs = el.docs;\n    var dlen = docs.length; //console.log(\"   El:\",colkey,ee,level,blev); // JSON.stringify(lev),JSON.stringify(d),\n    //console.log(\"Element:\",level,color,tot,cnt);\n\n    if (dlen > 0) {\n      for (var jj = 0; jj < dlen; jj++) {\n        // loop over segments in each element\n        cnt = cnt + 1;\n        var d = docs[jj];\n        state.Threshold.setGThr(state, d);\n        var lev = state.Threshold.getLevel(state, d);\n        var col = state.Colors.getLevelColor(lev); //console.log(\"   Doc:\",colkey,jj,d.level,col,JSON.stringify(lev),JSON.stringify(d)); // \n\n        for (var ii = index; ii < Math.min(index + step, clen); ii++) {\n          //console.log(\"   Checking Val:\",colkey,rowkey,ii,colvalues[ii],d[colkey]);\n          //console.log(\"Position:\",ii,jj,dlen,step,colkey,rowkey,colvalues[ii],d[colkey])\n          if (d[colkey] === colvalues[ii]) {\n            if (first) {\n              first = false; //console.log(\"Doc:\",jj,JSON.stringify(d));\n            }\n\n            ;\n            var t = state.Threshold.getThresholds(d); //console.log(\"Making canvas:\",ii,colvalues[ii],color,JSON.stringify(d),\n            //\t    \" Thr=\",JSON.stringify(t),width,height,JSON.stringify(range));\n            //console.log(\"CanvasGraph:\",ii,jj,d.dtg,color,level,JSON.stringify(t));\n\n            var min = range[0];\n            var max = range[1];\n            var ymin = min;\n\n            if (t.min !== undefined && t.min[state.Threshold.ival] !== undefined) {\n              ymin = t.min[state.Threshold.ival];\n            }\n\n            var ymax = max;\n\n            if (t.max !== undefined && t.max[state.Threshold.ival] !== undefined) {\n              ymax = t.max[state.Threshold.ival];\n            }\n\n            var mm = ii - index;\n\n            if (step < tot) {\n              mm = cnt - 1;\n            } //console.log(\" canvas position:\",mm,ii,cnt,step,tot)\n\n\n            var xmin = mm * dw; // width/10;\n\n            var xmax = (mm + 1) * dw - 2; //width-2*xmin;\n\n            var zmin = state.Show.scale(ymin, min, max, height, 0);\n            var zmax = state.Show.scale(ymax, min, max, height, 0); //console.log(\"Fill:\",xmin,xmax,width,zmin,(zmax-zmin),height,color);\n            //ctx.fillStyle=\"cornflowerblue\";\n\n            color = col;\n\n            if (color !== undefined) {\n              ctx.fillStyle = color;\n              ctx.fillRect(xmin, zmin, xmax - xmin, zmax - zmin);\n            }\n\n            ; //ctx.beginPath();\n            //ctx.lineWidth=2;\n            //if (color !== undefined) {ctx.strokeStyle=color;}\n            //ctx.strokeStyle=\"black\";\n            //ctx.moveTo(xmin,zmax);\n            //ctx.lineTo(xmax,zmax);\n            //ctx.stroke();\n            // draw thresholds\n\n            if (color !== undefined) {\n              for (var msr in t) {\n                var tt = t[msr];\n                var tmax = tt[state.Threshold.imax];\n                var tthr = tt[state.Threshold.ithr];\n                var tkey = tt[state.Threshold.ikey]; //var tlev  = tt[state.Threshold.ilev];\n                //var tval  = tt[state.Threshold.ival];\n\n                var ts;\n\n                if (tmax) {\n                  ts = state.Threshold.thrs[tthr][tkey].max;\n                } else {\n                  ts = state.Threshold.thrs[tthr][tkey].min;\n                }\n\n                ;\n                var tlen = ts.length;\n\n                for (var ll = 0; ll < tlen; ll++) {\n                  var tyval = ts[ll];\n                  var tzval = state.Show.scale(tyval, min, max, height, 0);\n                  var scolor = state.Colors.getLevelColor(ll);\n                  ctx.beginPath();\n                  ctx.lineWidth = 2;\n\n                  if (scolor !== undefined) {\n                    ctx.strokeStyle = scolor;\n                  }\n\n                  ctx.moveTo(xmin, tzval);\n                  ctx.lineTo(xmax, tzval);\n                  ctx.stroke(); //console.log(\"Stroke color:\",scolor,ll,tzval,cnv.width);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  ;\n\n  if (tot === 0) {//console.log(\"No draw:\",JSON.stringify(colvalues),JSON.stringify(docs),dlen);\n  } else {//console.log(\"Drew:\",JSON.stringify(colvalues),tot,dlen);\n    }\n\n  ctx.lineWidth = 5;\n  var bcolor = state.Colors.getLevelColor(blev); //console.log(\"   Box:\",colkey,blev,bcolor); // JSON.stringify(lev),JSON.stringify(d),\n\n  if (bcolor !== undefined) {\n    ctx.strokeStyle = bcolor;\n    ctx.strokeRect(0, 0, cnv.width, cnv.height);\n  } //console.log(\"CanvasGraph:\",cnv.width,cnv.height);\n\n}\n\nvar CanvasGraphComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CanvasGraphComponent, _React$Component);\n\n  function CanvasGraphComponent(props) {\n    var _this;\n\n    _classCallCheck(this, CanvasGraphComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CanvasGraphComponent).call(this, props));\n    var state = props.state;\n    return _this;\n  }\n\n  _createClass(CanvasGraphComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      updateCanvas(this);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      updateCanvas(this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          onclick = _this$props.onclick,\n          title = _this$props.title,\n          plan = _this$props.plan,\n          other = _objectWithoutProperties(_this$props, [\"classes\", \"onclick\", \"title\", \"plan\"]);\n\n      return React.createElement(\"canvas\", Object.assign({}, other, {\n        className: classes.canvas,\n        classes: classes,\n        onClick: onclick,\n        title: title,\n        plan: plan,\n        ref: \"canvas\",\n        width: plan.width,\n        height: plan.cell,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CanvasGraphComponent;\n}(React.Component);\n\nCanvasGraphComponent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CanvasGraphComponent);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/CanvasGraphComponent.js"],"names":["React","Component","PropTypes","withStyles","styles","theme","canvas","pointer","cursor","nopointer","updateCanvas","item","props","state","elements","colkey","rowkey","colvalues","index","range","plan","cnv","refs","ctx","getContext","step","height","elen","length","blev","ee","tot","docs","cnt","dw","width","Math","max","clen","undefined","console","log","JSON","stringify","first","el","level","lev","color","Colors","getLevelColor","dlen","jj","d","Threshold","setGThr","getLevel","col","ii","min","t","getThresholds","ymin","ival","ymax","mm","xmin","xmax","zmin","Show","scale","zmax","fillStyle","fillRect","msr","tt","tmax","imax","tthr","ithr","tkey","ikey","ts","thrs","tlen","ll","tyval","tzval","scolor","beginPath","lineWidth","strokeStyle","moveTo","lineTo","stroke","bcolor","strokeRect","CanvasGraphComponent","classes","onclick","title","other","cell","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,MAAM,EAAE,EADa;AAGrBC,IAAAA,OAAO,EAAE;AACZC,MAAAA,MAAM,EAAC;AADK,KAHY;AAMrBC,IAAAA,SAAS,EAAE;AANU,GAAL;AAAA,CAApB;;AAUA,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AAAA,oBAC0CA,IAAI,CAACC,KAD/C;AAAA,MACjBC,KADiB,eACjBA,KADiB;AAAA,MACXC,QADW,eACXA,QADW;AAAA,MACFC,MADE,eACFA,MADE;AAAA,MACKC,MADL,eACKA,MADL;AAAA,MACYC,SADZ,eACYA,SADZ;AAAA,MACsBC,KADtB,eACsBA,KADtB;AAAA,MAC4BC,KAD5B,eAC4BA,KAD5B;AAAA,MACkCC,IADlC,eACkCA,IADlC;AAExB,MAAMC,GAAG,GAACV,IAAI,CAACW,IAAL,CAAUhB,MAApB,CAFwB,CAEW;;AACnC,MAAMiB,GAAG,GAAGF,GAAG,CAACG,UAAJ,CAAe,IAAf,CAAZ,CAHwB,CAGW;;AACnC,MAAMC,IAAI,GAACL,IAAI,CAACK,IAAhB;AACA,MAAIC,MAAM,GAAGL,GAAG,CAACK,MAAjB;AACA,MAAIC,IAAI,GAACb,QAAQ,CAACc,MAAlB;AACA,MAAIC,IAAI,GAAC,CAAC,CAAV;AACA,MAAIC,EAAJ;AACA,MAAIC,GAAG,GAAC,CAAR;;AAAW,OAAKD,EAAE,GAAC,CAAR,EAAUA,EAAE,GAACH,IAAb,EAAkBG,EAAE,EAApB,EAAwB;AAACC,IAAAA,GAAG,GAACA,GAAG,GAACjB,QAAQ,CAACgB,EAAD,CAAR,CAAaE,IAAb,CAAkBJ,MAA1B;AAAkC;;AAAA,GAT9C,CASgD;;AACxE,MAAIK,GAAG,GAAC,CAAR;AACA,MAAIC,EAAE,GAAEb,GAAG,CAACc,KAAJ,GAAUC,IAAI,CAACC,GAAL,CAASZ,IAAT,EAAcM,GAAd,CAAlB,CAXwB,CAWc;;AACtC,MAAIO,IAAI,GAAC,CAAT;;AAAY,MAAIrB,SAAS,KAAKsB,SAAlB,EAA6B;AAACD,IAAAA,IAAI,GAACrB,SAAS,CAACW,MAAf;AAAuB;;AAAA,GAZzC,CAY2C;AACnE;;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBC,IAAI,CAACC,SAAL,CAAexB,KAAf,CAArB;AACA,MAAIyB,KAAK,GAAC,IAAV;;AACA,OAAKd,EAAE,GAAC,CAAR,EAAUA,EAAE,GAACH,IAAb,EAAkBG,EAAE,EAApB,EAAwB;AAAI;AAC/B,QAAIe,EAAE,GAAC/B,QAAQ,CAACgB,EAAD,CAAf;AACA,QAAIgB,KAAK,GAACD,EAAE,CAACE,GAAb;AACA,QAAIC,KAAK,GAACnC,KAAK,CAACoC,MAAN,CAAaC,aAAb,CAA2BJ,KAA3B,CAAV;AACAjB,IAAAA,IAAI,GAACO,IAAI,CAACC,GAAL,CAASR,IAAT,EAAciB,KAAd,CAAL;AACA,QAAId,IAAI,GAACa,EAAE,CAACb,IAAZ;AACA,QAAImB,IAAI,GAACnB,IAAI,CAACJ,MAAd,CAN2B,CAO3B;AACA;;AACA,QAAIuB,IAAI,GAAC,CAAT,EAAY;AACR,WAAK,IAAIC,EAAE,GAAC,CAAZ,EAAcA,EAAE,GAACD,IAAjB,EAAsBC,EAAE,EAAxB,EAA4B;AAAI;AACnCnB,QAAAA,GAAG,GAACA,GAAG,GAAC,CAAR;AACA,YAAIoB,CAAC,GAACrB,IAAI,CAACoB,EAAD,CAAV;AACAvC,QAAAA,KAAK,CAACyC,SAAN,CAAgBC,OAAhB,CAAwB1C,KAAxB,EAA8BwC,CAA9B;AACA,YAAIN,GAAG,GAAClC,KAAK,CAACyC,SAAN,CAAgBE,QAAhB,CAAyB3C,KAAzB,EAA+BwC,CAA/B,CAAR;AACA,YAAII,GAAG,GAAC5C,KAAK,CAACoC,MAAN,CAAaC,aAAb,CAA2BH,GAA3B,CAAR,CAL+B,CAM/B;;AACA,aAAK,IAAIW,EAAE,GAACxC,KAAZ,EAAkBwC,EAAE,GAACtB,IAAI,CAACuB,GAAL,CAASzC,KAAK,GAACO,IAAf,EAAoBa,IAApB,CAArB,EAA+CoB,EAAE,EAAjD,EAAqD;AACjD;AACA;AACA,cAAIL,CAAC,CAACtC,MAAD,CAAD,KAAeE,SAAS,CAACyC,EAAD,CAA5B,EAAkC;AACrC,gBAAId,KAAJ,EAAW;AACPA,cAAAA,KAAK,GAAC,KAAN,CADO,CAEP;AACH;;AAAA;AACD,gBAAIgB,CAAC,GAAC/C,KAAK,CAACyC,SAAN,CAAgBO,aAAhB,CAA8BR,CAA9B,CAAN,CALqC,CAMrC;AACA;AACA;;AACA,gBAAIM,GAAG,GAACxC,KAAK,CAAC,CAAD,CAAb;AACA,gBAAIkB,GAAG,GAAClB,KAAK,CAAC,CAAD,CAAb;AACA,gBAAI2C,IAAI,GAACH,GAAT;;AACA,gBAAIC,CAAC,CAACD,GAAF,KAAUpB,SAAV,IAAuBqB,CAAC,CAACD,GAAF,CAAM9C,KAAK,CAACyC,SAAN,CAAgBS,IAAtB,MAAgCxB,SAA3D,EAAsE;AAClEuB,cAAAA,IAAI,GAACF,CAAC,CAACD,GAAF,CAAM9C,KAAK,CAACyC,SAAN,CAAgBS,IAAtB,CAAL;AACH;;AACD,gBAAIC,IAAI,GAAC3B,GAAT;;AACA,gBAAIuB,CAAC,CAACvB,GAAF,KAAUE,SAAV,IAAuBqB,CAAC,CAACvB,GAAF,CAAMxB,KAAK,CAACyC,SAAN,CAAgBS,IAAtB,MAAgCxB,SAA3D,EAAsE;AAClEyB,cAAAA,IAAI,GAACJ,CAAC,CAACvB,GAAF,CAAMxB,KAAK,CAACyC,SAAN,CAAgBS,IAAtB,CAAL;AACH;;AACD,gBAAIE,EAAE,GAACP,EAAE,GAACxC,KAAV;;AACA,gBAAIO,IAAI,GAACM,GAAT,EAAc;AAACkC,cAAAA,EAAE,GAAChC,GAAG,GAAC,CAAP;AAAU,aApBY,CAqBrC;;;AACA,gBAAIiC,IAAI,GAACD,EAAE,GAAC/B,EAAZ,CAtBqC,CAsBf;;AACtB,gBAAIiC,IAAI,GAAC,CAACF,EAAE,GAAC,CAAJ,IAAO/B,EAAP,GAAU,CAAnB,CAvBqC,CAuBb;;AACxB,gBAAIkC,IAAI,GAACvD,KAAK,CAACwD,IAAN,CAAWC,KAAX,CAAiBR,IAAjB,EAAsBH,GAAtB,EAA0BtB,GAA1B,EAA8BX,MAA9B,EAAqC,CAArC,CAAT;AACA,gBAAI6C,IAAI,GAAC1D,KAAK,CAACwD,IAAN,CAAWC,KAAX,CAAiBN,IAAjB,EAAsBL,GAAtB,EAA0BtB,GAA1B,EAA8BX,MAA9B,EAAqC,CAArC,CAAT,CAzBqC,CA0BrC;AACA;;AACAsB,YAAAA,KAAK,GAACS,GAAN;;AACA,gBAAIT,KAAK,KAAKT,SAAd,EAAyB;AACrBhB,cAAAA,GAAG,CAACiD,SAAJ,GAAcxB,KAAd;AACAzB,cAAAA,GAAG,CAACkD,QAAJ,CAAaP,IAAb,EAAkBE,IAAlB,EAAuBD,IAAI,GAACD,IAA5B,EAAkCK,IAAI,GAACH,IAAvC;AACH;;AAAA,aAhCoC,CAiCrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,gBAAIpB,KAAK,KAAKT,SAAd,EAAyB;AACrB,mBAAK,IAAImC,GAAT,IAAgBd,CAAhB,EAAmB;AACtB,oBAAIe,EAAE,GAAMf,CAAC,CAACc,GAAD,CAAb;AACA,oBAAIE,IAAI,GAAID,EAAE,CAAC9D,KAAK,CAACyC,SAAN,CAAgBuB,IAAjB,CAAd;AACA,oBAAIC,IAAI,GAAIH,EAAE,CAAC9D,KAAK,CAACyC,SAAN,CAAgByB,IAAjB,CAAd;AACA,oBAAIC,IAAI,GAAIL,EAAE,CAAC9D,KAAK,CAACyC,SAAN,CAAgB2B,IAAjB,CAAd,CAJsB,CAKtB;AACA;;AACA,oBAAIC,EAAJ;;AACA,oBAAIN,IAAJ,EAAU;AACNM,kBAAAA,EAAE,GAACrE,KAAK,CAACyC,SAAN,CAAgB6B,IAAhB,CAAqBL,IAArB,EAA2BE,IAA3B,EAAiC3C,GAApC;AACH,iBAFD,MAEO;AACH6C,kBAAAA,EAAE,GAACrE,KAAK,CAACyC,SAAN,CAAgB6B,IAAhB,CAAqBL,IAArB,EAA2BE,IAA3B,EAAiCrB,GAApC;AACH;;AAAA;AACD,oBAAIyB,IAAI,GAACF,EAAE,CAACtD,MAAZ;;AACA,qBAAK,IAAIyD,EAAE,GAAC,CAAZ,EAAcA,EAAE,GAACD,IAAjB,EAAsBC,EAAE,EAAxB,EAA4B;AACxB,sBAAIC,KAAK,GAACJ,EAAE,CAACG,EAAD,CAAZ;AACA,sBAAIE,KAAK,GAAC1E,KAAK,CAACwD,IAAN,CAAWC,KAAX,CAAiBgB,KAAjB,EAAuB3B,GAAvB,EAA2BtB,GAA3B,EAA+BX,MAA/B,EAAsC,CAAtC,CAAV;AACA,sBAAI8D,MAAM,GAAC3E,KAAK,CAACoC,MAAN,CAAaC,aAAb,CAA2BmC,EAA3B,CAAX;AACA9D,kBAAAA,GAAG,CAACkE,SAAJ;AACAlE,kBAAAA,GAAG,CAACmE,SAAJ,GAAc,CAAd;;AACA,sBAAIF,MAAM,KAAKjD,SAAf,EAA0B;AAAChB,oBAAAA,GAAG,CAACoE,WAAJ,GAAgBH,MAAhB;AAAwB;;AACnDjE,kBAAAA,GAAG,CAACqE,MAAJ,CAAW1B,IAAX,EAAgBqB,KAAhB;AACAhE,kBAAAA,GAAG,CAACsE,MAAJ,CAAW1B,IAAX,EAAgBoB,KAAhB;AACAhE,kBAAAA,GAAG,CAACuE,MAAJ,GATwB,CAUxB;AACH;AACG;AACJ;AACG;AACJ;AACG;AACJ;AACG;;AAAA;;AACD,MAAI/D,GAAG,KAAM,CAAb,EAAgB,CACnB;AACI,GAFD,MAEO,CACV;AACI;;AACDR,EAAAA,GAAG,CAACmE,SAAJ,GAAc,CAAd;AACA,MAAIK,MAAM,GAAClF,KAAK,CAACoC,MAAN,CAAaC,aAAb,CAA2BrB,IAA3B,CAAX,CArHwB,CAsHxB;;AACA,MAAIkE,MAAM,KAAKxD,SAAf,EAA0B;AAC7BhB,IAAAA,GAAG,CAACoE,WAAJ,GAAgBI,MAAhB;AACAxE,IAAAA,GAAG,CAACyE,UAAJ,CAAe,CAAf,EAAiB,CAAjB,EAAoB3E,GAAG,CAACc,KAAxB,EAA8Bd,GAAG,CAACK,MAAlC;AACI,GA1HuB,CA2HxB;;AACH;;IAGKuE,oB;;;;;AACF,gCAAYrF,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8FAAMA,KAAN;AADe,QAERC,KAFQ,GAECD,KAFD,CAERC,KAFQ;AAAA;AAGlB;;;;wCACmB;AAChBH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;;;yCACoB;AACjBA,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;;;6BACQ;AAAA,wBAC+C,KAAKE,KADpD;AAAA,UACGsF,OADH,eACGA,OADH;AAAA,UACYC,OADZ,eACYA,OADZ;AAAA,UACqBC,KADrB,eACqBA,KADrB;AAAA,UAC4BhF,IAD5B,eAC4BA,IAD5B;AAAA,UACqCiF,KADrC;;AAEL,aACN,gDAAYA,KAAZ;AAAmB,QAAA,SAAS,EAAEH,OAAO,CAAC5F,MAAtC;AAA8C,QAAA,OAAO,EAAE4F,OAAvD;AAAgE,QAAA,OAAO,EAAEC,OAAzE;AAAkF,QAAA,KAAK,EAAEC,KAAzF;AAAgG,QAAA,IAAI,EAAEhF,IAAtG;AAA4G,QAAA,GAAG,EAAC,QAAhH;AAAyH,QAAA,KAAK,EAAEA,IAAI,CAACe,KAArI;AAA4I,QAAA,MAAM,EAAEf,IAAI,CAACkF,IAAzJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADM;AAGH;;;;EAhB8BtG,KAAK,CAACC,S;;AAmBzCgG,oBAAoB,CAACM,SAArB,GAAiC;AAC7BL,EAAAA,OAAO,EAAEhG,SAAS,CAACsG,MAAV,CAAiBC;AADG,CAAjC;AAIA,eAAetG,UAAU,CAACC,MAAD,CAAV,CAAmB6F,oBAAnB,CAAf","sourcesContent":["import React, { Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    canvas: {\n    },\n    pointer: {\n\tcursor:\"pointer\"\n    },\n    nopointer: {\n    },\n});\n\nfunction updateCanvas(item) {\n    const {state,elements,colkey,rowkey,colvalues,index,range,plan} = item.props;\n    const cnv=item.refs.canvas;        // canvas\n    const ctx = cnv.getContext('2d');  // context\n    const step=plan.step;\n    var height = cnv.height;\n    var elen=elements.length;\n    var blev=-1;\n    var ee;\n    var tot=0; for (ee=0;ee<elen;ee++) {tot=tot+elements[ee].docs.length;}; // total number of segments\n    var cnt=0;\n    var dw= cnv.width/Math.max(step,tot); // width of graph segment\n    var clen=0; if (colvalues !== undefined) {clen=colvalues.length;}; // number of columns\n    //console.log(\"******** Canvas elements:\",elen,tot,dw,width)\n    console.log(\"Range:\",JSON.stringify(range));\n    var first=true;\n    for (ee=0;ee<elen;ee++) {   // loop over elements\n\tvar el=elements[ee];\n\tvar level=el.lev;\n\tvar color=state.Colors.getLevelColor(level);\n\tblev=Math.max(blev,level);\n\tvar docs=el.docs;\n\tvar dlen=docs.length;\n\t//console.log(\"   El:\",colkey,ee,level,blev); // JSON.stringify(lev),JSON.stringify(d),\n\t//console.log(\"Element:\",level,color,tot,cnt);\n\tif (dlen>0) {\n\t    for (var jj=0;jj<dlen;jj++) {   // loop over segments in each element\n\t\tcnt=cnt+1;\n\t\tvar d=docs[jj];\n\t\tstate.Threshold.setGThr(state,d);\n\t\tvar lev=state.Threshold.getLevel(state,d);\n\t\tvar col=state.Colors.getLevelColor(lev);\n\t\t//console.log(\"   Doc:\",colkey,jj,d.level,col,JSON.stringify(lev),JSON.stringify(d)); // \n\t\tfor (var ii=index;ii<Math.min(index+step,clen);ii++) {\n\t\t    //console.log(\"   Checking Val:\",colkey,rowkey,ii,colvalues[ii],d[colkey]);\n\t\t    //console.log(\"Position:\",ii,jj,dlen,step,colkey,rowkey,colvalues[ii],d[colkey])\n\t\t    if (d[colkey]  === colvalues[ii]) {\n\t\t\tif (first) {\n\t\t\t    first=false;\n\t\t\t    //console.log(\"Doc:\",jj,JSON.stringify(d));\n\t\t\t};\n\t\t\tvar t=state.Threshold.getThresholds(d);\n\t\t\t//console.log(\"Making canvas:\",ii,colvalues[ii],color,JSON.stringify(d),\n\t\t\t//\t    \" Thr=\",JSON.stringify(t),width,height,JSON.stringify(range));\n\t\t\t//console.log(\"CanvasGraph:\",ii,jj,d.dtg,color,level,JSON.stringify(t));\n\t\t\tvar min=range[0]\n\t\t\tvar max=range[1];\n\t\t\tvar ymin=min;\n\t\t\tif (t.min !== undefined && t.min[state.Threshold.ival] !== undefined) {\n\t\t\t    ymin=t.min[state.Threshold.ival];\n\t\t\t}\n\t\t\tvar ymax=max;\n\t\t\tif (t.max !== undefined && t.max[state.Threshold.ival] !== undefined) {\n\t\t\t    ymax=t.max[state.Threshold.ival];\n\t\t\t}\n\t\t\tvar mm=ii-index\n\t\t\tif (step<tot) {mm=cnt-1;}\n\t\t\t//console.log(\" canvas position:\",mm,ii,cnt,step,tot)\n\t\t\tvar xmin=mm*dw;       // width/10;\n\t\t\tvar xmax=(mm+1)*dw-2;   //width-2*xmin;\n\t\t\tvar zmin=state.Show.scale(ymin,min,max,height,0);\n\t\t\tvar zmax=state.Show.scale(ymax,min,max,height,0);\n\t\t\t//console.log(\"Fill:\",xmin,xmax,width,zmin,(zmax-zmin),height,color);\n\t\t\t//ctx.fillStyle=\"cornflowerblue\";\n\t\t\tcolor=col;\n\t\t\tif (color !== undefined) {\n\t\t\t    ctx.fillStyle=color;\n\t\t\t    ctx.fillRect(xmin,zmin,xmax-xmin,(zmax-zmin));\n\t\t\t};\n\t\t\t//ctx.beginPath();\n\t\t\t//ctx.lineWidth=2;\n\t\t\t//if (color !== undefined) {ctx.strokeStyle=color;}\n\t\t\t//ctx.strokeStyle=\"black\";\n\t\t\t//ctx.moveTo(xmin,zmax);\n\t\t\t//ctx.lineTo(xmax,zmax);\n\t\t\t//ctx.stroke();\n\t\t\t// draw thresholds\n\t\t\tif (color !== undefined) {\n\t\t\t    for (var msr in t) {\n\t\t\t\tvar tt    = t[msr];\n\t\t\t\tvar tmax  = tt[state.Threshold.imax];\n\t\t\t\tvar tthr  = tt[state.Threshold.ithr];\n\t\t\t\tvar tkey  = tt[state.Threshold.ikey];\n\t\t\t\t//var tlev  = tt[state.Threshold.ilev];\n\t\t\t\t//var tval  = tt[state.Threshold.ival];\n\t\t\t\tvar ts;\n\t\t\t\tif (tmax) {\n\t\t\t\t    ts=state.Threshold.thrs[tthr][tkey].max;\n\t\t\t\t} else {\n\t\t\t\t    ts=state.Threshold.thrs[tthr][tkey].min;\n\t\t\t\t};\n\t\t\t\tvar tlen=ts.length;\n\t\t\t\tfor (var ll=0;ll<tlen;ll++) {\n\t\t\t\t    var tyval=ts[ll];\n\t\t\t\t    var tzval=state.Show.scale(tyval,min,max,height,0);\n\t\t\t\t    var scolor=state.Colors.getLevelColor(ll);\n\t\t\t\t    ctx.beginPath();\n\t\t\t\t    ctx.lineWidth=2;\n\t\t\t\t    if (scolor !== undefined) {ctx.strokeStyle=scolor;}\n\t\t\t\t    ctx.moveTo(xmin,tzval);\n\t\t\t\t    ctx.lineTo(xmax,tzval);\n\t\t\t\t    ctx.stroke();\n\t\t\t\t    //console.log(\"Stroke color:\",scolor,ll,tzval,cnv.width);\n\t\t\t\t}\n\t\t\t    }\n\t\t\t}\n\t\t    }\n\t\t}\n\t    }\n\t}\n    };\n    if (tot  === 0) {\n\t//console.log(\"No draw:\",JSON.stringify(colvalues),JSON.stringify(docs),dlen);\n    } else {\n\t//console.log(\"Drew:\",JSON.stringify(colvalues),tot,dlen);\n    }\n    ctx.lineWidth=5;\n    var bcolor=state.Colors.getLevelColor(blev);\n    //console.log(\"   Box:\",colkey,blev,bcolor); // JSON.stringify(lev),JSON.stringify(d),\n    if (bcolor !== undefined) {\n\tctx.strokeStyle=bcolor;\n\tctx.strokeRect(0,0, cnv.width,cnv.height);\n    }\n    //console.log(\"CanvasGraph:\",cnv.width,cnv.height);\n}\n    \n\nclass CanvasGraphComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        const {state} = props;\n    };\n    componentDidMount() {\n        updateCanvas(this);\n    }\n    componentDidUpdate() {\n        updateCanvas(this);\n    }\n    render() {\n        const { classes, onclick, title, plan, ...other } = this.props;\n        return (\n\t\t<canvas {...other} className={classes.canvas} classes={classes} onClick={onclick} title={title} plan={plan} ref=\"canvas\" width={plan.width} height={plan.cell}/>\n        );\n    }\n}\n\nCanvasGraphComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CanvasGraphComponent);\n"]},"metadata":{},"sourceType":"module"}