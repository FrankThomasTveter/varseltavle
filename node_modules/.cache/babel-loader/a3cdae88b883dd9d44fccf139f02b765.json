{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/AppComponent.js\";\nimport React, { Component } from 'react';\nimport Dataset from './Dataset';\nimport NavBar from './NavBar';\nimport Db from './Db';\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport createTheme from '../mui/createTheme';\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport BackGroundImage from \"../images/waves.png\";\nimport { black_palette, teal_palette } from '../mui/metMuiThemes';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Colors from '../system/ColorsLib';\nimport Database from '../system/DatabaseLib';\nimport Default from '../system/DefaultLib';\nimport Html from '../system/HtmlLib';\nimport Layout from '../system/LayoutLib';\nimport Map0D from '../system/Map0DLib';\nimport Map1D from '../system/Map1DLib';\nimport Map2D from '../system/Map2DLib';\nimport Matrix from '../system/MatrixLib';\nimport Navigate from '../system/NavigateLib';\nimport Path from '../system/PathLib';\nimport Series0D from '../system/Series0DLib';\nimport Series1D from '../system/Series1DLib';\nimport Series2D from '../system/Series2DLib';\nimport Show from '../system/ShowLib';\nimport Table0D from '../system/Table0DLib';\nimport Table1D from '../system/Table1DLib';\nimport Table2D from '../system/Table2DLib';\nimport Threshold from '../system/ThresholdLib';\nimport Utils from '../system/UtilsLib';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      backgroundImage: \"url(\".concat(BackGroundImage, \")\")\n    },\n    content: {\n      flex: '1 0 auto',\n      paddingTop: '5rem'\n    }\n  };\n};\n/**\n * The entire app get generated from this container.\n * We set the material UI theme by choosing a primary and secondary color from the metMuiThemes file\n * and creating a color palette with the createTheme method.\n * For information about using the different palettes see material UI documentation\n * \n * This app contains the database, path and matrix states...\n */\n\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      Colors: new Colors(),\n      Database: new Database(),\n      Default: new Default(),\n      Html: new Html(),\n      Layout: new Layout(),\n      Map0D: new Map0D(),\n      Map1D: new Map1D(),\n      Map2D: new Map2D(),\n      Matrix: new Matrix(),\n      Navigate: new Navigate(),\n      Path: new Path(),\n      Series0D: new Series0D(),\n      Series1D: new Series1D(),\n      Series2D: new Series2D(),\n      Show: new Show(),\n      Table0D: new Table0D(),\n      Table1D: new Table1D(),\n      Table2D: new Table2D(),\n      Threshold: new Threshold(),\n      Utils: new Utils(),\n      React: {\n        App: _assertThisInitialized(_assertThisInitialized(_this))\n      },\n      cnt: 0\n    };\n    _this.path = _this.getpath();\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getpath\",\n    value: function getpath() {\n      var path = \"/\";\n\n      if (process.env.NODE_ENV === 'production') {\n        var raw = process.env.PUBLIC_URL;\n        path = raw + path;\n        var pos = raw.indexOf(\"//\");\n\n        if (pos > 0) {\n          pos = pos + 3;\n          pos = raw.indexOf(\"/\", pos);\n          path = path.substring(pos);\n        }\n\n        ;\n      }\n\n      ;\n      console.log(\"Using path:\", path);\n      return path;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"Initialising alarm.\");\n      var state = this.state;\n      state.Colors.init(state);\n      state.Path.init(state);\n      state.Show.init(state);\n      state.Threshold.init(state); //console.log(\"Update database.\")\n      //state.Database.update(state);\n\n      this.timerID = setInterval( //            () => this.t.test(this.state),\n      function () {\n        return _this2.tick();\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"tick\",\n    value: function tick() {\n      // check if database has changed, reload if necessary...\n      if (this.state.React.Status !== undefined) {\n        this.state.cnt = this.state.cnt + 1;\n        this.state.React.Status.forceUpdate();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var state = this.state;\n      return React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: this.path,\n        render: function render() {\n          return React.createElement(MuiThemeProvider, {\n            theme: createTheme(teal_palette, black_palette),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: classes.content,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, React.createElement(Header, {\n            state: state,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }), React.createElement(Dataset, {\n            state: state,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          })), React.createElement(Footer, {\n            state: state,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/AppComponent.js"],"names":["React","Component","Dataset","NavBar","Db","MuiThemeProvider","withStyles","createTheme","PropTypes","Header","Footer","BackGroundImage","black_palette","teal_palette","BrowserRouter","Route","Colors","Database","Default","Html","Layout","Map0D","Map1D","Map2D","Matrix","Navigate","Path","Series0D","Series1D","Series2D","Show","Table0D","Table1D","Table2D","Threshold","Utils","styles","theme","root","height","display","flexDirection","backgroundImage","content","flex","paddingTop","App","props","state","cnt","path","getpath","process","env","NODE_ENV","raw","PUBLIC_URL","pos","indexOf","substring","console","log","init","timerID","setInterval","tick","Status","undefined","forceUpdate","classes","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\nimport Dataset  from   './Dataset';\nimport NavBar   from   './NavBar';\nimport Db       from   './Db';\nimport {MuiThemeProvider, withStyles} from '@material-ui/core/styles';\nimport createTheme from '../mui/createTheme'\nimport PropTypes from \"prop-types\";\nimport Header   from    \"./Header\";\nimport Footer   from    \"./Footer\";\nimport BackGroundImage from \"../images/waves.png\";\nimport {black_palette, teal_palette} from '../mui/metMuiThemes'\nimport {BrowserRouter, Route} from 'react-router-dom';\n\nimport Colors from '../system/ColorsLib';\nimport Database from '../system/DatabaseLib';\nimport Default from '../system/DefaultLib';\nimport Html from '../system/HtmlLib';\nimport Layout from '../system/LayoutLib';\nimport Map0D from '../system/Map0DLib';\nimport Map1D from '../system/Map1DLib';\nimport Map2D from '../system/Map2DLib';\nimport Matrix from '../system/MatrixLib';\nimport Navigate from '../system/NavigateLib';\nimport Path from '../system/PathLib';\nimport Series0D from '../system/Series0DLib';\nimport Series1D from '../system/Series1DLib';\nimport Series2D from '../system/Series2DLib';\nimport Show from '../system/ShowLib';\nimport Table0D from '../system/Table0DLib';\nimport Table1D from '../system/Table1DLib';\nimport Table2D from '../system/Table2DLib';\nimport Threshold from '../system/ThresholdLib';\nimport Utils from '../system/UtilsLib';\n\nconst styles = theme => ({\n    root: {\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundImage: `url(${BackGroundImage})`\n    },\n    content: {\n        flex: '1 0 auto',\n        paddingTop: '5rem',\n    }\n});\n\n\n/**\n * The entire app get generated from this container.\n * We set the material UI theme by choosing a primary and secondary color from the metMuiThemes file\n * and creating a color palette with the createTheme method.\n * For information about using the different palettes see material UI documentation\n * \n * This app contains the database, path and matrix states...\n */\nclass App extends Component {\n    constructor(props) {\n\tsuper(props);\n\tthis.state={\n\t    Colors:    new Colors()    ,\n\t    Database:  new Database()  ,\n\t    Default:   new Default()   ,\n\t    Html:      new Html()      ,\n\t    Layout:    new Layout()    ,\n\t    Map0D:     new Map0D()     ,\n\t    Map1D:     new Map1D()     ,\n\t    Map2D:     new Map2D()     ,\n\t    Matrix:    new Matrix()    ,\n\t    Navigate:  new Navigate()  ,\n\t    Path:      new Path()      ,\n\t    Series0D:  new Series0D()  ,\n\t    Series1D:  new Series1D()  ,\n\t    Series2D:  new Series2D()  ,\n\t    Show:      new Show()      ,\n\t    Table0D:   new Table0D()   ,\n\t    Table1D:   new Table1D()   ,\n\t    Table2D:   new Table2D()   ,\n\t    Threshold: new Threshold() ,\n\t    Utils:     new Utils()     ,\n\t    React: { App : this },\n\t    cnt:0\n\t};\n\tthis.path=this.getpath();\n    };\n    getpath() {\n\tvar path=\"/\";\n\tif (process.env.NODE_ENV === 'production') {\n            var raw=process.env.PUBLIC_URL;\n            path=raw+path;\n            var pos=raw.indexOf(\"//\");\n            if (pos>0) {\n\t\tpos=pos+3;\n\t\tpos=raw.indexOf(\"/\",pos);\n\t\tpath=path.substring(pos);\n            };\n\t};\n\tconsole.log(\"Using path:\",path);\n\treturn path;\n    };\n    componentDidMount() {\n        console.log(\"Initialising alarm.\")\n\tvar state=this.state;\n        state.Colors.init(state);\n        state.Path.init(state);\n        state.Show.init(state);\n        state.Threshold.init(state);\n        //console.log(\"Update database.\")\n        //state.Database.update(state);\n\n        this.timerID = setInterval(\n//            () => this.t.test(this.state),\n            () => this.tick(),\n            1000\n        );\n    };\n    componentWillUnmount() {\n    };\n    tick() {\n\t// check if database has changed, reload if necessary...\n\tif (this.state.React.Status !== undefined) {\n\t    this.state.cnt=this.state.cnt+1;\n\t    this.state.React.Status.forceUpdate();\n\t}\n    };\n    render() {\n        const { classes } = this.props;\n\tconst state       = this.state;\n        return (\n            <BrowserRouter>\n                <div className={classes.root}>\n                    <Route exact={true} path={this.path} render={() => (\n                        <MuiThemeProvider theme={createTheme(teal_palette, black_palette)}>\n                            <div className={classes.content}>\n                                <Header    state={state} />\n                                <Dataset   state={state} />\n                            </div>\n                            <Footer        state={state}/>\n                        </MuiThemeProvider>\n                    )}/>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nApp.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n\n"]},"metadata":{},"sourceType":"module"}