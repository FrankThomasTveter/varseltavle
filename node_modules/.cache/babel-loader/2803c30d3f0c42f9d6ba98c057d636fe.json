{"ast":null,"code":"//console.log(\"Loading DatabaseLib.js\");\nvar alasql = window.alasql;\n\nfunction Database() {\n  var ret;\n  this.cnt = 0;\n  this.keyCnt = {};\n  this.values = {};\n  this.epoch0 = 0;\n  this.regfile = \"register\"; // register file (shows current datfile)\n\n  this.datfile = \"\"; // json data file\n\n  this.arrayConstructor = [].constructor;\n  this.objectConstructor = {}.constructor;\n  this.casc = 0; // key is sorted ascending\n\n  this.cdes = 1; // key is sorted descending\n\n  this.nasc = 2; // key is sorted ascending\n\n  this.ndes = 3; // key is sorted descending\n\n  this.delay = 100000; // server-polling period in ms\n\n  this.ready = true; // can we poll server or is another poll running\n\n  this.log = \"\";\n  this.mod = \"\";\n\n  this.init = function (state) {\n    //console.log(\"Initialising alarm.\")\n    state.Utils.init(\"Database\", this);\n    state.Colors.init(state);\n    state.Path.init(state);\n    state.Layout.init(state);\n    state.Threshold.init(state);\n  };\n\n  this.keytrg = {\n    Missing: -1,\n    Null: 0,\n    Value: 1,\n    Min: 2,\n    Max: 3\n  };\n\n  this.update = function (state) {\n    this.setTime(state);\n    this.load(state);\n    setTimeout(function () {\n      return function () {\n        this.update(state);\n      };\n    }, this.delay);\n  };\n\n  this.load = function (state) {\n    //console.log(\"Loading...\",this.cnt++);\n    state.Default.loadDefault(state, [this.loadRegister, this.loadData]);\n  };\n\n  this.loadRegister = function (state, callbacks) {\n    //console.log(\"loadRegister\");\n    if (this.ready) {\n      // make sure we do not re-load if we are already loading\n      this.ready = false;\n      state.Html.setFootnote(state, \"Server-request: \" + this.regfile);\n      state.Html.setProgress(state, true);\n      var regHttp = new XMLHttpRequest();\n      regHttp.addEventListener(\"progress\", function (e) {\n        return state.Html.progressInfo(state, e);\n      }); //regHttp.addEventListener(\"load\",(e)=>state.Html.loadInfo(state,e));\n\n      regHttp.addEventListener(\"error\", function (e) {\n        return state.Html.errorInfo(state, e);\n      });\n      regHttp.addEventListener(\"abort\", function (e) {\n        return state.Html.abortInfo(state, e);\n      });\n\n      regHttp.onreadystatechange = function () {\n        this.ready = true;\n\n        if (regHttp.readyState === 4) {\n          if (regHttp.status === 200) {\n            //console.log(regHttp.responseText);\n            var file = regHttp.responseText;\n\n            if (file !== this.datfile) {\n              // load new data\n              this.datfile = file;\n              var callback = callbacks.shift();\n\n              if (callback !== undefined) {\n                setTimeout(callback(state, file, callbacks), 0.1);\n              }\n            } else {\n              state.Html.setFootnote(state);\n              state.Html.setProgress(state, false);\n            }\n          } else {\n            state.Html.setFootnote(state, \"Unable to load \" + this.regfile);\n            state.Html.setProgress(state, false); //state.Html.setConsole(this.regfile+\" error\");\n          }\n        } else {\n          state.Html.setFootnote(state, this.regfile + \" error\");\n          state.Html.setProgress(state, false);\n        }\n\n        ;\n      }.bind(this);\n\n      regHttp.responseType = \"\";\n      regHttp.overrideMimeType(\"text/text\");\n      regHttp.open(\"GET\", \"data/\" + this.regfile, true);\n      regHttp.setRequestHeader('cache-control', 'no-cache, must-revalidate, post-check=0, pre-check=0');\n      regHttp.setRequestHeader('cache-control', 'max-age=0');\n      regHttp.setRequestHeader('expires', '0');\n      regHttp.setRequestHeader('expires', 'Tue, 01 Jan 1980 1:00:00 GMT');\n      regHttp.setRequestHeader('pragma', 'no-cache');\n      regHttp.send();\n    } else {\n      //state.Html.setConsole(\"\");\n      state.Html.setFootnote(state, \"Already waiting for reply...\");\n      state.Html.setProgress(state, true);\n    }\n\n    ;\n  }.bind(this);\n\n  this.loadData = function (state, file, callbacks) {\n    //console.log(\"loadData\");\n    if (this.ready) {\n      // make sure we do not re-load if we are already loading\n      this.ready = false;\n      state.Html.setFootnote(state, \"Server-request: \" + this.datfile);\n      state.Html.setProgress(state, true);\n      var datHttp = new XMLHttpRequest();\n      datHttp.addEventListener(\"progress\", function (e) {\n        return state.Html.progressInfo(state, e);\n      }); //datHttp.addEventListener(\"load\",(e)=>state.Html.loadInfo(state,e));\n\n      datHttp.addEventListener(\"error\", function (e) {\n        return state.Html.errorInfo(state, e);\n      });\n      datHttp.addEventListener(\"abort\", function (e) {\n        return state.Html.abortInfo(state, e);\n      });\n\n      datHttp.onreadystatechange = function () {\n        this.ready = true;\n\n        if (datHttp.readyState === 4) {\n          if (datHttp.status === 200) {\n            //console.log(\"Loaded \"+this.datfile);\n            //state.Html.setConsole(\"100%\");\n            state.Html.broadcast(state, \"Loaded \" + this.datfile);\n            state.Html.setFootnote(state, \"Creating database\");\n            console.log(\"Creating database from \" + file);\n            setTimeout(function () {\n              this.dbInsert(state, datHttp.responseText);\n              state.Html.setFootnote(state, \"Extracting data.\");\n              setTimeout(function () {\n                this.makeWhere(state); // update where-expressions...\n\n                state.Show.showAll(state);\n                state.Html.setFootnote(state);\n                var callback = callbacks.shift();\n\n                if (callback !== undefined) {\n                  //console.log(\"Found callback\");\n                  setTimeout(callback(state, callbacks), 0);\n                } else {//console.log(\"No callback\");\n                }\n              }.bind(this), 0.1);\n            }.bind(this), 0.1);\n          } else {\n            state.Html.setFootnote(state, \"Unable to load \" + file);\n            state.Html.setProgress(state, false);\n            state.Html.setConsole(file + \" error\");\n          }\n        }\n      }.bind(this);\n\n      datHttp.responseType = \"\";\n      datHttp.overrideMimeType(\"text/text\");\n      datHttp.open(\"GET\", \"data/\" + this.datfile, true);\n      datHttp.setRequestHeader('cache-control', 'no-cache, must-revalidate, post-check=0, pre-check=0');\n      datHttp.setRequestHeader('cache-control', 'max-age=0');\n      datHttp.setRequestHeader('expires', '0');\n      datHttp.setRequestHeader('expires', 'Tue, 01 Jan 1980 1:00:00 GMT');\n      datHttp.setRequestHeader('pragma', 'no-cache');\n      datHttp.send();\n    } else {\n      state.Html.setConsole(\"\");\n      state.Html.setFootnote(state, \"Already waiting for reply...\");\n      state.Html.setProgress(state, true);\n    }\n\n    ;\n  }.bind(this);\n\n  this.getTime = function (state, s) {\n    var nn = s.match(/\\d+/g).map(Number);\n    var date0 = new Date(Date.UTC(nn[0], nn[1] - 1, nn[2], nn[3], nn[4], nn[5], ((nn[6] || '') + '000').slice(0, 3))); // modification time\n    //console.log(\"Gettime:\",s,JSON.stringify(nn));\n\n    return date0.getTime();\n  };\n\n  this.setTime = function (state) {\n    var d = new Date();\n    var epoch = d.getTime(); //console.log(\"Times:\",epoch,this.epoch0);\n\n    if (this.epoch0 !== undefined) {\n      var age = epoch - this.epoch0;\n      this.mod = this.getTimeDiff(state, age);\n\n      if (state.React !== undefined && state.React.Status !== undefined) {\n        state.React.Status.setAge(state, this.mod); //console.log(\"Age:\",epoch,this.epoch0,age);\n      }\n    }\n  };\n\n  this.getKeyValues = function (state, key) {\n    //console.log(\"Database:\",JSON.stringify(state.Database.values));\n    var vals = state.Database.values[key];\n\n    if (vals !== undefined) {\n      return vals;\n    } else {\n      return [];\n    }\n  };\n\n  this.getKeytrg = function (state, key, val) {\n    if (Array.isArray(val)) {\n      //console.log(\">>>Is array:\",key,JSON.stringify(val));\n      ret = this.keytrg.Missing;\n      var lenv = val.length;\n\n      for (var ii = 0; ii < lenv; ii++) {\n        ret = Math.max(ret, this.getKeytrg(state, key, val[ii]));\n      } //console.log(\">>>return:\",key,ret);\n\n    } else {\n      if (val === \"null\") {\n        ret = this.keytrg.Null;\n      } else if (val === \"MIN(\" + key + \")\") {\n        // this is a function\n        ret = this.keytrg.Min;\n      } else if (val === \"MAX(\" + key + \")\") {\n        // this is a function\n        ret = this.keytrg.Max;\n      } else if (val === undefined) {\n        ret = this.keytrg.Missing;\n      } else if (val === null) {\n        ret = this.keytrg.Null;\n      } else {\n        ret = this.keytrg.Value;\n      }\n\n      ; //console.log(\"---return:\",key,ret);\n    }\n\n    ;\n    return ret;\n  };\n\n  this.makeKeytrg = function (state, key, keytrg, val) {\n    if (keytrg === this.keytrg.Missing) {\n      return \"missing\";\n    } else if (keytrg === this.keytrg.Null) {\n      return \"null\";\n    } else if (keytrg === this.keytrg.Min) {\n      return \"MIN(\" + key + \")\";\n    } else if (keytrg === this.keytrg.Max) {\n      return \"MAX(\" + key + \")\";\n    } else {\n      return val;\n    }\n\n    ;\n  };\n\n  this.dbInsert = function (state, raw) {\n    var ii, key;\n\n    try {\n      // set home\n      //console.log(\"Parsing JSON.\");\n      var json = JSON.parse(raw);\n      var len = json.data.length;\n\n      for (ii = 0; ii < len; ii++) {\n        json.data[ii][\"cnt\"] = ii;\n      } // get modified date\n      //console.log(\"Setting time.\");\n\n\n      this.epoch0 = this.getTime(state, json.epoch); // data file time\n\n      this.setTime(state); // data file time\n      // make database for raw data\n\n      this.makeTable(state); // reset key counts and range\n\n      this.cnt = 0;\n      this.keyCnt = {}; // reset key-count\n      // put data into databse\n      //console.log(\"inserting\");\n\n      var data = [];\n      var home = state.Path.home.val;\n      var hkeys = Object.keys(home);\n      var homeKeys = [];\n      var delayKeys = [];\n      var lenh = hkeys.length;\n\n      for (ii = 0; ii < lenh; ii++) {\n        key = hkeys[ii];\n        var keytrg = this.getKeytrg(state, key, home[key]); //console.log(\"Keytrg:\",key,keytrg,JSON.stringify(home[key]));\n\n        if (keytrg <= this.keytrg.Value) {\n          homeKeys.push(key);\n        } else {\n          delayKeys.push(key);\n        }\n      } //console.log(\"Home keys:\",JSON.stringify(homeKeys),\" delayed:\",JSON.stringify(delayKeys));\n\n\n      var rcnt = this.extractData(state, data, {}, \"\", json.data, homeKeys, home); //console.log(\"Count:\",rcnt);\n      //console.log(\"Data:\",JSON.stringify(data));\n\n      this.dataToDb(state, data);\n      var nrec = this.sanityCheck(state); // sanity check\n\n      console.log(\"Initially:\", data.length, \" Extracted:\", rcnt, ' Database:', nrec);\n      this.postProcess(state); // update distinct Database.values[key]\n\n      if (delayKeys.length > 0) {\n        // delayed home selection (MAX() and MIN())\n        this.makeWhere(state, delayKeys, home);\n        var where = this.getWhere(state, delayKeys, home);\n        var docs = this.getDocs(state, where);\n        this.dataToDb(state, docs);\n        this.postProcess(state); // update distinct Database.values[key]\n      }\n\n      ;\n      state.Path.makePath(state); // initialise path\n      //console.log(\"Indexing and cleaning up.\");\n\n      this.dbindex(state, state.Path.other.table); // make indexes\n\n      this.dbindex(state, state.Path.other.rest); // make indexes\n      //state.Path.checkTableKeys(state);\n\n      state.Html.broadcast(state, \"Database is ready.\"); //console.log(\"Database is ready.\");\n    } catch (e) {\n      alert(e);\n    }\n\n    ;\n  };\n\n  this.updateKeyCnt = function (state, key, val) {\n    if (this.keyCnt[key] === undefined) {\n      this.keyCnt[key] = {\n        cnt: 0,\n        type: \"num\",\n        order: this.nasc\n      };\n    }\n\n    this.keyCnt[key].cnt = this.keyCnt[key].cnt + 1;\n\n    if (this.keyCnt[key].type === \"num\" && isNaN(val)) {\n      this.keyCnt[key].type = \"nan\";\n      this.keyCnt[key].order = this.casc;\n    }\n  };\n\n  this.postProcess = function (state) {\n    // update meta-data\n    var keys = Object.keys(state.Database.keyCnt);\n    var lenk = keys.length;\n\n    for (var ii = 0; ii < lenk; ii++) {\n      var key = keys[ii]; // make list of values in Database for each key\n\n      state.Database.values[key] = [];\n      var sql = \"select DISTINCT \" + key + \" AS \" + key + \" FROM alarm\";\n      var dd0 = alasql(sql);\n      var lend = dd0.length;\n\n      for (var jj = 0; jj < lend; jj++) {\n        var doc = dd0[jj];\n        state.Database.values[key].push(doc[key]);\n      }\n\n      ;\n    }\n\n    ;\n  };\n\n  this.extractData = function (state, data, parent, key, raw, hkeys, home) {\n    // insert records into db (recursive)\n    var rcnt = 0;\n    var kk, ii, kii, child, dkey; //console.log(\"Processing {\",state.Utils.toString(parent),\"} '\",key,\"' (\",state.Utils.toString(raw),\")\");\n\n    var wii = this.whatIsIt(raw);\n\n    if (wii === \"Object\" && key === \"\") {\n      //console.log(\"Found object (\",state.Utils.toString(parent),\")\");\n      child = state.Utils.cp(parent); // loop over plain values first\n\n      for (kk in raw) {\n        kii = this.whatIsIt(raw[kk]);\n\n        if (kii === \"value\") {\n          child[kk] = raw[kk];\n        }\n      } // loop over sub-objects\n\n\n      var nn = 0;\n\n      for (kk in raw) {\n        kii = this.whatIsIt(raw[kk]);\n\n        if (kii !== \"value\") {\n          nn = nn + 1;\n          rcnt = rcnt + this.extractData(state, data, child, kk, raw[kk], hkeys, home);\n        }\n      }\n\n      if (nn === 0) {\n        // insert \n        //console.log(\"Object was empty.\");\n        rcnt = rcnt + this.extractData(state, data, child, null, null, hkeys, home);\n      }\n    } else if (wii === \"Object\" && key !== \"\") {\n      //console.log(\"Found object key '\",key,\"' (\",state.Utils.toString(parent),\")\");\n      child = state.Utils.cp(parent); // loop over plain values first\n\n      for (kk in raw) {\n        child[key] = kk;\n        rcnt = rcnt + this.extractData(state, data, child, \"\", raw[kk], hkeys, home);\n      }\n    } else if (wii === \"Array\") {\n      //console.log(\"Found array key '\",key,\"' (\",state.Utils.toString(parent),\")\");\n      var dlen = raw.length;\n\n      for (ii = 0; ii < dlen; ii++) {\n        rcnt = rcnt + this.extractData(state, data, parent, key, raw[ii], hkeys, home);\n      }\n    } else {\n      //console.log(\"Found key '\",key,\"' \",wii,\" (\",state.Utils.toString(parent),\")\");\n      var keep = true;\n      var doc = state.Utils.cp(parent);\n\n      if (raw !== null) {\n        if (key === \"\") {\n          doc.value = raw;\n        } else {\n          doc[key] = raw;\n        }\n      } // check if home criteria is met\n\n\n      var lenh = hkeys.length;\n\n      for (ii = 0; ii < lenh; ii++) {\n        key = hkeys[ii];\n        var vals = home[key];\n        var lenv = vals.length;\n        var found = false;\n\n        for (var jj = 0; jj < lenv; jj++) {\n          if (vals[jj] === doc[key] || vals[jj] === \"\" && doc[key] === undefined) {\n            found = true;\n          }\n        }\n\n        if (!found) {\n          keep = false;\n        }\n\n        ;\n      }\n\n      if (keep) {\n        //console.log(\"Updating internal raw structure\",JSON.stringify(setup));\n        for (dkey in doc) {\n          var val = doc[dkey];\n          this.updateKeyCnt(state, dkey, val); //// this takes too much time...\n          //if (this.values[dkey]  === undefined) {\n          //\tthis.values[dkey]=[];\n          //  };\n          ////console.log(\"Setup:\",JSON.stringify(setup));\n          ////console.log(\"Key:\",key,JSON.stringify(this.values));\n          //if (this.values[dkey].indexOf(val)  === -1 ) { // value not in range\n          //    this.values[dkey].push(val); // add value to range\n          //};\n        }\n\n        ; //console.log(\">>> Inserting:\",state.Utils.toString(doc));\n\n        rcnt = rcnt + 1;\n        this.cnt = this.cnt + 1;\n        state.Threshold.setThresholds(doc);\n        doc._title = state.Layout.makeDocTitle(state, doc); //if (this.cnt < 10) { // debug purposes\n        //for (key in keys) {\n        //this.updateKeyCnt(state,key,doc[key]);\n        //};\n\n        data.push(doc); //} else {\n        //console.log(\"Ignoring:\",lenh,JSON.stringify(hkeys),JSON.stringify(home),JSON.stringify(doc));\n      }\n    }\n\n    return rcnt;\n  };\n\n  this.dbextract = function (state, showFunc) {\n    // extract data from db and show\n    // extract data from db and insert into data-array\n    // var parent={};//{test:{$exists:false}};\n    var where = this.getWhere(state);\n    var cntDocs0 = this.getDocsCnt(state, where);\n    var nrec = cntDocs0[0].cnt;\n    var m = {};\n    state.Matrix.cnt = nrec;\n\n    if (nrec > state.Matrix.popSeries) {\n      // only use counts...\n      state.Matrix.initKeyCnt(state);\n      var buff = [];\n      state.Utils.cpArray(buff, state.Path.keys.path);\n      state.Utils.cpArray(buff, state.Path.keys.other);\n      state.Utils.cpArray(buff, state.Path.trash);\n      state.Matrix.mapKeyCnt(state, where, nrec, buff); //console.log(\"Setup:\",\n      //\t    JSON.stringify(state.Matrix.values),\n      //\t    JSON.stringify(state.Matrix.keyCnt));\n\n      state.Path.exportAllKeys(state); // can not export keys before we have a cnt-map\n\n      state.Matrix.sortMatrixValues(state); //console.log(\"Count:\",JSON.stringify(docs));\n      // add \"undefined\" range of keys that are not present in every doc...\n\n      var cntDocs = state.Database.getDocsCnt(state, where, state.Path.other.table);\n      state.Matrix.makeMatrixCnt(state, cntDocs, m);\n    } else {\n      //console.log(\"Database where:\",where);\n      var docs = this.getDocs(state, where); // get all docs\n      //console.log(\">>>Extraction key (where='\",where,\"') Docs:\",docs.length);\n\n      state.Matrix.initKeyCnt(state);\n      state.Matrix.mapKeys(state, docs);\n      state.Matrix.addMapKeys(state, docs); //console.log(\"Setup=\",JSON.stringify(setup));\n      //console.log (\"Maprange:\",JSON.stringify(state.Matrix.values));\n      // subset contains the keys being displayed in matrix...\n\n      state.Path.exportAllKeys(state); // can not export keys before we have a cnt-map\n\n      state.Matrix.sortMatrixValues(state); // make matrix\n\n      state.Matrix.makeMatrix(state, docs, m); //console.log (\"Matrix:\",JSON.stringify(m));\n    }\n\n    showFunc(state, m);\n  };\n\n  this.dbindex = function (state, ks) {\n    // make indexes on all keys\n    var s = \"\";\n    var klen = ks.length;\n\n    for (var ii = 0; ii < klen; ii++) {\n      //alasql(\"CREATE INDEX ? ON TABLE alarm.?\",ks[ii],ks[ii]);\n      s = s + \" \" + ks[ii];\n    }\n\n    ; //console.log(\"Indexes:\",s);\n  };\n\n  this.getTitleDynamic = function (state, key, val) {\n    var ret, parse;\n\n    if (state.Database.values[key] === undefined) {\n      ret = val;\n    } else {\n      var keytrg = this.getKeytrg(state, key, val);\n\n      if (val === \"null\") {\n        ret = key + \" is NULL\";\n      } else if (keytrg === this.keytrg.Max) {\n        // this is a function\n        parse = state.Utils.getMax(state.Database.values[key]);\n\n        if (parse === undefined) {\n          ret = key + \" is NULL\";\n        } else {\n          ret = parse;\n        }\n\n        ;\n      } else if (keytrg === this.keytrg.Min) {\n        // this is a function\n        parse = state.Utils.getMin(state.Database.values[key]);\n\n        if (parse === undefined) {\n          ret = key + \" is NULL\";\n        } else {\n          ret = parse;\n        }\n\n        ;\n      } else {\n        ret = val;\n      }\n\n      ;\n    }\n\n    ;\n    return ret;\n  };\n\n  this.getWhereDynamic = function (state, key, val) {\n    var ret, parse;\n\n    if (state.Database.values[key] === undefined) {\n      ret = state.Database.getWhereDetail(key, val);\n    } else {\n      var keytrg = this.getKeytrg(state, key, val); //console.log(\"parseWhere:\",key,JSON.stringify(val),keytrg);\n\n      if (keytrg === this.keytrg.Max) {\n        // this is a function\n        parse = state.Utils.getMax(state.Database.values[key]); //console.log(\"parseWhere:\",key,parse,JSON.stringify(state.Database.values[key]));\n\n        if (parse === undefined) {\n          ret = key + \" is NULL\";\n        } else {\n          ret = key + \"='\" + parse + \"'\";\n        }\n\n        ;\n      } else if (keytrg === this.keytrg.Min) {\n        // this is a function\n        parse = state.Utils.getMin(state.Database.values[key]);\n\n        if (parse === undefined) {\n          ret = key + \" is NULL\";\n        } else {\n          ret = key + \"='\" + parse + \"'\";\n        }\n\n        ;\n      } else {\n        ret = state.Database.getWhereDetail(key, val);\n      }\n\n      ;\n    }\n\n    ; //console.log(\"GetWhere:\",key,val,ret);\n\n    return ret;\n  };\n\n  this.getWhereDetail = function (key, val) {\n    if (val === undefined || val === null || val === \"\") {\n      return key + ' is NULL';\n    } else {\n      return key + '=\"' + val + '\"';\n    }\n\n    ;\n  };\n\n  this.getWhere = function (state, keys, vals) {\n    var where = \"\"; //console.log(\"Path:\",JSON.stringify(state.Path.keys));\n\n    if (keys === undefined) {\n      keys = state.Path.keys.path;\n      vals = state.Path.select.val;\n    }\n\n    ;\n\n    if (vals === undefined) {\n      vals = [];\n    }\n\n    ;\n\n    if (keys !== undefined) {\n      var plen = keys.length;\n\n      for (var ii = 0; ii < plen; ii++) {\n        var key = keys[ii];\n        var whereKey = state.Database.parseWhere(state, key, vals[key]); //console.log(\"Wherekey:\",ii,key,JSON.stringify(vals),\n        //\t    JSON.stringify(vals[key]),\"'\"+whereKey+\"'\");\n\n        if (whereKey === undefined || whereKey === null || whereKey === \"\") {\n          if (where !== \"\") {\n            where = where + ' AND ';\n          }\n\n          ;\n          where = where + key + ' is NULL';\n        } else {\n          if (where !== \"\") {\n            where = where + ' AND ';\n          }\n\n          ;\n          where = where + \"(\" + whereKey + \")\";\n        }\n      }\n\n      ;\n\n      if (where !== \"\") {\n        where = \" WHERE \" + where;\n      } //console.log(\"Where=|\"+where+\"|\")\n\n    }\n\n    ;\n    return where;\n  };\n\n  this.addWhere = function (iwhere, whereKey) {\n    var where = iwhere;\n\n    if (whereKey !== undefined && whereKey !== null && whereKey !== \"\") {\n      if (where !== \"\") {\n        where = where + \" AND (\" + whereKey + \")\";\n      } else {\n        where = \" WHERE (\" + whereKey + \")\";\n      }\n    }\n\n    return where;\n  };\n\n  this.getColWhere = function (key, values, index, step) {\n    var clen = values.length;\n    var where = \"\";\n\n    for (var kk = index; kk < Math.min(clen, index + step); kk++) {\n      if (where !== \"\") {\n        where = where + \" or \";\n      }\n\n      where = where + this.getWhereDetail(key, values[kk]);\n    }\n\n    ;\n    return where;\n  };\n\n  this.makeWhere = function (state, keys, vals) {\n    if (keys === undefined) {\n      state.Path.keys.path.forEach(function (item, index) {\n        this.setWhere(state, item, state.Path.select.val);\n      }.bind(this));\n    } else {\n      keys.forEach(function (item, index) {\n        this.setWhere(state, item, vals);\n      }.bind(this));\n    }\n  };\n\n  this.setWhere = function (state, key, vals) {\n    var where = this.parseWhere(state, key, vals);\n    state.Path.where[key] = where;\n  };\n\n  this.parseWhere = function (state, key, vals) {\n    var where = \"\";\n\n    if (vals === undefined) {\n      vals = [];\n    }\n\n    ;\n    var lenv = vals.length;\n\n    for (var ii = 0; ii < lenv; ii++) {\n      var val = vals[ii];\n\n      if (where !== \"\") {\n        where = where + \" OR \";\n      }\n\n      ;\n      where = where + state.Database.getWhereDynamic(state, key, val); //console.log(\"From getWhereDynamic:\",key,\":\",val,\":\",where);\n    }\n\n    ;\n    return where;\n  };\n\n  this.getGroup = function (keys) {\n    var group = \"\";\n    var plen = keys.length;\n\n    for (var ii = 0; ii < plen; ii++) {\n      var key = keys[ii];\n\n      if (group !== \"\") {\n        group = group + ',';\n      }\n\n      ;\n      group = group + key;\n    }\n\n    ;\n\n    if (group !== \"\") {\n      group = \" GROUP BY \" + group;\n    }\n\n    return group;\n  };\n\n  this.getCols = function (keys) {\n    var cols = \"\";\n    var plen = keys.length;\n\n    for (var ii = 0; ii < plen; ii++) {\n      var key = keys[ii];\n      cols = cols + key;\n\n      if (cols !== \"\") {\n        cols = cols + ',';\n      }\n\n      ;\n    }\n\n    ;\n    return cols;\n  };\n\n  this.getAll = function (state) {\n    var cols = \"\";\n    var plen = state.Path.keys.other.length;\n\n    for (var ii = 0; ii < plen; ii++) {\n      var key = state.Path.keys.other[ii];\n      cols = cols + key;\n\n      if (cols !== \"\") {\n        cols = cols + ',';\n      }\n\n      ;\n    }\n\n    ;\n    return cols;\n  };\n\n  this.getDocsRank = function (state, where, keys, maxrank) {\n    var dd;\n    dd = alasql(\"select * FROM alarm\" + where);\n    return dd;\n  };\n\n  this.getRankCnt = function (state, where, keys, maxrank) {\n    where = this.addWhere(where, \"rank='\" + maxrank.toString() + \"'\");\n    var sql, dd;\n    var body = \"* FROM alarm\";\n\n    if (keys === undefined) {\n      sql = \"select \" + body + where; //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\n      dd = alasql(sql); //console.log(\"initial count:\",dd[0].cnt,JSON.stringify(dd0));\n      //console.log(\"Cnt:\",JSON.stringify(dd));\n\n      return dd;\n    } else {\n      var cols = this.getCols(keys);\n      var group = this.getGroup(keys);\n      sql = \"select \" + cols + body + where + group; //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\n      dd = alasql(sql); //console.log(\"Cnt:\",JSON.stringify(dd),JSON.stringify(keys));\n\n      return dd;\n    }\n  };\n\n  this.getDocsCnt = function (state, where, keys) {\n    var sql, dd;\n    var body = \"count(*) AS cnt, max(level) AS maxlev, max(rank) AS maxrank, min(level) AS minlev, max(lat) AS maxlat, min(lat) AS minlat, max(lon) AS maxlon, min(lon) AS minlon FROM alarm\";\n\n    if (keys === undefined) {\n      sql = \"select \" + body + where; //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\n      dd = alasql(sql); //console.log(\"initial count:\",dd[0].cnt,JSON.stringify(dd0));\n      //console.log(\"Cnt:\",JSON.stringify(dd));\n\n      return dd;\n    } else {\n      var cols = this.getCols(keys);\n      var group = this.getGroup(keys);\n      sql = \"select \" + cols + body + where + group; //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\n      dd = alasql(sql); //console.log(\"Cnt:\",JSON.stringify(dd),JSON.stringify(keys));\n\n      return dd;\n    }\n  };\n\n  this.getDocs = function (state, where) {\n    var dd;\n    dd = alasql(\"select * FROM alarm\" + where);\n    return dd;\n  };\n\n  this.makeTable = function (state) {\n    alasql('DROP TABLE IF EXISTS alarm; CREATE TABLE alarm;');\n  };\n\n  this.dataToDb = function (state, data) {\n    alasql.tables.alarm.data = data;\n  };\n\n  this.getKeyCnt = function (state, key, where) {\n    var sql = \"select \" + key + \",count(*) AS cnt FROM alarm\" + where + \" GROUP BY \" + key;\n    return alasql(sql);\n  };\n\n  this.whatIsIt = function (object) {\n    // determine object type\n    if (object === null) {\n      return \"null\";\n    } else if (object.constructor === this.arrayConstructor) {\n      return \"Array\";\n    } else if (object.constructor === this.objectConstructor) {\n      return \"Object\";\n    } else {\n      return \"value\";\n    }\n  };\n\n  this.getTimeDiff = function (state, dt) {\n    var s = \"\";\n\n    if (dt === undefined || isNaN(state, dt)) {\n      return s;\n    }\n\n    ;\n    var msec = Math.abs(state, dt);\n    var dd = Math.floor(state, (state, msec / 1000 / 60) / 60 / 24);\n    msec -= dd * 1000 * 60 * 60 * 24;\n    var hh = Math.floor(state, (state, msec / 1000) / 60 / 60);\n    msec -= hh * 1000 * 60 * 60;\n    var mm = Math.floor(state, msec / 1000 / 60);\n    msec -= mm * 1000 * 60;\n    var ss = Math.floor(state, msec / 1000);\n    msec -= ss * 1000;\n\n    if (dt < 0) {\n      s = \"-\";\n    } else if (dt > 0) {\n      s = \"+\";\n    } else {\n      s = \"0\";\n    }\n\n    if (dd !== 0) s = s + \" \" + state.Utils.numberWithCommas(dd) + \"d\";\n    if (hh !== 0) s = s + \" \" + hh + \"h\";\n    if (mm !== 0) s = s + \" \" + mm + \"m\"; //if (ss !== 0) s=s+\" \"+ss+\"s\";\n\n    return s;\n  };\n\n  this.sanityCheck = function (state) {\n    var sql = \"select count(*) AS cnt, max(level) AS lev FROM alarm\";\n    var dd0 = alasql(sql);\n    var nrec = dd0[0].cnt;\n    return nrec;\n  };\n}\n\n;\nexport default Database;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/DatabaseLib.js"],"names":["alasql","window","Database","ret","cnt","keyCnt","values","epoch0","regfile","datfile","arrayConstructor","constructor","objectConstructor","casc","cdes","nasc","ndes","delay","ready","log","mod","init","state","Utils","Colors","Path","Layout","Threshold","keytrg","Missing","Null","Value","Min","Max","update","setTime","load","setTimeout","Default","loadDefault","loadRegister","loadData","callbacks","Html","setFootnote","setProgress","regHttp","XMLHttpRequest","addEventListener","e","progressInfo","errorInfo","abortInfo","onreadystatechange","readyState","status","file","responseText","callback","shift","undefined","bind","responseType","overrideMimeType","open","setRequestHeader","send","datHttp","broadcast","console","dbInsert","makeWhere","Show","showAll","setConsole","getTime","s","nn","match","map","Number","date0","Date","UTC","slice","d","epoch","age","getTimeDiff","React","Status","setAge","getKeyValues","key","vals","getKeytrg","val","Array","isArray","lenv","length","ii","Math","max","makeKeytrg","raw","json","JSON","parse","len","data","makeTable","home","hkeys","Object","keys","homeKeys","delayKeys","lenh","push","rcnt","extractData","dataToDb","nrec","sanityCheck","postProcess","where","getWhere","docs","getDocs","makePath","dbindex","other","table","rest","alert","updateKeyCnt","type","order","isNaN","lenk","sql","dd0","lend","jj","doc","parent","kk","kii","child","dkey","wii","whatIsIt","cp","dlen","keep","value","found","setThresholds","_title","makeDocTitle","dbextract","showFunc","cntDocs0","getDocsCnt","m","Matrix","popSeries","initKeyCnt","buff","cpArray","path","trash","mapKeyCnt","exportAllKeys","sortMatrixValues","cntDocs","makeMatrixCnt","mapKeys","addMapKeys","makeMatrix","ks","klen","getTitleDynamic","getMax","getMin","getWhereDynamic","getWhereDetail","select","plen","whereKey","parseWhere","addWhere","iwhere","getColWhere","index","step","clen","min","forEach","item","setWhere","getGroup","group","getCols","cols","getAll","getDocsRank","maxrank","dd","getRankCnt","toString","body","tables","alarm","getKeyCnt","object","dt","msec","abs","floor","hh","mm","ss","numberWithCommas"],"mappings":"AAAA;AAEA,IAAMA,MAAM,GAAGC,MAAM,CAACD,MAAtB;;AAEA,SAASE,QAAT,GAAoB;AAChB,MAAIC,GAAJ;AACA,OAAKC,GAAL,GAAS,CAAT;AACA,OAAKC,MAAL,GAAY,EAAZ;AACA,OAAKC,MAAL,GAAa,EAAb;AACA,OAAKC,MAAL,GAAY,CAAZ;AACA,OAAKC,OAAL,GAAa,UAAb,CANgB,CAMc;;AAC9B,OAAKC,OAAL,GAAa,EAAb,CAPgB,CAOc;;AAC9B,OAAKC,gBAAL,GAAsB,GAAGC,WAAzB;AACA,OAAKC,iBAAL,GAAuB,GAAGD,WAA1B;AACA,OAAKE,IAAL,GAAU,CAAV,CAVgB,CAUH;;AACb,OAAKC,IAAL,GAAU,CAAV,CAXgB,CAWH;;AACb,OAAKC,IAAL,GAAU,CAAV,CAZgB,CAYH;;AACb,OAAKC,IAAL,GAAU,CAAV,CAbgB,CAaH;;AACb,OAAKC,KAAL,GAAW,MAAX,CAdgB,CAcI;;AACpB,OAAKC,KAAL,GAAW,IAAX,CAfgB,CAeK;;AACrB,OAAKC,GAAL,GAAS,EAAT;AACA,OAAKC,GAAL,GAAS,EAAT;;AACA,OAAKC,IAAL,GAAU,UAASC,KAAT,EAAe;AACrB;AACPA,IAAAA,KAAK,CAACC,KAAN,CAAYF,IAAZ,CAAiB,UAAjB,EAA4B,IAA5B;AACOC,IAAAA,KAAK,CAACE,MAAN,CAAaH,IAAb,CAAkBC,KAAlB;AACAA,IAAAA,KAAK,CAACG,IAAN,CAAWJ,IAAX,CAAgBC,KAAhB;AACAA,IAAAA,KAAK,CAACI,MAAN,CAAaL,IAAb,CAAkBC,KAAlB;AACAA,IAAAA,KAAK,CAACK,SAAN,CAAgBN,IAAhB,CAAqBC,KAArB;AACH,GAPD;;AAQA,OAAKM,MAAL,GAAY;AAACC,IAAAA,OAAO,EAAC,CAAC,CAAV;AACbC,IAAAA,IAAI,EAAC,CADQ;AAEbC,IAAAA,KAAK,EAAC,CAFO;AAGbC,IAAAA,GAAG,EAAC,CAHS;AAIbC,IAAAA,GAAG,EAAC;AAJS,GAAZ;;AAMA,OAAKC,MAAL,GAAY,UAASZ,KAAT,EAAgB;AAC/B,SAAKa,OAAL,CAAab,KAAb;AACA,SAAKc,IAAL,CAAUd,KAAV;AACAe,IAAAA,UAAU,CAAC;AAAA,aAAI,YAAW;AAAC,aAAKH,MAAL,CAAYZ,KAAZ;AAAmB,OAAnC;AAAA,KAAD,EAAqC,KAAKL,KAA1C,CAAV;AACI,GAJD;;AAKA,OAAKmB,IAAL,GAAU,UAASd,KAAT,EAAgB;AAC7B;AACAA,IAAAA,KAAK,CAACgB,OAAN,CAAcC,WAAd,CAA0BjB,KAA1B,EAAgC,CAAC,KAAKkB,YAAN,EAC3B,KAAKC,QADsB,CAAhC;AAII,GAND;;AAOA,OAAKD,YAAL,GAAkB,UAASlB,KAAT,EAAgBoB,SAAhB,EAA4B;AACjD;AACA,QAAI,KAAKxB,KAAT,EAAgB;AAAE;AACd,WAAKA,KAAL,GAAW,KAAX;AACAI,MAAAA,KAAK,CAACqB,IAAN,CAAWC,WAAX,CAAuBtB,KAAvB,EAA8B,qBAAmB,KAAKd,OAAtD;AACAc,MAAAA,KAAK,CAACqB,IAAN,CAAWE,WAAX,CAAuBvB,KAAvB,EAA8B,IAA9B;AACA,UAAIwB,OAAO,GAAG,IAAIC,cAAJ,EAAd;AACAD,MAAAA,OAAO,CAACE,gBAAR,CAAyB,UAAzB,EAAoC,UAACC,CAAD;AAAA,eAAK3B,KAAK,CAACqB,IAAN,CAAWO,YAAX,CAAwB5B,KAAxB,EAA8B2B,CAA9B,CAAL;AAAA,OAApC,EALY,CAMZ;;AACAH,MAAAA,OAAO,CAACE,gBAAR,CAAyB,OAAzB,EAAiC,UAACC,CAAD;AAAA,eAAK3B,KAAK,CAACqB,IAAN,CAAWQ,SAAX,CAAqB7B,KAArB,EAA2B2B,CAA3B,CAAL;AAAA,OAAjC;AACAH,MAAAA,OAAO,CAACE,gBAAR,CAAyB,OAAzB,EAAiC,UAACC,CAAD;AAAA,eAAK3B,KAAK,CAACqB,IAAN,CAAWS,SAAX,CAAqB9B,KAArB,EAA2B2B,CAA3B,CAAL;AAAA,OAAjC;;AACAH,MAAAA,OAAO,CAACO,kBAAR,GAA6B,YAAW;AAC3C,aAAKnC,KAAL,GAAW,IAAX;;AACA,YAAI4B,OAAO,CAACQ,UAAR,KAAwB,CAA5B,EAA+B;AAC3B,cAAIR,OAAO,CAACS,MAAR,KAAoB,GAAxB,EAA6B;AAChC;AACA,gBAAIC,IAAI,GAAGV,OAAO,CAACW,YAAnB;;AACA,gBAAID,IAAI,KAAK,KAAK/C,OAAlB,EAA2B;AAAE;AACrB,mBAAKA,OAAL,GAAa+C,IAAb;AACJ,kBAAIE,QAAQ,GAAChB,SAAS,CAACiB,KAAV,EAAb;;AACA,kBAAID,QAAQ,KAAKE,SAAjB,EAA4B;AAC/BvB,gBAAAA,UAAU,CAACqB,QAAQ,CAACpC,KAAD,EAAOkC,IAAP,EAAYd,SAAZ,CAAT,EAAgC,GAAhC,CAAV;AACI;AACJ,aAND,MAMO;AACHpB,cAAAA,KAAK,CAACqB,IAAN,CAAWC,WAAX,CAAuBtB,KAAvB;AACAA,cAAAA,KAAK,CAACqB,IAAN,CAAWE,WAAX,CAAuBvB,KAAvB,EAA8B,KAA9B;AACH;AACG,WAbD,MAaO;AACVA,YAAAA,KAAK,CAACqB,IAAN,CAAWC,WAAX,CAAuBtB,KAAvB,EAA6B,oBAAkB,KAAKd,OAApD;AACAc,YAAAA,KAAK,CAACqB,IAAN,CAAWE,WAAX,CAAuBvB,KAAvB,EAA8B,KAA9B,EAFU,CAGV;AACI;AACJ,SAnBD,MAmBO;AACHA,UAAAA,KAAK,CAACqB,IAAN,CAAWC,WAAX,CAAuBtB,KAAvB,EAA6B,KAAKd,OAAL,GAAa,QAA1C;AACAc,UAAAA,KAAK,CAACqB,IAAN,CAAWE,WAAX,CAAuBvB,KAAvB,EAA8B,KAA9B;AACH;;AAAA;AACG,OAzB4B,CAyB3BuC,IAzB2B,CAyBtB,IAzBsB,CAA7B;;AA0BAf,MAAAA,OAAO,CAACgB,YAAR,GAAqB,EAArB;AACAhB,MAAAA,OAAO,CAACiB,gBAAR,CAAyB,WAAzB;AACAjB,MAAAA,OAAO,CAACkB,IAAR,CAAa,KAAb,EAAoB,UAAQ,KAAKxD,OAAjC,EAA0C,IAA1C;AACAsC,MAAAA,OAAO,CAACmB,gBAAR,CAAyB,eAAzB,EAA0C,sDAA1C;AACAnB,MAAAA,OAAO,CAACmB,gBAAR,CAAyB,eAAzB,EAA0C,WAA1C;AACAnB,MAAAA,OAAO,CAACmB,gBAAR,CAAyB,SAAzB,EAAoC,GAApC;AACAnB,MAAAA,OAAO,CAACmB,gBAAR,CAAyB,SAAzB,EAAoC,8BAApC;AACAnB,MAAAA,OAAO,CAACmB,gBAAR,CAAyB,QAAzB,EAAmC,UAAnC;AACAnB,MAAAA,OAAO,CAACoB,IAAR;AACH,KA5CD,MA4CO;AACH;AACA5C,MAAAA,KAAK,CAACqB,IAAN,CAAWC,WAAX,CAAuBtB,KAAvB,EAA6B,8BAA7B;AACAA,MAAAA,KAAK,CAACqB,IAAN,CAAWE,WAAX,CAAuBvB,KAAvB,EAA8B,IAA9B;AACH;;AAAA;AACG,GAnDiB,CAmDhBuC,IAnDgB,CAmDX,IAnDW,CAAlB;;AAoDA,OAAKpB,QAAL,GAAc,UAASnB,KAAT,EAAekC,IAAf,EAAqBd,SAArB,EAAiC;AAClD;AACA,QAAI,KAAKxB,KAAT,EAAgB;AAAE;AACd,WAAKA,KAAL,GAAW,KAAX;AACAI,MAAAA,KAAK,CAACqB,IAAN,CAAWC,WAAX,CAAuBtB,KAAvB,EAA8B,qBAAmB,KAAKb,OAAtD;AACAa,MAAAA,KAAK,CAACqB,IAAN,CAAWE,WAAX,CAAuBvB,KAAvB,EAA8B,IAA9B;AACA,UAAI6C,OAAO,GAAG,IAAIpB,cAAJ,EAAd;AACAoB,MAAAA,OAAO,CAACnB,gBAAR,CAAyB,UAAzB,EAAoC,UAACC,CAAD;AAAA,eAAK3B,KAAK,CAACqB,IAAN,CAAWO,YAAX,CAAwB5B,KAAxB,EAA8B2B,CAA9B,CAAL;AAAA,OAApC,EALY,CAMZ;;AACAkB,MAAAA,OAAO,CAACnB,gBAAR,CAAyB,OAAzB,EAAiC,UAACC,CAAD;AAAA,eAAK3B,KAAK,CAACqB,IAAN,CAAWQ,SAAX,CAAqB7B,KAArB,EAA2B2B,CAA3B,CAAL;AAAA,OAAjC;AACAkB,MAAAA,OAAO,CAACnB,gBAAR,CAAyB,OAAzB,EAAiC,UAACC,CAAD;AAAA,eAAK3B,KAAK,CAACqB,IAAN,CAAWS,SAAX,CAAqB9B,KAArB,EAA2B2B,CAA3B,CAAL;AAAA,OAAjC;;AACAkB,MAAAA,OAAO,CAACd,kBAAR,GAA6B,YAAW;AAC3C,aAAKnC,KAAL,GAAW,IAAX;;AACA,YAAIiD,OAAO,CAACb,UAAR,KAAwB,CAA5B,EAA+B;AAC3B,cAAIa,OAAO,CAACZ,MAAR,KAAoB,GAAxB,EAA6B;AAChC;AACA;AACAjC,YAAAA,KAAK,CAACqB,IAAN,CAAWyB,SAAX,CAAqB9C,KAArB,EAA2B,YAAU,KAAKb,OAA1C;AACIa,YAAAA,KAAK,CAACqB,IAAN,CAAWC,WAAX,CAAuBtB,KAAvB,EAA6B,mBAA7B;AACJ+C,YAAAA,OAAO,CAAClD,GAAR,CAAY,4BAA0BqC,IAAtC;AACAnB,YAAAA,UAAU,CAAC,YAAW;AAClB,mBAAKiC,QAAL,CAAchD,KAAd,EAAoB6C,OAAO,CAACV,YAA5B;AACInC,cAAAA,KAAK,CAACqB,IAAN,CAAWC,WAAX,CAAuBtB,KAAvB,EAA6B,kBAA7B;AACJe,cAAAA,UAAU,CAAC,YAAW;AACzB,qBAAKkC,SAAL,CAAejD,KAAf,EADyB,CACF;;AACvBA,gBAAAA,KAAK,CAACkD,IAAN,CAAWC,OAAX,CAAmBnD,KAAnB;AACAA,gBAAAA,KAAK,CAACqB,IAAN,CAAWC,WAAX,CAAuBtB,KAAvB;AACA,oBAAIoC,QAAQ,GAAChB,SAAS,CAACiB,KAAV,EAAb;;AACA,oBAAID,QAAQ,KAAKE,SAAjB,EAA4B;AACxB;AACIvB,kBAAAA,UAAU,CAACqB,QAAQ,CAACpC,KAAD,EAAOoB,SAAP,CAAT,EAA2B,CAA3B,CAAV;AACP,iBAHD,MAGO,CACH;AACH;AACG,eAXU,CAWTmB,IAXS,CAWJ,IAXI,CAAD,EAWG,GAXH,CAAV;AAYH,aAfU,CAeTA,IAfS,CAeJ,IAfI,CAAD,EAeG,GAfH,CAAV;AAgBI,WAtBD,MAsBO;AACNvC,YAAAA,KAAK,CAACqB,IAAN,CAAWC,WAAX,CAAuBtB,KAAvB,EAA6B,oBAAkBkC,IAA/C;AACJlC,YAAAA,KAAK,CAACqB,IAAN,CAAWE,WAAX,CAAuBvB,KAAvB,EAA8B,KAA9B;AACAA,YAAAA,KAAK,CAACqB,IAAN,CAAW+B,UAAX,CAAsBlB,IAAI,GAAC,QAA3B;AACI;AACJ;AACG,OA/B4B,CA+B3BK,IA/B2B,CA+BtB,IA/BsB,CAA7B;;AAgCAM,MAAAA,OAAO,CAACL,YAAR,GAAqB,EAArB;AACAK,MAAAA,OAAO,CAACJ,gBAAR,CAAyB,WAAzB;AACAI,MAAAA,OAAO,CAACH,IAAR,CAAa,KAAb,EAAoB,UAAQ,KAAKvD,OAAjC,EAA0C,IAA1C;AACA0D,MAAAA,OAAO,CAACF,gBAAR,CAAyB,eAAzB,EAA0C,sDAA1C;AACAE,MAAAA,OAAO,CAACF,gBAAR,CAAyB,eAAzB,EAA0C,WAA1C;AACAE,MAAAA,OAAO,CAACF,gBAAR,CAAyB,SAAzB,EAAoC,GAApC;AACAE,MAAAA,OAAO,CAACF,gBAAR,CAAyB,SAAzB,EAAoC,8BAApC;AACAE,MAAAA,OAAO,CAACF,gBAAR,CAAyB,QAAzB,EAAmC,UAAnC;AACAE,MAAAA,OAAO,CAACD,IAAR;AACH,KAlDD,MAkDO;AACH5C,MAAAA,KAAK,CAACqB,IAAN,CAAW+B,UAAX,CAAsB,EAAtB;AACApD,MAAAA,KAAK,CAACqB,IAAN,CAAWC,WAAX,CAAuBtB,KAAvB,EAA8B,8BAA9B;AACAA,MAAAA,KAAK,CAACqB,IAAN,CAAWE,WAAX,CAAuBvB,KAAvB,EAA8B,IAA9B;AACH;;AAAA;AACG,GAzDa,CAyDZuC,IAzDY,CAyDP,IAzDO,CAAd;;AA0DA,OAAKc,OAAL,GAAa,UAASrD,KAAT,EAAesD,CAAf,EAAkB;AAClC,QAAIC,EAAE,GAAGD,CAAC,CAACE,KAAF,CAAQ,MAAR,EAAgBC,GAAhB,CAAoBC,MAApB,CAAT;AACA,QAAIC,KAAK,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,CAASN,EAAE,CAAC,CAAD,CAAX,EAAeA,EAAE,CAAC,CAAD,CAAF,GAAM,CAArB,EAAuBA,EAAE,CAAC,CAAD,CAAzB,EAA6BA,EAAE,CAAC,CAAD,CAA/B,EAAmCA,EAAE,CAAC,CAAD,CAArC,EAAyCA,EAAE,CAAC,CAAD,CAA3C,EACZ,CAAC,CAACA,EAAE,CAAC,CAAD,CAAF,IAAO,EAAR,IAAY,KAAb,EAAoBO,KAApB,CAA0B,CAA1B,EAA4B,CAA5B,CADY,CAAT,CAAZ,CAFkC,CAGS;AAC3C;;AACA,WAAOH,KAAK,CAACN,OAAN,EAAP;AACI,GAND;;AAOA,OAAKxC,OAAL,GAAa,UAASb,KAAT,EAAgB;AAChC,QAAI+D,CAAC,GAAG,IAAIH,IAAJ,EAAR;AACA,QAAII,KAAK,GAACD,CAAC,CAACV,OAAF,EAAV,CAFgC,CAGhC;;AACA,QAAI,KAAKpE,MAAL,KAAgBqD,SAApB,EAA+B;AAC3B,UAAI2B,GAAG,GAAGD,KAAK,GAAG,KAAK/E,MAAvB;AACA,WAAKa,GAAL,GAAS,KAAKoE,WAAL,CAAiBlE,KAAjB,EAAuBiE,GAAvB,CAAT;;AACA,UAAIjE,KAAK,CAACmE,KAAN,KAAgB7B,SAAhB,IAA6BtC,KAAK,CAACmE,KAAN,CAAYC,MAAZ,KAAuB9B,SAAxD,EAAmE;AACtEtC,QAAAA,KAAK,CAACmE,KAAN,CAAYC,MAAZ,CAAmBC,MAAnB,CAA0BrE,KAA1B,EAAgC,KAAKF,GAArC,EADsE,CAEtE;AACI;AACJ;AACG,GAZD;;AAaA,OAAKwE,YAAL,GAAkB,UAAStE,KAAT,EAAgBuE,GAAhB,EAAqB;AAC1C;AACA,QAAIC,IAAI,GAACxE,KAAK,CAACpB,QAAN,CAAeI,MAAf,CAAsBuF,GAAtB,CAAT;;AACA,QAAIC,IAAI,KAAKlC,SAAb,EAAwB;AACpB,aAAOkC,IAAP;AACH,KAFD,MAEO;AACH,aAAO,EAAP;AACH;AACG,GARD;;AASA,OAAKC,SAAL,GAAe,UAASzE,KAAT,EAAeuE,GAAf,EAAmBG,GAAnB,EAAwB;AAC1C,QAAIC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAJ,EAAwB;AACpB;AACA7F,MAAAA,GAAG,GAAC,KAAKyB,MAAL,CAAYC,OAAhB;AACA,UAAIsE,IAAI,GAACH,GAAG,CAACI,MAAb;;AACO,WAAK,IAAIC,EAAE,GAAC,CAAZ,EAAcA,EAAE,GAACF,IAAjB,EAAsBE,EAAE,EAAxB,EAA4B;AACtClG,QAAAA,GAAG,GAACmG,IAAI,CAACC,GAAL,CAASpG,GAAT,EAAa,KAAK4F,SAAL,CAAezE,KAAf,EAAqBuE,GAArB,EAAyBG,GAAG,CAACK,EAAD,CAA5B,CAAb,CAAJ;AACW,OANY,CAOpB;;AACH,KARD,MAQO;AACH,UAAIL,GAAG,KAAK,MAAZ,EAAoB;AACvB7F,QAAAA,GAAG,GAAC,KAAKyB,MAAL,CAAYE,IAAhB;AACI,OAFD,MAEO,IAAIkE,GAAG,KAAG,SAAOH,GAAP,GAAW,GAArB,EAA0B;AAAE;AACtC1F,QAAAA,GAAG,GAAC,KAAKyB,MAAL,CAAYI,GAAhB;AACI,OAFM,MAEA,IAAIgE,GAAG,KAAG,SAAOH,GAAP,GAAW,GAArB,EAA0B;AAAE;AACtC1F,QAAAA,GAAG,GAAC,KAAKyB,MAAL,CAAYK,GAAhB;AACI,OAFM,MAEA,IAAI+D,GAAG,KAAKpC,SAAZ,EAAuB;AACjCzD,QAAAA,GAAG,GAAC,KAAKyB,MAAL,CAAYC,OAAhB;AACI,OAFM,MAEA,IAAImE,GAAG,KAAK,IAAZ,EAAkB;AAC5B7F,QAAAA,GAAG,GAAC,KAAKyB,MAAL,CAAYE,IAAhB;AACI,OAFM,MAEA;AACV3B,QAAAA,GAAG,GAAC,KAAKyB,MAAL,CAAYG,KAAhB;AACI;;AAAA,OAbE,CAcH;AACH;;AAAA;AACD,WAAO5B,GAAP;AACI,GA1BD;;AA2BA,OAAKqG,UAAL,GAAgB,UAASlF,KAAT,EAAeuE,GAAf,EAAmBjE,MAAnB,EAA0BoE,GAA1B,EAA+B;AAClD,QAAIpE,MAAM,KAAK,KAAKA,MAAL,CAAYC,OAA3B,EAAoC;AAChC,aAAO,SAAP;AACH,KAFD,MAEO,IAAID,MAAM,KAAK,KAAKA,MAAL,CAAYE,IAA3B,EAAiC;AACpC,aAAO,MAAP;AACH,KAFM,MAEA,IAAIF,MAAM,KAAK,KAAKA,MAAL,CAAYI,GAA3B,EAAgC;AACnC,aAAO,SAAO6D,GAAP,GAAW,GAAlB;AACH,KAFM,MAEA,IAAIjE,MAAM,KAAK,KAAKA,MAAL,CAAYK,GAA3B,EAAgC;AACnC,aAAO,SAAO4D,GAAP,GAAW,GAAlB;AACH,KAFM,MAEA;AACH,aAAOG,GAAP;AACH;;AAAA;AACG,GAZD;;AAaA,OAAK1B,QAAL,GAAc,UAAShD,KAAT,EAAemF,GAAf,EAAoB;AACrC,QAAIJ,EAAJ,EAAOR,GAAP;;AACA,QAAI;AACA;AACA;AACA,UAAIa,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,GAAX,CAAX;AACA,UAAII,GAAG,GAACH,IAAI,CAACI,IAAL,CAAUV,MAAlB;;AACA,WAAKC,EAAE,GAAC,CAAR,EAAUA,EAAE,GAACQ,GAAb,EAAiBR,EAAE,EAAnB,EAAuB;AAC1BK,QAAAA,IAAI,CAACI,IAAL,CAAUT,EAAV,EAAc,KAAd,IAAqBA,EAArB;AACI,OAPD,CAQA;AACA;;;AACA,WAAK9F,MAAL,GAAY,KAAKoE,OAAL,CAAarD,KAAb,EAAmBoF,IAAI,CAACpB,KAAxB,CAAZ,CAVA,CAUgD;;AAChD,WAAKnD,OAAL,CAAab,KAAb,EAXA,CAWyB;AACzB;;AACA,WAAKyF,SAAL,CAAezF,KAAf,EAbA,CAcA;;AACA,WAAKlB,GAAL,GAAS,CAAT;AACA,WAAKC,MAAL,GAAY,EAAZ,CAhBA,CAgBgB;AAChB;AACA;;AACA,UAAIyG,IAAI,GAAC,EAAT;AACA,UAAIE,IAAI,GAAC1F,KAAK,CAACG,IAAN,CAAWuF,IAAX,CAAgBhB,GAAzB;AACA,UAAIiB,KAAK,GAACC,MAAM,CAACC,IAAP,CAAYH,IAAZ,CAAV;AACA,UAAII,QAAQ,GAAC,EAAb;AACA,UAAIC,SAAS,GAAC,EAAd;AACA,UAAIC,IAAI,GAACL,KAAK,CAACb,MAAf;;AACO,WAAKC,EAAE,GAAC,CAAR,EAAUA,EAAE,GAACiB,IAAb,EAAkBjB,EAAE,EAApB,EAAwB;AAClCR,QAAAA,GAAG,GAACoB,KAAK,CAACZ,EAAD,CAAT;AACA,YAAIzE,MAAM,GAAC,KAAKmE,SAAL,CAAezE,KAAf,EAAqBuE,GAArB,EAAyBmB,IAAI,CAACnB,GAAD,CAA7B,CAAX,CAFkC,CAGlC;;AACA,YAAIjE,MAAM,IAAI,KAAKA,MAAL,CAAYG,KAA1B,EAAiC;AAC7BqF,UAAAA,QAAQ,CAACG,IAAT,CAAc1B,GAAd;AACH,SAFD,MAEO;AACHwB,UAAAA,SAAS,CAACE,IAAV,CAAe1B,GAAf;AACH;AACU,OAlCR,CAmCA;;;AACA,UAAI2B,IAAI,GAAC,KAAKC,WAAL,CAAiBnG,KAAjB,EAAuBwF,IAAvB,EAA4B,EAA5B,EAA+B,EAA/B,EAAkCJ,IAAI,CAACI,IAAvC,EAA4CM,QAA5C,EAAqDJ,IAArD,CAAT,CApCA,CAqCA;AACA;;AACA,WAAKU,QAAL,CAAcpG,KAAd,EAAoBwF,IAApB;AACA,UAAIa,IAAI,GAAC,KAAKC,WAAL,CAAiBtG,KAAjB,CAAT,CAxCA,CAwCqC;;AACrC+C,MAAAA,OAAO,CAAClD,GAAR,CAAY,YAAZ,EAAyB2F,IAAI,CAACV,MAA9B,EAAqC,aAArC,EAAmDoB,IAAnD,EAAwD,YAAxD,EAAqEG,IAArE;AACA,WAAKE,WAAL,CAAiBvG,KAAjB,EA1CA,CA0CyB;;AACzB,UAAI+F,SAAS,CAACjB,MAAV,GAAmB,CAAvB,EAA0B;AAAC;AAC9B,aAAK7B,SAAL,CAAejD,KAAf,EAAqB+F,SAArB,EAA+BL,IAA/B;AACA,YAAIc,KAAK,GAAC,KAAKC,QAAL,CAAczG,KAAd,EAAoB+F,SAApB,EAA8BL,IAA9B,CAAV;AACA,YAAIgB,IAAI,GAAC,KAAKC,OAAL,CAAa3G,KAAb,EAAmBwG,KAAnB,CAAT;AACA,aAAKJ,QAAL,CAAcpG,KAAd,EAAoB0G,IAApB;AACA,aAAKH,WAAL,CAAiBvG,KAAjB,EAL6B,CAKJ;AACrB;;AAAA;AACDA,MAAAA,KAAK,CAACG,IAAN,CAAWyG,QAAX,CAAoB5G,KAApB,EAlDA,CAkD4B;AAC5B;;AACA,WAAK6G,OAAL,CAAa7G,KAAb,EAAmBA,KAAK,CAACG,IAAN,CAAW2G,KAAX,CAAiBC,KAApC,EApDA,CAoD4C;;AAC5C,WAAKF,OAAL,CAAa7G,KAAb,EAAmBA,KAAK,CAACG,IAAN,CAAW2G,KAAX,CAAiBE,IAApC,EArDA,CAqD2C;AAC3C;;AACAhH,MAAAA,KAAK,CAACqB,IAAN,CAAWyB,SAAX,CAAqB9C,KAArB,EAA2B,oBAA3B,EAvDA,CAwDA;AACH,KAzDD,CAyDE,OAAO2B,CAAP,EAAU;AACRsF,MAAAA,KAAK,CAACtF,CAAD,CAAL;AACH;;AAAA;AACG,GA9DD;;AA+DA,OAAKuF,YAAL,GAAkB,UAASlH,KAAT,EAAeuE,GAAf,EAAmBG,GAAnB,EAAwB;AAC7C,QAAI,KAAK3F,MAAL,CAAYwF,GAAZ,MAAqBjC,SAAzB,EAAoC;AAChC,WAAKvD,MAAL,CAAYwF,GAAZ,IAAiB;AAACzF,QAAAA,GAAG,EAAC,CAAL;AAAOqI,QAAAA,IAAI,EAAC,KAAZ;AAAkBC,QAAAA,KAAK,EAAC,KAAK3H;AAA7B,OAAjB;AACH;;AACD,SAAKV,MAAL,CAAYwF,GAAZ,EAAiBzF,GAAjB,GAAsB,KAAKC,MAAL,CAAYwF,GAAZ,EAAiBzF,GAAlB,GAAuB,CAA5C;;AACA,QAAI,KAAKC,MAAL,CAAYwF,GAAZ,EAAiB4C,IAAjB,KAA2B,KAA3B,IAAoCE,KAAK,CAAC3C,GAAD,CAA7C,EAAoD;AAChD,WAAK3F,MAAL,CAAYwF,GAAZ,EAAiB4C,IAAjB,GAAsB,KAAtB;AACA,WAAKpI,MAAL,CAAYwF,GAAZ,EAAiB6C,KAAjB,GAAuB,KAAK7H,IAA5B;AACH;AACG,GATD;;AAUA,OAAKgH,WAAL,GAAiB,UAASvG,KAAT,EAAgB;AAAE;AACtC,QAAI6F,IAAI,GAACD,MAAM,CAACC,IAAP,CAAY7F,KAAK,CAACpB,QAAN,CAAeG,MAA3B,CAAT;AACA,QAAIuI,IAAI,GAACzB,IAAI,CAACf,MAAd;;AACA,SAAK,IAAIC,EAAE,GAAC,CAAZ,EAAcA,EAAE,GAACuC,IAAjB,EAAsBvC,EAAE,EAAxB,EAA4B;AACxB,UAAIR,GAAG,GAACsB,IAAI,CAACd,EAAD,CAAZ,CADwB,CAExB;;AACA/E,MAAAA,KAAK,CAACpB,QAAN,CAAeI,MAAf,CAAsBuF,GAAtB,IAA2B,EAA3B;AACA,UAAIgD,GAAG,GAAC,qBAAmBhD,GAAnB,GAAuB,MAAvB,GAA8BA,GAA9B,GAAkC,aAA1C;AACA,UAAIiD,GAAG,GAAC9I,MAAM,CAAC6I,GAAD,CAAd;AACA,UAAIE,IAAI,GAACD,GAAG,CAAC1C,MAAb;;AACA,WAAK,IAAI4C,EAAE,GAAC,CAAZ,EAAcA,EAAE,GAACD,IAAjB,EAAsBC,EAAE,EAAxB,EAA4B;AAC/B,YAAIC,GAAG,GAACH,GAAG,CAACE,EAAD,CAAX;AACA1H,QAAAA,KAAK,CAACpB,QAAN,CAAeI,MAAf,CAAsBuF,GAAtB,EAA2B0B,IAA3B,CAAgC0B,GAAG,CAACpD,GAAD,CAAnC;AACI;;AAAA;AACJ;;AAAA;AACG,GAfD;;AAgBA,OAAK4B,WAAL,GAAiB,UAASnG,KAAT,EAAewF,IAAf,EAAoBoC,MAApB,EAA2BrD,GAA3B,EAA+BY,GAA/B,EAAmCQ,KAAnC,EAAyCD,IAAzC,EAA+C;AAAE;AACrE,QAAIQ,IAAI,GAAC,CAAT;AACA,QAAI2B,EAAJ,EAAO9C,EAAP,EAAU+C,GAAV,EAAcC,KAAd,EAAoBC,IAApB,CAFmE,CAGnE;;AACA,QAAIC,GAAG,GAAC,KAAKC,QAAL,CAAc/C,GAAd,CAAR;;AACA,QAAI8C,GAAG,KAAM,QAAT,IAAqB1D,GAAG,KAAM,EAAlC,EAAsC;AAClC;AACAwD,MAAAA,KAAK,GAAC/H,KAAK,CAACC,KAAN,CAAYkI,EAAZ,CAAeP,MAAf,CAAN,CAFkC,CAGlC;;AACA,WAAKC,EAAL,IAAW1C,GAAX,EAAgB;AACnB2C,QAAAA,GAAG,GAAC,KAAKI,QAAL,CAAc/C,GAAG,CAAC0C,EAAD,CAAjB,CAAJ;;AACA,YAAIC,GAAG,KAAM,OAAb,EAAsB;AAClBC,UAAAA,KAAK,CAACF,EAAD,CAAL,GAAU1C,GAAG,CAAC0C,EAAD,CAAb;AACH;AACG,OATiC,CAUlC;;;AACA,UAAItE,EAAE,GAAC,CAAP;;AACA,WAAKsE,EAAL,IAAW1C,GAAX,EAAgB;AACnB2C,QAAAA,GAAG,GAAC,KAAKI,QAAL,CAAc/C,GAAG,CAAC0C,EAAD,CAAjB,CAAJ;;AACA,YAAIC,GAAG,KAAK,OAAZ,EAAqB;AACjBvE,UAAAA,EAAE,GAACA,EAAE,GAAC,CAAN;AACA2C,UAAAA,IAAI,GAACA,IAAI,GAAC,KAAKC,WAAL,CAAiBnG,KAAjB,EAAuBwF,IAAvB,EAA4BuC,KAA5B,EAAkCF,EAAlC,EAAqC1C,GAAG,CAAC0C,EAAD,CAAxC,EAA6ClC,KAA7C,EAAmDD,IAAnD,CAAV;AACH;AACG;;AACD,UAAInC,EAAE,KAAM,CAAZ,EAAe;AAAE;AACpB;AACA2C,QAAAA,IAAI,GAACA,IAAI,GAAC,KAAKC,WAAL,CAAiBnG,KAAjB,EAAuBwF,IAAvB,EAA4BuC,KAA5B,EAAkC,IAAlC,EAAuC,IAAvC,EAA4CpC,KAA5C,EAAkDD,IAAlD,CAAV;AACI;AACJ,KAvBD,MAuBO,IAAIuC,GAAG,KAAM,QAAT,IAAqB1D,GAAG,KAAK,EAAjC,EAAqC;AACxC;AACAwD,MAAAA,KAAK,GAAC/H,KAAK,CAACC,KAAN,CAAYkI,EAAZ,CAAeP,MAAf,CAAN,CAFwC,CAGxC;;AACA,WAAKC,EAAL,IAAW1C,GAAX,EAAgB;AACnB4C,QAAAA,KAAK,CAACxD,GAAD,CAAL,GAAWsD,EAAX;AACA3B,QAAAA,IAAI,GAACA,IAAI,GAAC,KAAKC,WAAL,CAAiBnG,KAAjB,EAAuBwF,IAAvB,EAA4BuC,KAA5B,EAAkC,EAAlC,EAAqC5C,GAAG,CAAC0C,EAAD,CAAxC,EAA6ClC,KAA7C,EAAmDD,IAAnD,CAAV;AACI;AACJ,KARM,MAQA,IAAIuC,GAAG,KAAM,OAAb,EAAsB;AACzB;AACA,UAAIG,IAAI,GAAGjD,GAAG,CAACL,MAAf;;AACA,WAAKC,EAAE,GAAG,CAAV,EAAaA,EAAE,GAAGqD,IAAlB,EAAwBrD,EAAE,EAA1B,EAA8B;AACjCmB,QAAAA,IAAI,GAACA,IAAI,GAAC,KAAKC,WAAL,CAAiBnG,KAAjB,EAAuBwF,IAAvB,EAA4BoC,MAA5B,EAAmCrD,GAAnC,EAAuCY,GAAG,CAACJ,EAAD,CAA1C,EAA+CY,KAA/C,EAAqDD,IAArD,CAAV;AACI;AACJ,KANM,MAMA;AACH;AACA,UAAI2C,IAAI,GAAC,IAAT;AACA,UAAIV,GAAG,GAAC3H,KAAK,CAACC,KAAN,CAAYkI,EAAZ,CAAeP,MAAf,CAAR;;AACA,UAAIzC,GAAG,KAAK,IAAZ,EAAkB;AACrB,YAAIZ,GAAG,KAAM,EAAb,EAAiB;AACboD,UAAAA,GAAG,CAACW,KAAJ,GAAUnD,GAAV;AACH,SAFD,MAEO;AACHwC,UAAAA,GAAG,CAACpD,GAAD,CAAH,GAASY,GAAT;AACH;AACG,OAVE,CAWH;;;AACA,UAAIa,IAAI,GAACL,KAAK,CAACb,MAAf;;AACA,WAAKC,EAAE,GAAC,CAAR,EAAUA,EAAE,GAACiB,IAAb,EAAkBjB,EAAE,EAApB,EAAwB;AAC3BR,QAAAA,GAAG,GAACoB,KAAK,CAACZ,EAAD,CAAT;AACA,YAAIP,IAAI,GAACkB,IAAI,CAACnB,GAAD,CAAb;AACA,YAAIM,IAAI,GAACL,IAAI,CAACM,MAAd;AACA,YAAIyD,KAAK,GAAC,KAAV;;AACA,aAAK,IAAIb,EAAE,GAAC,CAAZ,EAAcA,EAAE,GAAC7C,IAAjB,EAAsB6C,EAAE,EAAxB,EAA2B;AACvB,cAAIlD,IAAI,CAACkD,EAAD,CAAJ,KAAWC,GAAG,CAACpD,GAAD,CAAd,IAAwBC,IAAI,CAACkD,EAAD,CAAJ,KAAW,EAAX,IAAiBC,GAAG,CAACpD,GAAD,CAAH,KAAWjC,SAAxD,EAAoE;AACvEiG,YAAAA,KAAK,GAAC,IAAN;AACI;AACJ;;AACD,YAAI,CAACA,KAAL,EAAY;AACRF,UAAAA,IAAI,GAAC,KAAL;AACH;;AAAA;AACG;;AACD,UAAIA,IAAJ,EAAU;AACb;AACA,aAAKL,IAAL,IAAaL,GAAb,EAAkB;AACd,cAAIjD,GAAG,GAACiD,GAAG,CAACK,IAAD,CAAX;AACA,eAAKd,YAAL,CAAkBlH,KAAlB,EAAwBgI,IAAxB,EAA6BtD,GAA7B,EAFc,CAGd;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACH;;AAAA,SAdY,CAeb;;AACAwB,QAAAA,IAAI,GAACA,IAAI,GAAC,CAAV;AACA,aAAKpH,GAAL,GAAS,KAAKA,GAAL,GAAS,CAAlB;AACAkB,QAAAA,KAAK,CAACK,SAAN,CAAgBmI,aAAhB,CAA8Bb,GAA9B;AACAA,QAAAA,GAAG,CAACc,MAAJ,GAAWzI,KAAK,CAACI,MAAN,CAAasI,YAAb,CAA0B1I,KAA1B,EAAgC2H,GAAhC,CAAX,CAnBa,CAoBb;AACA;AACA;AACA;;AACAnC,QAAAA,IAAI,CAACS,IAAL,CAAU0B,GAAV,EAxBa,CAyBV;AACH;AACI;AACJ;;AACD,WAAOzB,IAAP;AACI,GAnGD;;AAoGA,OAAKyC,SAAL,GAAe,UAAS3I,KAAT,EAAe4I,QAAf,EAAyB;AAAE;AAC7C;AACA;AACA,QAAIpC,KAAK,GAAG,KAAKC,QAAL,CAAczG,KAAd,CAAZ;AACA,QAAI6I,QAAQ,GAAC,KAAKC,UAAL,CAAgB9I,KAAhB,EAAsBwG,KAAtB,CAAb;AACA,QAAIH,IAAI,GAAEwC,QAAQ,CAAC,CAAD,CAAR,CAAY/J,GAAtB;AACA,QAAIiK,CAAC,GAAC,EAAN;AACA/I,IAAAA,KAAK,CAACgJ,MAAN,CAAalK,GAAb,GAAiBuH,IAAjB;;AACA,QAAIA,IAAI,GAAGrG,KAAK,CAACgJ,MAAN,CAAaC,SAAxB,EAAmC;AAAE;AACjCjJ,MAAAA,KAAK,CAACgJ,MAAN,CAAaE,UAAb,CAAwBlJ,KAAxB;AACA,UAAImJ,IAAI,GAAC,EAAT;AACAnJ,MAAAA,KAAK,CAACC,KAAN,CAAYmJ,OAAZ,CAAoBD,IAApB,EAAyBnJ,KAAK,CAACG,IAAN,CAAW0F,IAAX,CAAgBwD,IAAzC;AACArJ,MAAAA,KAAK,CAACC,KAAN,CAAYmJ,OAAZ,CAAoBD,IAApB,EAAyBnJ,KAAK,CAACG,IAAN,CAAW0F,IAAX,CAAgBiB,KAAzC;AACA9G,MAAAA,KAAK,CAACC,KAAN,CAAYmJ,OAAZ,CAAoBD,IAApB,EAAyBnJ,KAAK,CAACG,IAAN,CAAWmJ,KAApC;AACAtJ,MAAAA,KAAK,CAACgJ,MAAN,CAAaO,SAAb,CAAuBvJ,KAAvB,EAA6BwG,KAA7B,EAAmCH,IAAnC,EAAwC8C,IAAxC,EAN+B,CAO/B;AACA;AACA;;AACAnJ,MAAAA,KAAK,CAACG,IAAN,CAAWqJ,aAAX,CAAyBxJ,KAAzB,EAV+B,CAUE;;AACjCA,MAAAA,KAAK,CAACgJ,MAAN,CAAaS,gBAAb,CAA8BzJ,KAA9B,EAX+B,CAY/B;AACA;;AACA,UAAI0J,OAAO,GAAC1J,KAAK,CAACpB,QAAN,CAAekK,UAAf,CAA0B9I,KAA1B,EAAgCwG,KAAhC,EAAsCxG,KAAK,CAACG,IAAN,CAAW2G,KAAX,CAAiBC,KAAvD,CAAZ;AACA/G,MAAAA,KAAK,CAACgJ,MAAN,CAAaW,aAAb,CAA2B3J,KAA3B,EAAiC0J,OAAjC,EAAyCX,CAAzC;AACH,KAhBD,MAgBO;AACH;AACA,UAAIrC,IAAI,GAAC,KAAKC,OAAL,CAAa3G,KAAb,EAAmBwG,KAAnB,CAAT,CAFG,CAEiC;AACpC;;AACAxG,MAAAA,KAAK,CAACgJ,MAAN,CAAaE,UAAb,CAAwBlJ,KAAxB;AACAA,MAAAA,KAAK,CAACgJ,MAAN,CAAaY,OAAb,CAAqB5J,KAArB,EAA2B0G,IAA3B;AACA1G,MAAAA,KAAK,CAACgJ,MAAN,CAAaa,UAAb,CAAwB7J,KAAxB,EAA8B0G,IAA9B,EANG,CAOH;AACA;AACA;;AACA1G,MAAAA,KAAK,CAACG,IAAN,CAAWqJ,aAAX,CAAyBxJ,KAAzB,EAVG,CAU8B;;AACjCA,MAAAA,KAAK,CAACgJ,MAAN,CAAaS,gBAAb,CAA8BzJ,KAA9B,EAXG,CAYH;;AACAA,MAAAA,KAAK,CAACgJ,MAAN,CAAac,UAAb,CAAwB9J,KAAxB,EAA8B0G,IAA9B,EAAmCqC,CAAnC,EAbG,CAcH;AACH;;AACDH,IAAAA,QAAQ,CAAC5I,KAAD,EAAO+I,CAAP,CAAR;AACI,GAzCD;;AA0CA,OAAKlC,OAAL,GAAa,UAAS7G,KAAT,EAAe+J,EAAf,EAAmB;AAAE;AACrC,QAAIzG,CAAC,GAAC,EAAN;AACA,QAAI0G,IAAI,GAAGD,EAAE,CAACjF,MAAd;;AACA,SAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGiF,IAAtB,EAA4BjF,EAAE,EAA9B,EAAkC;AAC9B;AACAzB,MAAAA,CAAC,GAACA,CAAC,GAAC,GAAF,GAAMyG,EAAE,CAAChF,EAAD,CAAV;AACH;;AAAA,KANkC,CAOnC;AACI,GARD;;AASA,OAAKkF,eAAL,GAAqB,UAASjK,KAAT,EAAeuE,GAAf,EAAmBG,GAAnB,EAAwB;AAChD,QAAI7F,GAAJ,EAAQyG,KAAR;;AACA,QAAItF,KAAK,CAACpB,QAAN,CAAeI,MAAf,CAAsBuF,GAAtB,MAA+BjC,SAAnC,EAA8C;AAC1CzD,MAAAA,GAAG,GAAC6F,GAAJ;AACH,KAFD,MAEO;AACH,UAAIpE,MAAM,GAAC,KAAKmE,SAAL,CAAezE,KAAf,EAAqBuE,GAArB,EAAyBG,GAAzB,CAAX;;AACA,UAAIA,GAAG,KAAK,MAAZ,EAAoB;AACvB7F,QAAAA,GAAG,GAAC0F,GAAG,GAAG,UAAV;AACI,OAFD,MAEO,IAAIjE,MAAM,KAAK,KAAKA,MAAL,CAAYK,GAA3B,EAAgC;AAAE;AAC5C2E,QAAAA,KAAK,GAACtF,KAAK,CAACC,KAAN,CAAYiK,MAAZ,CAAmBlK,KAAK,CAACpB,QAAN,CAAeI,MAAf,CAAsBuF,GAAtB,CAAnB,CAAN;;AACA,YAAIe,KAAK,KAAKhD,SAAd,EAAyB;AACrBzD,UAAAA,GAAG,GAAC0F,GAAG,GAAG,UAAV;AACH,SAFD,MAEO;AACH1F,UAAAA,GAAG,GAACyG,KAAJ;AACH;;AAAA;AACG,OAPM,MAOA,IAAIhF,MAAM,KAAK,KAAKA,MAAL,CAAYI,GAA3B,EAAgC;AAAE;AAC5C4E,QAAAA,KAAK,GAACtF,KAAK,CAACC,KAAN,CAAYkK,MAAZ,CAAmBnK,KAAK,CAACpB,QAAN,CAAeI,MAAf,CAAsBuF,GAAtB,CAAnB,CAAN;;AACA,YAAIe,KAAK,KAAKhD,SAAd,EAAyB;AACrBzD,UAAAA,GAAG,GAAC0F,GAAG,GAAG,UAAV;AACH,SAFD,MAEO;AACH1F,UAAAA,GAAG,GAACyG,KAAJ;AACH;;AAAA;AACG,OAPM,MAOA;AACVzG,QAAAA,GAAG,GAAC6F,GAAJ;AACI;;AAAA;AACJ;;AAAA;AACD,WAAO7F,GAAP;AACI,GA3BD;;AA4BA,OAAKuL,eAAL,GAAqB,UAASpK,KAAT,EAAeuE,GAAf,EAAmBG,GAAnB,EAAwB;AAChD,QAAI7F,GAAJ,EAAQyG,KAAR;;AACA,QAAItF,KAAK,CAACpB,QAAN,CAAeI,MAAf,CAAsBuF,GAAtB,MAA+BjC,SAAnC,EAA8C;AAC1CzD,MAAAA,GAAG,GAACmB,KAAK,CAACpB,QAAN,CAAeyL,cAAf,CAA8B9F,GAA9B,EAAkCG,GAAlC,CAAJ;AACH,KAFD,MAEO;AACH,UAAIpE,MAAM,GAAC,KAAKmE,SAAL,CAAezE,KAAf,EAAqBuE,GAArB,EAAyBG,GAAzB,CAAX,CADG,CAEH;;AACA,UAAIpE,MAAM,KAAK,KAAKA,MAAL,CAAYK,GAA3B,EAAgC;AAAE;AACrC2E,QAAAA,KAAK,GAACtF,KAAK,CAACC,KAAN,CAAYiK,MAAZ,CAAmBlK,KAAK,CAACpB,QAAN,CAAeI,MAAf,CAAsBuF,GAAtB,CAAnB,CAAN,CADmC,CAEnC;;AACA,YAAIe,KAAK,KAAKhD,SAAd,EAAyB;AACrBzD,UAAAA,GAAG,GAAC0F,GAAG,GAAG,UAAV;AACH,SAFD,MAEO;AACH1F,UAAAA,GAAG,GAAC0F,GAAG,GAAG,IAAN,GAAWe,KAAX,GAAiB,GAArB;AACH;;AAAA;AACG,OARD,MAQO,IAAIhF,MAAM,KAAK,KAAKA,MAAL,CAAYI,GAA3B,EAAgC;AAAE;AAC5C4E,QAAAA,KAAK,GAACtF,KAAK,CAACC,KAAN,CAAYkK,MAAZ,CAAmBnK,KAAK,CAACpB,QAAN,CAAeI,MAAf,CAAsBuF,GAAtB,CAAnB,CAAN;;AACA,YAAIe,KAAK,KAAKhD,SAAd,EAAyB;AACrBzD,UAAAA,GAAG,GAAC0F,GAAG,GAAG,UAAV;AACH,SAFD,MAEO;AACH1F,UAAAA,GAAG,GAAC0F,GAAG,GAAG,IAAN,GAAWe,KAAX,GAAiB,GAArB;AACH;;AAAA;AACG,OAPM,MAOD;AACTzG,QAAAA,GAAG,GAACmB,KAAK,CAACpB,QAAN,CAAeyL,cAAf,CAA8B9F,GAA9B,EAAkCG,GAAlC,CAAJ;AACI;;AAAA;AACJ;;AAAA,KAzB+C,CA0BhD;;AACA,WAAO7F,GAAP;AACI,GA5BD;;AA6BA,OAAKwL,cAAL,GAAoB,UAAS9F,GAAT,EAAaG,GAAb,EAAkB;AACzC,QAAIA,GAAG,KAAMpC,SAAT,IACAoC,GAAG,KAAM,IADT,IAEAA,GAAG,KAAM,EAFb,EAEiB;AACb,aAAOH,GAAG,GAAE,UAAZ;AACH,KAJD,MAIO;AACH,aAAOA,GAAG,GAAG,IAAN,GAAWG,GAAX,GAAe,GAAtB;AACH;;AAAA;AACG,GARD;;AASA,OAAK+B,QAAL,GAAc,UAASzG,KAAT,EAAe6F,IAAf,EAAoBrB,IAApB,EAA0B;AAC3C,QAAIgC,KAAK,GAAC,EAAV,CAD2C,CAE3C;;AACA,QAAIX,IAAI,KAAKvD,SAAb,EAAwB;AACpBuD,MAAAA,IAAI,GAAC7F,KAAK,CAACG,IAAN,CAAW0F,IAAX,CAAgBwD,IAArB;AACA7E,MAAAA,IAAI,GAACxE,KAAK,CAACG,IAAN,CAAWmK,MAAX,CAAkB5F,GAAvB;AACH;;AAAA;;AACD,QAAIF,IAAI,KAAKlC,SAAb,EAAwB;AAACkC,MAAAA,IAAI,GAAC,EAAL;AAAS;;AAAA;;AAClC,QAAIqB,IAAI,KAAKvD,SAAb,EAAwB;AACpB,UAAIiI,IAAI,GAAG1E,IAAI,CAACf,MAAhB;;AACA,WAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGwF,IAAtB,EAA4BxF,EAAE,EAA9B,EAAkC;AACrC,YAAIR,GAAG,GAACsB,IAAI,CAACd,EAAD,CAAZ;AACA,YAAIyF,QAAQ,GAACxK,KAAK,CAACpB,QAAN,CAAe6L,UAAf,CAA0BzK,KAA1B,EAAgCuE,GAAhC,EAAoCC,IAAI,CAACD,GAAD,CAAxC,CAAb,CAFqC,CAGrC;AACA;;AACA,YAAIiG,QAAQ,KAAMlI,SAAd,IACAkI,QAAQ,KAAM,IADd,IAEAA,QAAQ,KAAM,EAFlB,EAEuB;AACnB,cAAIhE,KAAK,KAAK,EAAd,EAAkB;AAAEA,YAAAA,KAAK,GAAGA,KAAK,GAAI,OAAjB;AAA0B;;AAAA;AAC9CA,UAAAA,KAAK,GAAEA,KAAK,GAAGjC,GAAR,GAAa,UAApB;AACH,SALD,MAKO;AACH,cAAIiC,KAAK,KAAK,EAAd,EAAkB;AAAEA,YAAAA,KAAK,GAAGA,KAAK,GAAI,OAAjB;AAA0B;;AAAA;AAC9CA,UAAAA,KAAK,GAACA,KAAK,GAAG,GAAR,GAAagE,QAAb,GAAsB,GAA5B;AACH;AACG;;AAAA;;AACD,UAAIhE,KAAK,KAAK,EAAd,EAAkB;AAACA,QAAAA,KAAK,GAAC,YAAUA,KAAhB;AAAuB,OAjBtB,CAkBpB;;AACH;;AAAA;AACD,WAAOA,KAAP;AACI,GA7BD;;AA8BA,OAAKkE,QAAL,GAAc,UAASC,MAAT,EAAgBH,QAAhB,EAA0B;AAC3C,QAAIhE,KAAK,GAACmE,MAAV;;AACA,QAAIH,QAAQ,KAAMlI,SAAd,IACAkI,QAAQ,KAAM,IADd,IAEAA,QAAQ,KAAM,EAFlB,EAEuB;AACnB,UAAIhE,KAAK,KAAK,EAAd,EAAkB;AACrBA,QAAAA,KAAK,GAAGA,KAAK,GAAI,QAAT,GAAmBgE,QAAnB,GAA4B,GAApC;AACI,OAFD,MAEO;AACVhE,QAAAA,KAAK,GAAG,aAAYgE,QAAZ,GAAqB,GAA7B;AACI;AACJ;;AACD,WAAOhE,KAAP;AACI,GAZD;;AAaA,OAAKoE,WAAL,GAAiB,UAASrG,GAAT,EAAavF,MAAb,EAAoB6L,KAApB,EAA0BC,IAA1B,EAAgC;AACpD,QAAIC,IAAI,GAAC/L,MAAM,CAAC8F,MAAhB;AACA,QAAI0B,KAAK,GAAC,EAAV;;AACO,SAAK,IAAIqB,EAAE,GAACgD,KAAZ,EAAkBhD,EAAE,GAAC7C,IAAI,CAACgG,GAAL,CAASD,IAAT,EAAcF,KAAK,GAACC,IAApB,CAArB,EAA+CjD,EAAE,EAAjD,EAAqD;AACxD,UAAIrB,KAAK,KAAK,EAAd,EAAkB;AAACA,QAAAA,KAAK,GAACA,KAAK,GAAG,MAAd;AAAsB;;AACzCA,MAAAA,KAAK,GAACA,KAAK,GAAG,KAAK6D,cAAL,CAAoB9F,GAApB,EAAwBvF,MAAM,CAAC6I,EAAD,CAA9B,CAAd;AACI;;AAAA;AACR,WAAOrB,KAAP;AACI,GARD;;AASA,OAAKvD,SAAL,GAAe,UAASjD,KAAT,EAAe6F,IAAf,EAAoBrB,IAApB,EAA0B;AAC5C,QAAIqB,IAAI,KAAKvD,SAAb,EAAwB;AACpBtC,MAAAA,KAAK,CAACG,IAAN,CAAW0F,IAAX,CAAgBwD,IAAhB,CAAqB4B,OAArB,CAA6B,UAASC,IAAT,EAAcL,KAAd,EAAqB;AAAC,aAAKM,QAAL,CAAcnL,KAAd,EAAoBkL,IAApB,EAAyBlL,KAAK,CAACG,IAAN,CAAWmK,MAAX,CAAkB5F,GAA3C;AAAiD,OAAvE,CAAwEnC,IAAxE,CAA6E,IAA7E,CAA7B;AACH,KAFD,MAEO;AACHsD,MAAAA,IAAI,CAACoF,OAAL,CAAa,UAASC,IAAT,EAAcL,KAAd,EAAqB;AAAC,aAAKM,QAAL,CAAcnL,KAAd,EAAoBkL,IAApB,EAAyB1G,IAAzB;AAAgC,OAAtD,CAAuDjC,IAAvD,CAA4D,IAA5D,CAAb;AACH;AACG,GAND;;AAOA,OAAK4I,QAAL,GAAc,UAASnL,KAAT,EAAeuE,GAAf,EAAmBC,IAAnB,EAAyB;AAC1C,QAAIgC,KAAK,GAAC,KAAKiE,UAAL,CAAgBzK,KAAhB,EAAsBuE,GAAtB,EAA0BC,IAA1B,CAAV;AACAxE,IAAAA,KAAK,CAACG,IAAN,CAAWqG,KAAX,CAAiBjC,GAAjB,IAAsBiC,KAAtB;AACI,GAHD;;AAIA,OAAKiE,UAAL,GAAgB,UAASzK,KAAT,EAAeuE,GAAf,EAAmBC,IAAnB,EAAyB;AAC5C,QAAIgC,KAAK,GAAC,EAAV;;AACA,QAAIhC,IAAI,KAAKlC,SAAb,EAAwB;AAACkC,MAAAA,IAAI,GAAC,EAAL;AAAS;;AAAA;AAClC,QAAIK,IAAI,GAACL,IAAI,CAACM,MAAd;;AACA,SAAK,IAAIC,EAAE,GAAC,CAAZ,EAAcA,EAAE,GAACF,IAAjB,EAAsBE,EAAE,EAAxB,EAA4B;AACxB,UAAIL,GAAG,GAACF,IAAI,CAACO,EAAD,CAAZ;;AACA,UAAIyB,KAAK,KAAK,EAAd,EAAkB;AAAEA,QAAAA,KAAK,GAACA,KAAK,GAAG,MAAd;AAAsB;;AAAA;AAC1CA,MAAAA,KAAK,GAAGA,KAAK,GAAGxG,KAAK,CAACpB,QAAN,CAAewL,eAAf,CAA+BpK,KAA/B,EAAqCuE,GAArC,EAAyCG,GAAzC,CAAhB,CAHwB,CAIxB;AACH;;AAAA;AACD,WAAO8B,KAAP;AACI,GAXD;;AAYA,OAAK4E,QAAL,GAAc,UAASvF,IAAT,EAAe;AAChC,QAAIwF,KAAK,GAAC,EAAV;AACA,QAAId,IAAI,GAAG1E,IAAI,CAACf,MAAhB;;AACA,SAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGwF,IAAtB,EAA4BxF,EAAE,EAA9B,EAAkC;AAC9B,UAAIR,GAAG,GAACsB,IAAI,CAACd,EAAD,CAAZ;;AACA,UAAIsG,KAAK,KAAK,EAAd,EAAkB;AAAEA,QAAAA,KAAK,GAAGA,KAAK,GAAI,GAAjB;AAAsB;;AAAA;AAC1CA,MAAAA,KAAK,GAAEA,KAAK,GAAG9G,GAAf;AACH;;AAAA;;AACD,QAAI8G,KAAK,KAAK,EAAd,EAAkB;AAACA,MAAAA,KAAK,GAAC,eAAaA,KAAnB;AAA0B;;AAC7C,WAAOA,KAAP;AACI,GAVD;;AAWA,OAAKC,OAAL,GAAa,UAASzF,IAAT,EAAe;AAC/B,QAAI0F,IAAI,GAAC,EAAT;AACA,QAAIhB,IAAI,GAAG1E,IAAI,CAACf,MAAhB;;AACA,SAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGwF,IAAtB,EAA4BxF,EAAE,EAA9B,EAAkC;AAC9B,UAAIR,GAAG,GAACsB,IAAI,CAACd,EAAD,CAAZ;AACAwG,MAAAA,IAAI,GAAEA,IAAI,GAAGhH,GAAb;;AACA,UAAIgH,IAAI,KAAK,EAAb,EAAiB;AAAEA,QAAAA,IAAI,GAAGA,IAAI,GAAI,GAAf;AAAoB;;AAAA;AAC1C;;AAAA;AACD,WAAOA,IAAP;AACI,GATD;;AAUA,OAAKC,MAAL,GAAY,UAASxL,KAAT,EAAgB;AAC/B,QAAIuL,IAAI,GAAC,EAAT;AACA,QAAIhB,IAAI,GAAGvK,KAAK,CAACG,IAAN,CAAW0F,IAAX,CAAgBiB,KAAhB,CAAsBhC,MAAjC;;AACA,SAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGwF,IAAtB,EAA4BxF,EAAE,EAA9B,EAAkC;AAC9B,UAAIR,GAAG,GAACvE,KAAK,CAACG,IAAN,CAAW0F,IAAX,CAAgBiB,KAAhB,CAAsB/B,EAAtB,CAAR;AACAwG,MAAAA,IAAI,GAAEA,IAAI,GAAGhH,GAAb;;AACA,UAAIgH,IAAI,KAAK,EAAb,EAAiB;AAAEA,QAAAA,IAAI,GAAGA,IAAI,GAAI,GAAf;AAAoB;;AAAA;AAC1C;;AAAA;AACD,WAAOA,IAAP;AACI,GATD;;AAUA,OAAKE,WAAL,GAAiB,UAASzL,KAAT,EAAewG,KAAf,EAAqBX,IAArB,EAA0B6F,OAA1B,EAAmC;AACvD,QAAIC,EAAJ;AACAA,IAAAA,EAAE,GAACjN,MAAM,CAAC,wBAAsB8H,KAAvB,CAAT;AACA,WAAOmF,EAAP;AACI,GAJD;;AAMA,OAAKC,UAAL,GAAgB,UAAS5L,KAAT,EAAewG,KAAf,EAAqBX,IAArB,EAA0B6F,OAA1B,EAAmC;AACtDlF,IAAAA,KAAK,GAAC,KAAKkE,QAAL,CAAclE,KAAd,EAAoB,WAAWkF,OAAO,CAACG,QAAR,EAAX,GAA8B,GAAlD,CAAN;AACA,QAAItE,GAAJ,EAAQoE,EAAR;AACA,QAAIG,IAAI,GAAC,cAAT;;AACA,QAAIjG,IAAI,KAAMvD,SAAd,EAAyB;AACrBiF,MAAAA,GAAG,GAAC,YAAUuE,IAAV,GAAetF,KAAnB,CADqB,CAErB;;AACAmF,MAAAA,EAAE,GAACjN,MAAM,CAAC6I,GAAD,CAAT,CAHqB,CAIrB;AACA;;AACA,aAAOoE,EAAP;AACH,KAPD,MAOO;AACH,UAAIJ,IAAI,GAAG,KAAKD,OAAL,CAAazF,IAAb,CAAX;AACA,UAAIwF,KAAK,GAAG,KAAKD,QAAL,CAAcvF,IAAd,CAAZ;AACA0B,MAAAA,GAAG,GAAC,YAAUgE,IAAV,GAAeO,IAAf,GACHtF,KADG,GACG6E,KADP,CAHG,CAKH;;AACAM,MAAAA,EAAE,GAACjN,MAAM,CAAC6I,GAAD,CAAT,CANG,CAOH;;AACA,aAAOoE,EAAP;AACH;AACG,GArBD;;AAsBA,OAAK7C,UAAL,GAAgB,UAAS9I,KAAT,EAAewG,KAAf,EAAqBX,IAArB,EAA2B;AAC9C,QAAI0B,GAAJ,EAAQoE,EAAR;AACA,QAAIG,IAAI,GAAC,8KAAT;;AACA,QAAIjG,IAAI,KAAMvD,SAAd,EAAyB;AACrBiF,MAAAA,GAAG,GAAC,YAAUuE,IAAV,GAAetF,KAAnB,CADqB,CAErB;;AACAmF,MAAAA,EAAE,GAACjN,MAAM,CAAC6I,GAAD,CAAT,CAHqB,CAIrB;AACA;;AACA,aAAOoE,EAAP;AACH,KAPD,MAOO;AACH,UAAIJ,IAAI,GAAG,KAAKD,OAAL,CAAazF,IAAb,CAAX;AACA,UAAIwF,KAAK,GAAG,KAAKD,QAAL,CAAcvF,IAAd,CAAZ;AACA0B,MAAAA,GAAG,GAAC,YAAUgE,IAAV,GAAeO,IAAf,GACHtF,KADG,GACG6E,KADP,CAHG,CAKH;;AACAM,MAAAA,EAAE,GAACjN,MAAM,CAAC6I,GAAD,CAAT,CANG,CAOH;;AACA,aAAOoE,EAAP;AACH;AACG,GApBD;;AAqBA,OAAKhF,OAAL,GAAa,UAAS3G,KAAT,EAAewG,KAAf,EAAsB;AACtC,QAAImF,EAAJ;AACAA,IAAAA,EAAE,GAACjN,MAAM,CAAC,wBAAsB8H,KAAvB,CAAT;AACA,WAAOmF,EAAP;AACI,GAJD;;AAKA,OAAKlG,SAAL,GAAe,UAASzF,KAAT,EAAgB;AAClCtB,IAAAA,MAAM,CAAC,iDAAD,CAAN;AACI,GAFD;;AAGA,OAAK0H,QAAL,GAAc,UAASpG,KAAT,EAAewF,IAAf,EAAqB;AACtC9G,IAAAA,MAAM,CAACqN,MAAP,CAAcC,KAAd,CAAoBxG,IAApB,GAA2BA,IAA3B;AACI,GAFD;;AAGA,OAAKyG,SAAL,GAAe,UAASjM,KAAT,EAAeuE,GAAf,EAAmBiC,KAAnB,EAAyB;AAC3C,QAAIe,GAAG,GAAC,YAAUhD,GAAV,GAAc,6BAAd,GACJiC,KADI,GACE,YADF,GACejC,GADvB;AAEA,WAAO7F,MAAM,CAAC6I,GAAD,CAAb;AACI,GAJD;;AAKA,OAAKW,QAAL,GAAc,UAASgE,MAAT,EAAiB;AAAE;AACpC,QAAIA,MAAM,KAAM,IAAhB,EAAsB;AAClB,aAAO,MAAP;AACH,KAFD,MAEO,IAAIA,MAAM,CAAC7M,WAAP,KAAwB,KAAKD,gBAAjC,EAAmD;AACtD,aAAO,OAAP;AACH,KAFM,MAGF,IAAI8M,MAAM,CAAC7M,WAAP,KAAwB,KAAKC,iBAAjC,EAAoD;AACrD,aAAO,QAAP;AACH,KAFI,MAGA;AACD,aAAO,OAAP;AACH;AACG,GAZD;;AAaA,OAAK4E,WAAL,GAAiB,UAASlE,KAAT,EAAemM,EAAf,EAAmB;AACvC,QAAI7I,CAAC,GAAC,EAAN;;AACA,QAAI6I,EAAE,KAAM7J,SAAR,IAAqB+E,KAAK,CAACrH,KAAD,EAAOmM,EAAP,CAA9B,EAA0C;AAAC,aAAO7I,CAAP;AAAU;;AAAA;AACrD,QAAI8I,IAAI,GAACpH,IAAI,CAACqH,GAAL,CAASrM,KAAT,EAAemM,EAAf,CAAT;AACA,QAAIR,EAAE,GAAG3G,IAAI,CAACsH,KAAL,CAAWtM,KAAX,EAAkB,CAACA,KAAK,EAAEoM,IAAI,GAAG,IAAR,GAAgB,EAAvB,IAA6B,EAA9B,GAAoC,EAArD,CAAT;AACAA,IAAAA,IAAI,IAAIT,EAAE,GAAG,IAAL,GAAY,EAAZ,GAAiB,EAAjB,GAAsB,EAA9B;AACA,QAAIY,EAAE,GAAGvH,IAAI,CAACsH,KAAL,CAAWtM,KAAX,EAAkB,CAACA,KAAK,EAACoM,IAAI,GAAG,IAAd,IAAsB,EAAvB,GAA6B,EAA9C,CAAT;AACAA,IAAAA,IAAI,IAAIG,EAAE,GAAG,IAAL,GAAY,EAAZ,GAAiB,EAAzB;AACA,QAAIC,EAAE,GAAGxH,IAAI,CAACsH,KAAL,CAAWtM,KAAX,EAAkBoM,IAAI,GAAG,IAAR,GAAgB,EAAjC,CAAT;AACAA,IAAAA,IAAI,IAAII,EAAE,GAAG,IAAL,GAAY,EAApB;AACA,QAAIC,EAAE,GAAGzH,IAAI,CAACsH,KAAL,CAAWtM,KAAX,EAAiBoM,IAAI,GAAG,IAAxB,CAAT;AACAA,IAAAA,IAAI,IAAIK,EAAE,GAAG,IAAb;;AACA,QAAIN,EAAE,GAAC,CAAP,EAAU;AACN7I,MAAAA,CAAC,GAAC,GAAF;AACH,KAFD,MAEO,IAAI6I,EAAE,GAAG,CAAT,EAAY;AACf7I,MAAAA,CAAC,GAAC,GAAF;AACH,KAFM,MAEA;AACHA,MAAAA,CAAC,GAAC,GAAF;AACH;;AACD,QAAIqI,EAAE,KAAK,CAAX,EAAcrI,CAAC,GAACA,CAAC,GAAC,GAAF,GAAMtD,KAAK,CAACC,KAAN,CAAYyM,gBAAZ,CAA6Bf,EAA7B,CAAN,GAAuC,GAAzC;AACd,QAAIY,EAAE,KAAK,CAAX,EAAcjJ,CAAC,GAACA,CAAC,GAAC,GAAF,GAAMiJ,EAAN,GAAS,GAAX;AACd,QAAIC,EAAE,KAAK,CAAX,EAAclJ,CAAC,GAACA,CAAC,GAAC,GAAF,GAAMkJ,EAAN,GAAS,GAAX,CArByB,CAsBvC;;AACA,WAAOlJ,CAAP;AACI,GAxBD;;AAyBA,OAAKgD,WAAL,GAAiB,UAAStG,KAAT,EAAgB;AACpC,QAAIuH,GAAG,GAAC,sDAAR;AACA,QAAIC,GAAG,GAAC9I,MAAM,CAAC6I,GAAD,CAAd;AACA,QAAIlB,IAAI,GAAEmB,GAAG,CAAC,CAAD,CAAH,CAAO1I,GAAjB;AACA,WAAOuH,IAAP;AACI,GALD;AAMH;;AAAA;AAED,eAAezH,QAAf","sourcesContent":["//console.log(\"Loading DatabaseLib.js\");\n\nconst alasql = window.alasql;\n\nfunction Database() {\n    var ret;\n    this.cnt=0;\n    this.keyCnt={};\n    this.values= {};\n    this.epoch0=0;\n    this.regfile=\"register\";      // register file (shows current datfile)\n    this.datfile=\"\";              // json data file\n    this.arrayConstructor=[].constructor;\n    this.objectConstructor={}.constructor;\n    this.casc=0; // key is sorted ascending\n    this.cdes=1; // key is sorted descending\n    this.nasc=2; // key is sorted ascending\n    this.ndes=3; // key is sorted descending\n    this.delay=100000;  // server-polling period in ms\n    this.ready=true;     // can we poll server or is another poll running\n    this.log=\"\";\n    this.mod=\"\";\n    this.init=function(state){\n        //console.log(\"Initialising alarm.\")\n\tstate.Utils.init(\"Database\",this);\n        state.Colors.init(state);\n        state.Path.init(state);\n        state.Layout.init(state);\n        state.Threshold.init(state);\n    };\n    this.keytrg={Missing:-1,\n\t\t Null:0,\n\t\t Value:1,\n\t\t Min:2,\n\t\t Max:3\n\t\t};\n    this.update=function(state) {\n\tthis.setTime(state);\n\tthis.load(state);\n\tsetTimeout(()=>function() {this.update(state)},this.delay);\n    };\n    this.load=function(state) {\n\t//console.log(\"Loading...\",this.cnt++);\n\tstate.Default.loadDefault(state,[this.loadRegister,\n\t\t\t\t\t this.loadData,\n\t\t\t\t\t //function(state,callbacks){console.log(\">>> Default:\",JSON.stringify(state.Default.trash));}\n\t\t\t\t\t]);\n    };\n    this.loadRegister=function(state, callbacks ) {\n\t//console.log(\"loadRegister\");\n\tif (this.ready) { // make sure we do not re-load if we are already loading\n\t    this.ready=false;\n\t    state.Html.setFootnote(state, \"Server-request: \"+this.regfile);\n\t    state.Html.setProgress(state, true);\n\t    var regHttp = new XMLHttpRequest();\n\t    regHttp.addEventListener(\"progress\",(e)=>state.Html.progressInfo(state,e));\n\t    //regHttp.addEventListener(\"load\",(e)=>state.Html.loadInfo(state,e));\n\t    regHttp.addEventListener(\"error\",(e)=>state.Html.errorInfo(state,e));\n\t    regHttp.addEventListener(\"abort\",(e)=>state.Html.abortInfo(state,e));\n\t    regHttp.onreadystatechange = function() {\n\t\tthis.ready=true;\n\t\tif (regHttp.readyState  === 4) {\n\t\t    if (regHttp.status  === 200) {\n\t\t\t//console.log(regHttp.responseText);\n\t\t\tvar file = regHttp.responseText;\n\t\t\tif (file !== this.datfile) { // load new data\n\t    \t\t    this.datfile=file;\n\t\t\t    var callback=callbacks.shift();\n\t\t\t    if (callback !== undefined) {\n\t\t\t\tsetTimeout(callback(state,file,callbacks),0.1);\n\t\t\t    }\n\t\t\t} else {\n\t\t\t    state.Html.setFootnote(state);\n\t\t\t    state.Html.setProgress(state, false);\n\t\t\t}\n\t\t    } else {\n\t\t\tstate.Html.setFootnote(state,\"Unable to load \"+this.regfile);\n\t\t\tstate.Html.setProgress(state, false);\n\t\t\t//state.Html.setConsole(this.regfile+\" error\");\n\t\t    }\n\t\t} else {\n\t\t    state.Html.setFootnote(state,this.regfile+\" error\");\t\t\n\t\t    state.Html.setProgress(state, false);\n\t\t};\n\t    }.bind(this);\n\t    regHttp.responseType=\"\";\n\t    regHttp.overrideMimeType(\"text/text\");\n\t    regHttp.open(\"GET\", \"data/\"+this.regfile, true);\n\t    regHttp.setRequestHeader('cache-control', 'no-cache, must-revalidate, post-check=0, pre-check=0');\n\t    regHttp.setRequestHeader('cache-control', 'max-age=0');\n\t    regHttp.setRequestHeader('expires', '0');\n\t    regHttp.setRequestHeader('expires', 'Tue, 01 Jan 1980 1:00:00 GMT');\n\t    regHttp.setRequestHeader('pragma', 'no-cache');\n\t    regHttp.send(); \n\t} else {\n\t    //state.Html.setConsole(\"\");\n\t    state.Html.setFootnote(state,\"Already waiting for reply...\");\n\t    state.Html.setProgress(state, true);\n\t};\n    }.bind(this);\n    this.loadData=function(state,file, callbacks ) {\n\t//console.log(\"loadData\");\n\tif (this.ready) { // make sure we do not re-load if we are already loading\n\t    this.ready=false;\n\t    state.Html.setFootnote(state, \"Server-request: \"+this.datfile);\n\t    state.Html.setProgress(state, true);\n\t    var datHttp = new XMLHttpRequest();\n\t    datHttp.addEventListener(\"progress\",(e)=>state.Html.progressInfo(state,e));\n\t    //datHttp.addEventListener(\"load\",(e)=>state.Html.loadInfo(state,e));\n\t    datHttp.addEventListener(\"error\",(e)=>state.Html.errorInfo(state,e));\n\t    datHttp.addEventListener(\"abort\",(e)=>state.Html.abortInfo(state,e));\n\t    datHttp.onreadystatechange = function() {\n\t\tthis.ready=true;\n\t\tif (datHttp.readyState  === 4) {\n\t\t    if (datHttp.status  === 200) {\n\t\t\t//console.log(\"Loaded \"+this.datfile);\n\t\t\t//state.Html.setConsole(\"100%\");\n\t\t\tstate.Html.broadcast(state,\"Loaded \"+this.datfile);\n\t    \t\tstate.Html.setFootnote(state,\"Creating database\");\n\t\t\tconsole.log(\"Creating database from \"+file);\n\t\t\tsetTimeout(function() {\n\t\t\t    this.dbInsert(state,datHttp.responseText);\n\t    \t\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t\t\t    setTimeout(function() {\n\t\t\t\tthis.makeWhere(state); // update where-expressions...\n\t\t\t\tstate.Show.showAll(state);\n\t\t\t\tstate.Html.setFootnote(state);\n\t\t\t\tvar callback=callbacks.shift();\n\t\t\t\tif (callback !== undefined) {\n\t\t\t\t    //console.log(\"Found callback\");\n\t\t\t    \t    setTimeout(callback(state,callbacks),0);\n\t\t\t\t} else {\n\t\t\t\t    //console.log(\"No callback\");\n\t\t\t\t}\n\t\t\t    }.bind(this),0.1);\n\t\t\t}.bind(this),0.1);\n\t\t    } else {\n\t    \t\tstate.Html.setFootnote(state,\"Unable to load \"+file);\n\t\t\tstate.Html.setProgress(state, false);\n\t\t\tstate.Html.setConsole(file+\" error\");\n\t\t    }\n\t\t}\n\t    }.bind(this);\n\t    datHttp.responseType=\"\";\n\t    datHttp.overrideMimeType(\"text/text\");\n\t    datHttp.open(\"GET\", \"data/\"+this.datfile, true);\n\t    datHttp.setRequestHeader('cache-control', 'no-cache, must-revalidate, post-check=0, pre-check=0');\n\t    datHttp.setRequestHeader('cache-control', 'max-age=0');\n\t    datHttp.setRequestHeader('expires', '0');\n\t    datHttp.setRequestHeader('expires', 'Tue, 01 Jan 1980 1:00:00 GMT');\n\t    datHttp.setRequestHeader('pragma', 'no-cache');\n\t    datHttp.send(); \n\t} else {\n\t    state.Html.setConsole(\"\");\n\t    state.Html.setFootnote(state, \"Already waiting for reply...\");\n\t    state.Html.setProgress(state, true);\n\t};\n    }.bind(this);\n    this.getTime=function(state,s) {\n\tvar nn = s.match(/\\d+/g).map(Number);\n\tvar date0 = new Date(Date.UTC(nn[0],nn[1]-1,nn[2],nn[3],nn[4],nn[5],\n\t\t\t\t      ((nn[6]||'')+'000').slice(0,3))); // modification time\n\t//console.log(\"Gettime:\",s,JSON.stringify(nn));\n\treturn date0.getTime();\n    };\n    this.setTime=function(state) {\n\tvar d = new Date();\n\tvar epoch=d.getTime();\n\t//console.log(\"Times:\",epoch,this.epoch0);\n\tif (this.epoch0 !== undefined) {\n\t    var age = epoch - this.epoch0;\n\t    this.mod=this.getTimeDiff(state,age);\n\t    if (state.React !== undefined && state.React.Status !== undefined) {\n\t\tstate.React.Status.setAge(state,this.mod);\n\t\t//console.log(\"Age:\",epoch,this.epoch0,age);\n\t    }\n\t}\n    };\n    this.getKeyValues=function(state, key) {\n\t//console.log(\"Database:\",JSON.stringify(state.Database.values));\n\tvar vals=state.Database.values[key];\n\tif (vals !== undefined) {\n\t    return vals;\n\t} else {\n\t    return [];\n\t}\n    };\n    this.getKeytrg=function(state,key,val) {\n\tif (Array.isArray(val)) {\n\t    //console.log(\">>>Is array:\",key,JSON.stringify(val));\n\t    ret=this.keytrg.Missing;\n\t    var lenv=val.length;\n            for (var ii=0;ii<lenv;ii++) {\n\t\tret=Math.max(ret,this.getKeytrg(state,key,val[ii]));\n            }\n\t    //console.log(\">>>return:\",key,ret);\n\t} else { \n\t    if (val === \"null\") {\n\t\tret=this.keytrg.Null;\n\t    } else if (val===\"MIN(\"+key+\")\") { // this is a function\n\t\tret=this.keytrg.Min;\n\t    } else if (val===\"MAX(\"+key+\")\") { // this is a function\n\t\tret=this.keytrg.Max;\n\t    } else if (val === undefined) {\n\t\tret=this.keytrg.Missing;\n\t    } else if (val === null) {\n\t\tret=this.keytrg.Null;\n\t    } else {\n\t\tret=this.keytrg.Value;\n\t    };\n\t    //console.log(\"---return:\",key,ret);\n\t};\n\treturn ret;\n    };\n    this.makeKeytrg=function(state,key,keytrg,val) {\n\tif (keytrg === this.keytrg.Missing) {\n\t    return \"missing\";\n\t} else if (keytrg === this.keytrg.Null) {\n\t    return \"null\";\n\t} else if (keytrg === this.keytrg.Min) {\n\t    return \"MIN(\"+key+\")\"\n\t} else if (keytrg === this.keytrg.Max) {\n\t    return \"MAX(\"+key+\")\"\n\t} else {\n\t    return val;\n\t};\n    };\n    this.dbInsert=function(state,raw) {\n\tvar ii,key;\n\ttry {\n\t    // set home\n\t    //console.log(\"Parsing JSON.\");\n\t    var json = JSON.parse(raw);\n\t    var len=json.data.length\n\t    for (ii=0;ii<len;ii++) {\n\t\tjson.data[ii][\"cnt\"]=ii\n\t    }\n\t    // get modified date\n\t    //console.log(\"Setting time.\");\n\t    this.epoch0=this.getTime(state,json.epoch);     // data file time\n\t    this.setTime(state);     // data file time\n\t    // make database for raw data\n\t    this.makeTable(state);\n\t    // reset key counts and range\n\t    this.cnt=0;\n\t    this.keyCnt={}; // reset key-count\n\t    // put data into databse\n\t    //console.log(\"inserting\");\n\t    var data=[];\n\t    var home=state.Path.home.val;\n\t    var hkeys=Object.keys(home);\n\t    var homeKeys=[];\n\t    var delayKeys=[];\n\t    var lenh=hkeys.length;\n            for (ii=0;ii<lenh;ii++) {\n\t\tkey=hkeys[ii];\n\t\tvar keytrg=this.getKeytrg(state,key,home[key]);\n\t\t//console.log(\"Keytrg:\",key,keytrg,JSON.stringify(home[key]));\n\t\tif (keytrg <= this.keytrg.Value) {\n\t\t    homeKeys.push(key);\n\t\t} else {\n\t\t    delayKeys.push(key);\n\t\t}\n            }\n\t    //console.log(\"Home keys:\",JSON.stringify(homeKeys),\" delayed:\",JSON.stringify(delayKeys));\n\t    var rcnt=this.extractData(state,data,{},\"\",json.data,homeKeys,home);\n\t    //console.log(\"Count:\",rcnt);\n\t    //console.log(\"Data:\",JSON.stringify(data));\n\t    this.dataToDb(state,data);\n\t    var nrec=this.sanityCheck(state)\t    // sanity check\n\t    console.log(\"Initially:\",data.length,\" Extracted:\",rcnt,' Database:',nrec);\n\t    this.postProcess(state); // update distinct Database.values[key]\n\t    if (delayKeys.length > 0) {// delayed home selection (MAX() and MIN())\n\t\tthis.makeWhere(state,delayKeys,home);\n\t\tvar where=this.getWhere(state,delayKeys,home);\n\t\tvar docs=this.getDocs(state,where);\n\t\tthis.dataToDb(state,docs)\n\t\tthis.postProcess(state); // update distinct Database.values[key]\n\t    };\n\t    state.Path.makePath(state); // initialise path\n\t    //console.log(\"Indexing and cleaning up.\");\n\t    this.dbindex(state,state.Path.other.table); // make indexes\n\t    this.dbindex(state,state.Path.other.rest); // make indexes\n\t    //state.Path.checkTableKeys(state);\n\t    state.Html.broadcast(state,\"Database is ready.\");\n\t    //console.log(\"Database is ready.\");\n\t} catch (e) {\n\t    alert(e);\n\t};\n    };\n    this.updateKeyCnt=function(state,key,val) {\n\tif (this.keyCnt[key] === undefined) {\n\t    this.keyCnt[key]={cnt:0,type:\"num\",order:this.nasc};\n\t}\n\tthis.keyCnt[key].cnt=(this.keyCnt[key].cnt)+1;\n\tif (this.keyCnt[key].type  === \"num\" && isNaN(val)) {\n\t    this.keyCnt[key].type=\"nan\";\n\t    this.keyCnt[key].order=this.casc;\n\t}\n    };\n    this.postProcess=function(state) { // update meta-data\n\tvar keys=Object.keys(state.Database.keyCnt);\n\tvar lenk=keys.length;\n\tfor (var ii=0;ii<lenk;ii++) {\n\t    var key=keys[ii];\n\t    // make list of values in Database for each key\n\t    state.Database.values[key]=[];\n\t    var sql=\"select DISTINCT \"+key+\" AS \"+key+\" FROM alarm\";\n\t    var dd0=alasql(sql);\n\t    var lend=dd0.length;\n\t    for (var jj=0;jj<lend;jj++) {\n\t\tvar doc=dd0[jj];\n\t\tstate.Database.values[key].push(doc[key]);\n\t    };\n\t};\n    };\n    this.extractData=function(state,data,parent,key,raw,hkeys,home) { // insert records into db (recursive)\n\tvar rcnt=0;\n\tvar kk,ii,kii,child,dkey;\n\t//console.log(\"Processing {\",state.Utils.toString(parent),\"} '\",key,\"' (\",state.Utils.toString(raw),\")\");\n\tvar wii=this.whatIsIt(raw);\n\tif (wii  === \"Object\" && key  === \"\") {\n\t    //console.log(\"Found object (\",state.Utils.toString(parent),\")\");\n\t    child=state.Utils.cp(parent);\n\t    // loop over plain values first\n\t    for (kk in raw) {\n\t\tkii=this.whatIsIt(raw[kk]);\n\t\tif (kii  === \"value\") {\n\t\t    child[kk]=raw[kk];\n\t\t}\n\t    }\n\t    // loop over sub-objects\n\t    var nn=0;\n\t    for (kk in raw) {\n\t\tkii=this.whatIsIt(raw[kk]);\n\t\tif (kii !== \"value\") {\n\t\t    nn=nn+1;\n\t\t    rcnt=rcnt+this.extractData(state,data,child,kk,raw[kk],hkeys,home);\n\t\t}\n\t    }\n\t    if (nn  === 0) { // insert \n\t\t//console.log(\"Object was empty.\");\n\t\trcnt=rcnt+this.extractData(state,data,child,null,null,hkeys,home);\n\t    }\n\t} else if (wii  === \"Object\" && key !== \"\") {\n\t    //console.log(\"Found object key '\",key,\"' (\",state.Utils.toString(parent),\")\");\n\t    child=state.Utils.cp(parent);\n\t    // loop over plain values first\n\t    for (kk in raw) {\n\t\tchild[key]=kk;\n\t\trcnt=rcnt+this.extractData(state,data,child,\"\",raw[kk],hkeys,home);\n\t    }\n\t} else if (wii  === \"Array\") {\n\t    //console.log(\"Found array key '\",key,\"' (\",state.Utils.toString(parent),\")\");\n\t    var dlen = raw.length;\n\t    for (ii = 0; ii < dlen; ii++) {\n\t\trcnt=rcnt+this.extractData(state,data,parent,key,raw[ii],hkeys,home);\n\t    }\n\t} else {\n\t    //console.log(\"Found key '\",key,\"' \",wii,\" (\",state.Utils.toString(parent),\")\");\n\t    var keep=true;\n\t    var doc=state.Utils.cp(parent);\n\t    if (raw !== null) {\n\t\tif (key  === \"\") {\n\t\t    doc.value=raw;\n\t\t} else {\n\t\t    doc[key]=raw;\n\t\t}\n\t    }\n\t    // check if home criteria is met\n\t    var lenh=hkeys.length;\n\t    for (ii=0;ii<lenh;ii++) {\n\t\tkey=hkeys[ii];\n\t\tvar vals=home[key];\n\t\tvar lenv=vals.length;\n\t\tvar found=false;\n\t\tfor (var jj=0;jj<lenv;jj++){\n\t\t    if (vals[jj]===doc[key] || (vals[jj]===\"\" && doc[key]===undefined)) {\n\t\t\tfound=true;\n\t\t    }\n\t\t}\n\t\tif (!found) {\n\t\t    keep=false;\n\t\t};\n\t    }\n\t    if (keep) {\n\t\t//console.log(\"Updating internal raw structure\",JSON.stringify(setup));\n\t\tfor (dkey in doc) {\n\t\t    var val=doc[dkey];\n\t\t    this.updateKeyCnt(state,dkey,val);\n\t\t    //// this takes too much time...\n\t\t    //if (this.values[dkey]  === undefined) {\n\t\t    //\tthis.values[dkey]=[];\n\t\t    //  };\n\t\t    ////console.log(\"Setup:\",JSON.stringify(setup));\n\t\t    ////console.log(\"Key:\",key,JSON.stringify(this.values));\n    \t\t    //if (this.values[dkey].indexOf(val)  === -1 ) { // value not in range\n\t\t    //    this.values[dkey].push(val); // add value to range\n\t\t    //};\n\t\t};\n\t\t//console.log(\">>> Inserting:\",state.Utils.toString(doc));\n\t\trcnt=rcnt+1;\n\t\tthis.cnt=this.cnt+1;\n\t\tstate.Threshold.setThresholds(doc);\n\t\tdoc._title=state.Layout.makeDocTitle(state,doc);\n\t\t//if (this.cnt < 10) { // debug purposes\n\t\t//for (key in keys) {\n\t\t//this.updateKeyCnt(state,key,doc[key]);\n\t\t//};\n\t\tdata.push(doc);\n\t    //} else {\n\t\t//console.log(\"Ignoring:\",lenh,JSON.stringify(hkeys),JSON.stringify(home),JSON.stringify(doc));\n\t    }\n\t}\n\treturn rcnt;\n    };\n    this.dbextract=function(state,showFunc) { // extract data from db and show\n\t// extract data from db and insert into data-array\n\t// var parent={};//{test:{$exists:false}};\n\tvar where = this.getWhere(state);\n\tvar cntDocs0=this.getDocsCnt(state,where);\n\tvar nrec= cntDocs0[0].cnt;\n\tvar m={};\n\tstate.Matrix.cnt=nrec;\n\tif (nrec > state.Matrix.popSeries) { // only use counts...\n\t    state.Matrix.initKeyCnt(state);\n\t    var buff=[];\n\t    state.Utils.cpArray(buff,state.Path.keys.path);\n\t    state.Utils.cpArray(buff,state.Path.keys.other);\n\t    state.Utils.cpArray(buff,state.Path.trash);\n\t    state.Matrix.mapKeyCnt(state,where,nrec,buff);\n\t    //console.log(\"Setup:\",\n\t    //\t    JSON.stringify(state.Matrix.values),\n\t    //\t    JSON.stringify(state.Matrix.keyCnt));\n\t    state.Path.exportAllKeys(state); // can not export keys before we have a cnt-map\n\t    state.Matrix.sortMatrixValues(state);\n\t    //console.log(\"Count:\",JSON.stringify(docs));\n\t    // add \"undefined\" range of keys that are not present in every doc...\n\t    var cntDocs=state.Database.getDocsCnt(state,where,state.Path.other.table);\n\t    state.Matrix.makeMatrixCnt(state,cntDocs,m);\n\t} else {\n\t    //console.log(\"Database where:\",where);\n\t    var docs=this.getDocs(state,where); // get all docs\n\t    //console.log(\">>>Extraction key (where='\",where,\"') Docs:\",docs.length);\n\t    state.Matrix.initKeyCnt(state);\n\t    state.Matrix.mapKeys(state,docs);\n\t    state.Matrix.addMapKeys(state,docs);\n\t    //console.log(\"Setup=\",JSON.stringify(setup));\n\t    //console.log (\"Maprange:\",JSON.stringify(state.Matrix.values));\n\t    // subset contains the keys being displayed in matrix...\n\t    state.Path.exportAllKeys(state); // can not export keys before we have a cnt-map\n\t    state.Matrix.sortMatrixValues(state);\n\t    // make matrix\n\t    state.Matrix.makeMatrix(state,docs,m);\n\t    //console.log (\"Matrix:\",JSON.stringify(m));\n\t}\n\tshowFunc(state,m);\n    };\n    this.dbindex=function(state,ks) { // make indexes on all keys\n\tvar s=\"\";\n\tvar klen = ks.length;\n\tfor (var ii = 0; ii < klen; ii++) {\n\t    //alasql(\"CREATE INDEX ? ON TABLE alarm.?\",ks[ii],ks[ii]);\n\t    s=s+\" \"+ks[ii];\n\t};\n\t//console.log(\"Indexes:\",s);\n    };\n    this.getTitleDynamic=function(state,key,val) {\n\tvar ret,parse;\n\tif (state.Database.values[key] === undefined) {\n\t    ret=val;\n\t} else {\n\t    var keytrg=this.getKeytrg(state,key,val);\n\t    if (val === \"null\") {\n\t\tret=key + \" is NULL\";\n\t    } else if (keytrg === this.keytrg.Max) { // this is a function\n\t\tparse=state.Utils.getMax(state.Database.values[key]);\n\t\tif (parse === undefined) {\n\t\t    ret=key + \" is NULL\";\n\t\t} else {\n\t\t    ret=parse;\n\t\t};\n\t    } else if (keytrg === this.keytrg.Min) { // this is a function\n\t\tparse=state.Utils.getMin(state.Database.values[key]);\n\t\tif (parse === undefined) {\n\t\t    ret=key + \" is NULL\";\n\t\t} else {\n\t\t    ret=parse;\n\t\t};\n\t    } else {\n\t\tret=val;\n\t    };\n\t};\n\treturn ret;\n    };\n    this.getWhereDynamic=function(state,key,val) {\n\tvar ret,parse;\n\tif (state.Database.values[key] === undefined) {\n\t    ret=state.Database.getWhereDetail(key,val);\n\t} else {\n\t    var keytrg=this.getKeytrg(state,key,val);\n\t    //console.log(\"parseWhere:\",key,JSON.stringify(val),keytrg);\n\t    if (keytrg === this.keytrg.Max) { // this is a function\n\t\tparse=state.Utils.getMax(state.Database.values[key]);\n\t\t//console.log(\"parseWhere:\",key,parse,JSON.stringify(state.Database.values[key]));\n\t\tif (parse === undefined) {\n\t\t    ret=key + \" is NULL\";\n\t\t} else {\n\t\t    ret=key + \"='\"+parse+\"'\";\n\t\t};\n\t    } else if (keytrg === this.keytrg.Min) { // this is a function\n\t\tparse=state.Utils.getMin(state.Database.values[key]);\n\t\tif (parse === undefined) {\n\t\t    ret=key + \" is NULL\";\n\t\t} else {\n\t\t    ret=key + \"='\"+parse+\"'\";\n\t\t};\n\t    } else{\n\t\tret=state.Database.getWhereDetail(key,val);\n\t    };\n\t};\n\t//console.log(\"GetWhere:\",key,val,ret);\n\treturn ret;\n    };\n    this.getWhereDetail=function(key,val) {\n\tif (val  === undefined ||\n\t    val  === null ||\n\t    val  === \"\") {\n\t    return key +' is NULL';\n\t} else {\n\t    return key + '=\"'+val+'\"'\n\t};\n    };\n    this.getWhere=function(state,keys,vals) {\n\tvar where=\"\";\n\t//console.log(\"Path:\",JSON.stringify(state.Path.keys));\n\tif (keys === undefined) {\n\t    keys=state.Path.keys.path;\n\t    vals=state.Path.select.val;\n\t};\n\tif (vals === undefined) {vals=[];};\n\tif (keys !== undefined) {\n\t    var plen = keys.length;\n\t    for (var ii = 0; ii < plen; ii++) {\n\t\tvar key=keys[ii];\n\t\tvar whereKey=state.Database.parseWhere(state,key,vals[key])\n\t\t//console.log(\"Wherekey:\",ii,key,JSON.stringify(vals),\n\t\t//\t    JSON.stringify(vals[key]),\"'\"+whereKey+\"'\");\n\t\tif (whereKey  === undefined ||\n\t\t    whereKey  === null ||\n\t\t    whereKey  === \"\" ) {\n\t\t    if (where !== \"\") { where = where +  ' AND ';};\n\t\t    where= where + key +' is NULL';\n\t\t} else {\n\t\t    if (where !== \"\") { where = where +  ' AND ';};\n\t\t    where=where + \"(\"+ whereKey+\")\";\n\t\t}\n\t    };\n\t    if (where !== \"\") {where=\" WHERE \"+where;}\n\t    //console.log(\"Where=|\"+where+\"|\")\n\t};\n\treturn where;\n    };\n    this.addWhere=function(iwhere,whereKey) {\n\tvar where=iwhere;\n\tif (whereKey  !== undefined &&\n\t    whereKey  !== null &&\n\t    whereKey  !== \"\" ) {\n\t    if (where !== \"\") {\n\t\twhere = where +  \" AND (\"+ whereKey+\")\";\n\t    } else {\n\t\twhere = \" WHERE (\"+ whereKey+\")\";\n\t    }\n\t}\n\treturn where;\n    };\n    this.getColWhere=function(key,values,index,step) {\n\tvar clen=values.length;\n\tvar where=\"\";\n        for (var kk=index;kk<Math.min(clen,index+step);kk++) {\n\t    if (where !== \"\") {where=where + \" or \";}\n\t    where=where + this.getWhereDetail(key,values[kk]);\n        };               \n\treturn where;\n    };\n    this.makeWhere=function(state,keys,vals) {\n\tif (keys === undefined) {\n\t    state.Path.keys.path.forEach(function(item,index) {this.setWhere(state,item,state.Path.select.val);}.bind(this));\n\t} else {\n\t    keys.forEach(function(item,index) {this.setWhere(state,item,vals);}.bind(this));\n\t}\n    };\n    this.setWhere=function(state,key,vals) {\n\tvar where=this.parseWhere(state,key,vals);\n\tstate.Path.where[key]=where;\n    };\n    this.parseWhere=function(state,key,vals) {\n\tvar where=\"\";\n\tif (vals === undefined) {vals=[];};\n\tvar lenv=vals.length\n\tfor (var ii=0;ii<lenv;ii++) {\n\t    var val=vals[ii]\n\t    if (where !== \"\") { where=where + \" OR \";};\n\t    where = where + state.Database.getWhereDynamic(state,key,val);\n\t    //console.log(\"From getWhereDynamic:\",key,\":\",val,\":\",where);\n\t};\n\treturn where;\n    };\n    this.getGroup=function(keys) {\n\tvar group=\"\";\n\tvar plen = keys.length;\n\tfor (var ii = 0; ii < plen; ii++) {\n\t    var key=keys[ii];\n\t    if (group !== \"\") { group = group +  ',';};\n\t    group= group + key;\n\t};\n\tif (group !== \"\") {group=\" GROUP BY \"+group;}\n\treturn group;\n    };\n    this.getCols=function(keys) {\n\tvar cols=\"\";\n\tvar plen = keys.length;\n\tfor (var ii = 0; ii < plen; ii++) {\n\t    var key=keys[ii];\n\t    cols= cols + key;\n\t    if (cols !== \"\") { cols = cols +  ',';};\n\t};\n\treturn cols;\n    };\n    this.getAll=function(state) {\n\tvar cols=\"\";\n\tvar plen = state.Path.keys.other.length;\n\tfor (var ii = 0; ii < plen; ii++) {\n\t    var key=state.Path.keys.other[ii];\n\t    cols= cols + key;\n\t    if (cols !== \"\") { cols = cols +  ',';};\n\t};\n\treturn cols;\n    };\n    this.getDocsRank=function(state,where,keys,maxrank) {\n\tvar dd;\n\tdd=alasql(\"select * FROM alarm\"+where);\n\treturn dd;\n    };\n\n    this.getRankCnt=function(state,where,keys,maxrank) {\n\twhere=this.addWhere(where,\"rank='\" + maxrank.toString()+\"'\");\n\tvar sql,dd;\n\tvar body=\"* FROM alarm\";\n\tif (keys  === undefined) {\n\t    sql=\"select \"+body+where;\n\t    //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\t    dd=alasql(sql);\n\t    //console.log(\"initial count:\",dd[0].cnt,JSON.stringify(dd0));\n\t    //console.log(\"Cnt:\",JSON.stringify(dd));\n\t    return dd;\n\t} else {\n\t    var cols = this.getCols(keys);\n\t    var group = this.getGroup(keys);\n\t    sql=\"select \"+cols+body+\n    \t\twhere+group;\n\t    //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\t    dd=alasql(sql);\n\t    //console.log(\"Cnt:\",JSON.stringify(dd),JSON.stringify(keys));\n\t    return dd\n\t}\n    };\n    this.getDocsCnt=function(state,where,keys) {\n\tvar sql,dd;\n\tvar body=\"count(*) AS cnt, max(level) AS maxlev, max(rank) AS maxrank, min(level) AS minlev, max(lat) AS maxlat, min(lat) AS minlat, max(lon) AS maxlon, min(lon) AS minlon FROM alarm\";\n\tif (keys  === undefined) {\n\t    sql=\"select \"+body+where;\n\t    //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\t    dd=alasql(sql);\n\t    //console.log(\"initial count:\",dd[0].cnt,JSON.stringify(dd0));\n\t    //console.log(\"Cnt:\",JSON.stringify(dd));\n\t    return dd;\n\t} else {\n\t    var cols = this.getCols(keys);\n\t    var group = this.getGroup(keys);\n\t    sql=\"select \"+cols+body+\n    \t\twhere+group;\n\t    //console.log(\"SQL:\",sql,\":\",body,\":\",where);\n\t    dd=alasql(sql);\n\t    //console.log(\"Cnt:\",JSON.stringify(dd),JSON.stringify(keys));\n\t    return dd\n\t}\n    };\n    this.getDocs=function(state,where) {\n\tvar dd;\n\tdd=alasql(\"select * FROM alarm\"+where);\n\treturn dd;\n    };\n    this.makeTable=function(state) {\n\talasql('DROP TABLE IF EXISTS alarm; CREATE TABLE alarm;');\n    };\n    this.dataToDb=function(state,data) {\n\talasql.tables.alarm.data = data;\n    };\n    this.getKeyCnt=function(state,key,where){\n\tvar sql=\"select \"+key+\",count(*) AS cnt FROM alarm\"+\n\t    where+\" GROUP BY \"+key;\n\treturn alasql(sql);\n    };\n    this.whatIsIt=function(object) { // determine object type\n\tif (object  === null) {\n\t    return \"null\";\n\t} else if (object.constructor  === this.arrayConstructor) {\n\t    return \"Array\";\n\t}\n\telse if (object.constructor  === this.objectConstructor) {\n\t    return \"Object\";\n\t}\n\telse {\n\t    return \"value\";\n\t}\n    };\n    this.getTimeDiff=function(state,dt) {\n\tvar s=\"\";\n\tif (dt  === undefined || isNaN(state,dt)) {return s;};\n\tvar msec=Math.abs(state,dt);\n\tvar dd = Math.floor(state,((state,(msec / 1000) / 60) / 60) / 24);\n\tmsec -= dd * 1000 * 60 * 60 * 24;\n\tvar hh = Math.floor(state,((state,msec / 1000) / 60) / 60);\n\tmsec -= hh * 1000 * 60 * 60;\n\tvar mm = Math.floor(state,(msec / 1000) / 60);\n\tmsec -= mm * 1000 * 60;\n\tvar ss = Math.floor(state,msec / 1000);\n\tmsec -= ss * 1000;\n\tif (dt<0) {\n\t    s=\"-\";\n\t} else if (dt > 0) {\n\t    s=\"+\";\n\t} else {\n\t    s=\"0\";\n\t}\n\tif (dd !== 0) s=s+\" \"+state.Utils.numberWithCommas(dd)+\"d\";\n\tif (hh !== 0) s=s+\" \"+hh+\"h\";\n\tif (mm !== 0) s=s+\" \"+mm+\"m\";\n\t//if (ss !== 0) s=s+\" \"+ss+\"s\";\n\treturn s;\n    }\n    this.sanityCheck=function(state) {\n\tvar sql=\"select count(*) AS cnt, max(level) AS lev FROM alarm\";\n\tvar dd0=alasql(sql);\n\tvar nrec= dd0[0].cnt;\n\treturn nrec;\n    }\n};\n\nexport default Database;\n"]},"metadata":{},"sourceType":"module"}