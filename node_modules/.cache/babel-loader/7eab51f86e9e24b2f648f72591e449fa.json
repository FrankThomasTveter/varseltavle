{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/ModeComponent.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FlagIcon from '@material-ui/icons/Flag';\nimport BarIcon from '@material-ui/icons/BarChart';\nimport TableIcon from '@material-ui/icons/Apps';\nimport ListIcon from '@material-ui/icons/ViewList';\nimport MapIcon from '@material-ui/icons/Map';\n\nvar styles = function styles(theme) {\n  return {\n    view: {\n      marginLeft: 'auto'\n    },\n    button: {\n      color: 'white'\n    }\n  };\n};\n\nfunction getModes(state, mode) {\n  if (mode !== undefined) {\n    var layoutMode = 0;\n    var cellMode = 0;\n\n    if (mode === \"Flags\") {\n      layoutMode = state.Layout.code.layout.Table;\n      cellMode = state.Layout.code.cell.Sum;\n    } else if (mode === \"Bars\") {\n      layoutMode = state.Layout.code.layout.Table;\n      cellMode = state.Layout.code.cell.Series;\n    } else if (mode === \"List\") {\n      layoutMode = state.Layout.code.layout.List;\n    } else if (mode === \"Map\") {\n      layoutMode = state.Layout.code.layout.Map;\n    } else {}\n\n    return {\n      layout: layoutMode,\n      cell: cellMode\n    };\n  } else {\n    return {\n      layout: state.Layout.state.layoutMode,\n      cell: state.Layout.state.cellMode\n    };\n  }\n\n  ;\n}\n\n;\n\nfunction ModeIcon(props) {\n  var state = props.state,\n      mode = props.mode;\n  var modes = getModes(state, mode);\n  var layoutMode = modes.layout;\n  var cellMode = modes.cell;\n\n  if (layoutMode === state.Layout.code.layout.Table) {\n    if (cellMode === state.Layout.code.cell.Sum) {\n      return React.createElement(FlagIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(BarIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    }\n  } else if (mode === state.Layout.code.layout.List) {\n    return React.createElement(ListIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(MapIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    });\n  }\n}\n\n;\n\nfunction renderMode(state, classes, onclose, mode, index) {\n  var modes = getModes(state, mode);\n  var layoutMode = modes.layout;\n  var cellMode = modes.cell;\n\n  var onclick = function onclick(event) {\n    return state.Layout.toggleMode(state, layoutMode, cellMode);\n  };\n\n  return React.createElement(MenuItem, {\n    key: mode,\n    onClose: onclose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Button, {\n    classes: {\n      root: classes.button\n    },\n    onClick: onclick,\n    title: mode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(ModeIcon, {\n    mode: mode,\n    state: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), \";\");\n}\n\n;\n\nvar Mode =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Mode, _Component);\n\n  function Mode() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Mode);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Mode)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      anchor: null\n    };\n    return _this;\n  }\n\n  _createClass(Mode, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state;\n      var modes = [\"Flags\", \"Bars\", \"List\", \"Map\"];\n\n      this.onClose = function () {\n        _this2.setState({\n          anchor: null\n        });\n      };\n\n      this.onClick = function (event) {\n        _this2.setState({\n          anchor: event.currentTarget\n        });\n      };\n\n      var mapFunction = function mapFunction(mode, index) {\n        return renderMode(state, classes, _this2.onClose, mode, index);\n      };\n\n      return React.createElement(\"div\", {\n        className: classes.view,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.button,\n        \"aria-owns\": this.state.anchor ? 'mode-menu' : undefined,\n        \"aria-haspopup\": \"true\",\n        onClick: this.onClick,\n        title: \"Select mode.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(ModeIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(Menu, {\n        id: \"mode-menu\",\n        anchorEl: this.state.anchor,\n        open: Boolean(this.state.anchor),\n        onClose: this.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, modes.map(mapFunction)));\n    }\n  }]);\n\n  return Mode;\n}(Component);\n\nMode.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Mode);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/ModeComponent.js"],"names":["React","Component","PropTypes","withStyles","Button","Menu","MenuItem","FlagIcon","BarIcon","TableIcon","ListIcon","MapIcon","styles","theme","view","marginLeft","button","color","getModes","state","mode","undefined","layoutMode","cellMode","Layout","code","layout","Table","cell","Sum","Series","List","Map","ModeIcon","props","modes","renderMode","classes","onclose","index","onclick","event","toggleMode","root","Mode","anchor","onClose","setState","onClick","currentTarget","mapFunction","Boolean","map","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport FlagIcon from '@material-ui/icons/Flag';\nimport BarIcon from '@material-ui/icons/BarChart';\nimport TableIcon from '@material-ui/icons/Apps';\nimport ListIcon from '@material-ui/icons/ViewList';\nimport MapIcon from '@material-ui/icons/Map';\n\nconst styles = theme => ({\n    view: {\n        marginLeft: 'auto',\n    },\n    button:{\n\tcolor:'white'\n    },\n});\nfunction getModes(state,mode) {\n    if (mode !== undefined) {\n\tvar layoutMode=0;\n\tvar cellMode=0;\n\tif (mode === \"Flags\") {\n\t    layoutMode=state.Layout.code.layout.Table;\n\t    cellMode=state.Layout.code.cell.Sum;\n\t} else if (mode === \"Bars\") {\n\t    layoutMode=state.Layout.code.layout.Table;\n\t    cellMode=state.Layout.code.cell.Series;\n\t} else if (mode === \"List\") {\n\t    layoutMode=state.Layout.code.layout.List;\n\t} else if (mode === \"Map\") {\n\t    layoutMode=state.Layout.code.layout.Map;\n\t} else {\n\t}\n\treturn {layout:layoutMode,cell:cellMode};\n    } else {\n\treturn {layout:state.Layout.state.layoutMode,cell:state.Layout.state.cellMode};\n    };\n};\nfunction ModeIcon (props) {\n    const {state,mode} = props;\n    var modes=getModes(state,mode);\n    var layoutMode=modes.layout;\n    var cellMode=modes.cell;\n    if (layoutMode === state.Layout.code.layout.Table) {\n\tif (cellMode === state.Layout.code.cell.Sum) {\n\t    return (<FlagIcon/>);\n\t} else {\n\t    return (<BarIcon/>);\n\t}\n    } else if (mode === state.Layout.code.layout.List) {\n\treturn (<ListIcon/>);\n    } else {\n\treturn (<MapIcon/>);\n    }\n};\nfunction renderMode (state,classes,onclose,mode,index) {\n    var modes=getModes(state,mode);\n    var layoutMode=modes.layout;\n    var cellMode=modes.cell;\n    var onclick = (event) => state.Layout.toggleMode(state,layoutMode,cellMode);\n    return (<MenuItem key={mode} onClose={onclose}>\n\t       <Button classes={{root:classes.button}} onClick={onclick} title={mode}>\n\t          <ModeIcon mode={mode} state={state}/>\n\t       </Button>;\n\t    </MenuItem>);\n\t   };\nclass Mode extends Component {\n    state = {anchor: null,};\n    render() {\n\tconst {classes, state}=this.props;\n\tvar modes=[\"Flags\",\"Bars\",\"List\",\"Map\"];\n\tthis.onClose = () => {this.setState({ anchor: null });};\n\tthis.onClick = (event) => {this.setState({ anchor: event.currentTarget });};\n\tvar mapFunction= (mode,index)=>renderMode(state,classes,this.onClose,mode,index);\n\treturn (<div className={classes.view}>\n\t\t   <Button\n                      className={classes.button}\n                      aria-owns={this.state.anchor ? 'mode-menu' : undefined}\n                      aria-haspopup=\"true\"\n                      onClick={this.onClick}\n\t              title={\"Select mode.\"}\n\t\t   >\n\t\t      {<ModeIcon />}\n                   </Button>\n\t          <Menu\n                   id=\"mode-menu\"\n\t           anchorEl={this.state.anchor}\n                   open={Boolean(this.state.anchor)}\n                   onClose={this.onClose}\n\t          >\n\t\t    {modes.map(mapFunction)}\n\t          </Menu>\n\t\t</div>);\n    }\n}\n\nMode.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Mode);\n"]},"metadata":{},"sourceType":"module"}