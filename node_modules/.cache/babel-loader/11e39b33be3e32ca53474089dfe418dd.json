{"ast":null,"code":"//console.log(\"Loading NavigateLib.js\");\nfunction Navigate() {\n  this.history = {\n    pos: 0,\n    // position of next snapshot\n    track: []\n  };\n  this.home = undefined;\n  this.rank = {}; // key rank\n\n  this.trash = {}; // key trash\n\n  this.maxStore = 1000; // max number of states stored\n\n  this.reset = function (state) {\n    // store state\n    state.Navigate.history = {\n      pos: 0,\n      track: []\n    };\n    this.store(state);\n  };\n\n  this.store = function (state) {\n    // store state\n    var snapshot = state.Path.getSnapshot(state); // remove old data...\n\n    if (state.Navigate.history.track.length > state.Navigate.history.pos + 1) {\n      state.Navigate.history.track.length = state.Navigate.history.pos + 1;\n    } else if (state.Navigate.history.track.length > this.maxStore) {\n      var keep = this.maxStore;\n      state.Navigate.history.track = state.Navigate.history.track.splice(-keep, keep);\n    }\n\n    ;\n\n    if (state.Navigate.history.track.length > 0) {\n      var old = state.Navigate.history.track[state.Navigate.history.track.length - 1];\n\n      if (JSON.stringify(snapshot) === JSON.stringify(old)) {\n        //console.log(\"History:\",JSON.stringify(snapshot),JSON.stringify(state.Navigate.history.track));\n        console.log(\"Ignoring old image.\");\n        return false;\n      }\n    }\n\n    state.Navigate.history.track.push(snapshot);\n    state.Navigate.history.pos = state.Navigate.history.track.length - 1; //console.log(\">>>>>> Stored state...\",JSON.stringify(state.Navigate.history),\n    //\t    this.canUndo(state),this.canRedo(state),\n    //\t    state.Navigate.history.pos,state.Navigate.history.track.length);\n\n    console.log(\">>>>> stored state.\", this.snapshotToString(state, snapshot)); //this.printSnapshot(state);\n\n    this.refreshHistory(state);\n  };\n\n  this.refreshHistory = function (state) {\n    if (state.React.Config !== undefined) {\n      state.React.Config.show();\n    }\n\n    ;\n  };\n\n  this.canUndo = function (state) {\n    return state.Navigate.history.pos > 0;\n  };\n\n  this.canRedo = function (state) {\n    return state.Navigate.history.pos < state.Navigate.history.track.length - 1;\n  };\n\n  this.undo = function (state) {\n    //console.log(\">>>>>> Undo:\",this.canUndo(state));\n    if (this.canUndo(state)) {\n      state.Navigate.history.pos = state.Navigate.history.pos - 1;\n      var snapshot = state.Navigate.history.track[state.Navigate.history.pos]; //console.log(\"Setting snapshot:\",this.snapshotToString(state,snapshot));\n\n      state.Path.setSnapshot(state, snapshot);\n      this.refreshHistory(state);\n      state.Show.show(state);\n    }\n\n    ;\n  };\n\n  this.redo = function (state) {\n    //console.log(\">>>>>> Redo:\",this.canRedo(state),state.Navigate.history.pos,JSON.stringify(state.Navigate.history.track));\n    if (this.canRedo(state)) {\n      state.Navigate.history.pos = state.Navigate.history.pos + 1;\n      var snapshot = state.Navigate.history.track[state.Navigate.history.pos]; //console.log(\"Setting snapshot:\",this.snapshotToString(state,snapshot));\n\n      state.Path.setSnapshot(state, snapshot);\n      this.refreshHistory(state);\n      state.Show.show(state);\n    }\n  };\n\n  this.onClickTablePath = function (state, skey, tkey) {\n    var reload = false;\n    var sid = state.Path.keys.other.indexOf(skey);\n    var tid = state.Path.keys.other.indexOf(tkey); //console.log(\"Table path: Sid:\",sid,\" tid:\",tid,skey,tkey);\n\n    if (sid !== -1 && tid !== -1) {\n      if (sid > tid) {\n        var src = state.Path.keys.other.splice(sid, 1); // remove from path\n\n        var trg = state.Path.keys.other.splice(tid, 1); // remove from path\n\n        state.Utils.pushKey(state.Path.keys.other, src, tid);\n        state.Utils.pushKey(state.Path.keys.other, trg, sid); //state.Utils.spliceArray(state.Path.keys.other,tid,0,src); // first position (table)\n        //state.Utils.spliceArray(state.Path.keys.other,sid,0,trg); // first position (table)\n\n        state.Path.exportAllKeys(state);\n        reload = true;\n      }\n    }\n\n    state.Html.setFootnote(state, \"Extracting data.\");\n    state.Html.setProgress(state, true);\n    state.Navigate.store(state);\n    state.Show.show(state, reload);\n  };\n\n  this.onClickRestValue = function (state, val, key, where) {\n    //console.log(\"onClickRestValue:\",val,key,JSON.stringify(state.Path.keys));\n    if (state.Path.selectTableKey(state, key, val, where, 1)) {\n      state.Html.setFootnote(state, \"Extracting data.\");\n      state.Html.setProgress(state, true);\n      state.Navigate.store(state);\n      state.Show.show(state);\n    }\n\n    ;\n    console.log(\"onClickRestValue done:\", val, key, JSON.stringify(state.Path.keys));\n  };\n\n  this.onClickPath = function (state, ttyp, tkey) {\n    var reload = false; // matrix changed?\n\n    var tid, tin, sin, src, tib; //console.log(\"Clicked:\",ttyp,tkey,JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other));\n\n    if (ttyp === \"path\") {\n      // path -> table\n      tid = state.Path.keys.path.indexOf(tkey);\n\n      if (tid !== -1) {\n        src = state.Path.keys.path.splice(tid, 1); // remove from path\n\n        state.Utils.pushKey(state.Path.keys.other, src, 2); //state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\n        state.Path.cleanSelect(state);\n        state.Navigate.store(state);\n        reload = true;\n      }\n    } else if (ttyp === \"table\") {\n      // other -> table\n      tid = state.Path.keys.other.indexOf(tkey); //console.log(\"Tin:\",tin,\" tid:\",tid);\n\n      if (tid !== -1) {\n        src = state.Path.keys.other.splice(tid, 1); // remove from path\n\n        state.Utils.pushKey(state.Path.keys.other, src, 0); //state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\n        state.Path.exportAllKeys(state);\n        state.Navigate.store(state);\n        reload = true;\n      }\n    } else if (ttyp === \"rest\") {\n      // rest -> table\n      tid = state.Path.keys.other.indexOf(tkey);\n\n      if (tid !== -1) {\n        src = state.Path.keys.other.splice(tid, 1); // remove from path\n\n        state.Utils.pushKey(state.Path.trash, src); //state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\n        state.Navigate.store(state);\n        reload = true;\n      }\n\n      ;\n    } else if (ttyp === \"trash\") {\n      tid = state.Path.trash.indexOf(tkey);\n      tin = state.Path.keys.other.indexOf(tkey);\n      sin = state.Path.keys.path.indexOf(tkey);\n      tib = state.Path.other.table.indexOf(tkey);\n      console.log(\"Trashing start:\", JSON.stringify(state.Path.trash), tkey, tid, tin, sin, tib);\n\n      if (tid !== -1) {\n        // trash => other\n        src = state.Path.trash.splice(tid, 1);\n        state.Utils.pushKey(state.Path.keys.other, src); //if ( tin === -1 ) {\n        //    state.Path.keys.other=state.Path.keys.other.concat(src);  // last position\n        //};\n      } else if (tin !== -1 && tib !== -1) {\n        // table => trash\n        src = state.Path.keys.other.splice(tin, 1);\n        state.Utils.pushKey(state.Path.trash, src);\n        reload = true; //state.Path.trash=state.Path.trash.concat(src);            // last position\n      } else if (sin !== -1 && tin === -1) {\n        // select => other\n        state.Utils.pushKey(state.Path.keys.other, tkey); //state.Path.keys.other=state.Path.keys.other.concat(tkey); // last position\n      } else if (sin !== -1 && tin !== -1) {\n        // other => select\n        src = state.Path.keys.other.splice(tin, 1);\n      } else if (sin === -1 && tin !== -1) {\n        // other => trash\n        src = state.Path.keys.other.splice(tin, 1);\n        state.Utils.pushKey(state.Path.trash, src); //state.Path.trash=state.Path.trash.concat(src);            // last position\n      }\n\n      ;\n      state.Path.exportAllKeys(state);\n      state.Navigate.store(state); //console.log(\"Trashed:\",JSON.stringify(state.Path.trash),JSON.stringify(state.Path.keys));\n    }\n\n    state.Html.setFootnote(state, \"Extracting data.\");\n    state.Html.setProgress(state, true); //console.log(\"Showing:\",JSON.stringify(state.Path.other));\n\n    state.Show.show(state, reload);\n  };\n\n  this.onClickAddOther = function (state, ttyp, tkey, active) {\n    // add key to other\n    var ntab = state.Path.other.table.length;\n    var reload = ntab !== 2; // matrix changed?\n\n    var tid, tin, sin, src; //console.log(\"Clicked:\",ttyp,tkey,JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other));\n    //ttyp \"select\", \"rest\", \"trash\"\n    //console.log(\"Adding start:\",tkey,JSON.stringify(state.Path.trash),JSON.stringify(state.Path.keys));\n\n    tid = state.Path.trash.indexOf(tkey);\n    tin = state.Path.keys.other.indexOf(tkey);\n    sin = state.Path.keys.path.indexOf(tkey);\n\n    if (tin === -1) {\n      // add if not already in state.Path.keys.other\n      if (tid !== -1) {\n        // trash => other\n        src = state.Path.trash.splice(tid, 1);\n        state.Utils.pushKey(state.Path.keys.other, src); //if ( tin === -1 ) {\n        //    state.Path.keys.other=state.Path.keys.other.concat(src);  // last position\n        //};\n      } else if (sin !== -1) {\n        // select => other\n        state.Utils.pushKey(state.Path.keys.other, tkey); //state.Path.keys.other=state.Path.keys.other.concat(tkey); // last position\n      } else {\n        // not in trash,select or other, how strange\n        console.log(\"Strange key:\", tkey, JSON.stringify(state.Path.trash), JSON.stringify(state.Path.keys));\n      }\n\n      ;\n    } else {\n      // remove if in state.Path.keys.other\n      if (sin !== -1) {\n        // is already in selected list\n        src = state.Path.keys.other.splice(tin, 1);\n      } else if (tid === -1) {\n        // move to trash if its not already there\n        src = state.Path.keys.other.splice(tin, 1);\n        state.Utils.pushKey(state.Path.trash, src);\n      } else {\n        // its already in trash, just delete it\n        src = state.Path.keys.other.splice(tin, 1);\n      }\n    }\n\n    ;\n    state.Path.exportAllKeys(state);\n    state.Navigate.store(state); //console.log(\"Keys:\",reload,JSON.stringify(state.Path.keys));\n    //console.log(\"Trash:\",reload,JSON.stringify(state.Path.trash));\n    //console.log(\"Other:\",JSON.stringify(state.Path.other));\n\n    state.Show.show(state, reload);\n  };\n\n  this.switchTableKey = function (state, key) {\n    var tid = state.Path.keys.other.indexOf(key);\n\n    if (tid !== -1) {\n      var src = state.Path.keys.other.splice(tid, 1); // remove from path\n\n      state.Path.keys.other = state.Path.keys.other.concat(src); // last position\n      //state.Utils.pushKey(state.Path.keys.other,src,0);       // first position\n      //state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\n      state.Path.exportAllKeys(state);\n      var colkey = state.Path.getColKey(state);\n      var rowkey = state.Path.getRowKey(state);\n      state.Navigate.store(state);\n      var reload = src[0] !== colkey && src[0] !== rowkey; //console.log(\"Switched:\",JSON.stringify(src[0]),colkey,rowkey,reload);\n\n      state.Show.show(state, reload);\n    }\n  };\n\n  this.selectItem = function (state, colkey, rowkey, colval, rowval, colwhere, rowwhere, colcnt, rowcnt) {\n    //console.log(\"Selectitem:\",colkey,rowkey,colval,rowval,colwhere,rowwhere,colcnt,rowcnt);\n    //var colkey=state.Path.getColKey(state);\n    //var rowkey=state.Path.getRowKey(state);\n    var rank = state.Utils.cp(state.Path.keys.other); //console.log(\"SelectItem:\",colkey,\"=\",colval,\"  \",rowkey,\"=\",rowval);\n\n    if (state.Layout.getLayoutMode(state) === state.Layout.code.layout.Map) {\n      if (this.selectMapKey(state, colkey, colval, colwhere, colcnt)) {\n        this.rank[colkey] = state.Utils.cp(rank); //this.flip[colkey]=this.getFlip(state);\n\n        if (this.selectMapKey(state, rowkey, rowval, rowwhere, rowcnt)) {\n          this.rank[rowkey] = state.Utils.cp(rank); //this.last.flip[rowkey]=this.getFlip(state);\n        } //this.trash[colkey]=state.Path.checkTableKeys(state);\n        //console.log(\"state.Path.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n\n      }\n\n      ; //console.log(\"Path:\",JSON.stringify(state.Path))\n\n      state.Html.setFootnote(state, \"Extracting data.\");\n      state.Html.setProgress(state, true);\n      state.Navigate.store(state);\n      state.Show.show(state);\n    } else {\n      var changed = false;\n\n      if (state.Path.selectTableKey(state, colkey, colval, colwhere, colcnt)) {\n        state.Path.exportAllKeys(state); //console.log(\"Selected:\",colkey,colval,JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other));\n\n        this.rank[colkey] = state.Utils.cp(rank);\n        changed = true;\n      } else {\n        console.log(\"Unable to select:\", colkey);\n      }\n\n      ;\n\n      if (state.Path.selectTableKey(state, rowkey, rowval, rowwhere, rowcnt)) {\n        state.Path.exportAllKeys(state); //console.log(\"Selected:\",rowkey,rowval,JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other));\n\n        this.rank[rowkey] = state.Utils.cp(rank);\n        changed = true;\n      } else {\n        console.log(\"Unable to select:\", rowkey);\n      }\n\n      if (changed) {\n        //this.trash[colkey]=state.Path.checkTableKeys(state);\n        //console.log(\"state.Path.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n        state.Html.setFootnote(state, \"Extracting data.\");\n        state.Html.setProgress(state, true);\n        state.Navigate.store(state);\n        state.Show.show(state);\n      } //console.log(\"Selectitem Done:\",rowwhere,colwhere);\n\n    }\n\n    ;\n  };\n\n  this.selectMapKey = function (state, key, val, where, cnt) {\n    // keep abscissa\n    //console.log(\"Table.Selecting:\",key,\"=\",val,\", where=\",where);\n    state.Path.select.val[key] = [val];\n    state.Path.where[key] = where;\n\n    if (state.Utils.missing(state.Path.keys.path, key)) {\n      //console.log(\"Adding to path:\",key);\n      state.Utils.pushKey(state.Path.keys.path, key); //state.Path.keys.path=state.Path.keys.path.concat(key); // last path position\n    }\n\n    ;\n    return true;\n  };\n\n  this.selectKey = function (state, key, val, where, cnt) {\n    var rank = state.Utils.cp(state.Path.keys.other); //console.log(\"SelecRow: rowkey=\",key,\" val=\",val);\n    //console.log(\"SelectKey:\",key,val,where,cnt);\n\n    if (state.Layout.getLayoutMode(state) === state.Layout.code.layout.Map) {\n      if (this.selectMapKey(state, key, val, where, cnt)) {\n        this.rank[key] = state.Utils.cp(rank);\n      }\n\n      state.Html.setFootnote(state, \"Extracting data.\");\n      state.Html.setProgress(state, true);\n      state.Navigate.store(state);\n      state.Show.show(state);\n    } else if (state.Path.selectTableKey(state, key, val, where, cnt)) {\n      this.rank[key] = rank; //this.trash[key]=state.Path.checkTableKeys(state);\n      //console.log(\"state.Path.checkTableKeys Done.\",rowkey,JSON.stringify(this.trash[key]));\n\n      state.Html.setFootnote(state, \"Extracting data.\");\n      state.Html.setProgress(state, true);\n      state.Navigate.store(state);\n      state.Show.show(state);\n    } else {\n      console.log(\"Unable to select:\", key);\n    } //console.log(\"Finally:\",JSON.stringify(state.Path.keys.other));\n\n  };\n\n  this.snapshotToString = function (state, snapshot) {\n    return \"Snapshot: \" + JSON.stringify(snapshot.keys.path);\n  };\n\n  this.printSnapshot = function (state) {\n    var lenv = state.Navigate.history.track.length;\n\n    for (var ii = 0; ii < lenv; ii++) {\n      var snapshot = state.Navigate.history.track[ii];\n\n      if (ii === state.Navigate.history.pos) {\n        console.log(\"@@@@\", ii, \" => \", this.snapshotToString(state, snapshot));\n      } else {\n        console.log(\"    \", ii, \" => \", this.snapshotToString(state, snapshot));\n      }\n    }\n\n    ;\n  };\n}\n\n;\nexport default Navigate;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/NavigateLib.js"],"names":["Navigate","history","pos","track","home","undefined","rank","trash","maxStore","reset","state","store","snapshot","Path","getSnapshot","length","keep","splice","old","JSON","stringify","console","log","push","snapshotToString","refreshHistory","React","Config","show","canUndo","canRedo","undo","setSnapshot","Show","redo","onClickTablePath","skey","tkey","reload","sid","keys","other","indexOf","tid","src","trg","Utils","pushKey","exportAllKeys","Html","setFootnote","setProgress","onClickRestValue","val","key","where","selectTableKey","onClickPath","ttyp","tin","sin","tib","path","cleanSelect","table","onClickAddOther","active","ntab","switchTableKey","concat","colkey","getColKey","rowkey","getRowKey","selectItem","colval","rowval","colwhere","rowwhere","colcnt","rowcnt","cp","Layout","getLayoutMode","code","layout","Map","selectMapKey","changed","cnt","select","missing","selectKey","printSnapshot","lenv","ii"],"mappings":"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","sourcesContent":["//console.log(\"Loading NavigateLib.js\");\n\nfunction Navigate() {\n    this.history={pos:0, // position of next snapshot\n\t\t  track:[]\n\t\t };\n    this.home=undefined;\n    this.rank={};          // key rank\n    this.trash={};          // key trash\n    this.maxStore=1000;       // max number of states stored\n    this.reset=function(state) { // store state\n\tstate.Navigate.history={pos:0,track:[]};\n\tthis.store(state);\n    };\n    this.store=function(state) { // store state\n\tvar snapshot=state.Path.getSnapshot(state)\n\t// remove old data...\n\tif (state.Navigate.history.track.length>state.Navigate.history.pos+1) {\n\t    state.Navigate.history.track.length=state.Navigate.history.pos+1;\n\t} else if (state.Navigate.history.track.length > this.maxStore) {\n\t    var keep=this.maxStore;\n\t    state.Navigate.history.track=state.Navigate.history.track.splice(-keep,keep);\n\t};\n\tif (state.Navigate.history.track.length>0) {\n\t    var old=state.Navigate.history.track[state.Navigate.history.track.length-1];\n\t    if (JSON.stringify(snapshot)===JSON.stringify(old)) {\n\t\t//console.log(\"History:\",JSON.stringify(snapshot),JSON.stringify(state.Navigate.history.track));\n\t\tconsole.log(\"Ignoring old image.\");\n\t\treturn false;\n\t    }\n\t}\n\tstate.Navigate.history.track.push(snapshot);\n\tstate.Navigate.history.pos=state.Navigate.history.track.length-1;\n\t//console.log(\">>>>>> Stored state...\",JSON.stringify(state.Navigate.history),\n\t//\t    this.canUndo(state),this.canRedo(state),\n\t//\t    state.Navigate.history.pos,state.Navigate.history.track.length);\n\tconsole.log(\">>>>> stored state.\",this.snapshotToString(state,snapshot));\n\t//this.printSnapshot(state);\n\tthis.refreshHistory(state);\n    };\n    this.refreshHistory=function(state) {\n\tif (state.React.Config !== undefined) {\n\t    state.React.Config.show();\n\t};\n    };\n    this.canUndo=function(state) {\n\treturn (state.Navigate.history.pos > 0);\n    };\n    this.canRedo=function(state) {\n\treturn (state.Navigate.history.pos < state.Navigate.history.track.length-1);\n    };\n    this.undo=function(state) {\n\t//console.log(\">>>>>> Undo:\",this.canUndo(state));\n\tif (this.canUndo(state)) {\n\t    state.Navigate.history.pos=state.Navigate.history.pos-1;\n\t    var snapshot=state.Navigate.history.track[state.Navigate.history.pos]\n\t    //console.log(\"Setting snapshot:\",this.snapshotToString(state,snapshot));\n\t    state.Path.setSnapshot(state,snapshot);\n\t    this.refreshHistory(state);\n\t    state.Show.show(state);\n\t};\n    };\n    this.redo=function(state) {\n\t//console.log(\">>>>>> Redo:\",this.canRedo(state),state.Navigate.history.pos,JSON.stringify(state.Navigate.history.track));\n\tif (this.canRedo(state)) {\n\t    state.Navigate.history.pos=state.Navigate.history.pos+1;\t\n\t    var snapshot=state.Navigate.history.track[state.Navigate.history.pos]\n\t    //console.log(\"Setting snapshot:\",this.snapshotToString(state,snapshot));\n\t    state.Path.setSnapshot(state,snapshot);\n\t    this.refreshHistory(state);\n\t    state.Show.show(state);\n\t}\n    };\n    this.onClickTablePath=function(state,skey,tkey) {\n\tvar reload=false;\n\tvar sid=state.Path.keys.other.indexOf(skey);\n\tvar tid=state.Path.keys.other.indexOf(tkey);\n\t//console.log(\"Table path: Sid:\",sid,\" tid:\",tid,skey,tkey);\n\tif (sid !== -1 && tid !== -1) {\n\t    if (sid > tid) {\n\t\tvar src=state.Path.keys.other.splice(sid, 1);                 // remove from path\n\t\tvar trg=state.Path.keys.other.splice(tid, 1);                 // remove from path\n\t\tstate.Utils.pushKey(state.Path.keys.other,src,tid);\n\t\tstate.Utils.pushKey(state.Path.keys.other,trg,sid);\n\t\t//state.Utils.spliceArray(state.Path.keys.other,tid,0,src); // first position (table)\n\t\t//state.Utils.spliceArray(state.Path.keys.other,sid,0,trg); // first position (table)\n\t\tstate.Path.exportAllKeys(state);\n\t\treload=true;\n\t    }\n\t}\n\tstate.Html.setFootnote(state,\"Extracting data.\");\n\tstate.Html.setProgress(state, true);\n\tstate.Navigate.store(state);\n\tstate.Show.show(state,reload);\n    };\n    this.onClickRestValue=function(state,val,key,where) {\n\t//console.log(\"onClickRestValue:\",val,key,JSON.stringify(state.Path.keys));\n\tif (state.Path.selectTableKey(state,key,val,where,1)) {\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    state.Html.setProgress(state, true);\n\t    state.Navigate.store(state);\n\t    state.Show.show(state);\n\t};\n\tconsole.log(\"onClickRestValue done:\",val,key,JSON.stringify(state.Path.keys));\n    };\n    this.onClickPath=function(state,ttyp,tkey) {\n\tvar reload=false; // matrix changed?\n\tvar tid,tin,sin,src,tib;\n\t//console.log(\"Clicked:\",ttyp,tkey,JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other));\n\tif (ttyp  === \"path\") { // path -> table\n\t    tid=state.Path.keys.path.indexOf(tkey);\n\t    if (tid !== -1) {\n\t\tsrc=state.Path.keys.path.splice(tid, 1);                 // remove from path\n\t\tstate.Utils.pushKey(state.Path.keys.other,src,2);\n\t\t//state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\t\tstate.Path.cleanSelect(state);\n\t\tstate.Navigate.store(state);\n\t\treload=true;\n\t    }\n\t} else if (ttyp  === \"table\") { // other -> table\n\t    tid=state.Path.keys.other.indexOf(tkey);\n\t    //console.log(\"Tin:\",tin,\" tid:\",tid);\n\t    if (tid !== -1) {\n\t\tsrc=state.Path.keys.other.splice(tid, 1);                 // remove from path\n\t\tstate.Utils.pushKey(state.Path.keys.other,src,0);\n\t\t//state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\t\tstate.Path.exportAllKeys(state);\n\t\tstate.Navigate.store(state);\n\t\treload=true;\n\t    }\n\t} else if (ttyp === \"rest\") { // rest -> table\n\t    tid=state.Path.keys.other.indexOf(tkey);\n\t    if (tid !== -1) {\n\t\tsrc=state.Path.keys.other.splice(tid, 1);                 // remove from path\n\t\tstate.Utils.pushKey(state.Path.trash,src);\n\t\t//state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\t\tstate.Navigate.store(state);\n\t\treload=true;\n\t    };\n\t} else if (ttyp === \"trash\") {\n\t    tid=state.Path.trash.indexOf(tkey);\n\t    tin=state.Path.keys.other.indexOf(tkey);\n\t    sin=state.Path.keys.path.indexOf(tkey);\n\t    tib=state.Path.other.table.indexOf(tkey);\n\t    console.log(\"Trashing start:\",JSON.stringify(state.Path.trash),tkey,tid,tin,sin,tib);\n\t    if (tid !== -1) {                                             // trash => other\n\t\tsrc=state.Path.trash.splice(tid, 1);\n\t\tstate.Utils.pushKey(state.Path.keys.other,src);\n\t\t//if ( tin === -1 ) {\n\t\t//    state.Path.keys.other=state.Path.keys.other.concat(src);  // last position\n\t\t//};\n\t    } else if (tin !== -1 && tib !== -1) {                        // table => trash\n\t\tsrc=state.Path.keys.other.splice(tin, 1);\n\t\tstate.Utils.pushKey(state.Path.trash,src);\n\t\treload=true;\n\t\t//state.Path.trash=state.Path.trash.concat(src);            // last position\n\t    } else if (sin !== -1 && tin === -1) {                         // select => other\n\t\tstate.Utils.pushKey(state.Path.keys.other,tkey);\n\t\t//state.Path.keys.other=state.Path.keys.other.concat(tkey); // last position\n\t    } else if (sin !== -1 && tin !== -1) {                        // other => select\n\t\tsrc=state.Path.keys.other.splice(tin, 1);\n\t    } else if (sin === -1 && tin !== -1) {                        // other => trash\n\t\tsrc=state.Path.keys.other.splice(tin, 1);\n\t\tstate.Utils.pushKey(state.Path.trash,src);\n\t\t//state.Path.trash=state.Path.trash.concat(src);            // last position\n\t    };\n\t    state.Path.exportAllKeys(state);\n\t    state.Navigate.store(state);\n\t    //console.log(\"Trashed:\",JSON.stringify(state.Path.trash),JSON.stringify(state.Path.keys));\n\t}\n\tstate.Html.setFootnote(state,\"Extracting data.\");\n\tstate.Html.setProgress(state, true);\n\t//console.log(\"Showing:\",JSON.stringify(state.Path.other));\n\tstate.Show.show(state,reload);\n    };\n    this.onClickAddOther=function(state,ttyp,tkey,active) { // add key to other\n\tvar ntab=state.Path.other.table.length;\n\tvar reload=(ntab!==2); // matrix changed?\n\tvar tid,tin,sin,src;\n\t//console.log(\"Clicked:\",ttyp,tkey,JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other));\n\t//ttyp \"select\", \"rest\", \"trash\"\n\t//console.log(\"Adding start:\",tkey,JSON.stringify(state.Path.trash),JSON.stringify(state.Path.keys));\n\ttid=state.Path.trash.indexOf(tkey);\n\ttin=state.Path.keys.other.indexOf(tkey);\n\tsin=state.Path.keys.path.indexOf(tkey);\n\tif (tin === -1) { // add if not already in state.Path.keys.other\n\t    if (tid !== -1) {                                // trash => other\n\t\tsrc=state.Path.trash.splice(tid, 1);\n\t\tstate.Utils.pushKey(state.Path.keys.other,src);\n\t\t//if ( tin === -1 ) {\n\t\t//    state.Path.keys.other=state.Path.keys.other.concat(src);  // last position\n\t\t//};\n\t    } else if (sin !== -1) {                         // select => other\n\t\tstate.Utils.pushKey(state.Path.keys.other,tkey);\n\t\t//state.Path.keys.other=state.Path.keys.other.concat(tkey); // last position\n\t    } else { // not in trash,select or other, how strange\n\t\tconsole.log(\"Strange key:\",tkey,\n\t\t\t    JSON.stringify(state.Path.trash),\n\t\t\t    JSON.stringify(state.Path.keys));\n\t    };\n\t} else { // remove if in state.Path.keys.other\n\t    if (sin !== -1) { // is already in selected list\n\t\tsrc=state.Path.keys.other.splice(tin, 1);\n\t    } else if ( tid === -1) { // move to trash if its not already there\n\t\tsrc=state.Path.keys.other.splice(tin, 1);\n\t\tstate.Utils.pushKey(state.Path.trash,src);\n\t    } else { // its already in trash, just delete it\n\t\tsrc=state.Path.keys.other.splice(tin, 1);\n\t    }\n\t};\n\tstate.Path.exportAllKeys(state);\n\tstate.Navigate.store(state);\n\t//console.log(\"Keys:\",reload,JSON.stringify(state.Path.keys));\n\t//console.log(\"Trash:\",reload,JSON.stringify(state.Path.trash));\n\t//console.log(\"Other:\",JSON.stringify(state.Path.other));\n\tstate.Show.show(state,reload);\n    };\n    this.switchTableKey=function(state,key) {\n\tvar tid=state.Path.keys.other.indexOf(key);\n\tif (tid !== -1) {\n\t    var src=state.Path.keys.other.splice(tid, 1);                 // remove from path\n\t    state.Path.keys.other=state.Path.keys.other.concat(src);  // last position\n\t    //state.Utils.pushKey(state.Path.keys.other,src,0);       // first position\n\t    //state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\t    state.Path.exportAllKeys(state);\n\t    var colkey=state.Path.getColKey(state);\n\t    var rowkey=state.Path.getRowKey(state);\n\t    state.Navigate.store(state);\n\t    var reload=(src[0]!==colkey && src[0]!==rowkey);\n\t    //console.log(\"Switched:\",JSON.stringify(src[0]),colkey,rowkey,reload);\n\t    state.Show.show(state,reload);\n\t}\t\n    };\n    this.selectItem=function(state,colkey,rowkey,colval,rowval,colwhere,rowwhere,colcnt,rowcnt) {\n\t//console.log(\"Selectitem:\",colkey,rowkey,colval,rowval,colwhere,rowwhere,colcnt,rowcnt);\n\t//var colkey=state.Path.getColKey(state);\n\t//var rowkey=state.Path.getRowKey(state);\n\tvar rank=state.Utils.cp(state.Path.keys.other);\n\t//console.log(\"SelectItem:\",colkey,\"=\",colval,\"  \",rowkey,\"=\",rowval);\n\tif (state.Layout.getLayoutMode(state)  === state.Layout.code.layout.Map) {\n\t    if (this.selectMapKey(state,colkey,colval,colwhere,colcnt)) {\n\t\tthis.rank[colkey]=state.Utils.cp(rank);\n\t\t//this.flip[colkey]=this.getFlip(state);\n\t\tif (this.selectMapKey(state,rowkey,rowval,rowwhere,rowcnt)) {\n\t\t    this.rank[rowkey]=state.Utils.cp(rank);\n\t\t    //this.last.flip[rowkey]=this.getFlip(state);\n\t\t}\n\t\t//this.trash[colkey]=state.Path.checkTableKeys(state);\n\t\t//console.log(\"state.Path.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n\t    };\n\t    //console.log(\"Path:\",JSON.stringify(state.Path))\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    state.Html.setProgress(state, true);\n\t    state.Navigate.store(state);\n\t    state.Show.show(state);\t\n\t} else {\n\t    var changed=false;\n\t    if (state.Path.selectTableKey(state,colkey,colval,colwhere,colcnt)) {\n\t\tstate.Path.exportAllKeys(state);\n\t\t//console.log(\"Selected:\",colkey,colval,JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other));\n\t\tthis.rank[colkey]=state.Utils.cp(rank);\n\t\tchanged=true;\n\t    } else {\n\t\tconsole.log(\"Unable to select:\",colkey);\n\t    };\n\t    if (state.Path.selectTableKey(state,rowkey,rowval,rowwhere,rowcnt)) {\n\t\tstate.Path.exportAllKeys(state);\n\t\t//console.log(\"Selected:\",rowkey,rowval,JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other));\n\t\tthis.rank[rowkey]=state.Utils.cp(rank);\n\t\tchanged=true;\n\t    } else {\n\t\tconsole.log(\"Unable to select:\",rowkey);\n\t    }\n\t    if (changed) {\n\t\t//this.trash[colkey]=state.Path.checkTableKeys(state);\n\t\t//console.log(\"state.Path.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n\t\tstate.Html.setFootnote(state,\"Extracting data.\");\n\t\tstate.Html.setProgress(state, true);\n\t\tstate.Navigate.store(state);\n\t\tstate.Show.show(state);\n\t    }\n\t    //console.log(\"Selectitem Done:\",rowwhere,colwhere);\n\t};\n    };\n    this.selectMapKey=function(state,key,val,where,cnt) { // keep abscissa\n\t//console.log(\"Table.Selecting:\",key,\"=\",val,\", where=\",where);\n\tstate.Path.select.val[key]=[val];\n\tstate.Path.where[key]=where;\n\tif (state.Utils.missing(state.Path.keys.path,key)) {\n\t    //console.log(\"Adding to path:\",key);\n\t    state.Utils.pushKey(state.Path.keys.path,key);\n\t    //state.Path.keys.path=state.Path.keys.path.concat(key); // last path position\n\t};\n\treturn true;\n    };\n    this.selectKey=function(state,key,val,where,cnt) {\n\tvar rank=state.Utils.cp(state.Path.keys.other);\n\t//console.log(\"SelecRow: rowkey=\",key,\" val=\",val);\n\t//console.log(\"SelectKey:\",key,val,where,cnt);\n\tif (state.Layout.getLayoutMode(state)  === state.Layout.code.layout.Map) {\n\t    if (this.selectMapKey(state,key,val,where,cnt)) {\n\t\tthis.rank[key]=state.Utils.cp(rank);\n\t    }\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    state.Html.setProgress(state, true);\n\t    state.Navigate.store(state);\n\t    state.Show.show(state);\n\t} else if (state.Path.selectTableKey(state,key,val,where,cnt)) {\n\t    this.rank[key]=rank;\n\t    //this.trash[key]=state.Path.checkTableKeys(state);\n\t    //console.log(\"state.Path.checkTableKeys Done.\",rowkey,JSON.stringify(this.trash[key]));\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    state.Html.setProgress(state, true);\n\t    state.Navigate.store(state);\n\t    state.Show.show(state);\n\t} else {\n\t    console.log(\"Unable to select:\",key);\n\t}\n\t//console.log(\"Finally:\",JSON.stringify(state.Path.keys.other));\n    };\n    this.snapshotToString=function(state,snapshot) {\n\treturn (\"Snapshot: \" + JSON.stringify(snapshot.keys.path));\n    };\n    this.printSnapshot=function(state) {\n\tvar lenv=state.Navigate.history.track.length;\n\tfor (var ii=0;ii<lenv;ii++) {\n\t    var snapshot=state.Navigate.history.track[ii];\n\t    if (ii===state.Navigate.history.pos) {\n\t\tconsole.log(\"@@@@\",ii,\" => \",this.snapshotToString(state,snapshot));\n\t    } else {\n\t\tconsole.log(\"    \",ii,\" => \",this.snapshotToString(state,snapshot));\n\t    }\n\t};\n    };\n};\nexport default Navigate;\n"]},"metadata":{},"sourceType":"module"}