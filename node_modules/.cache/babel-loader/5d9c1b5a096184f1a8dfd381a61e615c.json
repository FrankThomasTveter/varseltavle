{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/Table2DComponent.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { teal_palette } from '../mui/metMuiThemes';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport SummaryCell from './SummaryCell';\nimport SeriesCell from './SeriesCell';\nimport CanvasText from './CanvasTextComponent';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      height: '100%'\n    },\n    paper: {\n      overflow: 'hidden',\n      tableLayout: 'fixed',\n      padding: 0,\n      margin: 0\n    },\n    divTable: {\n      display: 'table',\n      width: '100%'\n    },\n    divTableRow: {\n      display: 'table-row'\n    },\n    divTableCell: {\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    },\n    divTableCellCursor: {\n      cursor: \"pointer\",\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    },\n    divTableHead: {\n      border: '0px solid #999999',\n      display: 'table-cell',\n      padding: '0px 0px'\n    },\n    divTableHeading: {\n      display: 'table-header-group'\n    },\n    divTableHeadingCenter: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    divTableFoot: {\n      backgroundColor: '#DDD',\n      display: 'table-footer-group',\n      fontWeight: 'bold'\n    },\n    divTableBody: {\n      display: 'table-row-group'\n    }\n  };\n}; //const mui = createTheme({palette:teal_palette});\n\n\nfunction getTextWidth(txt, fontname, fontsize) {\n  if (getTextWidth.c === undefined) {\n    getTextWidth.c = document.createElement('canvas');\n    getTextWidth.ctx = getTextWidth.c.getContext('2d');\n  }\n\n  if (fontname !== undefined) {\n    getTextWidth.ctx.font = fontsize + ' ' + fontname;\n  }\n\n  return getTextWidth.ctx.measureText(txt).width;\n}\n\n;\n\nfunction getTextHeight(fontname, fontsize) {\n  if (getTextHeight.c === undefined) {\n    getTextHeight.c = document.createElement('canvas');\n    getTextHeight.ctx = getTextHeight.c.getContext('2d');\n  }\n\n  if (fontname !== undefined) {\n    getTextHeight.ctx.font = fontsize + ' ' + fontname;\n  }\n\n  return getTextHeight.ctx.measureText('M').width;\n}\n\nfunction maxWidth(values, border) {\n  var swidth = 0;\n  var mwidth = 0;\n  var lenv = values.length;\n\n  for (var ii = 0; ii < lenv; ii++) {\n    var cwidth = getTextWidth(values[ii]) + 2 * border;\n\n    if (cwidth > mwidth) {\n      mwidth = cwidth;\n    }\n\n    swidth = swidth + cwidth;\n  }\n\n  return {\n    max: mwidth,\n    sum: swidth\n  };\n}\n\nfunction makePlan(label, colvalues, rowvalues, iwidth, iheight, border) {\n  var plan = {\n    cell: {\n      rotate: false,\n      step: 1,\n      border: border,\n      width: 100,\n      height: 100,\n      xoffset: 0,\n      yoffset: 0\n    },\n    hdr: {\n      rotate: false,\n      step: 1,\n      border: border,\n      width: 100,\n      height: 100,\n      xoffset: 0,\n      yoffset: 0\n    },\n    row: {\n      rotate: false,\n      step: 1,\n      border: border,\n      width: 100,\n      height: 100,\n      xoffset: 0,\n      yoffset: 0\n    },\n    col: {\n      rotate: false,\n      step: 1,\n      border: border,\n      width: 100,\n      height: 100,\n      xoffset: 0,\n      yoffset: 0\n    }\n  };\n\n  if (iwidth <= 0) {\n    return plan;\n  }\n\n  ; // text boundaries\n\n  var wh = maxWidth(rowvalues, border);\n  var ww = maxWidth(colvalues, border);\n  var zwidth = getTextWidth(label) + 2 * border; //props.theme.spacing.unit;\n  // var zheight=getTextHeight(label) + 2 * border;  //props.theme.spacing.unit;\n  // table boundaries\n\n  var mheight = getTextHeight() + 2 * border; //props.theme.spacing.unit;\n\n  var hwidth = Math.max(wh.max, zwidth) + mheight;\n  var width = iwidth - hwidth; // calculate cell width...\n\n  var mwidth = ww.max; //var swidth=ww.sum;\n\n  var lenc = colvalues.length;\n  var lenr = rowvalues.length;\n  var hh, hw, ch, cw, hx, rot;\n\n  if (mwidth * lenc < width) {\n    // horisontal\n    rot = false;\n    stp = 1;\n    cw = width / lenc;\n    hh = mheight;\n    hx = (plan.cell.width - mwidth) / 2; //console.log(\"Plan (normal):\",JSON.stringify(plan));\n  } else if (mheight * lenc < width) {\n    // rotate\n    rot = true;\n    stp = 1;\n    cw = width / lenc;\n    hh = mwidth;\n    hx = (plan.cell.width - mheight) / 2; //console.log(\"Plan (rot):\",JSON.stringify(plan),lenc,plan.cell.width*lenc);\n  } else {\n    // rotate and use steps\n    rot = true;\n    stp = Math.ceil(lenc * mheight / width);\n    cw = plan.step * width / lenc;\n    hh = mwidth;\n    hx = (plan.cell.width - mheight) / 2; //console.log(\"Plan (rot+step):\",JSON.stringify(plan),lenc,height,width);\n  } // calculate cell height\n\n\n  var height = iheight - plan.hdr.height;\n\n  if (mheight * lenr < height) {\n    // \n    ch = Math.min(mheight * 10, height / lenr);\n  } else {\n    ch = mheight;\n  }\n\n  hw = hwidth;\n  setPlan(plan.cell, {\n    width: cw,\n    height: ch\n  });\n  setPlan(plan.hdr, {\n    width: hw,\n    height: hh\n  });\n  setPlan(plan.col, {\n    width: cw,\n    height: hh,\n    xoffset: hx,\n    step: stp,\n    rotate: rot\n  });\n  setPlan(plan.row, {\n    width: hw,\n    height: ch\n  }); //console.log(\"Plan (finally):\",JSON.stringify(plan),mheight,mwidth,height,width,lenr);\n\n  return plan;\n} // ---------------- DATA\n\n\nfunction FirstDataCell(props) {\n  var classes = props.classes,\n      rowval = props.rowval,\n      onclick = props.onclick,\n      title = props.title,\n      plan = props.plan,\n      rowindex = props.rowindex;\n  var cursor = classes.divTableCell;\n\n  if (onclick !== undefined) {\n    cursor = classes.divTableCellCursor;\n  }\n\n  if (rowindex % 2 === 1) {\n    return React.createElement(\"div\", {\n      className: cursor,\n      onClick: onclick,\n      style: {\n        backgroundColor: '#DDD'\n      },\n      title: title,\n      width: plan.row.width,\n      height: plan.row.height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, rowval);\n  } else {\n    return React.createElement(\"div\", {\n      className: cursor,\n      onClick: onclick,\n      style: {\n        backgroundColor: '#EEE'\n      },\n      title: title,\n      width: plan.row.width,\n      height: plan.row.height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, rowval);\n  }\n}\n\nfunction DataCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      elements = props.elements,\n      mode = props.mode,\n      plan = props.plan,\n      rowindex = props.rowindex,\n      other = _objectWithoutProperties(props, [\"classes\", \"state\", \"elements\", \"mode\", \"plan\", \"rowindex\"]);\n\n  if (elements === undefined) {\n    if (rowindex % 2 === 1) {\n      return React.createElement(\"div\", {\n        className: classes.divTableCell,\n        style: {\n          backgroundColor: '#EEE'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: classes.divTableCell,\n        style: {\n          backgroundColor: '#FFF'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      });\n    }\n  } else if (mode === state.Show.code.cell.Sum) {\n    return React.createElement(SummaryCell, Object.assign({}, other, {\n      state: state,\n      elements: elements,\n      plan: plan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })); //return null;\n  } else {\n    return React.createElement(SeriesCell, Object.assign({}, other, {\n      state: state,\n      elements: elements,\n      plan: plan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    })); //return null;\n  }\n}\n\nfunction renderDataCell(classes, state, colkey, colvalues, rowkey, rowval, rowindex, rowwhere, range, mode, plan, val, index) {\n  var title = state.Database.getWhereDetail(colkey, colvalues[index]); //console.log(\"Making data cell:\",rowval,val,index,plan,JSON.stringify(colvalues));\n\n  if ((index - 1) % plan.step === 0) {\n    // get elements and range\n    //console.log(\"Processing:\",val,colvalues[index],plan.step);\n    var elements = state.Matrix.getMatrixElements(colvalues, rowval, state.React.matrix, index, plan.step); // get count and colwhere\n\n    var cnt = Math.min(colvalues.length, index + plan.step) - index;\n    var colwhere = state.Database.getColWhere(colkey, colvalues, index, plan.step); // make onclick and title\n\n    var onclick = function onclick() {\n      return state.Navigate.selectItem(state, colkey, rowkey, colvalues[index], rowval, colwhere, rowwhere, cnt, 1);\n    };\n\n    return React.createElement(DataCell, {\n      classes: classes,\n      state: state,\n      key: \"col-\".concat(index),\n      rowindex: rowindex,\n      index: index,\n      onclick: onclick,\n      title: title,\n      colkey: colkey,\n      rowkey: rowkey,\n      colvalues: colvalues,\n      colval: val,\n      rowval: rowval,\n      colwhere: colwhere,\n      rowwhere: rowwhere,\n      elements: elements,\n      mode: mode,\n      plan: plan.cell,\n      range: range,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    });\n  } else {\n    return null;\n  }\n}\n\nfunction dataRow(classes, state, colkey, rowkey, colvalues, mode, plan, rowval, rowindex) {\n  var rowwhere = state.Database.getWhereDetail(rowkey, rowval);\n\n  var onclick = function onclick() {\n    return state.Navigate.selectKey(state, rowkey, rowval, rowwhere, 1);\n  };\n\n  var range = [undefined, undefined];\n\n  if (state.React.matrix !== undefined) {\n    range = state.Matrix.getRange(state, state.React.matrix, colvalues, [rowval]);\n  }\n\n  ; //console.log(\"Making data cols.\",rowval,colkey,JSON.stringify(colvalues));\n  //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderDataCell(classes, state, colkey, colvalues, rowkey, rowval, rowindex, rowwhere, range, mode, plan, val, index);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.divTableRow,\n    key: rowindex.toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(FirstDataCell, {\n    classes: classes,\n    key: '0',\n    rowval: rowval,\n    onclick: onclick,\n    title: rowwhere,\n    plan: plan,\n    rowindex: rowindex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }), colvalues.map(mapFunction));\n}\n\n;\n\nfunction renderZeroRow(classes, state, colkey, colvalues, plan) {\n  return React.createElement(\"div\", {\n    className: classes.divTableRow,\n    key: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.divTableCell,\n    width: plan.cell.width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"No data available\"));\n}\n\n;\n\nfunction DataRows(props) {\n  var classes = props.classes,\n      state = props.state,\n      plan = props.plan,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey,\n      rowvalues = props.rowvalues,\n      mode = props.mode; //console.log(\"Making data cols.\",colkey,JSON.stringify(colvalues));\n\n  var mapFunction = function mapFunction(val, index) {\n    return dataRow(classes, state, colkey, rowkey, colvalues, mode, plan, val, index);\n  };\n\n  if (rowvalues.length === 0) {\n    return renderZeroRow(classes, state, colkey, colvalues, plan);\n  } else {\n    return rowvalues.map(mapFunction);\n  }\n} // ---------------- HDR\n\n\nfunction FirstHdrCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      label = props.label,\n      plan = props.plan; // plan\n  //var width=plan.hdr.width;\n  //var height=plan.hdr.height;\n  //teal_palette\n\n  console.log(\"Making first header cell.\", label, plan.hdr.width, plan.hdr.height);\n  return React.createElement(\"div\", {\n    style: {\n      height: '100%',\n      backgroundColor: teal_palette.main\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(CanvasText, {\n    state: state,\n    label: label,\n    plan: plan.hdr,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }));\n} //\n\n\nfunction renderHdrCell(classes, state, colkey, colvalues, rowkey, plan, val, index) {\n  if ((index - 1) % plan.step === 0) {\n    //console.log(\"HdrCell:\",index,plan.step);\n    var cnt = Math.min(colvalues.length, index + plan.step) - index;\n    var colwhere = state.Database.getColWhere(colkey, colvalues, index, plan.step);\n\n    var onclick = function onclick() {\n      return state.Navigate.selectKey(state, colkey, colvalues[index], colwhere, cnt);\n    };\n\n    var title = colwhere;\n    var cursor = classes.divTableCell;\n\n    if (onclick !== undefined) {\n      cursor = classes.divTableCellCursor;\n    }\n\n    console.log(\"Plan:\", JSON.stringify(plan));\n    return React.createElement(\"div\", {\n      className: cursor,\n      onClick: onclick,\n      style: {\n        backgroundColor: '#DDD'\n      },\n      title: title,\n      key: \"col-\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(CanvasText, {\n      state: state,\n      index: index,\n      plan: plan.col,\n      label: val,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }));\n  } else {\n    return null;\n  }\n}\n\nfunction HdrRow(props) {\n  var classes = props.classes,\n      state = props.state,\n      plan = props.plan,\n      colkey = props.colkey,\n      colvalues = props.colvalues,\n      rowkey = props.rowkey,\n      label = props.label; //, rowvalues\n  //console.log(\"Making header row.\",colkey,JSON.stringify(colvalues));\n\n  var mapFunction = function mapFunction(val, index) {\n    return renderHdrCell(classes, state, colkey, colvalues, rowkey, plan, val, index);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.divTableRow,\n    key: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, React.createElement(FirstHdrCell, {\n    classes: classes,\n    state: state,\n    label: label,\n    plan: plan,\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }), colvalues.map(mapFunction));\n} // ---------------- Details\n\n\nfunction Details(props) {\n  var classes = props.classes,\n      state = props.state; // classes, element\n\n  var colkey = state.Path.getColKey(state) || \"\";\n  var rowkey = state.Path.getRowKey(state) || \"\";\n  var colvalues = state.Path.filterKeys(state, state.Matrix.values[colkey] || [\"\"]);\n  var rowvalues = state.Path.filterKeys(state, state.Matrix.values[rowkey] || [\"\"]);\n  var cellMode = state.Show.getCellMode(state); //var ncol=colvalues.length + 1;\n  //var nrow=rowvalues.length + 1;\n  //DOM.style.font\n\n  var border = 2;\n  var label = rowkey + \"\\\\\" + colkey;\n  var width = 0.8 * window.innerWidth;\n  var height = 0.8 * (window.innerHeight - 200);\n  var plan = makePlan(label, colvalues, rowvalues, width, height, border); //console.log(\"Details => Width/Height:\",window.innerWidth,window.innerHeight,plan.cell.width,plan.hdr.height)\n  //console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(colvalues));\n  //console.log(\"Rowkey:\",rowkey,\" rowval:\",JSON.stringify(rowvalues));\n\n  return React.createElement(\"div\", {\n    className: classes.divTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.divTableBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, React.createElement(HdrRow, {\n    classes: classes,\n    state: state,\n    plan: plan,\n    colkey: colkey,\n    colvalues: colvalues,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    label: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }), React.createElement(DataRows, {\n    classes: classes,\n    state: state,\n    plan: plan,\n    colkey: colkey,\n    colvalues: colvalues,\n    rowkey: rowkey,\n    rowvalues: rowvalues,\n    mode: cellMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  })));\n}\n\nvar Table2D =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Table2D, _Component);\n\n  function Table2D() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Table2D);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Table2D)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.updateWindowDimensions = function () {\n      _this.width = window.innerWidth;\n      _this.height = window.innerHeight;\n      _this.bbx = _this.el.getBoundingClientRect(); //console.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n\n    return _this;\n  }\n\n  _createClass(Table2D, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n  }, {\n    key: \"element\",\n    value: function element(el) {\n      if (el !== undefined && el !== null) {\n        this.el = el;\n        this.bbx = this.el.getBoundingClientRect(); //console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n      }\n\n      ;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state; //console.log(\"##### Rendering Table2D.\");\n\n      return React.createElement(\"div\", {\n        ref: function ref(el) {\n          _this2.element(el);\n        },\n        className: classes.root,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(Details, {\n        state: state,\n        classes: classes,\n        element: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Table2D;\n}(Component);\n\nTable2D.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Table2D);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/Table2DComponent.js"],"names":["React","Component","PropTypes","withStyles","teal_palette","Paper","Grid","SummaryCell","SeriesCell","CanvasText","styles","theme","root","height","paper","overflow","tableLayout","padding","margin","divTable","display","width","divTableRow","divTableCell","border","divTableCellCursor","cursor","divTableHead","divTableHeading","divTableHeadingCenter","justifyContent","divTableFoot","backgroundColor","fontWeight","divTableBody","getTextWidth","txt","fontname","fontsize","c","undefined","document","createElement","ctx","getContext","font","measureText","getTextHeight","maxWidth","values","swidth","mwidth","lenv","length","ii","cwidth","max","sum","makePlan","label","colvalues","rowvalues","iwidth","iheight","plan","cell","rotate","step","xoffset","yoffset","hdr","row","col","wh","ww","zwidth","mheight","hwidth","Math","lenc","lenr","hh","hw","ch","cw","hx","rot","stp","ceil","min","setPlan","FirstDataCell","props","classes","rowval","onclick","title","rowindex","DataCell","state","elements","mode","other","Show","code","Sum","renderDataCell","colkey","rowkey","rowwhere","range","val","index","Database","getWhereDetail","Matrix","getMatrixElements","matrix","cnt","colwhere","getColWhere","Navigate","selectItem","dataRow","selectKey","getRange","mapFunction","toString","map","renderZeroRow","DataRows","FirstHdrCell","console","log","main","renderHdrCell","JSON","stringify","HdrRow","Details","Path","getColKey","getRowKey","filterKeys","cellMode","getCellMode","window","innerWidth","innerHeight","Table2D","updateWindowDimensions","bbx","el","getBoundingClientRect","addEventListener","element","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAAQC,YAAR,QAA2B,qBAA3B;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAwB,cAAxB;AACA,OAAOC,UAAP,MAAwB,uBAAxB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,IAAI,EAAE;AACTC,MAAAA,MAAM,EAAE;AADC,KADe;AAIrBC,IAAAA,KAAK,EAAE;AACVC,MAAAA,QAAQ,EAAE,QADA;AAEVC,MAAAA,WAAW,EAAE,OAFH;AAGVC,MAAAA,OAAO,EAAC,CAHE;AAIVC,MAAAA,MAAM,EAAC;AAJG,KAJc;AAUrBC,IAAAA,QAAQ,EAAE;AACbC,MAAAA,OAAO,EAAE,OADI;AAEbC,MAAAA,KAAK,EAAE;AAFM,KAVW;AAcrBC,IAAAA,WAAW,EAAG;AACjBF,MAAAA,OAAO,EAAE;AADQ,KAdO;AAiBrBG,IAAAA,YAAY,EAAC;AAChBC,MAAAA,MAAM,EAAE,mBADQ;AAEhBJ,MAAAA,OAAO,EAAE,YAFO;AAGhBH,MAAAA,OAAO,EAAE;AAHO,KAjBQ;AAsBrBQ,IAAAA,kBAAkB,EAAC;AACtBC,MAAAA,MAAM,EAAE,SADc;AAEtBF,MAAAA,MAAM,EAAE,mBAFc;AAGtBJ,MAAAA,OAAO,EAAE,YAHa;AAItBH,MAAAA,OAAO,EAAE;AAJa,KAtBE;AA4BrBU,IAAAA,YAAY,EAAG;AAClBH,MAAAA,MAAM,EAAE,mBADU;AAElBJ,MAAAA,OAAO,EAAE,YAFS;AAGlBH,MAAAA,OAAO,EAAE;AAHS,KA5BM;AAiCrBW,IAAAA,eAAe,EAAG;AACrBR,MAAAA,OAAO,EAAE;AADY,KAjCG;AAoCrBS,IAAAA,qBAAqB,EAAG;AAC3BT,MAAAA,OAAO,EAAE,MADkB;AAE3BU,MAAAA,cAAc,EAAE;AAFW,KApCH;AAwCrBC,IAAAA,YAAY,EAAG;AAClBC,MAAAA,eAAe,EAAE,MADC;AAElBZ,MAAAA,OAAO,EAAE,oBAFS;AAGlBa,MAAAA,UAAU,EAAE;AAHM,KAxCM;AA6CrBC,IAAAA,YAAY,EAAG;AAClBd,MAAAA,OAAO,EAAE;AADS;AA7CM,GAAL;AAAA,CAApB,C,CAkDA;;;AAEA,SAASe,YAAT,CAAsBC,GAAtB,EAA2BC,QAA3B,EAAqCC,QAArC,EAA8C;AAC1C,MAAGH,YAAY,CAACI,CAAb,KAAmBC,SAAtB,EAAgC;AAC5BL,IAAAA,YAAY,CAACI,CAAb,GAAeE,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAP,IAAAA,YAAY,CAACQ,GAAb,GAAiBR,YAAY,CAACI,CAAb,CAAeK,UAAf,CAA0B,IAA1B,CAAjB;AACH;;AACD,MAAIP,QAAQ,KAAKG,SAAjB,EAA4B;AAC/BL,IAAAA,YAAY,CAACQ,GAAb,CAAiBE,IAAjB,GAAwBP,QAAQ,GAAG,GAAX,GAAiBD,QAAzC;AACI;;AACD,SAAOF,YAAY,CAACQ,GAAb,CAAiBG,WAAjB,CAA6BV,GAA7B,EAAkCf,KAAzC;AACH;;AAAA;;AACD,SAAS0B,aAAT,CAAuBV,QAAvB,EAAiCC,QAAjC,EAA0C;AACtC,MAAGS,aAAa,CAACR,CAAd,KAAoBC,SAAvB,EAAiC;AAC7BO,IAAAA,aAAa,CAACR,CAAd,GAAgBE,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAhB;AACAK,IAAAA,aAAa,CAACJ,GAAd,GAAkBI,aAAa,CAACR,CAAd,CAAgBK,UAAhB,CAA2B,IAA3B,CAAlB;AACH;;AACD,MAAIP,QAAQ,KAAKG,SAAjB,EAA4B;AAC/BO,IAAAA,aAAa,CAACJ,GAAd,CAAkBE,IAAlB,GAAyBP,QAAQ,GAAG,GAAX,GAAiBD,QAA1C;AACI;;AACD,SAAOU,aAAa,CAACJ,GAAd,CAAkBG,WAAlB,CAA8B,GAA9B,EAAmCzB,KAA1C;AACH;;AACD,SAAS2B,QAAT,CAAkBC,MAAlB,EAAyBzB,MAAzB,EAAiC;AAC7B,MAAI0B,MAAM,GAAC,CAAX;AACA,MAAIC,MAAM,GAAC,CAAX;AACA,MAAIC,IAAI,GAACH,MAAM,CAACI,MAAhB;;AACA,OAAK,IAAIC,EAAE,GAAC,CAAZ,EAAcA,EAAE,GAACF,IAAjB,EAAsBE,EAAE,EAAxB,EAA4B;AAC/B,QAAIC,MAAM,GAAGpB,YAAY,CAACc,MAAM,CAACK,EAAD,CAAP,CAAZ,GAAyB,IAAE9B,MAAxC;;AACA,QAAI+B,MAAM,GAAGJ,MAAb,EAAqB;AACjBA,MAAAA,MAAM,GAACI,MAAP;AACH;;AACDL,IAAAA,MAAM,GAACA,MAAM,GAACK,MAAd;AACI;;AACD,SAAO;AAACC,IAAAA,GAAG,EAACL,MAAL;AAAYM,IAAAA,GAAG,EAACP;AAAhB,GAAP;AACH;;AACD,SAASQ,QAAT,CAAkBC,KAAlB,EAAwBC,SAAxB,EAAkCC,SAAlC,EAA4CC,MAA5C,EAAmDC,OAAnD,EAA2DvC,MAA3D,EAAmE;AAC/D,MAAIwC,IAAI,GAAC;AAACC,IAAAA,IAAI,EAAC;AAACC,MAAAA,MAAM,EAAC,KAAR;AAAcC,MAAAA,IAAI,EAAC,CAAnB;AAAqB3C,MAAAA,MAAM,EAACA,MAA5B;AAAmCH,MAAAA,KAAK,EAAC,GAAzC;AAA6CR,MAAAA,MAAM,EAAC,GAApD;AAAwDuD,MAAAA,OAAO,EAAC,CAAhE;AAAkEC,MAAAA,OAAO,EAAC;AAA1E,KAAN;AACNC,IAAAA,GAAG,EAAC;AAACJ,MAAAA,MAAM,EAAC,KAAR;AAAcC,MAAAA,IAAI,EAAC,CAAnB;AAAqB3C,MAAAA,MAAM,EAACA,MAA5B;AAAmCH,MAAAA,KAAK,EAAC,GAAzC;AAA6CR,MAAAA,MAAM,EAAC,GAApD;AAAwDuD,MAAAA,OAAO,EAAC,CAAhE;AAAkEC,MAAAA,OAAO,EAAC;AAA1E,KADE;AAENE,IAAAA,GAAG,EAAC;AAACL,MAAAA,MAAM,EAAC,KAAR;AAAcC,MAAAA,IAAI,EAAC,CAAnB;AAAqB3C,MAAAA,MAAM,EAACA,MAA5B;AAAmCH,MAAAA,KAAK,EAAC,GAAzC;AAA6CR,MAAAA,MAAM,EAAC,GAApD;AAAwDuD,MAAAA,OAAO,EAAC,CAAhE;AAAkEC,MAAAA,OAAO,EAAC;AAA1E,KAFE;AAGNG,IAAAA,GAAG,EAAC;AAACN,MAAAA,MAAM,EAAC,KAAR;AAAcC,MAAAA,IAAI,EAAC,CAAnB;AAAqB3C,MAAAA,MAAM,EAACA,MAA5B;AAAmCH,MAAAA,KAAK,EAAC,GAAzC;AAA6CR,MAAAA,MAAM,EAAC,GAApD;AAAwDuD,MAAAA,OAAO,EAAC,CAAhE;AAAkEC,MAAAA,OAAO,EAAC;AAA1E;AAHE,GAAT;;AAIA,MAAIP,MAAM,IAAI,CAAd,EAAiB;AAAE,WAAOE,IAAP;AAAa;;AAAA,GAL+B,CAM/D;;AACA,MAAIS,EAAE,GAACzB,QAAQ,CAACa,SAAD,EAAWrC,MAAX,CAAf;AACA,MAAIkD,EAAE,GAAC1B,QAAQ,CAACY,SAAD,EAAWpC,MAAX,CAAf;AACA,MAAImD,MAAM,GAAExC,YAAY,CAACwB,KAAD,CAAZ,GAAsB,IAAInC,MAAtC,CAT+D,CASf;AAChD;AACA;;AACA,MAAIoD,OAAO,GAAC7B,aAAa,KAAK,IAAIvB,MAAlC,CAZ+D,CAYf;;AAChD,MAAIqD,MAAM,GAACC,IAAI,CAACtB,GAAL,CAASiB,EAAE,CAACjB,GAAZ,EAAgBmB,MAAhB,IAA0BC,OAArC;AACA,MAAIvD,KAAK,GAACyC,MAAM,GAACe,MAAjB,CAd+D,CAe/D;;AACA,MAAI1B,MAAM,GAACuB,EAAE,CAAClB,GAAd,CAhB+D,CAiB/D;;AACA,MAAIuB,IAAI,GAACnB,SAAS,CAACP,MAAnB;AACA,MAAI2B,IAAI,GAACnB,SAAS,CAACR,MAAnB;AACA,MAAI4B,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB,EAAoBC,EAApB,EAAwBC,GAAxB;;AACA,MAAInC,MAAM,GAAC4B,IAAP,GAAc1D,KAAlB,EAAyB;AAAE;AAC9BiE,IAAAA,GAAG,GAAC,KAAJ;AACAC,IAAAA,GAAG,GAAC,CAAJ;AACAH,IAAAA,EAAE,GAAC/D,KAAK,GAAC0D,IAAT;AACAE,IAAAA,EAAE,GAACL,OAAH;AACAS,IAAAA,EAAE,GAAC,CAACrB,IAAI,CAACC,IAAL,CAAU5C,KAAV,GAAgB8B,MAAjB,IAAyB,CAA5B,CAL4B,CAM5B;AACI,GAPD,MAOO,IAAIyB,OAAO,GAACG,IAAR,GAAe1D,KAAnB,EAA0B;AAAE;AACtCiE,IAAAA,GAAG,GAAC,IAAJ;AACAC,IAAAA,GAAG,GAAC,CAAJ;AACAH,IAAAA,EAAE,GAAC/D,KAAK,GAAC0D,IAAT;AACAE,IAAAA,EAAE,GAAC9B,MAAH;AACAkC,IAAAA,EAAE,GAAC,CAACrB,IAAI,CAACC,IAAL,CAAU5C,KAAV,GAAgBuD,OAAjB,IAA0B,CAA7B,CALoC,CAMpC;AACI,GAPM,MAOA;AAAE;AACZU,IAAAA,GAAG,GAAC,IAAJ;AACAC,IAAAA,GAAG,GAACT,IAAI,CAACU,IAAL,CAAUT,IAAI,GAACH,OAAL,GAAavD,KAAvB,CAAJ;AACA+D,IAAAA,EAAE,GAACpB,IAAI,CAACG,IAAL,GAAU9C,KAAV,GAAgB0D,IAAnB;AACAE,IAAAA,EAAE,GAAC9B,MAAH;AACAkC,IAAAA,EAAE,GAAC,CAACrB,IAAI,CAACC,IAAL,CAAU5C,KAAV,GAAgBuD,OAAjB,IAA0B,CAA7B,CALU,CAMV;AACI,GA1C8D,CA2C/D;;;AACA,MAAI/D,MAAM,GAACkD,OAAO,GAACC,IAAI,CAACM,GAAL,CAASzD,MAA5B;;AACA,MAAI+D,OAAO,GAACI,IAAR,GAAenE,MAAnB,EAA2B;AAAE;AAChCsE,IAAAA,EAAE,GAACL,IAAI,CAACW,GAAL,CAASb,OAAO,GAAC,EAAjB,EAAoB/D,MAAM,GAACmE,IAA3B,CAAH;AACI,GAFD,MAEO;AACVG,IAAAA,EAAE,GAACP,OAAH;AACI;;AACDM,EAAAA,EAAE,GAACL,MAAH;AACAa,EAAAA,OAAO,CAAC1B,IAAI,CAACC,IAAN,EAAW;AAAC5C,IAAAA,KAAK,EAAC+D,EAAP;AAAUvE,IAAAA,MAAM,EAACsE;AAAjB,GAAX,CAAP;AACAO,EAAAA,OAAO,CAAC1B,IAAI,CAACM,GAAN,EAAW;AAACjD,IAAAA,KAAK,EAAC6D,EAAP;AAAUrE,IAAAA,MAAM,EAACoE;AAAjB,GAAX,CAAP;AACAS,EAAAA,OAAO,CAAC1B,IAAI,CAACQ,GAAN,EAAW;AAACnD,IAAAA,KAAK,EAAC+D,EAAP;AAAUvE,IAAAA,MAAM,EAACoE,EAAjB;AAAoBb,IAAAA,OAAO,EAACiB,EAA5B;AAA+BlB,IAAAA,IAAI,EAACoB,GAApC;AAAwCrB,IAAAA,MAAM,EAACoB;AAA/C,GAAX,CAAP;AACAI,EAAAA,OAAO,CAAC1B,IAAI,CAACO,GAAN,EAAW;AAAClD,IAAAA,KAAK,EAAC6D,EAAP;AAAUrE,IAAAA,MAAM,EAACsE;AAAjB,GAAX,CAAP,CAtD+D,CAuD/D;;AACA,SAAOnB,IAAP;AACH,C,CACD;;;AACA,SAAS2B,aAAT,CAAwBC,KAAxB,EAA+B;AAAA,MACnBC,OADmB,GACiCD,KADjC,CACnBC,OADmB;AAAA,MACVC,MADU,GACiCF,KADjC,CACVE,MADU;AAAA,MACFC,OADE,GACiCH,KADjC,CACFG,OADE;AAAA,MACOC,KADP,GACiCJ,KADjC,CACOI,KADP;AAAA,MACchC,IADd,GACiC4B,KADjC,CACc5B,IADd;AAAA,MACoBiC,QADpB,GACiCL,KADjC,CACoBK,QADpB;AAE3B,MAAIvE,MAAM,GAACmE,OAAO,CAACtE,YAAnB;;AACA,MAAIwE,OAAO,KAAKvD,SAAhB,EAA2B;AAC9Bd,IAAAA,MAAM,GAACmE,OAAO,CAACpE,kBAAf;AACI;;AACD,MAAIwE,QAAQ,GAAC,CAAT,KAAe,CAAnB,EAAsB;AACzB,WAAQ;AAAK,MAAA,SAAS,EAAEvE,MAAhB;AAAwB,MAAA,OAAO,EAAEqE,OAAjC;AAA0C,MAAA,KAAK,EAAE;AAAC/D,QAAAA,eAAe,EAAC;AAAjB,OAAjD;AACP,MAAA,KAAK,EAAEgE,KADA;AACO,MAAA,KAAK,EAAEhC,IAAI,CAACO,GAAL,CAASlD,KADvB;AAC8B,MAAA,MAAM,EAAE2C,IAAI,CAACO,GAAL,CAAS1D,MAD/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACwDiF,MADxD,CAAR;AAEI,GAHD,MAGO;AACV,WAAQ;AAAK,MAAA,SAAS,EAAEpE,MAAhB;AAAwB,MAAA,OAAO,EAAEqE,OAAjC;AAA0C,MAAA,KAAK,EAAE;AAAC/D,QAAAA,eAAe,EAAC;AAAjB,OAAjD;AACP,MAAA,KAAK,EAAEgE,KADA;AACO,MAAA,KAAK,EAAEhC,IAAI,CAACO,GAAL,CAASlD,KADvB;AAC8B,MAAA,MAAM,EAAE2C,IAAI,CAACO,GAAL,CAAS1D,MAD/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACwDiF,MADxD,CAAR;AAEI;AACJ;;AACD,SAASI,QAAT,CAAkBN,KAAlB,EAAyB;AAAA,MACdC,OADc,GACsCD,KADtC,CACdC,OADc;AAAA,MACNM,KADM,GACsCP,KADtC,CACNO,KADM;AAAA,MACAC,QADA,GACsCR,KADtC,CACAQ,QADA;AAAA,MACSC,IADT,GACsCT,KADtC,CACSS,IADT;AAAA,MACcrC,IADd,GACsC4B,KADtC,CACc5B,IADd;AAAA,MACmBiC,QADnB,GACsCL,KADtC,CACmBK,QADnB;AAAA,MAC+BK,KAD/B,4BACsCV,KADtC;;AAErB,MAAIQ,QAAQ,KAAG5D,SAAf,EAA0B;AAC7B,QAAIyD,QAAQ,GAAC,CAAT,KAAa,CAAjB,EAAoB;AAChB,aAAO;AAAK,QAAA,SAAS,EAAEJ,OAAO,CAACtE,YAAxB;AAAsC,QAAA,KAAK,EAAE;AAACS,UAAAA,eAAe,EAAC;AAAjB,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,MAEO;AACH,aAAO;AAAK,QAAA,SAAS,EAAE6D,OAAO,CAACtE,YAAxB;AAAsC,QAAA,KAAK,EAAE;AAACS,UAAAA,eAAe,EAAC;AAAjB,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACG,GAND,MAMO,IAAIqE,IAAI,KAAGF,KAAK,CAACI,IAAN,CAAWC,IAAX,CAAgBvC,IAAhB,CAAqBwC,GAAhC,EAAqC;AAC/C,WAAO,oBAAC,WAAD,oBAAiBH,KAAjB;AAAwB,MAAA,KAAK,EAAEH,KAA/B;AAAsC,MAAA,QAAQ,EAAEC,QAAhD;AAA0D,MAAA,IAAI,EAAEpC,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP,CAD+C,CAE/C;AACI,GAHM,MAGA;AACV,WAAO,oBAAC,UAAD,oBAAgBsC,KAAhB;AAAuB,MAAA,KAAK,EAAEH,KAA9B;AAAqC,MAAA,QAAQ,EAAEC,QAA/C;AAAyD,MAAA,IAAI,EAAEpC,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP,CADU,CAEV;AACI;AACJ;;AACD,SAAS0C,cAAT,CAAwBb,OAAxB,EAAgCM,KAAhC,EAAsCQ,MAAtC,EAA6C/C,SAA7C,EAAuDgD,MAAvD,EAA8Dd,MAA9D,EAAqEG,QAArE,EAA8EY,QAA9E,EAAuFC,KAAvF,EAA6FT,IAA7F,EAAkGrC,IAAlG,EAAuG+C,GAAvG,EAA2GC,KAA3G,EAAkH;AAC9G,MAAIhB,KAAK,GAACG,KAAK,CAACc,QAAN,CAAeC,cAAf,CAA8BP,MAA9B,EAAqC/C,SAAS,CAACoD,KAAD,CAA9C,CAAV,CAD8G,CAE9G;;AACA,MAAI,CAACA,KAAK,GAAC,CAAP,IAAUhD,IAAI,CAACG,IAAf,KAAwB,CAA5B,EAA+B;AAClC;AACA;AACA,QAAIiC,QAAQ,GAACD,KAAK,CAACgB,MAAN,CAAaC,iBAAb,CAA+BxD,SAA/B,EAAyCkC,MAAzC,EAAgDK,KAAK,CAACnG,KAAN,CAAYqH,MAA5D,EAAmEL,KAAnE,EAAyEhD,IAAI,CAACG,IAA9E,CAAb,CAHkC,CAIlC;;AACO,QAAImD,GAAG,GAAGxC,IAAI,CAACW,GAAL,CAAS7B,SAAS,CAACP,MAAnB,EAA0B2D,KAAK,GAAChD,IAAI,CAACG,IAArC,IAA2C6C,KAArD;AACA,QAAIO,QAAQ,GAAGpB,KAAK,CAACc,QAAN,CAAeO,WAAf,CAA2Bb,MAA3B,EAAkC/C,SAAlC,EAA4CoD,KAA5C,EAAkDhD,IAAI,CAACG,IAAvD,CAAf,CAN2B,CAOlC;;AACA,QAAI4B,OAAO,GAAC,SAARA,OAAQ;AAAA,aAAMI,KAAK,CAACsB,QAAN,CAAeC,UAAf,CAA0BvB,KAA1B,EAAgCQ,MAAhC,EAAuCC,MAAvC,EAA8ChD,SAAS,CAACoD,KAAD,CAAvD,EAA+DlB,MAA/D,EAAsEyB,QAAtE,EAA+EV,QAA/E,EAAwFS,GAAxF,EAA4F,CAA5F,CAAN;AAAA,KAAZ;;AACA,WAAQ,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAEzB,OAAnB;AAA4B,MAAA,KAAK,EAAEM,KAAnC;AAA0C,MAAA,GAAG,gBAASa,KAAT,CAA7C;AAA+D,MAAA,QAAQ,EAAEf,QAAzE;AAAmF,MAAA,KAAK,EAAEe,KAA1F;AAAiG,MAAA,OAAO,EAAEjB,OAA1G;AAAmH,MAAA,KAAK,EAAEC,KAA1H;AACP,MAAA,MAAM,EAAEW,MADD;AACS,MAAA,MAAM,EAAEC,MADjB;AACyB,MAAA,SAAS,EAAEhD,SADpC;AAC+C,MAAA,MAAM,EAAEmD,GADvD;AAC4D,MAAA,MAAM,EAAEjB,MADpE;AAC4E,MAAA,QAAQ,EAAEyB,QADtF;AACgG,MAAA,QAAQ,EAAEV,QAD1G;AAEP,MAAA,QAAQ,EAAET,QAFH;AAEa,MAAA,IAAI,EAAEC,IAFnB;AAEyB,MAAA,IAAI,EAAErC,IAAI,CAACC,IAFpC;AAE0C,MAAA,KAAK,EAAE6C,KAFjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AAGI,GAZD,MAYO;AACV,WAAO,IAAP;AACI;AACJ;;AACD,SAASa,OAAT,CAAiB9B,OAAjB,EAAyBM,KAAzB,EAA+BQ,MAA/B,EAAsCC,MAAtC,EAA6ChD,SAA7C,EAAuDyC,IAAvD,EAA4DrC,IAA5D,EAAiE8B,MAAjE,EAAwEG,QAAxE,EAAkF;AAC9E,MAAIY,QAAQ,GAACV,KAAK,CAACc,QAAN,CAAeC,cAAf,CAA8BN,MAA9B,EAAqCd,MAArC,CAAb;;AACA,MAAIC,OAAO,GAAC,SAARA,OAAQ;AAAA,WAAMI,KAAK,CAACsB,QAAN,CAAeG,SAAf,CAAyBzB,KAAzB,EAA+BS,MAA/B,EAAsCd,MAAtC,EAA6Ce,QAA7C,EAAsD,CAAtD,CAAN;AAAA,GAAZ;;AACA,MAAIC,KAAK,GAAC,CAACtE,SAAD,EAAWA,SAAX,CAAV;;AACA,MAAI2D,KAAK,CAACnG,KAAN,CAAYqH,MAAZ,KAAqB7E,SAAzB,EAAoC;AACvCsE,IAAAA,KAAK,GAACX,KAAK,CAACgB,MAAN,CAAaU,QAAb,CAAsB1B,KAAtB,EAA4BA,KAAK,CAACnG,KAAN,CAAYqH,MAAxC,EAA+CzD,SAA/C,EAAyD,CAACkC,MAAD,CAAzD,CAAN;AACI;;AAAA,GAN6E,CAO9E;AACA;;AACA,MAAIgC,WAAW,GAAE,SAAbA,WAAa,CAACf,GAAD,EAAKC,KAAL;AAAA,WAAaN,cAAc,CAACb,OAAD,EAASM,KAAT,EAAeQ,MAAf,EAAsB/C,SAAtB,EAAgCgD,MAAhC,EAAuCd,MAAvC,EAA8CG,QAA9C,EAAuDY,QAAvD,EAAgEC,KAAhE,EAAsET,IAAtE,EAA2ErC,IAA3E,EAAgF+C,GAAhF,EAAoFC,KAApF,CAA3B;AAAA,GAAjB;;AACA,SAAQ;AAAK,IAAA,SAAS,EAAEnB,OAAO,CAACvE,WAAxB;AAAqC,IAAA,GAAG,EAAE2E,QAAQ,CAAC8B,QAAT,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACP,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAElC,OAAxB;AAAiC,IAAA,GAAG,EAAE,GAAtC;AAA2C,IAAA,MAAM,EAAEC,MAAnD;AAA2D,IAAA,OAAO,EAAEC,OAApE;AAA6E,IAAA,KAAK,EAAEc,QAApF;AAA8F,IAAA,IAAI,EAAE7C,IAApG;AAA0G,IAAA,QAAQ,EAAEiC,QAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,EAEHrC,SAAS,CAACoE,GAAV,CAAcF,WAAd,CAFG,CAAR;AAIH;;AAAA;;AAED,SAASG,aAAT,CAAuBpC,OAAvB,EAA+BM,KAA/B,EAAqCQ,MAArC,EAA4C/C,SAA5C,EAAsDI,IAAtD,EAA4D;AACxD,SAAQ;AAAK,IAAA,SAAS,EAAE6B,OAAO,CAACvE,WAAxB;AAAqC,IAAA,GAAG,EAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ;AAAK,IAAA,SAAS,EAAEuE,OAAO,CAACtE,YAAxB;AAAsC,IAAA,KAAK,EAAEyC,IAAI,CAACC,IAAL,CAAU5C,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADI,CAAR;AAGH;;AAAA;;AACD,SAAS6G,QAAT,CAAkBtC,KAAlB,EAAyB;AAAA,MACbC,OADa,GACwDD,KADxD,CACbC,OADa;AAAA,MACJM,KADI,GACwDP,KADxD,CACJO,KADI;AAAA,MACGnC,IADH,GACwD4B,KADxD,CACG5B,IADH;AAAA,MACS2C,MADT,GACwDf,KADxD,CACSe,MADT;AAAA,MACiB/C,SADjB,GACwDgC,KADxD,CACiBhC,SADjB;AAAA,MAC4BgD,MAD5B,GACwDhB,KADxD,CAC4BgB,MAD5B;AAAA,MACoC/C,SADpC,GACwD+B,KADxD,CACoC/B,SADpC;AAAA,MAC+CwC,IAD/C,GACwDT,KADxD,CAC+CS,IAD/C,EAErB;;AACA,MAAIyB,WAAW,GAAE,SAAbA,WAAa,CAACf,GAAD,EAAKC,KAAL;AAAA,WAAaW,OAAO,CAAC9B,OAAD,EAASM,KAAT,EAAeQ,MAAf,EAAsBC,MAAtB,EAA6BhD,SAA7B,EAAuCyC,IAAvC,EAA4CrC,IAA5C,EAAiD+C,GAAjD,EAAqDC,KAArD,CAApB;AAAA,GAAjB;;AACA,MAAInD,SAAS,CAACR,MAAV,KAAmB,CAAvB,EAA0B;AAC7B,WAAO4E,aAAa,CAACpC,OAAD,EAASM,KAAT,EAAeQ,MAAf,EAAsB/C,SAAtB,EAAgCI,IAAhC,CAApB;AACI,GAFD,MAEO;AACV,WAAQH,SAAS,CAACmE,GAAV,CAAcF,WAAd,CAAR;AACI;AACJ,C,CACD;;;AACA,SAASK,YAAT,CAAuBvC,KAAvB,EAA8B;AAAA,MAClBC,OADkB,GACcD,KADd,CAClBC,OADkB;AAAA,MACTM,KADS,GACcP,KADd,CACTO,KADS;AAAA,MACFxC,KADE,GACciC,KADd,CACFjC,KADE;AAAA,MACKK,IADL,GACc4B,KADd,CACK5B,IADL,EACqB;AAC/C;AACA;AACA;;AACAoE,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAwC1E,KAAxC,EAA8CK,IAAI,CAACM,GAAL,CAASjD,KAAvD,EAA6D2C,IAAI,CAACM,GAAL,CAASzD,MAAtE;AACA,SAAQ;AAAK,IAAA,KAAK,EAAE;AAACA,MAAAA,MAAM,EAAC,MAAR;AAAemB,MAAAA,eAAe,EAAC5B,YAAY,CAACkI;AAA5C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEnC,KAAnB;AAA0B,IAAA,KAAK,EAAExC,KAAjC;AAAwC,IAAA,IAAI,EAAEK,IAAI,CAACM,GAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,CAAR;AAGH,C,CACD;;;AAEA,SAASiE,aAAT,CAAuB1C,OAAvB,EAA+BM,KAA/B,EAAqCQ,MAArC,EAA4C/C,SAA5C,EAAsDgD,MAAtD,EAA6D5C,IAA7D,EAAkE+C,GAAlE,EAAsEC,KAAtE,EAA6E;AACzE,MAAI,CAACA,KAAK,GAAC,CAAP,IAAUhD,IAAI,CAACG,IAAf,KAAwB,CAA5B,EAA+B;AAClC;AACO,QAAImD,GAAG,GAAGxC,IAAI,CAACW,GAAL,CAAS7B,SAAS,CAACP,MAAnB,EAA0B2D,KAAK,GAAChD,IAAI,CAACG,IAArC,IAA2C6C,KAArD;AACA,QAAIO,QAAQ,GAAGpB,KAAK,CAACc,QAAN,CAAeO,WAAf,CAA2Bb,MAA3B,EAAkC/C,SAAlC,EAA4CoD,KAA5C,EAAkDhD,IAAI,CAACG,IAAvD,CAAf;;AACP,QAAI4B,OAAO,GAAC,SAARA,OAAQ;AAAA,aAAMI,KAAK,CAACsB,QAAN,CAAeG,SAAf,CAAyBzB,KAAzB,EAA+BQ,MAA/B,EAAsC/C,SAAS,CAACoD,KAAD,CAA/C,EAAuDO,QAAvD,EAAgED,GAAhE,CAAN;AAAA,KAAZ;;AACA,QAAItB,KAAK,GAACuB,QAAV;AACA,QAAI7F,MAAM,GAACmE,OAAO,CAACtE,YAAnB;;AACA,QAAIwE,OAAO,KAAKvD,SAAhB,EAA2B;AACvBd,MAAAA,MAAM,GAACmE,OAAO,CAACpE,kBAAf;AACH;;AACD2G,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBG,IAAI,CAACC,SAAL,CAAezE,IAAf,CAApB;AACA,WAAQ;AAAK,MAAA,SAAS,EAAEtC,MAAhB;AAAwB,MAAA,OAAO,EAAEqE,OAAjC;AAA0C,MAAA,KAAK,EAAE;AAAC/D,QAAAA,eAAe,EAAC;AAAjB,OAAjD;AAA2E,MAAA,KAAK,EAAEgE,KAAlF;AAAyF,MAAA,GAAG,gBAASgB,KAAT,CAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEb,KAAnB;AAA0B,MAAA,KAAK,EAAEa,KAAjC;AAAwC,MAAA,IAAI,EAAEhD,IAAI,CAACQ,GAAnD;AAAwD,MAAA,KAAK,EAAEuC,GAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,CAAR;AAGK,GAdF,MAcQ;AACX,WAAO,IAAP;AACI;AACJ;;AACD,SAAS2B,MAAT,CAAgB9C,KAAhB,EAAuB;AAAA,MACXC,OADW,GACgDD,KADhD,CACXC,OADW;AAAA,MACFM,KADE,GACgDP,KADhD,CACFO,KADE;AAAA,MACKnC,IADL,GACgD4B,KADhD,CACK5B,IADL;AAAA,MACW2C,MADX,GACgDf,KADhD,CACWe,MADX;AAAA,MACmB/C,SADnB,GACgDgC,KADhD,CACmBhC,SADnB;AAAA,MAC8BgD,MAD9B,GACgDhB,KADhD,CAC8BgB,MAD9B;AAAA,MACsCjD,KADtC,GACgDiC,KADhD,CACsCjC,KADtC,EACuD;AAC1E;;AACA,MAAImE,WAAW,GAAE,SAAbA,WAAa,CAACf,GAAD,EAAKC,KAAL;AAAA,WAAauB,aAAa,CAAC1C,OAAD,EAASM,KAAT,EAAeQ,MAAf,EAAsB/C,SAAtB,EAAgCgD,MAAhC,EAAuC5C,IAAvC,EAA4C+C,GAA5C,EAAgDC,KAAhD,CAA1B;AAAA,GAAjB;;AACA,SAAQ;AAAK,IAAA,SAAS,EAAEnB,OAAO,CAACvE,WAAxB;AAAqC,IAAA,GAAG,EAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEuE,OAAvB;AAAgC,IAAA,KAAK,EAAEM,KAAvC;AAA8C,IAAA,KAAK,EAAExC,KAArD;AAA4D,IAAA,IAAI,EAAEK,IAAlE;AAAwE,IAAA,KAAK,EAAE;AAACnD,MAAAA,MAAM,EAAC;AAAR,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,EAEH+C,SAAS,CAACoE,GAAV,CAAcF,WAAd,CAFG,CAAR;AAIH,C,CACD;;;AACA,SAASa,OAAT,CAAiB/C,KAAjB,EAAwB;AAAA,MACZC,OADY,GACOD,KADP,CACZC,OADY;AAAA,MACHM,KADG,GACOP,KADP,CACHO,KADG,EACc;;AAClC,MAAIQ,MAAM,GAAGR,KAAK,CAACyC,IAAN,CAAWC,SAAX,CAAqB1C,KAArB,KAA6B,EAA1C;AACA,MAAIS,MAAM,GAAGT,KAAK,CAACyC,IAAN,CAAWE,SAAX,CAAqB3C,KAArB,KAA6B,EAA1C;AACA,MAAIvC,SAAS,GAAGuC,KAAK,CAACyC,IAAN,CAAWG,UAAX,CAAsB5C,KAAtB,EAA4BA,KAAK,CAACgB,MAAN,CAAalE,MAAb,CAAoB0D,MAApB,KAA6B,CAAC,EAAD,CAAzD,CAAhB;AACA,MAAI9C,SAAS,GAAGsC,KAAK,CAACyC,IAAN,CAAWG,UAAX,CAAsB5C,KAAtB,EAA4BA,KAAK,CAACgB,MAAN,CAAalE,MAAb,CAAoB2D,MAApB,KAA6B,CAAC,EAAD,CAAzD,CAAhB;AACA,MAAIoC,QAAQ,GAAI7C,KAAK,CAACI,IAAN,CAAW0C,WAAX,CAAuB9C,KAAvB,CAAhB,CANoB,CAOpB;AACA;AACA;;AACA,MAAI3E,MAAM,GAAC,CAAX;AACA,MAAImC,KAAK,GAACiD,MAAM,GAAG,IAAT,GAAgBD,MAA1B;AACA,MAAItF,KAAK,GAAC,MAAI6H,MAAM,CAACC,UAArB;AACA,MAAItI,MAAM,GAAC,OAAKqI,MAAM,CAACE,WAAP,GAAmB,GAAxB,CAAX;AACA,MAAIpF,IAAI,GAACN,QAAQ,CAACC,KAAD,EAAOC,SAAP,EAAiBC,SAAjB,EAA2BxC,KAA3B,EAAiCR,MAAjC,EAAwCW,MAAxC,CAAjB,CAdoB,CAepB;AACA;AACA;;AAEA,SAAQ;AAAK,IAAA,SAAS,EAAEqE,OAAO,CAAC1E,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ;AAAK,IAAA,SAAS,EAAE0E,OAAO,CAAC3D,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE2D,OAAjB;AAA0B,IAAA,KAAK,EAAEM,KAAjC;AAAwC,IAAA,IAAI,EAAEnC,IAA9C;AAAoD,IAAA,MAAM,EAAE2C,MAA5D;AAAoE,IAAA,SAAS,EAAE/C,SAA/E;AAA0F,IAAA,MAAM,EAAEgD,MAAlG;AAA0G,IAAA,SAAS,EAAE/C,SAArH;AAAgI,IAAA,KAAK,EAAEF,KAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAEG,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEkC,OAAnB;AAA4B,IAAA,KAAK,EAAEM,KAAnC;AAA0C,IAAA,IAAI,EAAEnC,IAAhD;AAAsD,IAAA,MAAM,EAAE2C,MAA9D;AAAsE,IAAA,SAAS,EAAE/C,SAAjF;AAA4F,IAAA,MAAM,EAAEgD,MAApG;AAA4G,IAAA,SAAS,EAAE/C,SAAvH;AAAkI,IAAA,IAAI,EAAEmF,QAAxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CADI,CAAR;AAMF;;IACIK,O;;;;;;;;;;;;;;;;;;UAIFC,sB,GAAyB,YAAM;AAC3B,YAAKjI,KAAL,GAAY6H,MAAM,CAACC,UAAnB;AACP,YAAKtI,MAAL,GAAYqI,MAAM,CAACE,WAAnB;AACA,YAAKG,GAAL,GAAS,MAAKC,EAAL,CAAQC,qBAAR,EAAT,CAHkC,CAIlC;AACI,K;;;;;;;wCARmB;AAChBP,MAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkC,KAAKJ,sBAAvC;AACH;;;4BAOOE,E,EAAI;AACf,UAAIA,EAAE,KAAKhH,SAAP,IAAoBgH,EAAE,KAAK,IAA/B,EAAqC;AACjC,aAAKA,EAAL,GAAQA,EAAR;AACA,aAAKD,GAAL,GAAS,KAAKC,EAAL,CAAQC,qBAAR,EAAT,CAFiC,CAGjC;AACH;;AAAA;AACG;;;6BACQ;AAAA;;AAAA,wBACe,KAAK7D,KADpB;AAAA,UACJC,OADI,eACJA,OADI;AAAA,UACKM,KADL,eACKA,KADL,EAEZ;;AACA,aAAQ;AAAK,QAAA,GAAG,EAAE,aAAAqD,EAAE,EAAE;AAAC,UAAA,MAAI,CAACG,OAAL,CAAaH,EAAb;AAAiB,SAAhC;AAAkC,QAAA,SAAS,EAAE3D,OAAO,CAACjF,IAArD;AAA4D,QAAA,KAAK,EAAE;AAACS,UAAAA,KAAK,EAAE,MAAR;AAAgBR,UAAAA,MAAM,EAAE;AAAxB,SAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACmB,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEgF,OAAO,CAAC/E,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACX,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEqF,KAAhB;AAAuB,QAAA,OAAO,EAAEN,OAAhC;AAAyC,QAAA,OAAO,EAAE,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADW,CADnB,CADH,CADI,CAAR;AASI;;;;EA7BiB5F,S;;AAgCtBoJ,OAAO,CAACO,SAAR,GAAoB;AAChB/D,EAAAA,OAAO,EAAE3F,SAAS,CAAC2J,MAAV,CAAiBC;AADV,CAApB;AAIA,eAAe3J,UAAU,CAACO,MAAD,CAAV,CAAmB2I,OAAnB,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport {teal_palette} from '../mui/metMuiThemes';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport SummaryCell from './SummaryCell';\nimport SeriesCell  from './SeriesCell';\nimport CanvasText  from './CanvasTextComponent';\n\nconst styles = theme => ({\n    root: {\n\theight: '100%',\n    },\n    paper: {\n\toverflow: 'hidden',\n\ttableLayout: 'fixed',\n\tpadding:0,\n\tmargin:0,\n    },\n    divTable :{\n\tdisplay: 'table',\n\twidth: '100%',\n    },\n    divTableRow:  {\n\tdisplay: 'table-row',\n    },\n    divTableCell:{\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableCellCursor:{\n\tcursor: \"pointer\",\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableHead : {\n\tborder: '0px solid #999999',\n\tdisplay: 'table-cell',\n\tpadding: '0px 0px',\n    },\n    divTableHeading : {\n\tdisplay: 'table-header-group',\n    },\n    divTableHeadingCenter : {\n\tdisplay: 'flex',\n\tjustifyContent: 'center',\n    },\n    divTableFoot : {\n\tbackgroundColor: '#DDD',\n\tdisplay: 'table-footer-group',\n\tfontWeight: 'bold',\n    },\n    divTableBody : {\n\tdisplay: 'table-row-group',\n    }\n});\n\n//const mui = createTheme({palette:teal_palette});\n\nfunction getTextWidth(txt, fontname, fontsize){\n    if(getTextWidth.c === undefined){\n        getTextWidth.c=document.createElement('canvas');\n        getTextWidth.ctx=getTextWidth.c.getContext('2d');\n    }\n    if (fontname !== undefined) {\n\tgetTextWidth.ctx.font = fontsize + ' ' + fontname;\n    }\n    return getTextWidth.ctx.measureText(txt).width;\n};\nfunction getTextHeight(fontname, fontsize){\n    if(getTextHeight.c === undefined){\n        getTextHeight.c=document.createElement('canvas');\n        getTextHeight.ctx=getTextHeight.c.getContext('2d');\n    }\n    if (fontname !== undefined) {\n\tgetTextHeight.ctx.font = fontsize + ' ' + fontname;\n    }\n    return getTextHeight.ctx.measureText('M').width;\n}\nfunction maxWidth(values,border) {\n    var swidth=0;\n    var mwidth=0;\n    var lenv=values.length;\n    for (var ii=0;ii<lenv;ii++) {\n\tvar cwidth = getTextWidth(values[ii])+2*border;\n\tif (cwidth > mwidth) {\n\t    mwidth=cwidth;\n\t}\n\tswidth=swidth+cwidth;\n    }\n    return {max:mwidth,sum:swidth};\n}\nfunction makePlan(label,colvalues,rowvalues,iwidth,iheight,border) {\n    var plan={cell:{rotate:false,step:1,border:border,width:100,height:100,xoffset:0,yoffset:0}, \n\t      hdr:{rotate:false,step:1,border:border,width:100,height:100,xoffset:0,yoffset:0},\n\t      row:{rotate:false,step:1,border:border,width:100,height:100,xoffset:0,yoffset:0},\n\t      col:{rotate:false,step:1,border:border,width:100,height:100,xoffset:0,yoffset:0}};\n    if (iwidth <= 0) { return plan;};\n    // text boundaries\n    var wh=maxWidth(rowvalues,border);\n    var ww=maxWidth(colvalues,border);\n    var zwidth =getTextWidth(label) + 2 * border;   //props.theme.spacing.unit;\n    // var zheight=getTextHeight(label) + 2 * border;  //props.theme.spacing.unit;\n    // table boundaries\n    var mheight=getTextHeight() + 2 * border;       //props.theme.spacing.unit;\n    var hwidth=Math.max(wh.max,zwidth) + mheight;\n    var width=iwidth-hwidth;\n    // calculate cell width...\n    var mwidth=ww.max;\n    //var swidth=ww.sum;\n    var lenc=colvalues.length;\n    var lenr=rowvalues.length;\n    var hh, hw, ch, cw, hx, rot\n    if (mwidth*lenc < width) { // horisontal\n\trot=false;\n\tstp=1\n\tcw=width/lenc;\n\thh=mheight;\n\thx=(plan.cell.width-mwidth)/2;\n\t//console.log(\"Plan (normal):\",JSON.stringify(plan));\n    } else if (mheight*lenc < width) { // rotate\n\trot=true;\n\tstp=1\n\tcw=width/lenc;\n\thh=mwidth;\n\thx=(plan.cell.width-mheight)/2;\n\t//console.log(\"Plan (rot):\",JSON.stringify(plan),lenc,plan.cell.width*lenc);\n    } else { // rotate and use steps\n\trot=true;\n\tstp=Math.ceil(lenc*mheight/width);\n\tcw=plan.step*width/lenc;\n\thh=mwidth;\n\thx=(plan.cell.width-mheight)/2;\n\t//console.log(\"Plan (rot+step):\",JSON.stringify(plan),lenc,height,width);\n    }\n    // calculate cell height\n    var height=iheight-plan.hdr.height;\n    if (mheight*lenr < height) { // \n\tch=Math.min(mheight*10,height/lenr);\n    } else {\n\tch=mheight;\n    }\n    hw=hwidth;    \n    setPlan(plan.cell,{width:cw,height:ch});\n    setPlan(plan.hdr, {width:hw,height:hh});\n    setPlan(plan.col, {width:cw,height:hh,xoffset:hx,step:stp,rotate:rot});\n    setPlan(plan.row, {width:hw,height:ch});\n    //console.log(\"Plan (finally):\",JSON.stringify(plan),mheight,mwidth,height,width,lenr);\n    return plan;\n}\n// ---------------- DATA\nfunction FirstDataCell (props) {\n    const { classes, rowval, onclick, title, plan, rowindex } = props;\n    var cursor=classes.divTableCell;\n    if (onclick !== undefined) {\n\tcursor=classes.divTableCellCursor;\n    }\n    if (rowindex%2 === 1) {\n\treturn (<div className={cursor} onClick={onclick} style={{backgroundColor:'#DDD'}}\n\t\ttitle={title} width={plan.row.width} height={plan.row.height}>{rowval}</div>);\n    } else {\n\treturn (<div className={cursor} onClick={onclick} style={{backgroundColor:'#EEE'}}\n\t\ttitle={title} width={plan.row.width} height={plan.row.height}>{rowval}</div>);\n    }\n}\nfunction DataCell(props) {\n    const {classes,state,elements,mode,plan,rowindex,...other}=props;\n    if (elements===undefined) {\n\tif (rowindex%2===1) {\n\t    return <div className={classes.divTableCell} style={{backgroundColor:'#EEE'}}/>\n\t} else {\n\t    return <div className={classes.divTableCell} style={{backgroundColor:'#FFF'}}/>\n\t}\n    } else if (mode===state.Show.code.cell.Sum) {\n\treturn <SummaryCell {...other} state={state} elements={elements} plan={plan}/>\n\t//return null;\n    } else {\n\treturn <SeriesCell {...other} state={state} elements={elements} plan={plan}/>\n\t//return null;\n    }\n}\nfunction renderDataCell(classes,state,colkey,colvalues,rowkey,rowval,rowindex,rowwhere,range,mode,plan,val,index) {\n    var title=state.Database.getWhereDetail(colkey,colvalues[index]);\n    //console.log(\"Making data cell:\",rowval,val,index,plan,JSON.stringify(colvalues));\n    if ((index-1)%plan.step === 0) {\n\t// get elements and range\n\t//console.log(\"Processing:\",val,colvalues[index],plan.step);\n\tvar elements=state.Matrix.getMatrixElements(colvalues,rowval,state.React.matrix,index,plan.step);\n\t// get count and colwhere\n        var cnt = Math.min(colvalues.length,index+plan.step)-index;\n        var colwhere = state.Database.getColWhere(colkey,colvalues,index,plan.step);\n\t// make onclick and title\n\tvar onclick=() => state.Navigate.selectItem(state,colkey,rowkey,colvalues[index],rowval,colwhere,rowwhere,cnt,1);\n\treturn (<DataCell classes={classes} state={state} key={`col-${index}`} rowindex={rowindex} index={index} onclick={onclick} title={title} \n\t\tcolkey={colkey} rowkey={rowkey} colvalues={colvalues} colval={val} rowval={rowval} colwhere={colwhere} rowwhere={rowwhere} \n\t\telements={elements} mode={mode} plan={plan.cell} range={range}/>);\n    } else {\n\treturn null;\n    }\n}\nfunction dataRow(classes,state,colkey,rowkey,colvalues,mode,plan,rowval,rowindex) {\n    var rowwhere=state.Database.getWhereDetail(rowkey,rowval);\n    var onclick=() => state.Navigate.selectKey(state,rowkey,rowval,rowwhere,1);\n    var range=[undefined,undefined];\n    if (state.React.matrix!==undefined) {\n\trange=state.Matrix.getRange(state,state.React.matrix,colvalues,[rowval]);\n    };\n    //console.log(\"Making data cols.\",rowval,colkey,JSON.stringify(colvalues));\n    //console.log(\"We have a matrix(\",rowval,\") with range:\",JSON.stringify(range));\n    var mapFunction= (val,index)=>renderDataCell(classes,state,colkey,colvalues,rowkey,rowval,rowindex,rowwhere,range,mode,plan,val,index);\n    return (<div className={classes.divTableRow} key={rowindex.toString()}>\n\t    <FirstDataCell classes={classes} key={'0'} rowval={rowval} onclick={onclick} title={rowwhere} plan={plan} rowindex={rowindex}/>\n\t       {colvalues.map(mapFunction)}\n\t    </div>);\n};\n\nfunction renderZeroRow(classes,state,colkey,colvalues,plan) {\n    return (<div className={classes.divTableRow} key={1}>\n\t       <div className={classes.divTableCell} width={plan.cell.width}>No data available</div>\n\t    </div>);\n};\nfunction DataRows(props) {\n    const { classes, state, plan, colkey, colvalues, rowkey, rowvalues, mode } = props;\n    //console.log(\"Making data cols.\",colkey,JSON.stringify(colvalues));\n    var mapFunction= (val,index)=>dataRow(classes,state,colkey,rowkey,colvalues,mode,plan,val,index);\n    if (rowvalues.length===0) {\n\treturn renderZeroRow(classes,state,colkey,colvalues,plan);\n    } else {\n\treturn (rowvalues.map(mapFunction));\n    }\n}\n// ---------------- HDR\nfunction FirstHdrCell (props) {\n    const { classes, state, label, plan } = props; // plan\n    //var width=plan.hdr.width;\n    //var height=plan.hdr.height;\n    //teal_palette\n    console.log(\"Making first header cell.\",label,plan.hdr.width,plan.hdr.height);\n    return (<div style={{height:'100%',backgroundColor:teal_palette.main}}>\n\t         <CanvasText state={state} label={label} plan={plan.hdr}/>\n\t    </div>);\n}\n//\n\nfunction renderHdrCell(classes,state,colkey,colvalues,rowkey,plan,val,index) {\n    if ((index-1)%plan.step === 0) {\n\t//console.log(\"HdrCell:\",index,plan.step);\n        var cnt = Math.min(colvalues.length,index+plan.step)-index;\n        var colwhere = state.Database.getColWhere(colkey,colvalues,index,plan.step);\n\tvar onclick=() => state.Navigate.selectKey(state,colkey,colvalues[index],colwhere,cnt);\n\tvar title=colwhere;\n\tvar cursor=classes.divTableCell;\n\tif (onclick !== undefined) {\n\t    cursor=classes.divTableCellCursor;\n\t}\n\tconsole.log(\"Plan:\",JSON.stringify(plan));\n\treturn (<div className={cursor} onClick={onclick} style={{backgroundColor:'#DDD'}} title={title} key={`col-${index}`} >\n\t\t   <CanvasText state={state} index={index} plan={plan.col} label={val}/>\n \t        </div> );\n     } else {\n\treturn null;\n    }\n}\nfunction HdrRow(props) {\n    const { classes, state, plan, colkey, colvalues, rowkey, label } = props; //, rowvalues\n    //console.log(\"Making header row.\",colkey,JSON.stringify(colvalues));\n    var mapFunction= (val,index)=>renderHdrCell(classes,state,colkey,colvalues,rowkey,plan,val,index);\n    return (<div className={classes.divTableRow} key={0}>\n\t       <FirstHdrCell classes={classes} state={state} label={label} plan={plan} style={{height:\"100%\"}}/>\n\t       {colvalues.map(mapFunction)}\n\t    </div>);\n}\n// ---------------- Details\nfunction Details(props) {\n    const { classes, state } = props; // classes, element\n    var colkey = state.Path.getColKey(state)||\"\";\n    var rowkey = state.Path.getRowKey(state)||\"\";\n    var colvalues = state.Path.filterKeys(state,state.Matrix.values[colkey]||[\"\"]);\n    var rowvalues = state.Path.filterKeys(state,state.Matrix.values[rowkey]||[\"\"]);\n    var cellMode  = state.Show.getCellMode(state);\n    //var ncol=colvalues.length + 1;\n    //var nrow=rowvalues.length + 1;\n    //DOM.style.font\n    var border=2;\n    var label=rowkey + \"\\\\\" + colkey;\n    var width=0.8*window.innerWidth;\n    var height=0.8*(window.innerHeight-200);\n    var plan=makePlan(label,colvalues,rowvalues,width,height,border);\n    //console.log(\"Details => Width/Height:\",window.innerWidth,window.innerHeight,plan.cell.width,plan.hdr.height)\n    //console.log(\"Colkey:\",colkey,\" colval:\",JSON.stringify(colvalues));\n    //console.log(\"Rowkey:\",rowkey,\" rowval:\",JSON.stringify(rowvalues));\n\n    return (<div className={classes.divTable}>\n\t       <div className={classes.divTableBody}>\n\t          <HdrRow classes={classes} state={state} plan={plan} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues} label={label}/>\n\t          <DataRows classes={classes} state={state} plan={plan} colkey={colkey} colvalues={colvalues} rowkey={rowkey} rowvalues={rowvalues} mode={cellMode}/>\n\t       </div>\n            </div>);\n }\nclass Table2D extends Component {\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    } \n    updateWindowDimensions = () => {\n        this.width= window.innerWidth;\n\tthis.height=window.innerHeight;\n\tthis.bbx=this.el.getBoundingClientRect();\n\t//console.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n    element(el) {\n\tif (el !== undefined && el !== null) {\n\t    this.el=el;\n\t    this.bbx=this.el.getBoundingClientRect();\n\t    //console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n\t};\n    };\n    render() {\n\tconst { classes, state } = this.props;\n\t//console.log(\"##### Rendering Table2D.\");\n\treturn (<div ref={el=>{this.element(el)}} className={classes.root}  style={{width: '100%', height: '100%'}}>\n\t\t   <Grid container spacing={24}>\n\t\t      <Grid item xs={12} > \n                         { <Paper className={classes.paper}>\n\t\t              <Details state={state} classes={classes} element={this}/>\n                           </Paper>}\n                      </Grid>\n                   </Grid>\n\t        </div>);\n    }\n}\n\nTable2D.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Table2D);\n"]},"metadata":{},"sourceType":"module"}