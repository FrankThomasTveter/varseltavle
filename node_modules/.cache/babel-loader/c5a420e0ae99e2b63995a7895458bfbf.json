{"ast":null,"code":"import _classCallCheck from\"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{withStyles}from'@material-ui/core/styles';import Button from'@material-ui/core/Button';import FullscreenIcon from'@material-ui/icons/Fullscreen';import NoFullscreenIcon from'@material-ui/icons/FullscreenExit';var styles=function styles(theme){return{view:{marginLeft:'auto'},button:{color:'white'}};};function FullscreenIconMode(props){var state=props.state;if(state.Layout.fullscreen){return React.createElement(NoFullscreenIcon,null);}else{return React.createElement(FullscreenIcon,null);}};var Fullscreen=/*#__PURE__*/function(_Component){_inherits(Fullscreen,_Component);function Fullscreen(){_classCallCheck(this,Fullscreen);return _possibleConstructorReturn(this,_getPrototypeOf(Fullscreen).apply(this,arguments));}_createClass(Fullscreen,[{key:\"render\",value:function render(){var _this$props=this.props,classes=_this$props.classes,state=_this$props.state;var onclick=function onclick(event){return state.Layout.toggleFullScreen(state);};return React.createElement(Button,{className:classes.button,onClick:onclick,title:\"Toggle Full Screen\"},React.createElement(FullscreenIconMode,{state:state}));}}]);return Fullscreen;}(Component);export default withStyles(styles)(Fullscreen);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/FullScreenComponent.js"],"names":["React","Component","withStyles","Button","FullscreenIcon","NoFullscreenIcon","styles","theme","view","marginLeft","button","color","FullscreenIconMode","props","state","Layout","fullscreen","Fullscreen","classes","onclick","event","toggleFullScreen"],"mappings":"4vBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CAEA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CAEA,MAAOC,CAAAA,cAAP,KAA2B,+BAA3B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,mCAA7B,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACrBC,IAAI,CAAE,CACFC,UAAU,CAAE,MADV,CADe,CAIrBC,MAAM,CAAC,CACVC,KAAK,CAAC,OADI,CAJc,CAAL,EAApB,CAQA,QAASC,CAAAA,kBAAT,CAA6BC,KAA7B,CAAoC,IACzBC,CAAAA,KADyB,CAChBD,KADgB,CACzBC,KADyB,CAEhC,GAAIA,KAAK,CAACC,MAAN,CAAaC,UAAjB,CAA6B,CAChC,MAAQ,qBAAC,gBAAD,MAAR,CACI,CAFD,IAEO,CACV,MAAQ,qBAAC,cAAD,MAAR,CACI,CACJ,E,GACKC,CAAAA,U,oRACO,iBACW,KAAKJ,KADhB,CACLK,OADK,aACLA,OADK,CACIJ,KADJ,aACIA,KADJ,CAEZ,GAAIK,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,QAAWN,CAAAA,KAAK,CAACC,MAAN,CAAaM,gBAAb,CAA8BP,KAA9B,CAAX,EAAd,CACA,MACI,qBAAC,MAAD,EACiB,SAAS,CAAEI,OAAO,CAACR,MADpC,CAEiB,OAAO,CAAES,OAF1B,CAGU,KAAK,CAAE,oBAHjB,EAKO,oBAAC,kBAAD,EAAoB,KAAK,CAAEL,KAA3B,EALP,CADJ,CASI,C,wBAboBb,S,EAoBzB,cAAeC,CAAAA,UAAU,CAACI,MAAD,CAAV,CAAmBW,UAAnB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\nimport NoFullscreenIcon from '@material-ui/icons/FullscreenExit';\n\nconst styles = theme => ({\n    view: {\n        marginLeft: 'auto',\n    },\n    button:{\n\tcolor:'white'\n    },\n});\nfunction FullscreenIconMode (props) {\n    const {state} = props;\n    if (state.Layout.fullscreen) {\n\treturn (<NoFullscreenIcon/>);\n    } else {\n\treturn (<FullscreenIcon/>);\n    }\n};\nclass Fullscreen extends Component {\n    render() {\n\tconst {classes, state}=this.props;\n\tvar onclick = (event) => state.Layout.toggleFullScreen(state);\n\treturn (\n\t\t   <Button\n                      className={classes.button}\n                      onClick={onclick}\n\t              title={\"Toggle Full Screen\"}\n\t\t    >\n\t  \t       {<FullscreenIconMode state={state}/>}\n                    </Button>\n\t);\n    }\n}\n\nFullscreen.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Fullscreen);\n"]},"metadata":{},"sourceType":"module"}