{"ast":null,"code":"//console.log(\"Loading NavigateLib.js\");\nfunction Navigate() {\n  this.history = {\n    pos: 0,\n    // position of next snapshot\n    track: []\n  };\n  this.home = undefined; //this.order={};          // key order\n\n  this.trash = {}; // key trash\n\n  this.maxStore = 20; // max number of states stored\n\n  this.reset = function (state) {\n    // store state\n    state.Navigate.history = {\n      pos: 0,\n      track: []\n    };\n    this.store(state);\n  };\n\n  this.store = function (state) {\n    // store state\n    var snapshot = state.Path.getSnapshot(state);\n\n    if (state.Navigate.history.track.length > 0) {\n      var old = state.Navigate.history.track[state.Navigate.history.track.length - 1];\n\n      if (JSON.stringify(snapshot) === JSON.stringify(old)) {\n        console.log(\"Ignoring old image.\");\n        return false;\n      }\n    } // remove old data...\n\n\n    if (state.Navigate.history.track.length > state.Navigate.history.pos + 1) {\n      var keep = state.Navigate.history.pos + 1;\n      state.Navigate.history.track = state.Navigate.history.track.splice(-keep, keep);\n    } else if (state.Navigate.history.track.length > this.maxStore) {\n      var keep = this.maxStore;\n      state.Navigate.history.track = state.Navigate.history.track.splice(-keep, keep);\n    }\n\n    ;\n    state.Navigate.history.track.push(snapshot);\n    state.Navigate.history.pos = state.Navigate.history.track.length - 1; //console.log(\">>>>>> Stored state...\",JSON.stringify(state.Navigate.history),\n    //\t    this.canUndo(state),this.canRedo(state),\n    //\t    state.Navigate.history.pos,state.Navigate.history.track.length);\n    //console.log(\">>>>> stored state.\",JSON.stringify(state.Path.keys));\n\n    this.refreshHistory(state);\n  };\n\n  this.refreshHistory = function (state) {\n    if (state.React.Config !== undefined) {\n      state.React.Config.show();\n    }\n\n    ;\n  };\n\n  this.canUndo = function (state) {\n    return state.Navigate.history.pos > 0;\n  };\n\n  this.canRedo = function (state) {\n    return state.Navigate.history.pos < state.Navigate.history.track.length - 1;\n  };\n\n  this.undo = function (state) {\n    //console.log(\">>>>>> Undo:\",this.canUndo(state));\n    if (this.canUndo(state)) {\n      state.Navigate.history.pos = state.Navigate.history.pos - 1;\n      var snapshot = state.Navigate.history.track[state.Navigate.history.pos]; //console.log(\"Setting snapshot:\",JSON.stringify(snapshot));\n\n      state.Path.setSnapshot(state, snapshot);\n      this.refreshHistory(state);\n      state.Show.show(state);\n    }\n\n    ;\n  };\n\n  this.redo = function (state) {\n    //console.log(\">>>>>> Redo:\",this.canRedo(state),state.Navigate.history.pos,JSON.stringify(state.Navigate.history.track));\n    if (this.canRedo(state)) {\n      state.Navigate.history.pos = state.Navigate.history.pos + 1;\n      var snapshot = state.Navigate.history.track[state.Navigate.history.pos]; //console.log(\"Setting snapshot:\",JSON.stringify(snapshot));\n\n      state.Path.setSnapshot(state, snapshot);\n      this.refreshHistory(state);\n      state.Show.show(state);\n    }\n  };\n\n  this.onClickTablePath = function (state, skey, tkey) {\n    var reload = false;\n    var sid = state.Path.keys.other.indexOf(skey);\n    var tid = state.Path.keys.other.indexOf(tkey); //console.log(\"Table path: Sid:\",sid,\" tid:\",tid,skey,tkey);\n\n    if (sid !== -1 && tid !== -1) {\n      if (sid > tid) {\n        var src = state.Path.keys.other.splice(sid, 1); // remove from path\n\n        var trg = state.Path.keys.other.splice(tid, 1); // remove from path\n\n        state.Utils.pushKey(state.Path.keys.other, src, tid);\n        state.Utils.pushKey(state.Path.keys.other, trg, sid); //state.Utils.spliceArray(state.Path.keys.other,tid,0,src); // first position (table)\n        //state.Utils.spliceArray(state.Path.keys.other,sid,0,trg); // first position (table)\n\n        state.Path.exportAllKeys(state);\n        reload = true;\n      }\n    }\n\n    state.Html.setFootnote(state, \"Extracting data.\");\n    state.Html.setProgress(state, true);\n    state.Navigate.store(state);\n    state.Show.show(state, reload);\n  };\n\n  this.onClickRestValue = function (state, val, key, where) {\n    console.log(\"onClickRestValue:\", val, key, JSON.stringify(state.Path.keys));\n\n    if (state.Path.selectTableKey(state, key, val, where, 1)) {\n      state.Html.setFootnote(state, \"Extracting data.\");\n      state.Html.setProgress(state, true);\n      state.Navigate.store(state);\n      state.Show.show(state);\n    }\n\n    ;\n    console.log(\"onClickRestValue done:\", val, key, JSON.stringify(state.Path.keys));\n  };\n\n  this.onClickPath = function (state, ttyp, tkey) {\n    var reload = false; // matrix changed?\n\n    var tid, tin, sin, src; //console.log(\"Clicked:\",ttyp,tkey,JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other));\n\n    if (ttyp === \"path\") {\n      // path -> table\n      tid = state.Path.keys.path.indexOf(tkey);\n\n      if (tid !== -1) {\n        src = state.Path.keys.path.splice(tid, 1); // remove from path\n\n        state.Utils.pushKey(state.Path.keys.other, src, 2); //state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\n        state.Path.cleanSelect(state);\n        state.Navigate.store(state);\n        reload = true;\n      }\n    } else if (ttyp === \"table\") {\n      // other -> table\n      tid = state.Path.keys.other.indexOf(tkey); //console.log(\"Tin:\",tin,\" tid:\",tid);\n\n      if (tid !== -1) {\n        src = state.Path.keys.other.splice(tid, 1); // remove from path\n\n        state.Utils.pushKey(state.Path.keys.other, src, 0); //state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\n        state.Path.exportAllKeys(state);\n        state.Navigate.store(state);\n        reload = true;\n      }\n    } else if (ttyp === \"rest\") {\n      // rest -> table\n      tid = state.Path.keys.other.indexOf(tkey);\n\n      if (tid !== -1) {\n        src = state.Path.keys.other.splice(tid, 1); // remove from path\n\n        state.Utils.pushKey(state.Path.trash, src); //state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\n        state.Navigate.store(state);\n        reload = true;\n      }\n\n      ;\n    } else if (ttyp === \"trash\") {\n      //console.log(\"Trashing start:\",JSON.stringify(state.Path.trash),tkey);\n      tid = state.Path.trash.indexOf(tkey);\n      tin = state.Path.keys.other.indexOf(tkey);\n      sin = state.Path.keys.path.indexOf(tkey);\n\n      if (tid !== -1) {\n        // trash => other\n        src = state.Path.trash.splice(tid, 1);\n        state.Utils.pushKey(state.Path.keys.other, src); //if ( tin === -1 ) {\n        //    state.Path.keys.other=state.Path.keys.other.concat(src);  // last position\n        //};\n      } else if (sin !== -1 && tin === -1) {\n        // select => other\n        state.Utils.pushKey(state.Path.keys.other, tkey); //state.Path.keys.other=state.Path.keys.other.concat(tkey); // last position\n      } else if (sin !== -1 && tin !== -1) {\n        // other => select\n        src = state.Path.keys.other.splice(tin, 1);\n      } else if (sin === -1 && tin !== -1) {\n        // other => trash\n        src = state.Path.keys.other.splice(tin, 1);\n        state.Utils.pushKey(state.Path.trash, src); //state.Path.trash=state.Path.trash.concat(src);            // last position\n      }\n\n      ;\n      state.Path.exportAllKeys(state);\n      state.Navigate.store(state); //console.log(\"Trashed:\",JSON.stringify(state.Path.trash),JSON.stringify(state.Path.keys));\n    }\n\n    state.Html.setFootnote(state, \"Extracting data.\");\n    state.Html.setProgress(state, true); //console.log(\"Showing:\",JSON.stringify(state.Path.other));\n\n    state.Show.show(state, reload);\n  };\n\n  this.selectItem = function (state, colkey, rowkey, colval, rowval, colwhere, rowwhere, colcnt, rowcnt) {\n    //console.log(\"Selectitem:\",colkey,rowkey,colval,rowval,colwhere,rowwhere,colcnt,rowcnt);\n    //var colkey=state.Path.getColKey(state);\n    //var rowkey=state.Path.getRowKey(state);\n    var order = state.Utils.cp(state.Path.keys.other); //console.log(\"SelectItem:\",colkey,\"=\",colval,\"  \",rowkey,\"=\",rowval);\n\n    if (state.Show.getLayoutMode(state) === state.Show.code.layout.Map) {\n      if (this.selectMapKey(state, colkey, colval, colwhere, colcnt)) {\n        this.order[colkey] = state.Utils.cp(order); //this.flip[colkey]=this.getFlip(state);\n\n        if (this.selectMapKey(state, rowkey, rowval, rowwhere, rowcnt)) {\n          this.order[rowkey] = state.Utils.cp(order); //this.last.flip[rowkey]=this.getFlip(state);\n        } //this.trash[colkey]=state.Path.checkTableKeys(state);\n        //console.log(\"state.Path.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n\n      }\n\n      ; //console.log(\"Path:\",JSON.stringify(state.Path))\n\n      state.Html.setFootnote(state, \"Extracting data.\");\n      state.Html.setProgress(state, true);\n      state.Navigate.store(state);\n      state.Show.show(state);\n    } else if (state.Path.selectTableKey(state, colkey, colval, colwhere, colcnt)) {\n      this.order[colkey] = order; //this.flip[colkey]=this.getFlip(state);\n\n      if (state.Path.selectTableKey(state, rowkey, rowval, rowwhere, rowcnt)) {\n        this.order[rowkey] = state.Utils.cp(order); //this.last.flip[rowkey]=this.getFlip(state);\n      } //this.trash[colkey]=state.Path.checkTableKeys(state);\n      //console.log(\"state.Path.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n\n\n      state.Html.setFootnote(state, \"Extracting data.\");\n      state.Html.setProgress(state, true);\n      state.Navigate.store(state);\n      state.Show.show(state);\n    } else if (state.Path.selectTableKey(state, rowkey, rowval, rowwhere, rowcnt)) {\n      this.order[rowkey] = order; //this.last.flip[rowkey]=this.getFlip(state);\n      //this.trash[rowkey]=state.Path.checkTableKeys(state);\n      //console.log(\"state.Path.checkTableKeys Done.\",rowkey,JSON.stringify(this.trash[rowkey]));\n\n      state.Html.setFootnote(state, \"Extracting data.\");\n      state.Html.setProgress(state, true);\n      state.Navigate.store(state);\n      state.Show.show(state);\n    } else {\n      console.log(\"Unable to select:\", rowkey, colkey);\n    } //console.log(\"Selectitem Done:\",rowwhere,colwhere);\n\n  };\n\n  this.selectMapKey = function (state, key, val, where, cnt) {\n    // keep abscissa\n    //console.log(\"Table.Selecting:\",key,\"=\",val,\", where=\",where);\n    state.Path.select.val[key] = [val];\n    state.Path.where[key] = where;\n\n    if (state.Utils.missing(state.Path.keys.path, key)) {\n      //console.log(\"Adding to path:\",key);\n      state.Utils.pushKey(state.Path.keys.path, key); //state.Path.keys.path=state.Path.keys.path.concat(key); // last path position\n    }\n\n    ;\n    return true;\n  };\n\n  this.selectKey = function (state, key, val, where, cnt) {\n    var order = state.Utils.cp(state.Path.keys.other); //console.log(\"SelecRow: rowkey=\",key,\" val=\",val);\n    //console.log(\"SelectKey:\",key,val,where,cnt);\n\n    if (state.Show.getLayoutMode(state) === state.Show.code.layout.Map) {\n      if (this.selectMapKey(state, key, val, where, cnt)) {\n        this.order[key] = state.Utils.cp(order);\n      }\n\n      state.Html.setFootnote(state, \"Extracting data.\");\n      state.Html.setProgress(state, true);\n      state.Navigate.store(state);\n      state.Show.show(state);\n    } else if (state.Path.selectTableKey(state, key, val, where, cnt)) {\n      this.order[key] = order; //this.trash[key]=state.Path.checkTableKeys(state);\n      //console.log(\"state.Path.checkTableKeys Done.\",rowkey,JSON.stringify(this.trash[key]));\n\n      state.Html.setFootnote(state, \"Extracting data.\");\n      state.Html.setProgress(state, true);\n      state.Navigate.store(state);\n      state.Show.show(state);\n    } else {\n      console.log(\"Unable to select:\", key);\n    } //console.log(\"Finally:\",JSON.stringify(state.Path.keys.other));\n\n  };\n}\n\n;\nexport default Navigate;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/NavigateLib.js"],"names":["Navigate","history","pos","track","home","undefined","trash","maxStore","reset","state","store","snapshot","Path","getSnapshot","length","old","JSON","stringify","console","log","keep","splice","push","refreshHistory","React","Config","show","canUndo","canRedo","undo","setSnapshot","Show","redo","onClickTablePath","skey","tkey","reload","sid","keys","other","indexOf","tid","src","trg","Utils","pushKey","exportAllKeys","Html","setFootnote","setProgress","onClickRestValue","val","key","where","selectTableKey","onClickPath","ttyp","tin","sin","path","cleanSelect","selectItem","colkey","rowkey","colval","rowval","colwhere","rowwhere","colcnt","rowcnt","order","cp","getLayoutMode","code","layout","Map","selectMapKey","cnt","select","missing","selectKey"],"mappings":"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","sourcesContent":["//console.log(\"Loading NavigateLib.js\");\n\nfunction Navigate() {\n    this.history={pos:0, // position of next snapshot\n\t\t  track:[]\n\t\t };\n    this.home=undefined;\n    //this.order={};          // key order\n    this.trash={};          // key trash\n    this.maxStore=20;       // max number of states stored\n    this.reset=function(state) { // store state\n\tstate.Navigate.history={pos:0,track:[]};\n\tthis.store(state);\n    };\n    this.store=function(state) { // store state\n\tvar snapshot=state.Path.getSnapshot(state)\n\tif (state.Navigate.history.track.length>0) {\n\t    var old=state.Navigate.history.track[state.Navigate.history.track.length-1];\n\t    if (JSON.stringify(snapshot)===JSON.stringify(old)) {\n\t\tconsole.log(\"Ignoring old image.\");\n\t\treturn false;\n\t    }\n\t}\n\t// remove old data...\n\tif (state.Navigate.history.track.length>state.Navigate.history.pos+1) {\n\t    var keep=state.Navigate.history.pos+1;\n\t    state.Navigate.history.track=state.Navigate.history.track.splice(-keep,keep);\n\t} else if (state.Navigate.history.track.length > this.maxStore) {\n\t    var keep=this.maxStore;\n\t   state.Navigate.history.track=state.Navigate.history.track.splice(-keep,keep);\n\t};\n\tstate.Navigate.history.track.push(snapshot);\n\tstate.Navigate.history.pos=state.Navigate.history.track.length-1;\n\t//console.log(\">>>>>> Stored state...\",JSON.stringify(state.Navigate.history),\n\t//\t    this.canUndo(state),this.canRedo(state),\n\t//\t    state.Navigate.history.pos,state.Navigate.history.track.length);\n\t//console.log(\">>>>> stored state.\",JSON.stringify(state.Path.keys));\n\tthis.refreshHistory(state);\n    };\n    this.refreshHistory=function(state) {\n\tif (state.React.Config !== undefined) {\n\t    state.React.Config.show();\n\t};\n    };\n    this.canUndo=function(state) {\n\treturn (state.Navigate.history.pos > 0);\n    };\n    this.canRedo=function(state) {\n\treturn (state.Navigate.history.pos < state.Navigate.history.track.length-1);\n    };\n    this.undo=function(state) {\n\t//console.log(\">>>>>> Undo:\",this.canUndo(state));\n\tif (this.canUndo(state)) {\n\t    state.Navigate.history.pos=state.Navigate.history.pos-1;\n\t    var snapshot=state.Navigate.history.track[state.Navigate.history.pos]\n\t    //console.log(\"Setting snapshot:\",JSON.stringify(snapshot));\n\t    state.Path.setSnapshot(state,snapshot);\n\t    this.refreshHistory(state);\n\t    state.Show.show(state);\n\t};\n    };\n    this.redo=function(state) {\n\t//console.log(\">>>>>> Redo:\",this.canRedo(state),state.Navigate.history.pos,JSON.stringify(state.Navigate.history.track));\n\tif (this.canRedo(state)) {\n\t    state.Navigate.history.pos=state.Navigate.history.pos+1;\t\n\t    var snapshot=state.Navigate.history.track[state.Navigate.history.pos]\n\t    //console.log(\"Setting snapshot:\",JSON.stringify(snapshot));\n\t    state.Path.setSnapshot(state,snapshot);\n\t    this.refreshHistory(state);\n\t    state.Show.show(state);\n\t}\n    };\n    this.onClickTablePath=function(state,skey,tkey) {\n\tvar reload=false;\n\tvar sid=state.Path.keys.other.indexOf(skey);\n\tvar tid=state.Path.keys.other.indexOf(tkey);\n\t//console.log(\"Table path: Sid:\",sid,\" tid:\",tid,skey,tkey);\n\tif (sid !== -1 && tid !== -1) {\n\t    if (sid > tid) {\n\t\tvar src=state.Path.keys.other.splice(sid, 1);                 // remove from path\n\t\tvar trg=state.Path.keys.other.splice(tid, 1);                 // remove from path\n\t\tstate.Utils.pushKey(state.Path.keys.other,src,tid);\n\t\tstate.Utils.pushKey(state.Path.keys.other,trg,sid);\n\t\t//state.Utils.spliceArray(state.Path.keys.other,tid,0,src); // first position (table)\n\t\t//state.Utils.spliceArray(state.Path.keys.other,sid,0,trg); // first position (table)\n\t\tstate.Path.exportAllKeys(state);\n\t\treload=true;\n\t    }\n\t}\n\tstate.Html.setFootnote(state,\"Extracting data.\");\n\tstate.Html.setProgress(state, true);\n\tstate.Navigate.store(state);\n\tstate.Show.show(state,reload);\n    };\n    this.onClickRestValue=function(state,val,key,where) {\n\tconsole.log(\"onClickRestValue:\",val,key,JSON.stringify(state.Path.keys));\n\tif (state.Path.selectTableKey(state,key,val,where,1)) {\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    state.Html.setProgress(state, true);\n\t    state.Navigate.store(state);\n\t    state.Show.show(state);\n\t};\n\tconsole.log(\"onClickRestValue done:\",val,key,JSON.stringify(state.Path.keys));\n    };\n    this.onClickPath=function(state,ttyp,tkey) {\n\tvar reload=false; // matrix changed?\n\tvar tid,tin,sin,src;\n\t//console.log(\"Clicked:\",ttyp,tkey,JSON.stringify(state.Path.keys),JSON.stringify(state.Path.other));\n\tif (ttyp  === \"path\") { // path -> table\n\t    tid=state.Path.keys.path.indexOf(tkey);\n\t    if (tid !== -1) {\n\t\tsrc=state.Path.keys.path.splice(tid, 1);                 // remove from path\n\t\tstate.Utils.pushKey(state.Path.keys.other,src,2);\n\t\t//state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\t\tstate.Path.cleanSelect(state);\n\t\tstate.Navigate.store(state);\n\t\treload=true;\n\t    }\n\t} else if (ttyp  === \"table\") { // other -> table\n\t    tid=state.Path.keys.other.indexOf(tkey);\n\t    //console.log(\"Tin:\",tin,\" tid:\",tid);\n\t    if (tid !== -1) {\n\t\tsrc=state.Path.keys.other.splice(tid, 1);                 // remove from path\n\t\tstate.Utils.pushKey(state.Path.keys.other,src,0);\n\t\t//state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\t\tstate.Path.exportAllKeys(state);\n\t\tstate.Navigate.store(state);\n\t\treload=true;\n\t    }\n\t} else if (ttyp === \"rest\") { // rest -> table\n\t    tid=state.Path.keys.other.indexOf(tkey);\n\t    if (tid !== -1) {\n\t\tsrc=state.Path.keys.other.splice(tid, 1);                 // remove from path\n\t\tstate.Utils.pushKey(state.Path.trash,src);\n\t\t//state.Utils.spliceArray(state.Path.keys.other,0,0,src); // first position (table)\n\t\tstate.Navigate.store(state);\n\t\treload=true;\n\t    };\n\t} else if (ttyp === \"trash\") {\n\t    //console.log(\"Trashing start:\",JSON.stringify(state.Path.trash),tkey);\n\t    tid=state.Path.trash.indexOf(tkey);\n\t    tin=state.Path.keys.other.indexOf(tkey);\n\t    sin=state.Path.keys.path.indexOf(tkey);\n\t    if (tid !== -1) {                                             // trash => other\n\t\tsrc=state.Path.trash.splice(tid, 1);\n\t\tstate.Utils.pushKey(state.Path.keys.other,src);\n\t\t//if ( tin === -1 ) {\n\t\t//    state.Path.keys.other=state.Path.keys.other.concat(src);  // last position\n\t\t//};\n\t    } else if (sin !== -1 && tin === -1) {                         // select => other\n\t\tstate.Utils.pushKey(state.Path.keys.other,tkey);\n\t\t//state.Path.keys.other=state.Path.keys.other.concat(tkey); // last position\n\t    } else if (sin !== -1 && tin !== -1) {                        // other => select\n\t\tsrc=state.Path.keys.other.splice(tin, 1);\n\t    } else if (sin === -1 && tin !== -1) {                        // other => trash\n\t\tsrc=state.Path.keys.other.splice(tin, 1);\n\t\tstate.Utils.pushKey(state.Path.trash,src);\n\t\t//state.Path.trash=state.Path.trash.concat(src);            // last position\n\t    };\n\t    state.Path.exportAllKeys(state);\n\t    state.Navigate.store(state);\n\t    //console.log(\"Trashed:\",JSON.stringify(state.Path.trash),JSON.stringify(state.Path.keys));\n\t}\n\tstate.Html.setFootnote(state,\"Extracting data.\");\n\tstate.Html.setProgress(state, true);\n\t//console.log(\"Showing:\",JSON.stringify(state.Path.other));\n\tstate.Show.show(state,reload);\n    };\n    this.selectItem=function(state,colkey,rowkey,colval,rowval,colwhere,rowwhere,colcnt,rowcnt) {\n\t//console.log(\"Selectitem:\",colkey,rowkey,colval,rowval,colwhere,rowwhere,colcnt,rowcnt);\n\t//var colkey=state.Path.getColKey(state);\n\t//var rowkey=state.Path.getRowKey(state);\n\tvar order=state.Utils.cp(state.Path.keys.other);\n\t//console.log(\"SelectItem:\",colkey,\"=\",colval,\"  \",rowkey,\"=\",rowval);\n\tif (state.Show.getLayoutMode(state)  === state.Show.code.layout.Map) {\n\t    if (this.selectMapKey(state,colkey,colval,colwhere,colcnt)) {\n\t\tthis.order[colkey]=state.Utils.cp(order);\n\t\t//this.flip[colkey]=this.getFlip(state);\n\t\tif (this.selectMapKey(state,rowkey,rowval,rowwhere,rowcnt)) {\n\t\t    this.order[rowkey]=state.Utils.cp(order);\n\t\t    //this.last.flip[rowkey]=this.getFlip(state);\n\t\t}\n\t\t//this.trash[colkey]=state.Path.checkTableKeys(state);\n\t\t//console.log(\"state.Path.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n\t    };\n\t    //console.log(\"Path:\",JSON.stringify(state.Path))\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    state.Html.setProgress(state, true);\n\t    state.Navigate.store(state);\n\t    state.Show.show(state);\t\n\t} else if (state.Path.selectTableKey(state,colkey,colval,colwhere,colcnt)) {\n\t    this.order[colkey]=order;\n\t    //this.flip[colkey]=this.getFlip(state);\n\t    if (state.Path.selectTableKey(state,rowkey,rowval,rowwhere,rowcnt)) {\n\t\tthis.order[rowkey]=state.Utils.cp(order);\n\t\t//this.last.flip[rowkey]=this.getFlip(state);\n\t    }\n\t    //this.trash[colkey]=state.Path.checkTableKeys(state);\n\t    //console.log(\"state.Path.checkTableKeys Done.\",colkey,JSON.stringify(this.trash[colkey]));\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    state.Html.setProgress(state, true);\n\t    state.Navigate.store(state);\n\t    state.Show.show(state);\n\t} else if (state.Path.selectTableKey(state,rowkey,rowval,rowwhere,rowcnt)) {\n\t    this.order[rowkey]=order;\n\t    //this.last.flip[rowkey]=this.getFlip(state);\n\t    //this.trash[rowkey]=state.Path.checkTableKeys(state);\n\t    //console.log(\"state.Path.checkTableKeys Done.\",rowkey,JSON.stringify(this.trash[rowkey]));\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    state.Html.setProgress(state, true);\n\t    state.Navigate.store(state);\n\t    state.Show.show(state);\n\t} else {\n\t    console.log(\"Unable to select:\",rowkey,colkey);\n\t}\n\t//console.log(\"Selectitem Done:\",rowwhere,colwhere);\n    };\n    this.selectMapKey=function(state,key,val,where,cnt) { // keep abscissa\n\t//console.log(\"Table.Selecting:\",key,\"=\",val,\", where=\",where);\n\tstate.Path.select.val[key]=[val];\n\tstate.Path.where[key]=where;\n\tif (state.Utils.missing(state.Path.keys.path,key)) {\n\t    //console.log(\"Adding to path:\",key);\n\t    state.Utils.pushKey(state.Path.keys.path,key);\n\t    //state.Path.keys.path=state.Path.keys.path.concat(key); // last path position\n\t};\n\treturn true;\n    };\n    this.selectKey=function(state,key,val,where,cnt) {\n\tvar order=state.Utils.cp(state.Path.keys.other);\n\t//console.log(\"SelecRow: rowkey=\",key,\" val=\",val);\n\t//console.log(\"SelectKey:\",key,val,where,cnt);\n\tif (state.Show.getLayoutMode(state)  === state.Show.code.layout.Map) {\n\t    if (this.selectMapKey(state,key,val,where,cnt)) {\n\t\tthis.order[key]=state.Utils.cp(order);\n\t    }\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    state.Html.setProgress(state, true);\n\t    state.Navigate.store(state);\n\t    state.Show.show(state);\n\t} else if (state.Path.selectTableKey(state,key,val,where,cnt)) {\n\t    this.order[key]=order;\n\t    //this.trash[key]=state.Path.checkTableKeys(state);\n\t    //console.log(\"state.Path.checkTableKeys Done.\",rowkey,JSON.stringify(this.trash[key]));\n\t    state.Html.setFootnote(state,\"Extracting data.\");\n\t    state.Html.setProgress(state, true);\n\t    state.Navigate.store(state);\n\t    state.Show.show(state);\n\t} else {\n\t    console.log(\"Unable to select:\",key);\n\t}\n\t//console.log(\"Finally:\",JSON.stringify(state.Path.keys.other));\n    };\n};\nexport default Navigate;\n"]},"metadata":{},"sourceType":"module"}