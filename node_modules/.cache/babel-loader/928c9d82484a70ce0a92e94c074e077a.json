{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/SubTableComponent.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { teal_palette } from '../mui/metMuiThemes';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport SummaryCell from './SummaryCell';\nimport SeriesCell from './SeriesCell';\nimport CanvasText from './CanvasTextComponent';\nimport CellTooltip from './CellTooltip';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      height: '100%'\n    },\n    paper: {\n      overflow: 'hidden',\n      tableLayout: 'fixed',\n      padding: 0,\n      margin: 0\n    },\n    divTable: {\n      display: 'table',\n      width: '100%'\n    },\n    divTableRow: {\n      backgroundColor: teal_palette.main,\n      border: '1px solid #000',\n      display: 'table-row',\n      padding: '5px'\n    },\n    divTableHdr: {\n      border: '1px solid #000',\n      display: 'table-cell',\n      padding: '5px',\n      backgroundColor: teal_palette.main,\n      color: 'black'\n    },\n    divTableCell: {\n      border: '1px solid #000',\n      display: 'table-cell',\n      padding: '5px'\n    },\n    divTableBody: {\n      display: 'table-row-group'\n    }\n  };\n}; //const mui = createTheme({palette:teal_palette});\n// ---------------- DATA\n\n\nfunction FirstDataCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      rowval = props.rowval,\n      rowindex = props.rowindex;\n  return React.createElement(\"div\", {\n    className: classes.divTableHdr,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, rowval);\n} //{rowval}\n\n\nfunction DataCell(props) {\n  var classes = props.classes,\n      state = props.state,\n      val = props.val,\n      rowindex = props.rowindex,\n      bgcolor = props.bgcolor;\n  var rval = val;\n\n  if (isNaN(rval)) {\n    rval = val;\n  } else {\n    rval = parseFloat(rval, 0).toFixed(2);\n  }\n\n  ;\n  return React.createElement(\"div\", {\n    className: classes.divTableCell,\n    style: {\n      backgroundColor: bgcolor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, rval);\n}\n\nfunction renderDataCell(classes, state, key, sub, rowindex, colindex) {\n  var maxlev = sub[\"level\"] || 0;\n  var bgcolor = state.Colors.getLevelColor(maxlev);\n  return React.createElement(DataCell, {\n    classes: classes,\n    state: state,\n    key: \"\".concat(rowindex, \"-\").concat(colindex),\n    val: sub[key],\n    rowindex: rowindex,\n    bgcolor: bgcolor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  });\n} //{{rowkey:'test1',colkey:'test2',title:title}}\n\n\nfunction dataRow(classes, state, key, subs, rowindex) {\n  var cnt = 1,\n      ii = subs.length; // calculate number of entries\n  //while (ii--) {if (typeof subs[ii][key] !== \"undefined\") cnt++;}\n\n  if (cnt === 0) {\n    return null; // no entries, ignore row...\n  } else {\n    var mapFunction = function mapFunction(sub, colindex) {\n      return renderDataCell(classes, state, key, sub, rowindex, colindex);\n    };\n\n    return React.createElement(\"div\", {\n      className: classes.divTableRow,\n      key: rowindex.toString(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(FirstDataCell, {\n      classes: classes,\n      state: state,\n      key: 'k-' + rowindex,\n      rowval: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), subs.map(mapFunction));\n  }\n\n  ;\n}\n\n; // ---------------- Details\n\nfunction Details(props) {\n  var classes = props.classes,\n      state = props.state,\n      keys = props.keys,\n      subs = props.subs; // classes, element\n\n  var mapFunction = function mapFunction(key, rowindex) {\n    return dataRow(classes, state, key, subs, rowindex);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.divTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.divTableBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, keys.map(mapFunction)));\n}\n\nvar SubTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SubTable, _Component);\n\n  function SubTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SubTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SubTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.updateWindowDimensions = function () {\n      _this.width = window.innerWidth;\n      _this.height = window.innerHeight;\n      _this.bbx = _this.el.getBoundingClientRect(); //console.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n\n    return _this;\n  }\n\n  _createClass(SubTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n  }, {\n    key: \"element\",\n    value: function element(el) {\n      if (el !== undefined && el !== null) {\n        this.el = el;\n        this.bbx = this.el.getBoundingClientRect(); //console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n      }\n\n      ;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          state = _this$props.state,\n          classes = _this$props.classes,\n          keys = _this$props.keys,\n          subs = _this$props.subs; //console.log(\"##### Rendering SubTable.\");\n\n      return React.createElement(\"div\", {\n        ref: function ref(el) {\n          _this2.element(el);\n        },\n        className: classes.root,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Details, {\n        state: state,\n        classes: classes,\n        element: this,\n        keys: keys,\n        subs: subs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SubTable;\n}(Component);\n\nSubTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SubTable);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/SubTableComponent.js"],"names":["React","Component","PropTypes","withStyles","teal_palette","Paper","Grid","SummaryCell","SeriesCell","CanvasText","CellTooltip","styles","theme","root","height","paper","overflow","tableLayout","padding","margin","divTable","display","width","divTableRow","backgroundColor","main","border","divTableHdr","color","divTableCell","divTableBody","FirstDataCell","props","classes","state","rowval","rowindex","DataCell","val","bgcolor","rval","isNaN","parseFloat","toFixed","renderDataCell","key","sub","colindex","maxlev","Colors","getLevelColor","dataRow","subs","cnt","ii","length","mapFunction","toString","map","Details","keys","SubTable","updateWindowDimensions","window","innerWidth","innerHeight","bbx","el","getBoundingClientRect","addEventListener","undefined","element","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport {teal_palette} from '../mui/metMuiThemes';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport SummaryCell from './SummaryCell';\nimport SeriesCell  from './SeriesCell';\nimport CanvasText  from './CanvasTextComponent';\nimport CellTooltip  from './CellTooltip';\n\nconst styles = theme => ({\n    root: {\n\theight: '100%',\n    },\n    paper: {\n\toverflow: 'hidden',\n\ttableLayout: 'fixed',\n\tpadding:0,\n\tmargin:0,\n    },\n    divTable :{\n\tdisplay: 'table',\n\twidth: '100%',\n    },\n    divTableRow:  {\n\tbackgroundColor:teal_palette.main,\n\tborder: '1px solid #000',\n\tdisplay: 'table-row',\n\tpadding: '5px',\n    },\n    divTableHdr:{\n\tborder: '1px solid #000',\n\tdisplay: 'table-cell',\n\tpadding: '5px',\n\tbackgroundColor:teal_palette.main,\n\tcolor:'black',\n    },\n    divTableCell:{\n\tborder: '1px solid #000',\n\tdisplay: 'table-cell',\n\tpadding: '5px',\n    },\n    divTableBody : {\n\tdisplay: 'table-row-group',\n    },\n});\n\n//const mui = createTheme({palette:teal_palette});\n\n// ---------------- DATA\nfunction FirstDataCell (props) {\n    const { classes, state, rowval, rowindex} = props;\n    return (<div className={classes.divTableHdr}>\n\t    {rowval}\n\t    </div>);\n}\n//{rowval}\nfunction DataCell(props) {\n    const {classes,state,val,rowindex,bgcolor}=props;\n    var rval=val;\n    if (isNaN(rval)) {\n\trval=val;\n    } else {\n\trval=parseFloat(rval,0).toFixed(2);\n    };\n    return <div className={classes.divTableCell} style={{backgroundColor:bgcolor}}>{rval}</div>\n}\nfunction renderDataCell(classes,state,key,sub,rowindex,colindex) {\n    var maxlev=sub[\"level\"]||0;\n    var bgcolor=state.Colors.getLevelColor(maxlev);\n    return (<DataCell classes={classes} state={state} key={`${rowindex}-${colindex}`} val={sub[key]} rowindex={rowindex} bgcolor={bgcolor}/>);\n}\n//{{rowkey:'test1',colkey:'test2',title:title}}\nfunction dataRow(classes,state,key,subs,rowindex) {\n    var cnt=1, ii=subs.length;\n    // calculate number of entries\n    //while (ii--) {if (typeof subs[ii][key] !== \"undefined\") cnt++;}\n    if (cnt===0) {\n\treturn null; // no entries, ignore row...\n    } else {\n\tvar mapFunction= (sub,colindex)=>renderDataCell(classes,state,key,sub,rowindex,colindex);\n\treturn (<div className={classes.divTableRow} key={rowindex.toString()}>\n\t\t<FirstDataCell classes={classes} state={state} key={'k-'+rowindex} rowval={key}/>\n\t\t{subs.map(mapFunction)}\n\t\t</div>);\n    };\n};\n// ---------------- Details\nfunction Details(props) {\n    const { classes, state, keys, subs } = props; // classes, element\n    var mapFunction= (key,rowindex)=>dataRow(classes,state,key,subs,rowindex);\n    return (<div className={classes.divTable}>\n\t       <div className={classes.divTableBody}>\n\t          {keys.map(mapFunction)}\n\t       </div>\n            </div>);\n }\nclass SubTable extends Component {\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    } \n    updateWindowDimensions = () => {\n        this.width= window.innerWidth;\n\tthis.height=window.innerHeight;\n\tthis.bbx=this.el.getBoundingClientRect();\n\t//console.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n    element(el) {\n\tif (el !== undefined && el !== null) {\n\t    this.el=el;\n\t    this.bbx=this.el.getBoundingClientRect();\n\t    //console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n\t};\n    };\n    render() {\n\tconst { state, classes, keys, subs } = this.props;\n\t//console.log(\"##### Rendering SubTable.\");\n\treturn (<div ref={el=>{this.element(el)}} className={classes.root}  style={{width: '100%', height: '100%'}}>\n\t\t   <Details state={state} classes={classes} element={this} keys={keys} subs={subs}/>\n\t        </div>);\n    }\n}\n\nSubTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SubTable);\n"]},"metadata":{},"sourceType":"module"}