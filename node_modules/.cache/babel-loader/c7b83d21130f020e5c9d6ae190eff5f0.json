{"ast":null,"code":"//console.log(\"Loading DatabaseLib.js\");\nvar alasql = window.alasql;\n\nfunction Database() {\n  this.cnt = 0;\n  this.keyCnt = {};\n  this.values = {};\n  this.epoch0 = 0;\n  this.regfile = \"register\"; // register file (shows current datfile)\n\n  this.datfile = \"\"; // json data file\n\n  this.arrayConstructor = [].constructor;\n  this.objectConstructor = {}.constructor;\n  this.casc = 0; // key is sorted ascending\n\n  this.cdes = 1; // key is sorted descending\n\n  this.nasc = 2; // key is sorted ascending\n\n  this.ndes = 3; // key is sorted descending\n\n  this.delay = 100000; // server-polling period in ms\n\n  this.ready = true; // can we poll server or is another poll running\n\n  this.log = \"\";\n  this.mod = \"\";\n\n  this.init = function (state) {\n    var par = \"Database\" + state.Utils.version;\n    state.Utils.init(par, this);\n  };\n\n  this.update = function (state) {\n    this.setTime(state);\n    this.load(state);\n    setTimeout(function () {\n      return function () {\n        this.update(state);\n      };\n    }, this.delay);\n  };\n\n  this.load = function (state) {\n    console.log(\"Loading...\", this.cnt++);\n    state.Default.loadDefault(state, [this.loadRegister, this.loadData]);\n  };\n\n  this.loadRegister = function (state, callbacks) {\n    //console.log(\"loadRegister\");\n    if (this.ready) {\n      // make sure we do not re-load if we are already loading\n      this.ready = false;\n      state.Html.setLog(state, \"Server-request: \" + this.regfile);\n      var regHttp = new XMLHttpRequest();\n      regHttp.addEventListener(\"progress\", function (e) {\n        return state.Html.progressInfo(state, e);\n      }); //regHttp.addEventListener(\"load\",(e)=>state.Html.loadInfo(state,e));\n\n      regHttp.addEventListener(\"error\", function (e) {\n        return state.Html.errorInfo(state, e);\n      });\n      regHttp.addEventListener(\"abort\", function (e) {\n        return state.Html.abortInfo(state, e);\n      });\n\n      regHttp.onreadystatechange = function () {\n        this.ready = true;\n\n        if (regHttp.readyState === 4) {\n          if (regHttp.status === 200) {\n            //console.log(regHttp.responseText);\n            var file = regHttp.responseText;\n\n            if (file !== this.datfile) {\n              // load new data\n              this.datfile = file;\n              var callback = callbacks.shift();\n\n              if (callback !== undefined) {\n                callback(state, file, callbacks);\n              }\n\n              state.Html.setInfo(file);\n            } else {\n              state.Html.setInfo(file);\n              state.Html.setLog(state);\n            }\n          } else {\n            state.Html.setLog(state, \"Unable to load \" + this.regfile);\n            state.Html.setInfo(this.regfile + \" error\");\n          }\n        } else {\n          state.Html.setInfo(this.regfile + \" error\");\n        }\n\n        ;\n      }.bind(this);\n\n      regHttp.responseType = \"\";\n      regHttp.overrideMimeType(\"text/text\");\n      regHttp.open(\"GET\", \"data/\" + this.regfile, true);\n      regHttp.setRequestHeader('cache-control', 'no-cache, must-revalidate, post-check=0, pre-check=0');\n      regHttp.setRequestHeader('cache-control', 'max-age=0');\n      regHttp.setRequestHeader('expires', '0');\n      regHttp.setRequestHeader('expires', 'Tue, 01 Jan 1980 1:00:00 GMT');\n      regHttp.setRequestHeader('pragma', 'no-cache');\n      regHttp.send();\n    } else {\n      state.Html.setInfo(\"\");\n      state.Html.setLog(state, \"Already waiting for reply...\");\n    }\n\n    ;\n  }.bind(this);\n\n  this.loadData = function (state, file, callbacks) {\n    //console.log(\"loadData\");\n    if (this.ready) {\n      // make sure we do not re-load if we are already loading\n      this.ready = false;\n      state.Html.setLog(state, \"Server-request: \" + this.datfile);\n      var datHttp = new XMLHttpRequest();\n      datHttp.addEventListener(\"progress\", function (e) {\n        return state.Html.progressInfo(state, e);\n      }); //datHttp.addEventListener(\"load\",(e)=>state.Html.loadInfo(state,e));\n\n      datHttp.addEventListener(\"error\", function (e) {\n        return state.Html.errorInfo(state, e);\n      });\n      datHttp.addEventListener(\"abort\", function (e) {\n        return state.Html.abortInfo(state, e);\n      });\n\n      datHttp.onreadystatechange = function () {\n        this.ready = true;\n\n        if (datHttp.readyState === 4) {\n          if (datHttp.status === 200) {\n            state.Html.setInfo(\"100%\");\n            state.Html.setLog(state, \"Creating database\");\n            console.log(\"Creating database from \" + file);\n            this.dbInsert(state, datHttp.responseText);\n            state.Show.showAll(state);\n            state.Html.setLog(state);\n            state.Html.setInfo(file);\n          } else {\n            state.Html.setLog(state, \"Unable to load \" + file);\n            state.Html.setInfo(file + \" error\");\n          }\n        }\n      }.bind(this);\n\n      datHttp.responseType = \"\";\n      datHttp.overrideMimeType(\"text/text\");\n      datHttp.open(\"GET\", \"data/\" + this.datfile, true);\n      datHttp.setRequestHeader('cache-control', 'no-cache, must-revalidate, post-check=0, pre-check=0');\n      datHttp.setRequestHeader('cache-control', 'max-age=0');\n      datHttp.setRequestHeader('expires', '0');\n      datHttp.setRequestHeader('expires', 'Tue, 01 Jan 1980 1:00:00 GMT');\n      datHttp.setRequestHeader('pragma', 'no-cache');\n      datHttp.send();\n    } else {\n      state.Html.setInfo(\"\");\n      state.Html.setLog(state, \"Already waiting for reply...\");\n    }\n\n    ;\n  }.bind(this);\n\n  this.getTime = function (state, s) {\n    var nn = s.match(/\\d+/g).map(Number);\n    var date0 = new Date(Date.UTC(nn[0], nn[1] - 1, nn[2], nn[3], nn[4], nn[5], ((nn[6] || '') + '000').slice(0, 3))); // modification time\n\n    console.log(\"Gettime:\", s, JSON.stringify(nn));\n    return date0.getTime();\n  };\n\n  this.setTime = function (state) {\n    var d = new Date();\n    var epoch = d.getTime(); //console.log(\"Times:\",epoch,this.epoch0);\n\n    if (this.epoch0 !== undefined) {\n      var age = epoch - this.epoch0;\n      this.mod = this.getTimeDiff(state, age);\n\n      if (state.React !== undefined && state.React.Status !== undefined) {\n        state.React.Status.setAge(state, this.mod); //console.log(\"Age:\",epoch,this.epoch0,age);\n      }\n    }\n  };\n\n  this.dbInsert = function (state, raw) {\n    try {\n      //console.log(\"Parsing JSON.\");\n      var json = JSON.parse(raw);\n      var len = json.data.length;\n\n      for (var ii = 0; ii < len; ii++) {\n        json.data[ii][\"cnt\"] = ii;\n      } // get modified date\n      //console.log(\"Setting time.\");\n\n\n      this.epoch0 = this.getTime(state, json.epoch); // data file time\n\n      this.setTime(state); // data file time\n      // make database for raw data\n\n      this.makeTable(state); // reset key counts and range\n\n      this.cnt = 0;\n      this.keyCnt = {}; // reset key-count\n      // put data into databse\n      //console.log(\"inserting\");\n\n      var data = [];\n      var rcnt = this.extractData(state, data, {}, \"\", json.data);\n      console.log(\"Count:\", rcnt); //console.log(\"Data:\",JSON.stringify(data));\n\n      console.log(\"Raw data length:\", data.length);\n      this.dataToDb(state, data); // sanity check\n\n      var sql = \"select count(*) AS cnt, max(level) AS lev FROM alarm\";\n      var dd0 = alasql(sql);\n      var nrec = dd0[0].cnt;\n      console.log(\"Records in database:\", nrec);\n      state.Path.makePath(state); // initialise path\n\n      console.log(\"Indexing and cleaning up.\");\n      this.dbindex(state, state.Path.other.table); // make indexes\n\n      this.dbindex(state, state.Path.other.rest); // make indexes\n\n      state.Layout.checkTableKeys(state);\n      console.log(\"Database is ready.\");\n    } catch (e) {\n      alert(e);\n    }\n\n    ;\n  };\n\n  this.updateKeyCnt = function (state, key, val) {\n    if (this.keyCnt[key] === undefined) {\n      this.keyCnt[key] = {\n        cnt: 0,\n        type: \"num\",\n        order: this.nasc\n      };\n    }\n\n    this.keyCnt[key].cnt = this.keyCnt[key].cnt + 1;\n\n    if (this.keyCnt[key].type === \"num\" && isNaN(val)) {\n      this.keyCnt[key].type = \"nan\";\n      this.keyCnt[key].order = this.casc;\n    }\n  };\n\n  this.extractData = function (state, data, parent, key, raw) {\n    // insert records into db (recursive)\n    var rcnt = 0;\n    var kk, kii, child, dkey; //console.log(\"Processing {\",state.Utils.toString(parent),\"} '\",key,\"' (\",state.Utils.toString(raw),\")\");\n\n    var wii = this.whatIsIt(raw);\n\n    if (wii === \"Object\" && key === \"\") {\n      //console.log(\"Found object (\",state.Utils.toString(parent),\")\");\n      child = state.Utils.cp(parent); // loop over plain values first\n\n      for (kk in raw) {\n        kii = this.whatIsIt(raw[kk]);\n\n        if (kii === \"value\") {\n          child[kk] = raw[kk];\n        }\n      } // loop over sub-objects\n\n\n      var nn = 0;\n\n      for (kk in raw) {\n        kii = this.whatIsIt(raw[kk]);\n\n        if (kii !== \"value\") {\n          nn = nn + 1;\n          rcnt = rcnt + this.extractData(state, data, child, kk, raw[kk]);\n        }\n      }\n\n      if (nn === 0) {\n        // insert \n        //console.log(\"Object was empty.\");\n        rcnt = rcnt + this.extractData(state, data, child, null, null);\n      }\n    } else if (wii === \"Object\" && key !== \"\") {\n      //console.log(\"Found object key '\",key,\"' (\",state.Utils.toString(parent),\")\");\n      child = state.Utils.cp(parent); // loop over plain values first\n\n      for (kk in raw) {\n        child[key] = kk;\n        rcnt = rcnt + this.extractData(state, data, child, \"\", raw[kk]);\n      }\n    } else if (wii === \"Array\") {\n      //console.log(\"Found array key '\",key,\"' (\",state.Utils.toString(parent),\")\");\n      var dlen = raw.length;\n\n      for (var ii = 0; ii < dlen; ii++) {\n        rcnt = rcnt + this.extractData(state, data, parent, key, raw[ii]);\n      }\n    } else {\n      //console.log(\"Found key '\",key,\"' \",wii,\" (\",state.Utils.toString(parent),\")\");\n      var doc = state.Utils.cp(parent);\n\n      if (raw !== null) {\n        if (key === \"\") {\n          doc.value = raw;\n        } else {\n          doc[key] = raw;\n        }\n      } //console.log(\"Updating internal raw structure\",JSON.stringify(setup));\n\n\n      for (dkey in doc) {\n        var val = doc[dkey];\n        this.updateKeyCnt(state, dkey, val); //if (this.values[key]  === undefined) {\n        //\tthis.values[key]=[];\n        //  };\n        //console.log(\"Setup:\",JSON.stringify(setup));\n        //console.log(\"Key:\",key,JSON.stringify(this.values));\n        //if (this.values[dkey].indexOf(val)  === -1 ) { // value not in range\n        //\t\tthis.values[dkey].push(val); // add value to range\n        //\t    };\n      }\n\n      ; //console.log(\">>> Inserting:\",state.Utils.toString(doc));\n\n      rcnt = rcnt + 1;\n      this.cnt = this.cnt + 1; //if (this.cnt < 10) { // debug purposes\n\n      state.Threshold.setGThr(state, doc);\n      doc.level = state.Threshold.getLevel(state, doc);\n      doc.lat = state.Threshold.getLat(state, doc);\n      doc.lon = state.Threshold.getLon(state, doc);\n      this.updateKeyCnt(state, \"lon\", doc.lon);\n      this.updateKeyCnt(state, \"lat\", doc.lat);\n      data.push(doc);\n    }\n\n    return rcnt;\n  };\n\n  this.dbextract = function (state, showFunc) {\n    // extract data from db and show\n    // extract data from db and insert into data-array\n    // var parent={};//{test:{$exists:false}};\n    var docs;\n    var where = this.getWhere(state);\n    var m = {};\n    var docs0 = this.getCntDocs(state, where);\n    var nrec = docs0[0].cnt;\n    state.Matrix.cnt = nrec;\n\n    if (nrec > state.Matrix.popSeries) {\n      // only use counts...\n      state.Matrix.initKeyCnt(state);\n      state.Matrix.mapKeyCnt(state, where, nrec, state.Path.keys.other);\n      state.Matrix.mapKeyCnt(state, where, nrec, state.Path.keys.trash); //console.log(\"Setup:\",\n      //\t    JSON.stringify(state.Matrix.values),\n      //\t    JSON.stringify(state.Matrix.keyCnt));\n\n      state.Path.exportAllKeys(state); // can not export keys before we have a cnt-map\n\n      state.Matrix.sortMatrixValues(state);\n      docs = this.getCntDocs(state, where, state.Path.other.table); //console.log(\"Count:\",sql,JSON.stringify(docs));\n      // add \"undefined\" range of keys that are not present in every doc...\n\n      state.Matrix.makeMatrixCnt(state, docs, m);\n    } else {\n      console.log(\"Database where:\", where);\n      docs = this.getDocs(state, where); // get all docs\n\n      console.log(\">>>Extraction key (where='\", where, \"') Docs:\", docs.length);\n      state.Matrix.initKeyCnt(state);\n      state.Matrix.mapKeys(state, docs);\n      state.Matrix.addMapKeys(state, docs); //console.log(\"Setup=\",JSON.stringify(setup));\n      //console.log (\"Maprange:\",JSON.stringify(state.Matrix.values));\n      // subset contains the keys being displayed in matrix...\n\n      state.Path.exportAllKeys(state); // can not export keys before we have a cnt-map\n\n      state.Matrix.sortMatrixValues(state); // make matrix\n\n      state.Matrix.makeMatrix(state, docs, m); //console.log (\"Matrix:\",JSON.stringify(matrix));\n    }\n\n    showFunc(state, m);\n  };\n\n  this.dbindex = function (state, ks) {\n    // make indexes on all keys\n    var s = \"\";\n    var klen = ks.length;\n\n    for (var ii = 0; ii < klen; ii++) {\n      //alasql(\"CREATE INDEX ? ON TABLE alarm.?\",ks[ii],ks[ii]);\n      s = s + \" \" + ks[ii];\n    }\n\n    ; //console.log(\"Indexes:\",s);\n  };\n\n  this.getWhereDetail = function (key, val) {\n    if (val === undefined || val === null || val === \"\") {\n      return key + ' is NULL';\n    } else {\n      return key + '=\"' + val + '\"';\n    }\n\n    ;\n  };\n\n  this.getWhere = function (state) {\n    var where = \"\";\n    console.log(\"Path:\", JSON.stringify(state.Path.keys));\n\n    if (state.Path.keys.path !== undefined) {\n      var plen = state.Path.keys.path.length;\n\n      for (var ii = 0; ii < plen; ii++) {\n        var key = state.Path.keys.path[ii];\n\n        if (state.Path.select.where[key] === undefined || state.Path.select.where[key] === null || state.Path.select.where[key] === \"\") {\n          if (where !== \"\") {\n            where = where + ' AND ';\n          }\n\n          ;\n          where = where + key + ' is NULL';\n        } else {\n          //if (where !== \"\") { where = where +  ' AND ';};\n          //where=where + key +'=\"'+state.Path.select.val[key]+'\"';\n          if (where !== \"\") {\n            where = where + ' AND ';\n          }\n\n          ;\n          where = where + \"(\" + state.Path.select.where[key] + \")\";\n        }\n      }\n\n      ;\n\n      if (where !== \"\") {\n        where = \" WHERE \" + where;\n      } //console.log(\"Where=|\"+where+\"|\")\n\n    }\n\n    ;\n    return where;\n  };\n\n  this.getGroup = function (keys) {\n    var group = \"\";\n    var plen = keys.length;\n\n    for (var ii = 0; ii < plen; ii++) {\n      var key = keys[ii];\n\n      if (group !== \"\") {\n        group = group + ',';\n      }\n\n      ;\n      group = group + key;\n    }\n\n    ;\n\n    if (group !== \"\") {\n      group = \" GROUP BY \" + group;\n    }\n\n    return group;\n  };\n\n  this.getCols = function (keys) {\n    var cols = \"\";\n    var plen = keys.length;\n\n    for (var ii = 0; ii < plen; ii++) {\n      var key = keys[ii];\n      cols = cols + key;\n\n      if (cols !== \"\") {\n        cols = cols + ',';\n      }\n\n      ;\n    }\n\n    ;\n    return cols;\n  };\n\n  this.getAll = function (state) {\n    var cols = \"\";\n    var plen = state.Path.keys.other.length;\n\n    for (var ii = 0; ii < plen; ii++) {\n      var key = state.Path.keys.other[ii];\n      cols = cols + key;\n\n      if (cols !== \"\") {\n        cols = cols + ',';\n      }\n\n      ;\n    }\n\n    ;\n    return cols;\n  };\n\n  this.getCntDocs = function (state, where, keys) {\n    var sql, dd;\n    var body = \"count(*) AS cnt, max(level) AS lev, max(lat) AS maxlat, min(lat) AS minlat, max(lon) AS maxlon, min(lon) AS minlon FROM alarm\";\n\n    if (keys === undefined) {\n      sql = \"select \" + body + where;\n      dd = alasql(sql); //console.log(\"initial count:\",dd[0].cnt,JSON.stringify(dd0));\n      //console.log(\"Cnt:\",JSON.stringify(dd));\n\n      return dd;\n    } else {\n      var cols = this.getCols(keys);\n      var group = this.getGroup(keys);\n      sql = \"select \" + cols + body + where + group;\n      dd = alasql(sql); //console.log(\"Cnt:\",JSON.stringify(dd));\n\n      return dd;\n    }\n  };\n\n  this.getDocs = function (state, where) {\n    var dd = alasql(\"select * FROM alarm\" + where);\n    return dd;\n  };\n\n  this.makeTable = function (state) {\n    alasql('DROP TABLE IF EXISTS alarm; CREATE TABLE alarm;');\n  };\n\n  this.dataToDb = function (state, data) {\n    alasql.tables.alarm.data = data;\n  };\n\n  this.getKeyCnt = function (state, key, where) {\n    var sql = \"select \" + key + \",count(*) AS cnt FROM alarm\" + where + \" GROUP BY \" + key;\n    return alasql(sql);\n  };\n\n  this.whatIsIt = function (object) {\n    // determine object type\n    if (object === null) {\n      return \"null\";\n    } else if (object.constructor === this.arrayConstructor) {\n      return \"Array\";\n    } else if (object.constructor === this.objectConstructor) {\n      return \"Object\";\n    } else {\n      return \"value\";\n    }\n  };\n\n  this.getTimeDiff = function (state, dt) {\n    var s = \"\";\n\n    if (dt === undefined || isNaN(state, dt)) {\n      return s;\n    }\n\n    ;\n    var msec = Math.abs(state, dt);\n    var dd = Math.floor(state, (state, msec / 1000 / 60) / 60 / 24);\n    msec -= dd * 1000 * 60 * 60 * 24;\n    var hh = Math.floor(state, (state, msec / 1000) / 60 / 60);\n    msec -= hh * 1000 * 60 * 60;\n    var mm = Math.floor(state, msec / 1000 / 60);\n    msec -= mm * 1000 * 60;\n    var ss = Math.floor(state, msec / 1000);\n    msec -= ss * 1000;\n\n    if (dt < 0) {\n      s = \"-\";\n    } else if (dt > 0) {\n      s = \"+\";\n    } else {\n      s = \"0\";\n    }\n\n    if (dd !== 0) s = s + \" \" + state.Utils.numberWithCommas(dd) + \"d\";\n    if (hh !== 0) s = s + \" \" + hh + \"h\";\n    if (mm !== 0) s = s + \" \" + mm + \"m\"; //if (ss !== 0) s=s+\" \"+ss+\"s\";\n\n    return s;\n  };\n}\n\n;\nexport default Database;","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/lib/DatabaseLib.js"],"names":["alasql","window","Database","cnt","keyCnt","values","epoch0","regfile","datfile","arrayConstructor","constructor","objectConstructor","casc","cdes","nasc","ndes","delay","ready","log","mod","init","state","par","Utils","version","update","setTime","load","setTimeout","console","Default","loadDefault","loadRegister","loadData","callbacks","Html","setLog","regHttp","XMLHttpRequest","addEventListener","e","progressInfo","errorInfo","abortInfo","onreadystatechange","readyState","status","file","responseText","callback","shift","undefined","setInfo","bind","responseType","overrideMimeType","open","setRequestHeader","send","datHttp","dbInsert","Show","showAll","getTime","s","nn","match","map","Number","date0","Date","UTC","slice","JSON","stringify","d","epoch","age","getTimeDiff","React","Status","setAge","raw","json","parse","len","data","length","ii","makeTable","rcnt","extractData","dataToDb","sql","dd0","nrec","Path","makePath","dbindex","other","table","rest","Layout","checkTableKeys","alert","updateKeyCnt","key","val","type","order","isNaN","parent","kk","kii","child","dkey","wii","whatIsIt","cp","dlen","doc","value","Threshold","setGThr","level","getLevel","lat","getLat","lon","getLon","push","dbextract","showFunc","docs","where","getWhere","m","docs0","getCntDocs","Matrix","popSeries","initKeyCnt","mapKeyCnt","keys","trash","exportAllKeys","sortMatrixValues","makeMatrixCnt","getDocs","mapKeys","addMapKeys","makeMatrix","ks","klen","getWhereDetail","path","plen","select","getGroup","group","getCols","cols","getAll","dd","body","tables","alarm","getKeyCnt","object","dt","msec","Math","abs","floor","hh","mm","ss","numberWithCommas"],"mappings":"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","sourcesContent":["//console.log(\"Loading DatabaseLib.js\");\n\nconst alasql = window.alasql;\n\nfunction Database() {\n    this.cnt=0;\n    this.keyCnt={};\n    this.values= {};\n    this.epoch0=0;\n    this.regfile=\"register\";      // register file (shows current datfile)\n    this.datfile=\"\";              // json data file\n    this.arrayConstructor=[].constructor;\n    this.objectConstructor={}.constructor;\n    this.casc=0; // key is sorted ascending\n    this.cdes=1; // key is sorted descending\n    this.nasc=2; // key is sorted ascending\n    this.ndes=3; // key is sorted descending\n    this.delay=100000;  // server-polling period in ms\n    this.ready=true;     // can we poll server or is another poll running\n    this.log=\"\";\n    this.mod=\"\";\n    this.init=function(state){\n\tvar par=\"Database\"+state.Utils.version;\n\tstate.Utils.init(par,this);\n    };\n    this.update=function(state) {\n\tthis.setTime(state);\n\tthis.load(state);\n\tsetTimeout(()=>function() {this.update(state)},this.delay);\n    };\n    this.load=function(state) {\n\tconsole.log(\"Loading...\",this.cnt++);\n\tstate.Default.loadDefault(state,[this.loadRegister,\n\t\t\t     this.loadData]);\n    };\n    this.loadRegister=function(state, callbacks ) {\n\t//console.log(\"loadRegister\");\n\tif (this.ready) { // make sure we do not re-load if we are already loading\n\t    this.ready=false;\n\t    state.Html.setLog(state, \"Server-request: \"+this.regfile);\n\t    var regHttp = new XMLHttpRequest();\n\t    regHttp.addEventListener(\"progress\",(e)=>state.Html.progressInfo(state,e));\n\t    //regHttp.addEventListener(\"load\",(e)=>state.Html.loadInfo(state,e));\n\t    regHttp.addEventListener(\"error\",(e)=>state.Html.errorInfo(state,e));\n\t    regHttp.addEventListener(\"abort\",(e)=>state.Html.abortInfo(state,e));\n\t    regHttp.onreadystatechange = function() {\n\t\tthis.ready=true;\n\t\tif (regHttp.readyState  === 4) {\n\t\t    if (regHttp.status  === 200) {\n\t\t\t//console.log(regHttp.responseText);\n\t\t\tvar file = regHttp.responseText;\n\t\t\tif (file !== this.datfile) { // load new data\n\t    \t\t    this.datfile=file;\n\t\t\t    var callback=callbacks.shift();\n\t\t\t    if (callback !== undefined) {\n\t\t\t\tcallback(state,file,callbacks);\n\t\t\t    }\n\t\t\t    state.Html.setInfo(file);\n\t\t\t} else {\n\t\t\t    state.Html.setInfo(file);\n\t\t\t    state.Html.setLog(state);\n\t\t\t}\n\t\t    } else {\n\t\t\tstate.Html.setLog(state,\"Unable to load \"+this.regfile);\n\t\t\tstate.Html.setInfo(this.regfile+\" error\");\n\t\t    }\n\t\t} else {\n\t\t    state.Html.setInfo(this.regfile+\" error\");\t\t\n\t\t};\n\t    }.bind(this);\n\t    regHttp.responseType=\"\";\n\t    regHttp.overrideMimeType(\"text/text\");\n\t    regHttp.open(\"GET\", \"data/\"+this.regfile, true);\n\t    regHttp.setRequestHeader('cache-control', 'no-cache, must-revalidate, post-check=0, pre-check=0');\n\t    regHttp.setRequestHeader('cache-control', 'max-age=0');\n\t    regHttp.setRequestHeader('expires', '0');\n\t    regHttp.setRequestHeader('expires', 'Tue, 01 Jan 1980 1:00:00 GMT');\n\t    regHttp.setRequestHeader('pragma', 'no-cache');\n\t    regHttp.send(); \n\t} else {\n\t    state.Html.setInfo(\"\");\n\t    state.Html.setLog(state,\"Already waiting for reply...\");\n\t};\n    }.bind(this);\n    this.loadData=function(state,file, callbacks ) {\n\t//console.log(\"loadData\");\n\tif (this.ready) { // make sure we do not re-load if we are already loading\n\t    this.ready=false;\n\t    state.Html.setLog(state, \"Server-request: \"+this.datfile);\n\t    var datHttp = new XMLHttpRequest();\n\t    datHttp.addEventListener(\"progress\",(e)=>state.Html.progressInfo(state,e));\n\t    //datHttp.addEventListener(\"load\",(e)=>state.Html.loadInfo(state,e));\n\t    datHttp.addEventListener(\"error\",(e)=>state.Html.errorInfo(state,e));\n\t    datHttp.addEventListener(\"abort\",(e)=>state.Html.abortInfo(state,e));\n\t    datHttp.onreadystatechange = function() {\n\t\tthis.ready=true;\n\t\tif (datHttp.readyState  === 4) {\n\t\t    if (datHttp.status  === 200) {\n\t\t\tstate.Html.setInfo(\"100%\");\n\t    \t\tstate.Html.setLog(state,\"Creating database\");\n\t\t\tconsole.log(\"Creating database from \"+file);\n\t\t\tthis.dbInsert(state,datHttp.responseText);\n\t\t\tstate.Show.showAll(state);\n\t\t\tstate.Html.setLog(state);\n\t\t\tstate.Html.setInfo(file);\n\t\t    } else {\n\t    \t\tstate.Html.setLog(state,\"Unable to load \"+file);\n\t\t\tstate.Html.setInfo(file+\" error\");\n\t\t    }\n\t\t}\n\t    }.bind(this);\n\t    datHttp.responseType=\"\";\n\t    datHttp.overrideMimeType(\"text/text\");\n\t    datHttp.open(\"GET\", \"data/\"+this.datfile, true);\n\t    datHttp.setRequestHeader('cache-control', 'no-cache, must-revalidate, post-check=0, pre-check=0');\n\t    datHttp.setRequestHeader('cache-control', 'max-age=0');\n\t    datHttp.setRequestHeader('expires', '0');\n\t    datHttp.setRequestHeader('expires', 'Tue, 01 Jan 1980 1:00:00 GMT');\n\t    datHttp.setRequestHeader('pragma', 'no-cache');\n\t    datHttp.send(); \n\t} else {\n\t    state.Html.setInfo(\"\");\n\t    state.Html.setLog(state, \"Already waiting for reply...\");\n\t};\n    }.bind(this);\n    this.getTime=function(state,s) {\n\tvar nn = s.match(/\\d+/g).map(Number);\n\tvar date0 = new Date(Date.UTC(nn[0],nn[1]-1,nn[2],nn[3],nn[4],nn[5],\n\t\t\t\t      ((nn[6]||'')+'000').slice(0,3))); // modification time\n\tconsole.log(\"Gettime:\",s,JSON.stringify(nn));\n\treturn date0.getTime();\n    };\n    this.setTime=function(state) {\n\tvar d = new Date();\n\tvar epoch=d.getTime();\n\t//console.log(\"Times:\",epoch,this.epoch0);\n\tif (this.epoch0 !== undefined) {\n\t    var age = epoch - this.epoch0;\n\t    this.mod=this.getTimeDiff(state,age);\n\t    if (state.React !== undefined && state.React.Status !== undefined) {\n\t\tstate.React.Status.setAge(state,this.mod);\n\t\t//console.log(\"Age:\",epoch,this.epoch0,age);\n\t    }\n\t}\n    };\n    this.dbInsert=function(state,raw) {\n\ttry {\n\t    //console.log(\"Parsing JSON.\");\n\t    var json = JSON.parse(raw);\n\t    var len=json.data.length\n\t    for (var ii=0;ii<len;ii++) {\n\t\tjson.data[ii][\"cnt\"]=ii\n\t    }\n\t    // get modified date\n\t    //console.log(\"Setting time.\");\n\t    this.epoch0=this.getTime(state,json.epoch);     // data file time\n\t    this.setTime(state);     // data file time\n\t    // make database for raw data\n\t    this.makeTable(state);\n\t    // reset key counts and range\n\t    this.cnt=0;\n\t    this.keyCnt={}; // reset key-count\n\t    // put data into databse\n\t    //console.log(\"inserting\");\n\t    var data=[];\n\t    var rcnt=this.extractData(state,data,{},\"\",json.data);\n\t    console.log(\"Count:\",rcnt);\n\t    //console.log(\"Data:\",JSON.stringify(data));\n\t    console.log(\"Raw data length:\",data.length);\n\t    this.dataToDb(state,data);\n\t    // sanity check\n\t    var sql=\"select count(*) AS cnt, max(level) AS lev FROM alarm\";\n\t    var dd0=alasql(sql);\n\t    var nrec= dd0[0].cnt;\n\t    console.log(\"Records in database:\",nrec);\n\t    state.Path.makePath(state); // initialise path\n\t    console.log(\"Indexing and cleaning up.\");\n\t    this.dbindex(state,state.Path.other.table); // make indexes\n\t    this.dbindex(state,state.Path.other.rest); // make indexes\n\t    state.Layout.checkTableKeys(state);\n\t    console.log(\"Database is ready.\");\n\t} catch (e) {\n\t    alert(e);\n\t};\n    };\n    this.updateKeyCnt=function(state,key,val) {\n\tif (this.keyCnt[key] === undefined) {\n\t    this.keyCnt[key]={cnt:0,type:\"num\",order:this.nasc};\n\t}\n\tthis.keyCnt[key].cnt=(this.keyCnt[key].cnt)+1;\n\tif (this.keyCnt[key].type  === \"num\" && isNaN(val)) {\n\t    this.keyCnt[key].type=\"nan\";\n\t    this.keyCnt[key].order=this.casc;\n\t}\n    };\n    this.extractData=function(state,data,parent,key,raw) { // insert records into db (recursive)\n\tvar rcnt=0;\n\tvar kk,kii,child,dkey;\n\t//console.log(\"Processing {\",state.Utils.toString(parent),\"} '\",key,\"' (\",state.Utils.toString(raw),\")\");\n\tvar wii=this.whatIsIt(raw);\n\tif (wii  === \"Object\" && key  === \"\") {\n\t    //console.log(\"Found object (\",state.Utils.toString(parent),\")\");\n\t    child=state.Utils.cp(parent);\n\t    // loop over plain values first\n\t    for (kk in raw) {\n\t\tkii=this.whatIsIt(raw[kk]);\n\t\tif (kii  === \"value\") {\n\t\t    child[kk]=raw[kk];\n\t\t}\n\t    }\n\t    // loop over sub-objects\n\t    var nn=0;\n\t    for (kk in raw) {\n\t\tkii=this.whatIsIt(raw[kk]);\n\t\tif (kii !== \"value\") {\n\t\t    nn=nn+1;\n\t\t    rcnt=rcnt+this.extractData(state,data,child,kk,raw[kk]);\n\t\t}\n\t    }\n\t    if (nn  === 0) { // insert \n\t\t//console.log(\"Object was empty.\");\n\t\trcnt=rcnt+this.extractData(state,data,child,null,null);\n\t    }\n\t} else if (wii  === \"Object\" && key !== \"\") {\n\t    //console.log(\"Found object key '\",key,\"' (\",state.Utils.toString(parent),\")\");\n\t    child=state.Utils.cp(parent);\n\t    // loop over plain values first\n\t    for (kk in raw) {\n\t\tchild[key]=kk;\n\t\trcnt=rcnt+this.extractData(state,data,child,\"\",raw[kk]);\n\t    }\n\t} else if (wii  === \"Array\") {\n\t    //console.log(\"Found array key '\",key,\"' (\",state.Utils.toString(parent),\")\");\n\t    var dlen = raw.length;\n\t    for (var ii = 0; ii < dlen; ii++) {\n\t\trcnt=rcnt+this.extractData(state,data,parent,key,raw[ii]);\n\t    }\n\t} else {\n\t    //console.log(\"Found key '\",key,\"' \",wii,\" (\",state.Utils.toString(parent),\")\");\n\t    var doc=state.Utils.cp(parent);\n\t    if (raw !== null) {\n\t\tif (key  === \"\") {\n\t\t    doc.value=raw;\n\t\t} else {\n\t\t    doc[key]=raw;\n\t\t}\n\t    }\n\t    //console.log(\"Updating internal raw structure\",JSON.stringify(setup));\n\t    for (dkey in doc) {\n\t\tvar val=doc[dkey];\n\t\tthis.updateKeyCnt(state,dkey,val);\n\t\t//if (this.values[key]  === undefined) {\n\t\t//\tthis.values[key]=[];\n\t\t//  };\n\t\t//console.log(\"Setup:\",JSON.stringify(setup));\n\t\t//console.log(\"Key:\",key,JSON.stringify(this.values));\n    \t\t//if (this.values[dkey].indexOf(val)  === -1 ) { // value not in range\n\t\t//\t\tthis.values[dkey].push(val); // add value to range\n\t\t//\t    };\n\t    };\n\t    //console.log(\">>> Inserting:\",state.Utils.toString(doc));\n\t    rcnt=rcnt+1;\n\t    this.cnt=this.cnt+1;\n\t    //if (this.cnt < 10) { // debug purposes\n\t    state.Threshold.setGThr(state,doc);\n\t    doc.level=state.Threshold.getLevel(state,doc);\n\t    doc.lat=state.Threshold.getLat(state,doc);\n\t    doc.lon=state.Threshold.getLon(state,doc);\n\t    this.updateKeyCnt(state,\"lon\",doc.lon);\n\t    this.updateKeyCnt(state,\"lat\",doc.lat);\n\t    data.push(doc);\n\t}\n\treturn rcnt;\n    };\n    this.dbextract=function(state,showFunc) { // extract data from db and show\n\t// extract data from db and insert into data-array\n\t// var parent={};//{test:{$exists:false}};\n\tvar docs;\n\tvar where = this.getWhere(state);\n\tvar m={};\n\tvar docs0=this.getCntDocs(state,where);\n\tvar nrec= docs0[0].cnt;\n\tstate.Matrix.cnt=nrec;\n\tif (nrec > state.Matrix.popSeries) { // only use counts...\n\t    state.Matrix.initKeyCnt(state);\n\t    state.Matrix.mapKeyCnt(state,where,nrec,state.Path.keys.other);\n\t    state.Matrix.mapKeyCnt(state,where,nrec,state.Path.keys.trash);\n\t    //console.log(\"Setup:\",\n\t    //\t    JSON.stringify(state.Matrix.values),\n\t    //\t    JSON.stringify(state.Matrix.keyCnt));\n\t    state.Path.exportAllKeys(state); // can not export keys before we have a cnt-map\n\t    state.Matrix.sortMatrixValues(state);\n\t    docs=this.getCntDocs(state,where,state.Path.other.table);\n\t    //console.log(\"Count:\",sql,JSON.stringify(docs));\n\t    // add \"undefined\" range of keys that are not present in every doc...\n\t    state.Matrix.makeMatrixCnt(state,docs,m);\n\t} else {\n\t    console.log(\"Database where:\",where);\n\t    docs=this.getDocs(state,where); // get all docs\n\t    console.log(\">>>Extraction key (where='\",where,\"') Docs:\",docs.length);\n\t    state.Matrix.initKeyCnt(state);\n\t    state.Matrix.mapKeys(state,docs);\n\t    state.Matrix.addMapKeys(state,docs);\n\t    //console.log(\"Setup=\",JSON.stringify(setup));\n\t    //console.log (\"Maprange:\",JSON.stringify(state.Matrix.values));\n\t    // subset contains the keys being displayed in matrix...\n\t    state.Path.exportAllKeys(state); // can not export keys before we have a cnt-map\n\t    state.Matrix.sortMatrixValues(state);\n\t    // make matrix\n\t    state.Matrix.makeMatrix(state,docs,m);\n\t    //console.log (\"Matrix:\",JSON.stringify(matrix));\n\t}\n\tshowFunc(state,m);\n    };\n    this.dbindex=function(state,ks) { // make indexes on all keys\n\tvar s=\"\";\n\tvar klen = ks.length;\n\tfor (var ii = 0; ii < klen; ii++) {\n\t    //alasql(\"CREATE INDEX ? ON TABLE alarm.?\",ks[ii],ks[ii]);\n\t    s=s+\" \"+ks[ii];\n\t};\n\t//console.log(\"Indexes:\",s);\n    };\n    this.getWhereDetail=function(key,val) {\n\tif (val  === undefined ||\n\t    val  === null ||\n\t    val  === \"\") {\n\t    return key +' is NULL';\n\t} else {\n\t    return key + '=\"'+val+'\"'\n\t};\n    };\n    this.getWhere=function(state) {\n\tvar where=\"\";\n\tconsole.log(\"Path:\",JSON.stringify(state.Path.keys));\n\tif (state.Path.keys.path !== undefined) {\n\t    var plen = state.Path.keys.path.length;\n\t    for (var ii = 0; ii < plen; ii++) {\n\t\tvar key=state.Path.keys.path[ii];\n\t\tif (state.Path.select.where[key]  === undefined ||\n\t\t    state.Path.select.where[key]  === null ||\n\t\t    state.Path.select.where[key]  === \"\") {\n\t\t    if (where !== \"\") { where = where +  ' AND ';};\n\t\t    where= where + key +' is NULL';\n\t\t} else {\n\t\t    //if (where !== \"\") { where = where +  ' AND ';};\n\t\t    //where=where + key +'=\"'+state.Path.select.val[key]+'\"';\n\t\t    if (where !== \"\") { where = where +  ' AND ';};\n\t\t    where=where + \"(\"+ state.Path.select.where[key]+\")\";\n\t\t}\n\t    };\n\t    if (where !== \"\") {where=\" WHERE \"+where;}\n\t    //console.log(\"Where=|\"+where+\"|\")\n\t};\n\treturn where;\n    };\n    this.getGroup=function(keys) {\n\tvar group=\"\";\n\tvar plen = keys.length;\n\tfor (var ii = 0; ii < plen; ii++) {\n\t    var key=keys[ii];\n\t    if (group !== \"\") { group = group +  ',';};\n\t    group= group + key;\n\t};\n\tif (group !== \"\") {group=\" GROUP BY \"+group;}\n\treturn group;\n    };\n    this.getCols=function(keys) {\n\tvar cols=\"\";\n\tvar plen = keys.length;\n\tfor (var ii = 0; ii < plen; ii++) {\n\t    var key=keys[ii];\n\t    cols= cols + key;\n\t    if (cols !== \"\") { cols = cols +  ',';};\n\t};\n\treturn cols;\n    };\n    this.getAll=function(state) {\n\tvar cols=\"\";\n\tvar plen = state.Path.keys.other.length;\n\tfor (var ii = 0; ii < plen; ii++) {\n\t    var key=state.Path.keys.other[ii];\n\t    cols= cols + key;\n\t    if (cols !== \"\") { cols = cols +  ',';};\n\t};\n\treturn cols;\n    };\n    this.getCntDocs=function(state,where,keys) {\n\tvar sql,dd;\n\tvar body=\"count(*) AS cnt, max(level) AS lev, max(lat) AS maxlat, min(lat) AS minlat, max(lon) AS maxlon, min(lon) AS minlon FROM alarm\";\n\tif (keys  === undefined) {\n\t    sql=\"select \"+body+where;\n\t    dd=alasql(sql);\n\t    //console.log(\"initial count:\",dd[0].cnt,JSON.stringify(dd0));\n\t    //console.log(\"Cnt:\",JSON.stringify(dd));\n\t    return dd;\n\t} else {\n\t    var cols = this.getCols(keys);\n\t    var group = this.getGroup(keys);\n\t    sql=\"select \"+cols+body+\n    \t\twhere+group;\n\t    dd=alasql(sql);\n\t    //console.log(\"Cnt:\",JSON.stringify(dd));\n\t    return dd\n\t}\n    };\n    this.getDocs=function(state,where) {\n\tvar dd=alasql(\"select * FROM alarm\"+where);\n\treturn dd;\n    };\n    this.makeTable=function(state) {\n\talasql('DROP TABLE IF EXISTS alarm; CREATE TABLE alarm;');\n    };\n    this.dataToDb=function(state,data) {\n\talasql.tables.alarm.data = data;\n    };\n    this.getKeyCnt=function(state,key,where){\n\tvar sql=\"select \"+key+\",count(*) AS cnt FROM alarm\"+\n\t    where+\" GROUP BY \"+key;\n\treturn alasql(sql);\n    };\n    this.whatIsIt=function(object) { // determine object type\n\tif (object  === null) {\n\t    return \"null\";\n\t} else if (object.constructor  === this.arrayConstructor) {\n\t    return \"Array\";\n\t}\n\telse if (object.constructor  === this.objectConstructor) {\n\t    return \"Object\";\n\t}\n\telse {\n\t    return \"value\";\n\t}\n    };\n    this.getTimeDiff=function(state,dt) {\n\tvar s=\"\";\n\tif (dt  === undefined || isNaN(state,dt)) {return s;};\n\tvar msec=Math.abs(state,dt);\n\tvar dd = Math.floor(state,((state,(msec / 1000) / 60) / 60) / 24);\n\tmsec -= dd * 1000 * 60 * 60 * 24;\n\tvar hh = Math.floor(state,((state,msec / 1000) / 60) / 60);\n\tmsec -= hh * 1000 * 60 * 60;\n\tvar mm = Math.floor(state,(msec / 1000) / 60);\n\tmsec -= mm * 1000 * 60;\n\tvar ss = Math.floor(state,msec / 1000);\n\tmsec -= ss * 1000;\n\tif (dt<0) {\n\t    s=\"-\";\n\t} else if (dt > 0) {\n\t    s=\"+\";\n\t} else {\n\t    s=\"0\";\n\t}\n\tif (dd !== 0) s=s+\" \"+state.Utils.numberWithCommas(dd)+\"d\";\n\tif (hh !== 0) s=s+\" \"+hh+\"h\";\n\tif (mm !== 0) s=s+\" \"+mm+\"m\";\n\t//if (ss !== 0) s=s+\" \"+ss+\"s\";\n\treturn s;\n    }\n};\n\nexport default Database;\n"]},"metadata":{},"sourceType":"module"}