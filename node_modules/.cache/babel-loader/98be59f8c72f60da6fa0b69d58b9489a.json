{"ast":null,"code":"import _classCallCheck from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/franktt/react/varseltavle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/franktt/react/varseltavle/src/react/TooltipTable.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { teal_palette } from '../mui/metMuiThemes'; //import Paper from '@material-ui/core/Paper';\n//import Grid from '@material-ui/core/Grid';\n//import SummaryCell from './SummaryCell';\n//import SeriesCell  from './SeriesCell';\n//import CanvasText  from './CanvasTextComponent';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      height: '100%'\n    },\n    paper: {\n      overflow: 'hidden',\n      tableLayout: 'fixed',\n      padding: 0,\n      margin: 0\n    },\n    divTable: {\n      display: 'table',\n      width: '100%'\n    },\n    divTableRow: {\n      backgroundColor: teal_palette.main,\n      border: '1px solid #000',\n      display: 'table-row',\n      padding: '5px'\n    },\n    divTableHdr: {\n      border: '1px solid #000',\n      display: 'table-cell',\n      padding: '5px',\n      backgroundColor: teal_palette.main,\n      color: 'black'\n    },\n    divTableCell: {\n      border: '1px solid #000',\n      display: 'table-cell',\n      padding: '5px'\n    },\n    divTableCellCursor: {\n      cursor: \"pointer\",\n      border: '1px solid #000',\n      display: 'table-cell',\n      padding: '5px'\n    },\n    divTableBody: {\n      display: 'table-row-group'\n    }\n  };\n}; //const mui = createTheme({palette:teal_palette});\n// ---------------- DATA\n\n\nfunction FirstDataCell(props) {\n  var classes = props.classes,\n      rowval = props.rowval; //,state, rowindex\n\n  return React.createElement(\"div\", {\n    className: classes.divTableHdr,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, rowval);\n} //{rowval}\n\n\nfunction DataCell(props) {\n  var classes = props.classes,\n      val = props.val,\n      onclick = props.onclick,\n      bgcolor = props.bgcolor; //state,rowindex,\n\n  var rval = val;\n\n  if (isNaN(rval)) {\n    rval = val;\n  } else {\n    rval = parseFloat(rval, 0).toFixed(2);\n  }\n\n  ;\n  return React.createElement(\"div\", {\n    className: onclick !== undefined ? classes.divTableCellCursor : classes.divTableCell,\n    style: {\n      backgroundColor: bgcolor\n    },\n    onClick: onclick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, rval);\n}\n\nfunction renderDataCell(classes, state, key, click, sub, rowindex, colindex) {\n  var maxlev = sub[\"level\"] || 0;\n  var bgcolor = state.Colors.getLevelBgColor(maxlev);\n  var rowkey = key;\n  var rowval = sub[key];\n  var rowwhere = state.Database.getWhereDetail(rowkey, rowval);\n  var onclick = click.indexOf(rowkey) === -1 ? undefined : function () {\n    state.Navigate.selectKey(state, rowkey, rowval, rowwhere, 1);\n  };\n  return React.createElement(DataCell, {\n    classes: classes,\n    state: state,\n    key: \"\".concat(rowindex, \"-\").concat(colindex),\n    val: sub[key],\n    rowindex: rowindex,\n    bgcolor: bgcolor,\n    onclick: onclick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  });\n} //{{rowkey:'test1',colkey:'test2',title:title}}\n\n\nfunction dataRow(classes, state, key, click, subs, rowindex) {\n  //return null; // no entries, ignore row...\n  var mapFunction = function mapFunction(sub, colindex) {\n    return renderDataCell(classes, state, key, click, sub, rowindex, colindex);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.divTableRow,\n    key: rowindex.toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(FirstDataCell, {\n    classes: classes,\n    state: state,\n    key: 'k-' + rowindex,\n    rowval: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), subs.map(mapFunction));\n}\n\n; // ---------------- Details\n\nfunction Details(props) {\n  var classes = props.classes,\n      state = props.state,\n      keys = props.keys,\n      click = props.click,\n      subs = props.subs; // classes, element\n\n  var mapFunction = function mapFunction(key, rowindex) {\n    return dataRow(classes, state, key, click, subs, rowindex);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.divTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.divTableBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, keys.map(mapFunction)));\n}\n\nvar TooltipTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TooltipTable, _Component);\n\n  function TooltipTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TooltipTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TooltipTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.updateWindowDimensions = function () {\n      _this.width = window.innerWidth;\n      _this.height = window.innerHeight;\n      _this.bbx = _this.el.getBoundingClientRect(); //console.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n\n    return _this;\n  }\n\n  _createClass(TooltipTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n  }, {\n    key: \"element\",\n    value: function element(el) {\n      if (el !== undefined && el !== null) {\n        this.el = el;\n        this.bbx = this.el.getBoundingClientRect(); //console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n      }\n\n      ;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          state = _this$props.state,\n          classes = _this$props.classes,\n          keys = _this$props.keys,\n          click = _this$props.click,\n          subs = _this$props.subs; //console.log(\"##### Rendering TooltipTable.\");\n\n      return React.createElement(\"div\", {\n        ref: function ref(el) {\n          _this2.element(el);\n        },\n        className: classes.root,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Details, {\n        state: state,\n        classes: classes,\n        element: this,\n        keys: keys,\n        click: click,\n        subs: subs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TooltipTable;\n}(Component);\n\nTooltipTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TooltipTable);","map":{"version":3,"sources":["/home/franktt/react/varseltavle/src/react/TooltipTable.js"],"names":["React","Component","PropTypes","withStyles","teal_palette","styles","theme","root","height","paper","overflow","tableLayout","padding","margin","divTable","display","width","divTableRow","backgroundColor","main","border","divTableHdr","color","divTableCell","divTableCellCursor","cursor","divTableBody","FirstDataCell","props","classes","rowval","DataCell","val","onclick","bgcolor","rval","isNaN","parseFloat","toFixed","undefined","renderDataCell","state","key","click","sub","rowindex","colindex","maxlev","Colors","getLevelBgColor","rowkey","rowwhere","Database","getWhereDetail","indexOf","Navigate","selectKey","dataRow","subs","mapFunction","toString","map","Details","keys","TooltipTable","updateWindowDimensions","window","innerWidth","innerHeight","bbx","el","getBoundingClientRect","addEventListener","element","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAAQC,YAAR,QAA2B,qBAA3B,C,CAEA;AACA;AAEA;AACA;AACA;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,IAAI,EAAE;AACTC,MAAAA,MAAM,EAAE;AADC,KADe;AAIrBC,IAAAA,KAAK,EAAE;AACVC,MAAAA,QAAQ,EAAE,QADA;AAEVC,MAAAA,WAAW,EAAE,OAFH;AAGVC,MAAAA,OAAO,EAAC,CAHE;AAIVC,MAAAA,MAAM,EAAC;AAJG,KAJc;AAUrBC,IAAAA,QAAQ,EAAE;AACbC,MAAAA,OAAO,EAAE,OADI;AAEbC,MAAAA,KAAK,EAAE;AAFM,KAVW;AAcrBC,IAAAA,WAAW,EAAG;AACjBC,MAAAA,eAAe,EAACd,YAAY,CAACe,IADZ;AAEjBC,MAAAA,MAAM,EAAE,gBAFS;AAGjBL,MAAAA,OAAO,EAAE,WAHQ;AAIjBH,MAAAA,OAAO,EAAE;AAJQ,KAdO;AAoBrBS,IAAAA,WAAW,EAAC;AACfD,MAAAA,MAAM,EAAE,gBADO;AAEfL,MAAAA,OAAO,EAAE,YAFM;AAGfH,MAAAA,OAAO,EAAE,KAHM;AAIfM,MAAAA,eAAe,EAACd,YAAY,CAACe,IAJd;AAKfG,MAAAA,KAAK,EAAC;AALS,KApBS;AA2BrBC,IAAAA,YAAY,EAAC;AAChBH,MAAAA,MAAM,EAAE,gBADQ;AAEhBL,MAAAA,OAAO,EAAE,YAFO;AAGhBH,MAAAA,OAAO,EAAE;AAHO,KA3BQ;AAgCrBY,IAAAA,kBAAkB,EAAC;AACtBC,MAAAA,MAAM,EAAE,SADc;AAEtBL,MAAAA,MAAM,EAAE,gBAFc;AAGtBL,MAAAA,OAAO,EAAE,YAHa;AAItBH,MAAAA,OAAO,EAAE;AAJa,KAhCE;AAsCrBc,IAAAA,YAAY,EAAG;AAClBX,MAAAA,OAAO,EAAE;AADS;AAtCM,GAAL;AAAA,CAApB,C,CA2CA;AAEA;;;AACA,SAASY,aAAT,CAAwBC,KAAxB,EAA+B;AAAA,MACnBC,OADmB,GACAD,KADA,CACnBC,OADmB;AAAA,MACVC,MADU,GACAF,KADA,CACVE,MADU,EACM;;AACjC,SAAQ;AAAK,IAAA,SAAS,EAAED,OAAO,CAACR,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACNS,MADM,CAAR;AAGH,C,CACD;;;AACA,SAASC,QAAT,CAAkBH,KAAlB,EAAyB;AAAA,MACdC,OADc,GACeD,KADf,CACdC,OADc;AAAA,MACNG,GADM,GACeJ,KADf,CACNI,GADM;AAAA,MACFC,OADE,GACeL,KADf,CACFK,OADE;AAAA,MACMC,OADN,GACeN,KADf,CACMM,OADN,EACqB;;AAC1C,MAAIC,IAAI,GAACH,GAAT;;AACA,MAAII,KAAK,CAACD,IAAD,CAAT,EAAiB;AACpBA,IAAAA,IAAI,GAACH,GAAL;AACI,GAFD,MAEO;AACVG,IAAAA,IAAI,GAACE,UAAU,CAACF,IAAD,EAAM,CAAN,CAAV,CAAmBG,OAAnB,CAA2B,CAA3B,CAAL;AACI;;AAAA;AACD,SAAO;AAAK,IAAA,SAAS,EAAGL,OAAO,KAAKM,SAAZ,GAAsBV,OAAO,CAACL,kBAA9B,GAAiDK,OAAO,CAACN,YAA1E;AAAyF,IAAA,KAAK,EAAE;AAACL,MAAAA,eAAe,EAACgB;AAAjB,KAAhG;AAA2H,IAAA,OAAO,EAAED,OAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8IE,IAA9I,CAAP;AACH;;AACD,SAASK,cAAT,CAAwBX,OAAxB,EAAgCY,KAAhC,EAAsCC,GAAtC,EAA0CC,KAA1C,EAAgDC,GAAhD,EAAoDC,QAApD,EAA6DC,QAA7D,EAAuE;AACnE,MAAIC,MAAM,GAACH,GAAG,CAAC,OAAD,CAAH,IAAc,CAAzB;AACA,MAAIV,OAAO,GAACO,KAAK,CAACO,MAAN,CAAaC,eAAb,CAA6BF,MAA7B,CAAZ;AACA,MAAIG,MAAM,GAACR,GAAX;AACA,MAAIZ,MAAM,GAACc,GAAG,CAACF,GAAD,CAAd;AACA,MAAIS,QAAQ,GAACV,KAAK,CAACW,QAAN,CAAeC,cAAf,CAA8BH,MAA9B,EAAqCpB,MAArC,CAAb;AACA,MAAIG,OAAO,GAAEU,KAAK,CAACW,OAAN,CAAcJ,MAAd,MAAwB,CAAC,CAAzB,GAA2BX,SAA3B,GAAsC,YAAM;AAACE,IAAAA,KAAK,CAACc,QAAN,CAAeC,SAAf,CAAyBf,KAAzB,EAA+BS,MAA/B,EAAsCpB,MAAtC,EAA6CqB,QAA7C,EAAsD,CAAtD;AAAyD,GAAnH;AACA,SAAQ,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEtB,OAAnB;AAA4B,IAAA,KAAK,EAAEY,KAAnC;AAA0C,IAAA,GAAG,YAAKI,QAAL,cAAiBC,QAAjB,CAA7C;AAA0E,IAAA,GAAG,EAAEF,GAAG,CAACF,GAAD,CAAlF;AAAyF,IAAA,QAAQ,EAAEG,QAAnG;AAA6G,IAAA,OAAO,EAAEX,OAAtH;AAA+H,IAAA,OAAO,EAAED,OAAxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AACH,C,CACD;;;AACA,SAASwB,OAAT,CAAiB5B,OAAjB,EAAyBY,KAAzB,EAA+BC,GAA/B,EAAmCC,KAAnC,EAAyCe,IAAzC,EAA8Cb,QAA9C,EAAwD;AACpD;AACA,MAAIc,WAAW,GAAE,SAAbA,WAAa,CAACf,GAAD,EAAKE,QAAL;AAAA,WAAgBN,cAAc,CAACX,OAAD,EAASY,KAAT,EAAeC,GAAf,EAAmBC,KAAnB,EAAyBC,GAAzB,EAA6BC,QAA7B,EAAsCC,QAAtC,CAA9B;AAAA,GAAjB;;AACA,SAAQ;AAAK,IAAA,SAAS,EAAEjB,OAAO,CAACZ,WAAxB;AAAqC,IAAA,GAAG,EAAE4B,QAAQ,CAACe,QAAT,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACP,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAE/B,OAAxB;AAAiC,IAAA,KAAK,EAAEY,KAAxC;AAA+C,IAAA,GAAG,EAAE,OAAKI,QAAzD;AAAmE,IAAA,MAAM,EAAEH,GAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,EAENgB,IAAI,CAACG,GAAL,CAASF,WAAT,CAFM,CAAR;AAIH;;AAAA,C,CACD;;AACA,SAASG,OAAT,CAAiBlC,KAAjB,EAAwB;AAAA,MACZC,OADY,GAC0BD,KAD1B,CACZC,OADY;AAAA,MACHY,KADG,GAC0Bb,KAD1B,CACHa,KADG;AAAA,MACIsB,IADJ,GAC0BnC,KAD1B,CACImC,IADJ;AAAA,MACUpB,KADV,GAC0Bf,KAD1B,CACUe,KADV;AAAA,MACiBe,IADjB,GAC0B9B,KAD1B,CACiB8B,IADjB,EACiC;;AACrD,MAAIC,WAAW,GAAE,SAAbA,WAAa,CAACjB,GAAD,EAAKG,QAAL;AAAA,WAAgBY,OAAO,CAAC5B,OAAD,EAASY,KAAT,EAAeC,GAAf,EAAmBC,KAAnB,EAAyBe,IAAzB,EAA8Bb,QAA9B,CAAvB;AAAA,GAAjB;;AACA,SAAQ;AAAK,IAAA,SAAS,EAAEhB,OAAO,CAACf,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ;AAAK,IAAA,SAAS,EAAEe,OAAO,CAACH,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIqC,IAAI,CAACF,GAAL,CAASF,WAAT,CADJ,CADI,CAAR;AAKF;;IACIK,Y;;;;;;;;;;;;;;;;;;UAIFC,sB,GAAyB,YAAM;AAC3B,YAAKjD,KAAL,GAAYkD,MAAM,CAACC,UAAnB;AACP,YAAK3D,MAAL,GAAY0D,MAAM,CAACE,WAAnB;AACA,YAAKC,GAAL,GAAS,MAAKC,EAAL,CAAQC,qBAAR,EAAT,CAHkC,CAIlC;AACI,K;;;;;;;wCARmB;AAChBL,MAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkC,KAAKP,sBAAvC;AACH;;;4BAOOK,E,EAAI;AACf,UAAIA,EAAE,KAAK/B,SAAP,IAAoB+B,EAAE,KAAK,IAA/B,EAAqC;AACjC,aAAKA,EAAL,GAAQA,EAAR;AACA,aAAKD,GAAL,GAAS,KAAKC,EAAL,CAAQC,qBAAR,EAAT,CAFiC,CAGjC;AACH;;AAAA;AACG;;;6BACQ;AAAA;;AAAA,wBACkC,KAAK3C,KADvC;AAAA,UACJa,KADI,eACJA,KADI;AAAA,UACGZ,OADH,eACGA,OADH;AAAA,UACYkC,IADZ,eACYA,IADZ;AAAA,UACkBpB,KADlB,eACkBA,KADlB;AAAA,UACyBe,IADzB,eACyBA,IADzB,EAEZ;;AACA,aAAQ;AAAK,QAAA,GAAG,EAAE,aAAAY,EAAE,EAAE;AAAC,UAAA,MAAI,CAACG,OAAL,CAAaH,EAAb;AAAiB,SAAhC;AAAkC,QAAA,SAAS,EAAEzC,OAAO,CAACtB,IAArD;AAA4D,QAAA,KAAK,EAAE;AAACS,UAAAA,KAAK,EAAE,MAAR;AAAgBR,UAAAA,MAAM,EAAE;AAAxB,SAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEiC,KAAhB;AAAuB,QAAA,OAAO,EAAEZ,OAAhC;AAAyC,QAAA,OAAO,EAAE,IAAlD;AAAwD,QAAA,IAAI,EAAEkC,IAA9D;AAAoE,QAAA,KAAK,EAAEpB,KAA3E;AAAkF,QAAA,IAAI,EAAEe,IAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADI,CAAR;AAGI;;;;EAvBsBzD,S;;AA0B3B+D,YAAY,CAACU,SAAb,GAAyB;AACrB7C,EAAAA,OAAO,EAAE3B,SAAS,CAACyE,MAAV,CAAiBC;AADL,CAAzB;AAIA,eAAezE,UAAU,CAACE,MAAD,CAAV,CAAmB2D,YAAnB,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport {teal_palette} from '../mui/metMuiThemes';\n\n//import Paper from '@material-ui/core/Paper';\n//import Grid from '@material-ui/core/Grid';\n\n//import SummaryCell from './SummaryCell';\n//import SeriesCell  from './SeriesCell';\n//import CanvasText  from './CanvasTextComponent';\n\nconst styles = theme => ({\n    root: {\n\theight: '100%',\n    },\n    paper: {\n\toverflow: 'hidden',\n\ttableLayout: 'fixed',\n\tpadding:0,\n\tmargin:0,\n    },\n    divTable :{\n\tdisplay: 'table',\n\twidth: '100%',\n    },\n    divTableRow:  {\n\tbackgroundColor:teal_palette.main,\n\tborder: '1px solid #000',\n\tdisplay: 'table-row',\n\tpadding: '5px',\n    },\n    divTableHdr:{\n\tborder: '1px solid #000',\n\tdisplay: 'table-cell',\n\tpadding: '5px',\n\tbackgroundColor:teal_palette.main,\n\tcolor:'black',\n    },\n    divTableCell:{\n\tborder: '1px solid #000',\n\tdisplay: 'table-cell',\n\tpadding: '5px',\n    },\n    divTableCellCursor:{\n\tcursor: \"pointer\",\n\tborder: '1px solid #000',\n\tdisplay: 'table-cell',\n\tpadding: '5px',\n    },\n    divTableBody : {\n\tdisplay: 'table-row-group',\n    },\n});\n\n//const mui = createTheme({palette:teal_palette});\n\n// ---------------- DATA\nfunction FirstDataCell (props) {\n    const { classes, rowval} = props;//,state, rowindex\n    return (<div className={classes.divTableHdr}>\n\t    {rowval}\n\t    </div>);\n}\n//{rowval}\nfunction DataCell(props) {\n    const {classes,val,onclick,bgcolor}=props;//state,rowindex,\n    var rval=val;\n    if (isNaN(rval)) {\n\trval=val;\n    } else {\n\trval=parseFloat(rval,0).toFixed(2);\n    };\n    return <div className={(onclick !== undefined?classes.divTableCellCursor:classes.divTableCell)} style={{backgroundColor:bgcolor}} onClick={onclick}>{rval}</div>\n}\nfunction renderDataCell(classes,state,key,click,sub,rowindex,colindex) {\n    var maxlev=sub[\"level\"]||0;\n    var bgcolor=state.Colors.getLevelBgColor(maxlev);\n    var rowkey=key;\n    var rowval=sub[key];\n    var rowwhere=state.Database.getWhereDetail(rowkey,rowval);\n    var onclick=(click.indexOf(rowkey)===-1?undefined: () => {state.Navigate.selectKey(state,rowkey,rowval,rowwhere,1)});\n    return (<DataCell classes={classes} state={state} key={`${rowindex}-${colindex}`} val={sub[key]} rowindex={rowindex} bgcolor={bgcolor} onclick={onclick}/>);\n}\n//{{rowkey:'test1',colkey:'test2',title:title}}\nfunction dataRow(classes,state,key,click,subs,rowindex) {\n    //return null; // no entries, ignore row...\n    var mapFunction= (sub,colindex)=>renderDataCell(classes,state,key,click,sub,rowindex,colindex);\n    return (<div className={classes.divTableRow} key={rowindex.toString()}>\n\t    <FirstDataCell classes={classes} state={state} key={'k-'+rowindex} rowval={key}/>\n\t    {subs.map(mapFunction)}\n\t    </div>);\n};\n// ---------------- Details\nfunction Details(props) {\n    const { classes, state, keys, click, subs } = props; // classes, element\n    var mapFunction= (key,rowindex)=>dataRow(classes,state,key,click,subs,rowindex);\n    return (<div className={classes.divTable}>\n\t       <div className={classes.divTableBody}>\n\t          {keys.map(mapFunction)}\n\t       </div>\n            </div>);\n }\nclass TooltipTable extends Component {\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    } \n    updateWindowDimensions = () => {\n        this.width= window.innerWidth;\n\tthis.height=window.innerHeight;\n\tthis.bbx=this.el.getBoundingClientRect();\n\t//console.log(\"Width/Height:\",this.width,this.height,this.bbx.width,this.bbx.height)\n    };\n    element(el) {\n\tif (el !== undefined && el !== null) {\n\t    this.el=el;\n\t    this.bbx=this.el.getBoundingClientRect();\n\t    //console.log(\"BBX width/height:\",this.bbx.width,this.bbx.height);\n\t};\n    };\n    render() {\n\tconst { state, classes, keys, click, subs } = this.props;\n\t//console.log(\"##### Rendering TooltipTable.\");\n\treturn (<div ref={el=>{this.element(el)}} className={classes.root}  style={{width: '100%', height: '100%'}}>\n\t\t   <Details state={state} classes={classes} element={this} keys={keys} click={click} subs={subs}/>\n\t        </div>);\n    }\n}\n\nTooltipTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TooltipTable);\n"]},"metadata":{},"sourceType":"module"}